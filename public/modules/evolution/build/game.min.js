var adcnt = 0;
!function(t) {
    var r, o = 1e3 / 60, s = !1, a = 0, h = 0, l = 0, u = 0, c = 60, p = 0, d = 0, f = 0, g = 0, e = !1, i = !1, y = !1, n = function() {
        var e, i, n = Date.now();
        return function(t) {
            return e = Date.now(),
            i = Math.max(0, o - (e - n)),
            n = e + i,
            setTimeout(function() {
                t(e + i)
            }, i)
        }
    }, m = t.requestAnimationFrame || t.webkitRequestAnimationFrame || t.mozRequestAnimationFrame || t.oRequestAnimationFrame || t.msRequestAnimationFrame || n(), v = t.cancelAnimationFrame || clearTimeout, S = function() {}, x = S, b = S, T = S, _ = S;
    function w(t) {
        if (t < u + g)
            r = m(w);
        else {
            var e, i, n;
            for (l += t - u,
            x(u = t, l),
            p + 1e3 < t && (c = .25 * d + .75 * c,
            p = t,
            d = 0),
            d++,
            s && (e = performance.now()),
            f = 0; o <= l; )
                if (b(o),
                l -= o,
                240 <= ++f) {
                    y = !0;
                    break
                }
            s && (i = performance.now(),
            a = i - e),
            T(l / o),
            s && (n = performance.now(),
            h = n - i),
            _(c, f, y),
            y = !1,
            r = m(w)
        }
    }
    t.MainLoop = {
        forceUseSetTimeout: function() {
            m = n()
        },
        setProfileTiming: function(t) {
            s = t
        },
        getLastUpdateTime: function() {
            return a
        },
        getLastRenderingTime: function() {
            return h
        },
        getSimulationTimestep: function() {
            return o
        },
        getFrameDelta: function() {
            return l
        },
        getLastFrameTimeMs: function() {
            return u
        },
        setSimulationTimestep: function(t) {
            return o = t,
            this
        },
        getFPS: function() {
            return c
        },
        getMaxAllowedFPS: function() {
            return 1e3 / g
        },
        setMaxAllowedFPS: function(t) {
            return void 0 === t && (t = 1 / 0),
            0 === t ? this.stop() : g = 1e3 / t,
            this
        },
        resetFrameDelta: function() {
            var t = l;
            return l = 0,
            t
        },
        setBegin: function(t) {
            return x = t || x,
            this
        },
        setUpdate: function(t) {
            return b = t || b,
            this
        },
        setDraw: function(t) {
            return T = t || T,
            this
        },
        setEnd: function(t) {
            return _ = t || _,
            this
        },
        start: function() {
            return i || (i = !0,
            r = m(function(t) {
                T(1),
                e = !0,
                p = u = t,
                d = 0,
                r = m(w)
            })),
            this
        },
        stop: function() {
            return i = e = !1,
            v(r),
            this
        },
        isRunning: function() {
            return e
        }
    },
    "function" == typeof define && define.amd ? define(t.MainLoop) : "object" == typeof exports && (module.exports = t.MainLoop)
}(this),
function(t) {
    if ("object" == typeof exports && "undefined" != typeof module)
        module.exports = t();
    else if ("function" == typeof define && define.amd)
        define([], t);
    else {
        ("undefined" != typeof window ? window : "undefined" != typeof global ? global : "undefined" != typeof self ? self : this).PIXI = t()
    }
}(function() {
    return function o(s, a, h) {
        function l(i, t) {
            if (!a[i]) {
                if (!s[i]) {
                    var e = "function" == typeof require && require;
                    if (!t && e)
                        return e(i, !0);
                    if (u)
                        return u(i, !0);
                    var n = new Error("Cannot find module '" + i + "'");
                    throw n.code = "MODULE_NOT_FOUND",
                    n
                }
                var r = a[i] = {
                    exports: {}
                };
                s[i][0].call(r.exports, function(t) {
                    var e = s[i][1][t];
                    return l(e || t)
                }, r, r.exports, o, s, a, h)
            }
            return a[i].exports
        }
        for (var u = "function" == typeof require && require, t = 0; t < h.length; t++)
            l(h[t]);
        return l
    }({
        1: [function(i, n, t) {
            (function(t) {
                i("./polyfill");
                var e = n.exports = i("./core");
                e.extras = i("./extras"),
                e.filters = i("./filters"),
                e.interaction = i("./interaction"),
                e.loaders = i("./loaders"),
                e.mesh = i("./mesh"),
                e.loader = new e.loaders.Loader,
                Object.assign(e, i("./deprecation")),
                t.PIXI = e
            }
            ).call(this, "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {})
        }
        , {
            "./core": 29,
            "./deprecation": 78,
            "./extras": 85,
            "./filters": 102,
            "./interaction": 117,
            "./loaders": 120,
            "./mesh": 126,
            "./polyfill": 130
        }],
        2: [function(t, T, e) {
            (function(b) {
                !function() {
                    var i, t, p = {};
                    function s(t) {
                        var e = !1;
                        return function() {
                            if (e)
                                throw new Error("Callback was already called.");
                            e = !0,
                            t.apply(i, arguments)
                        }
                    }
                    null != (i = this) && (t = i.async),
                    p.noConflict = function() {
                        return i.async = t,
                        p
                    }
                    ;
                    var e = Object.prototype.toString
                      , d = Array.isArray || function(t) {
                        return "[object Array]" === e.call(t)
                    }
                      , f = function(t, e) {
                        if (t.forEach)
                            return t.forEach(e);
                        for (var i = 0; i < t.length; i += 1)
                            e(t[i], i, t)
                    }
                      , h = function(t, n) {
                        if (t.map)
                            return t.map(n);
                        var r = [];
                        return f(t, function(t, e, i) {
                            r.push(n(t, e, i))
                        }),
                        r
                    }
                      , g = function(t) {
                        if (Object.keys)
                            return Object.keys(t);
                        var e = [];
                        for (var i in t)
                            t.hasOwnProperty(i) && e.push(i);
                        return e
                    };
                    void 0 !== b && b.nextTick ? (p.nextTick = b.nextTick,
                    "undefined" != typeof setImmediate ? p.setImmediate = function(t) {
                        setImmediate(t)
                    }
                    : p.setImmediate = p.nextTick) : ("function" == typeof setImmediate ? p.nextTick = function(t) {
                        setImmediate(t)
                    }
                    : p.nextTick = function(t) {
                        setTimeout(t, 0)
                    }
                    ,
                    p.setImmediate = p.nextTick),
                    p.each = function(e, i, n) {
                        if (n = n || function() {}
                        ,
                        !e.length)
                            return n();
                        var r = 0;
                        function o(t) {
                            t ? (n(t),
                            n = function() {}
                            ) : (r += 1) >= e.length && n()
                        }
                        f(e, function(t) {
                            i(t, s(o))
                        })
                    }
                    ,
                    p.forEach = p.each,
                    p.eachSeries = function(e, t, i) {
                        if (i = i || function() {}
                        ,
                        !e.length)
                            return i();
                        var n = 0
                          , r = function() {
                            t(e[n], function(t) {
                                t ? (i(t),
                                i = function() {}
                                ) : (n += 1) >= e.length ? i() : r()
                            })
                        };
                        r()
                    }
                    ,
                    p.forEachSeries = p.eachSeries,
                    p.eachLimit = function(t, e, i, n) {
                        r(e).apply(null, [t, i, n])
                    }
                    ,
                    p.forEachLimit = p.eachLimit;
                    var r = function(a) {
                        return function(i, t, n) {
                            if (n = n || function() {}
                            ,
                            !i.length || a <= 0)
                                return n();
                            var r = 0
                              , o = 0
                              , s = 0;
                            !function e() {
                                if (r >= i.length)
                                    return n();
                                for (; s < a && o < i.length; )
                                    s += 1,
                                    t(i[(o += 1) - 1], function(t) {
                                        t ? (n(t),
                                        n = function() {}
                                        ) : (s -= 1,
                                        (r += 1) >= i.length ? n() : e())
                                    })
                            }()
                        }
                    }
                      , n = function(e) {
                        return function() {
                            var t = Array.prototype.slice.call(arguments);
                            return e.apply(null, [p.each].concat(t))
                        }
                    }
                      , o = function(e) {
                        return function() {
                            var t = Array.prototype.slice.call(arguments);
                            return e.apply(null, [p.eachSeries].concat(t))
                        }
                    }
                      , a = function(t, e, r, i) {
                        if (e = h(e, function(t, e) {
                            return {
                                index: e,
                                value: t
                            }
                        }),
                        i) {
                            var o = [];
                            t(e, function(i, n) {
                                r(i.value, function(t, e) {
                                    o[i.index] = e,
                                    n(t)
                                })
                            }, function(t) {
                                i(t, o)
                            })
                        } else
                            t(e, function(t, e) {
                                r(t.value, function(t) {
                                    e(t)
                                })
                            })
                    };
                    p.map = n(a),
                    p.mapSeries = o(a),
                    p.mapLimit = function(t, e, i, n) {
                        return l(e)(t, i, n)
                    }
                    ;
                    var l = function(t) {
                        return e = t,
                        i = a,
                        function() {
                            var t = Array.prototype.slice.call(arguments);
                            return i.apply(null, [r(e)].concat(t))
                        }
                        ;
                        var e, i
                    };
                    p.reduce = function(t, n, e, i) {
                        p.eachSeries(t, function(t, i) {
                            e(n, t, function(t, e) {
                                n = e,
                                i(t)
                            })
                        }, function(t) {
                            i(t, n)
                        })
                    }
                    ,
                    p.inject = p.reduce,
                    p.foldl = p.reduce,
                    p.reduceRight = function(t, e, i, n) {
                        var r = h(t, function(t) {
                            return t
                        }).reverse();
                        p.reduce(r, e, i, n)
                    }
                    ,
                    p.foldr = p.reduceRight;
                    var u = function(t, e, n, i) {
                        var r = [];
                        t(e = h(e, function(t, e) {
                            return {
                                index: e,
                                value: t
                            }
                        }), function(e, i) {
                            n(e.value, function(t) {
                                t && r.push(e),
                                i()
                            })
                        }, function(t) {
                            i(h(r.sort(function(t, e) {
                                return t.index - e.index
                            }), function(t) {
                                return t.value
                            }))
                        })
                    };
                    p.filter = n(u),
                    p.filterSeries = o(u),
                    p.select = p.filter,
                    p.selectSeries = p.filterSeries;
                    var c = function(t, e, n, i) {
                        var r = [];
                        t(e = h(e, function(t, e) {
                            return {
                                index: e,
                                value: t
                            }
                        }), function(e, i) {
                            n(e.value, function(t) {
                                t || r.push(e),
                                i()
                            })
                        }, function(t) {
                            i(h(r.sort(function(t, e) {
                                return t.index - e.index
                            }), function(t) {
                                return t.value
                            }))
                        })
                    };
                    p.reject = n(c),
                    p.rejectSeries = o(c);
                    var y = function(t, e, n, r) {
                        t(e, function(e, i) {
                            n(e, function(t) {
                                t ? (r(e),
                                r = function() {}
                                ) : i()
                            })
                        }, function(t) {
                            r()
                        })
                    };
                    p.detect = n(y),
                    p.detectSeries = o(y),
                    p.some = function(t, i, n) {
                        p.each(t, function(t, e) {
                            i(t, function(t) {
                                t && (n(!0),
                                n = function() {}
                                ),
                                e()
                            })
                        }, function(t) {
                            n(!1)
                        })
                    }
                    ,
                    p.any = p.some,
                    p.every = function(t, i, n) {
                        p.each(t, function(t, e) {
                            i(t, function(t) {
                                t || (n(!1),
                                n = function() {}
                                ),
                                e()
                            })
                        }, function(t) {
                            n(!0)
                        })
                    }
                    ,
                    p.all = p.every,
                    p.sortBy = function(t, e, i) {
                        p.map(t, function(i, n) {
                            e(i, function(t, e) {
                                t ? n(t) : n(null, {
                                    value: i,
                                    criteria: e
                                })
                            })
                        }, function(t, e) {
                            if (t)
                                return i(t);
                            i(null, h(e.sort(function(t, e) {
                                var i = t.criteria
                                  , n = e.criteria;
                                return i < n ? -1 : n < i ? 1 : 0
                            }), function(t) {
                                return t.value
                            }))
                        })
                    }
                    ,
                    p.auto = function(s, a) {
                        a = a || function() {}
                        ;
                        var t = g(s)
                          , e = t.length;
                        if (!e)
                            return a();
                        var h = {}
                          , l = []
                          , u = function(t) {
                            l.unshift(t)
                        }
                          , c = function() {
                            e--,
                            f(l.slice(0), function(t) {
                                t()
                            })
                        };
                        u(function() {
                            if (!e) {
                                var t = a;
                                a = function() {}
                                ,
                                t(null, h)
                            }
                        }),
                        f(t, function(o) {
                            var t = d(s[o]) ? s[o] : [s[o]]
                              , e = function(t) {
                                var e = Array.prototype.slice.call(arguments, 1);
                                if (e.length <= 1 && (e = e[0]),
                                t) {
                                    var i = {};
                                    f(g(h), function(t) {
                                        i[t] = h[t]
                                    }),
                                    i[o] = e,
                                    a(t, i),
                                    a = function() {}
                                } else
                                    h[o] = e,
                                    p.setImmediate(c)
                            }
                              , i = t.slice(0, Math.abs(t.length - 1)) || []
                              , n = function() {
                                return n = function(t, e) {
                                    return t && h.hasOwnProperty(e)
                                }
                                ,
                                r = !0,
                                ((t = i).reduce ? t.reduce(n, r) : (f(t, function(t, e, i) {
                                    r = n(r, t, e, i)
                                }),
                                r)) && !h.hasOwnProperty(o);
                                var t, n, r
                            };
                            if (n())
                                t[t.length - 1](e, h);
                            else {
                                var r = function() {
                                    n() && (!function(t) {
                                        for (var e = 0; e < l.length; e += 1)
                                            if (l[e] === t)
                                                return l.splice(e, 1)
                                    }(r),
                                    t[t.length - 1](e, h))
                                };
                                u(r)
                            }
                        })
                    }
                    ,
                    p.retry = function(n, r, o) {
                        var s = [];
                        "function" == typeof n && (o = r,
                        r = n,
                        n = 5),
                        n = parseInt(n, 10) || 5;
                        var t = function(i, e) {
                            for (var t = function(t, n) {
                                return function(i) {
                                    t(function(t, e) {
                                        i(!t || n, {
                                            err: t,
                                            result: e
                                        })
                                    }, e)
                                }
                            }; n; )
                                s.push(t(r, !(n -= 1)));
                            p.series(s, function(t, e) {
                                e = e[e.length - 1],
                                (i || o)(e.err, e.result)
                            })
                        };
                        return o ? t() : t
                    }
                    ,
                    p.waterfall = function(t, r) {
                        if (r = r || function() {}
                        ,
                        !d(t)) {
                            var e = new Error("First argument to waterfall must be an array of functions");
                            return r(e)
                        }
                        if (!t.length)
                            return r();
                        var o = function(n) {
                            return function(t) {
                                if (t)
                                    r.apply(null, arguments),
                                    r = function() {}
                                    ;
                                else {
                                    var e = Array.prototype.slice.call(arguments, 1)
                                      , i = n.next();
                                    i ? e.push(o(i)) : e.push(r),
                                    p.setImmediate(function() {
                                        n.apply(null, e)
                                    })
                                }
                            }
                        };
                        o(p.iterator(t))()
                    }
                    ;
                    var m = function(t, e, i) {
                        if (i = i || function() {}
                        ,
                        d(e))
                            t.map(e, function(t, i) {
                                t && t(function(t) {
                                    var e = Array.prototype.slice.call(arguments, 1);
                                    e.length <= 1 && (e = e[0]),
                                    i.call(null, t, e)
                                })
                            }, i);
                        else {
                            var r = {};
                            t.each(g(e), function(i, n) {
                                e[i](function(t) {
                                    var e = Array.prototype.slice.call(arguments, 1);
                                    e.length <= 1 && (e = e[0]),
                                    r[i] = e,
                                    n(t)
                                })
                            }, function(t) {
                                i(t, r)
                            })
                        }
                    };
                    p.parallel = function(t, e) {
                        m({
                            map: p.map,
                            each: p.each
                        }, t, e)
                    }
                    ,
                    p.parallelLimit = function(t, e, i) {
                        m({
                            map: l(e),
                            each: r(e)
                        }, t, i)
                    }
                    ,
                    p.series = function(t, e) {
                        if (e = e || function() {}
                        ,
                        d(t))
                            p.mapSeries(t, function(t, i) {
                                t && t(function(t) {
                                    var e = Array.prototype.slice.call(arguments, 1);
                                    e.length <= 1 && (e = e[0]),
                                    i.call(null, t, e)
                                })
                            }, e);
                        else {
                            var r = {};
                            p.eachSeries(g(t), function(i, n) {
                                t[i](function(t) {
                                    var e = Array.prototype.slice.call(arguments, 1);
                                    e.length <= 1 && (e = e[0]),
                                    r[i] = e,
                                    n(t)
                                })
                            }, function(t) {
                                e(t, r)
                            })
                        }
                    }
                    ,
                    p.iterator = function(i) {
                        var n = function(t) {
                            var e = function() {
                                return i.length && i[t].apply(null, arguments),
                                e.next()
                            };
                            return e.next = function() {
                                return t < i.length - 1 ? n(t + 1) : null
                            }
                            ,
                            e
                        };
                        return n(0)
                    }
                    ,
                    p.apply = function(t) {
                        var e = Array.prototype.slice.call(arguments, 1);
                        return function() {
                            return t.apply(null, e.concat(Array.prototype.slice.call(arguments)))
                        }
                    }
                    ;
                    var v = function(t, e, n, i) {
                        var r = [];
                        t(e, function(t, i) {
                            n(t, function(t, e) {
                                r = r.concat(e || []),
                                i(t)
                            })
                        }, function(t) {
                            i(t, r)
                        })
                    };
                    p.concat = n(v),
                    p.concatSeries = o(v),
                    p.whilst = function(e, i, n) {
                        e() ? i(function(t) {
                            if (t)
                                return n(t);
                            p.whilst(e, i, n)
                        }) : n()
                    }
                    ,
                    p.doWhilst = function(i, n, r) {
                        i(function(t) {
                            if (t)
                                return r(t);
                            var e = Array.prototype.slice.call(arguments, 1);
                            n.apply(null, e) ? p.doWhilst(i, n, r) : r()
                        })
                    }
                    ,
                    p.until = function(e, i, n) {
                        e() ? n() : i(function(t) {
                            if (t)
                                return n(t);
                            p.until(e, i, n)
                        })
                    }
                    ,
                    p.doUntil = function(i, n, r) {
                        i(function(t) {
                            if (t)
                                return r(t);
                            var e = Array.prototype.slice.call(arguments, 1);
                            n.apply(null, e) ? r() : p.doUntil(i, n, r)
                        })
                    }
                    ,
                    p.queue = function(i, t) {
                        function n(i, t, n, r) {
                            if (i.started || (i.started = !0),
                            d(t) || (t = [t]),
                            0 == t.length)
                                return p.setImmediate(function() {
                                    i.drain && i.drain()
                                });
                            f(t, function(t) {
                                var e = {
                                    data: t,
                                    callback: "function" == typeof r ? r : null
                                };
                                n ? i.tasks.unshift(e) : i.tasks.push(e),
                                i.saturated && i.tasks.length === i.concurrency && i.saturated(),
                                p.setImmediate(i.process)
                            })
                        }
                        void 0 === t && (t = 1);
                        var r = 0
                          , o = {
                            tasks: [],
                            concurrency: t,
                            saturated: null,
                            empty: null,
                            drain: null,
                            started: !1,
                            paused: !1,
                            push: function(t, e) {
                                n(o, t, !1, e)
                            },
                            kill: function() {
                                o.drain = null,
                                o.tasks = []
                            },
                            unshift: function(t, e) {
                                n(o, t, !0, e)
                            },
                            process: function() {
                                if (!o.paused && r < o.concurrency && o.tasks.length) {
                                    var t = o.tasks.shift();
                                    o.empty && 0 === o.tasks.length && o.empty(),
                                    r += 1;
                                    var e = s(function() {
                                        r -= 1,
                                        t.callback && t.callback.apply(t, arguments),
                                        o.drain && o.tasks.length + r === 0 && o.drain(),
                                        o.process()
                                    });
                                    i(t.data, e)
                                }
                            },
                            length: function() {
                                return o.tasks.length
                            },
                            running: function() {
                                return r
                            },
                            idle: function() {
                                return o.tasks.length + r === 0
                            },
                            pause: function() {
                                !0 !== o.paused && (o.paused = !0,
                                o.process())
                            },
                            resume: function() {
                                !1 !== o.paused && (o.paused = !1,
                                o.process())
                            }
                        };
                        return o
                    }
                    ,
                    p.priorityQueue = function(t, e) {
                        function o(t, e) {
                            return t.priority - e.priority
                        }
                        var n = p.queue(t, e);
                        return n.push = function(t, e, i) {
                            !function(i, t, n, r) {
                                if (i.started || (i.started = !0),
                                d(t) || (t = [t]),
                                0 == t.length)
                                    return p.setImmediate(function() {
                                        i.drain && i.drain()
                                    });
                                f(t, function(t) {
                                    var e = {
                                        data: t,
                                        priority: n,
                                        callback: "function" == typeof r ? r : null
                                    };
                                    i.tasks.splice(function(t, e, i) {
                                        for (var n = -1, r = t.length - 1; n < r; ) {
                                            var o = n + (r - n + 1 >>> 1);
                                            0 <= i(e, t[o]) ? n = o : r = o - 1
                                        }
                                        return n
                                    }(i.tasks, e, o) + 1, 0, e),
                                    i.saturated && i.tasks.length === i.concurrency && i.saturated(),
                                    p.setImmediate(i.process)
                                })
                            }(n, t, e, i)
                        }
                        ,
                        delete n.unshift,
                        n
                    }
                    ,
                    p.cargo = function(n, r) {
                        var o = !1
                          , s = []
                          , a = {
                            tasks: s,
                            payload: r,
                            saturated: null,
                            empty: null,
                            drain: null,
                            drained: !0,
                            push: function(t, e) {
                                d(t) || (t = [t]),
                                f(t, function(t) {
                                    s.push({
                                        data: t,
                                        callback: "function" == typeof e ? e : null
                                    }),
                                    a.drained = !1,
                                    a.saturated && s.length === r && a.saturated()
                                }),
                                p.setImmediate(a.process)
                            },
                            process: function t() {
                                if (!o) {
                                    if (0 === s.length)
                                        return a.drain && !a.drained && a.drain(),
                                        void (a.drained = !0);
                                    var i = "number" == typeof r ? s.splice(0, r) : s.splice(0, s.length)
                                      , e = h(i, function(t) {
                                        return t.data
                                    });
                                    a.empty && a.empty(),
                                    o = !0,
                                    n(e, function() {
                                        o = !1;
                                        var e = arguments;
                                        f(i, function(t) {
                                            t.callback && t.callback.apply(null, e)
                                        }),
                                        t()
                                    })
                                }
                            },
                            length: function() {
                                return s.length
                            },
                            running: function() {
                                return o
                            }
                        };
                        return a
                    }
                    ;
                    var S = function(i) {
                        return function(t) {
                            var e = Array.prototype.slice.call(arguments, 1);
                            t.apply(null, e.concat([function(t) {
                                var e = Array.prototype.slice.call(arguments, 1);
                                "undefined" != typeof console && (t ? console.error && console.error(t) : console[i] && f(e, function(t) {
                                    console[i](t)
                                }))
                            }
                            ]))
                        }
                    };
                    p.log = S("log"),
                    p.dir = S("dir"),
                    p.memoize = function(i, r) {
                        var o = {}
                          , s = {};
                        r = r || function(t) {
                            return t
                        }
                        ;
                        var t = function() {
                            var t = Array.prototype.slice.call(arguments)
                              , e = t.pop()
                              , n = r.apply(null, t);
                            n in o ? p.nextTick(function() {
                                e.apply(null, o[n])
                            }) : n in s ? s[n].push(e) : (s[n] = [e],
                            i.apply(null, t.concat([function() {
                                o[n] = arguments;
                                var t = s[n];
                                delete s[n];
                                for (var e = 0, i = t.length; e < i; e++)
                                    t[e].apply(null, arguments)
                            }
                            ])))
                        };
                        return t.memo = o,
                        t.unmemoized = i,
                        t
                    }
                    ,
                    p.unmemoize = function(t) {
                        return function() {
                            return (t.unmemoized || t).apply(null, arguments)
                        }
                    }
                    ,
                    p.times = function(t, e, i) {
                        for (var n = [], r = 0; r < t; r++)
                            n.push(r);
                        return p.map(n, e, i)
                    }
                    ,
                    p.timesSeries = function(t, e, i) {
                        for (var n = [], r = 0; r < t; r++)
                            n.push(r);
                        return p.mapSeries(n, e, i)
                    }
                    ,
                    p.seq = function() {
                        var e = arguments;
                        return function() {
                            var n = this
                              , t = Array.prototype.slice.call(arguments)
                              , i = t.pop();
                            p.reduce(e, t, function(t, e, i) {
                                e.apply(n, t.concat([function() {
                                    var t = arguments[0]
                                      , e = Array.prototype.slice.call(arguments, 1);
                                    i(t, e)
                                }
                                ]))
                            }, function(t, e) {
                                i.apply(n, [t].concat(e))
                            })
                        }
                    }
                    ,
                    p.compose = function() {
                        return p.seq.apply(null, Array.prototype.reverse.call(arguments))
                    }
                    ;
                    var x = function(e, r) {
                        var t = function() {
                            var i = this
                              , n = Array.prototype.slice.call(arguments)
                              , t = n.pop();
                            return e(r, function(t, e) {
                                t.apply(i, n.concat([e]))
                            }, t)
                        };
                        if (2 < arguments.length) {
                            var i = Array.prototype.slice.call(arguments, 2);
                            return t.apply(this, i)
                        }
                        return t
                    };
                    p.applyEach = n(x),
                    p.applyEachSeries = o(x),
                    p.forever = function(i, n) {
                        !function t(e) {
                            if (e) {
                                if (n)
                                    return n(e);
                                throw e
                            }
                            i(t)
                        }()
                    }
                    ,
                    void 0 !== T && T.exports ? T.exports = p : i.async = p
                }()
            }
            ).call(this, t("_process"))
        }
        , {
            _process: 4
        }],
        3: [function(t, e, l) {
            (function(r) {
                function o(t, e) {
                    for (var i = 0, n = t.length - 1; 0 <= n; n--) {
                        var r = t[n];
                        "." === r ? t.splice(n, 1) : ".." === r ? (t.splice(n, 1),
                        i++) : i && (t.splice(n, 1),
                        i--)
                    }
                    if (e)
                        for (; i--; i)
                            t.unshift("..");
                    return t
                }
                var e = /^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/
                  , s = function(t) {
                    return e.exec(t).slice(1)
                };
                function a(t, e) {
                    if (t.filter)
                        return t.filter(e);
                    for (var i = [], n = 0; n < t.length; n++)
                        e(t[n], n, t) && i.push(t[n]);
                    return i
                }
                l.resolve = function() {
                    for (var t = "", e = !1, i = arguments.length - 1; -1 <= i && !e; i--) {
                        var n = 0 <= i ? arguments[i] : r.cwd();
                        if ("string" != typeof n)
                            throw new TypeError("Arguments to path.resolve must be strings");
                        n && (t = n + "/" + t,
                        e = "/" === n.charAt(0))
                    }
                    return (e ? "/" : "") + (t = o(a(t.split("/"), function(t) {
                        return !!t
                    }), !e).join("/")) || "."
                }
                ,
                l.normalize = function(t) {
                    var e = l.isAbsolute(t)
                      , i = "/" === n(t, -1);
                    return (t = o(a(t.split("/"), function(t) {
                        return !!t
                    }), !e).join("/")) || e || (t = "."),
                    t && i && (t += "/"),
                    (e ? "/" : "") + t
                }
                ,
                l.isAbsolute = function(t) {
                    return "/" === t.charAt(0)
                }
                ,
                l.join = function() {
                    var t = Array.prototype.slice.call(arguments, 0);
                    return l.normalize(a(t, function(t, e) {
                        if ("string" != typeof t)
                            throw new TypeError("Arguments to path.join must be strings");
                        return t
                    }).join("/"))
                }
                ,
                l.relative = function(t, e) {
                    function i(t) {
                        for (var e = 0; e < t.length && "" === t[e]; e++)
                            ;
                        for (var i = t.length - 1; 0 <= i && "" === t[i]; i--)
                            ;
                        return i < e ? [] : t.slice(e, i - e + 1)
                    }
                    t = l.resolve(t).substr(1),
                    e = l.resolve(e).substr(1);
                    for (var n = i(t.split("/")), r = i(e.split("/")), o = Math.min(n.length, r.length), s = o, a = 0; a < o; a++)
                        if (n[a] !== r[a]) {
                            s = a;
                            break
                        }
                    var h = [];
                    for (a = s; a < n.length; a++)
                        h.push("..");
                    return (h = h.concat(r.slice(s))).join("/")
                }
                ,
                l.sep = "/",
                l.delimiter = ":",
                l.dirname = function(t) {
                    var e = s(t)
                      , i = e[0]
                      , n = e[1];
                    return i || n ? (n && (n = n.substr(0, n.length - 1)),
                    i + n) : "."
                }
                ,
                l.basename = function(t, e) {
                    var i = s(t)[2];
                    return e && i.substr(-1 * e.length) === e && (i = i.substr(0, i.length - e.length)),
                    i
                }
                ,
                l.extname = function(t) {
                    return s(t)[3]
                }
                ;
                var n = "b" === "ab".substr(-1) ? function(t, e, i) {
                    return t.substr(e, i)
                }
                : function(t, e, i) {
                    return e < 0 && (e = t.length + e),
                    t.substr(e, i)
                }
            }
            ).call(this, t("_process"))
        }
        , {
            _process: 4
        }],
        4: [function(t, e, i) {
            var n = e.exports = {}
              , r = []
              , o = !1;
            function s() {
                if (!o) {
                    var t;
                    o = !0;
                    for (var e = r.length; e; ) {
                        t = r,
                        r = [];
                        for (var i = -1; ++i < e; )
                            t[i]();
                        e = r.length
                    }
                    o = !1
                }
            }
            function a() {}
            n.nextTick = function(t) {
                r.push(t),
                o || setTimeout(s, 0)
            }
            ,
            n.title = "browser",
            n.browser = !0,
            n.env = {},
            n.argv = [],
            n.version = "",
            n.versions = {},
            n.on = a,
            n.addListener = a,
            n.once = a,
            n.off = a,
            n.removeListener = a,
            n.removeAllListeners = a,
            n.emit = a,
            n.binding = function(t) {
                throw new Error("process.binding is not supported")
            }
            ,
            n.cwd = function() {
                return "/"
            }
            ,
            n.chdir = function(t) {
                throw new Error("process.chdir is not supported")
            }
            ,
            n.umask = function() {
                return 0
            }
        }
        , {}],
        5: [function(t, R, L) {
            (function(P) {
                !function(t) {
                    var e = "object" == typeof L && L
                      , i = "object" == typeof R && R && R.exports == e && R
                      , n = "object" == typeof P && P;
                    n.global !== n && n.window !== n || (t = n);
                    var r, o, m = 2147483647, v = 36, S = 1, x = 26, s = 38, a = 700, b = 72, T = 128, _ = "-", h = /^xn--/, l = /[^ -~]/, u = /\x2E|\u3002|\uFF0E|\uFF61/g, c = {
                        overflow: "Overflow: input needs wider integers to process",
                        "not-basic": "Illegal input >= 0x80 (not a basic code point)",
                        "invalid-input": "Invalid input"
                    }, p = v - S, w = Math.floor, C = String.fromCharCode;
                    function E(t) {
                        throw RangeError(c[t])
                    }
                    function d(t, e) {
                        for (var i = t.length; i--; )
                            t[i] = e(t[i]);
                        return t
                    }
                    function f(t, e) {
                        return d(t.split(u), e).join(".")
                    }
                    function I(t) {
                        for (var e, i, n = [], r = 0, o = t.length; r < o; )
                            55296 <= (e = t.charCodeAt(r++)) && e <= 56319 && r < o ? 56320 == (64512 & (i = t.charCodeAt(r++))) ? n.push(((1023 & e) << 10) + (1023 & i) + 65536) : (n.push(e),
                            r--) : n.push(e);
                        return n
                    }
                    function D(t) {
                        return d(t, function(t) {
                            var e = "";
                            return 65535 < t && (e += C((t -= 65536) >>> 10 & 1023 | 55296),
                            t = 56320 | 1023 & t),
                            e += C(t)
                        }).join("")
                    }
                    function A(t, e) {
                        return t + 22 + 75 * (t < 26) - ((0 != e) << 5)
                    }
                    function M(t, e, i) {
                        var n = 0;
                        for (t = i ? w(t / a) : t >> 1,
                        t += w(t / e); p * x >> 1 < t; n += v)
                            t = w(t / p);
                        return w(n + (p + 1) * t / (t + s))
                    }
                    function g(t) {
                        var e, i, n, r, o, s, a, h, l, u, c, p = [], d = t.length, f = 0, g = T, y = b;
                        for ((i = t.lastIndexOf(_)) < 0 && (i = 0),
                        n = 0; n < i; ++n)
                            128 <= t.charCodeAt(n) && E("not-basic"),
                            p.push(t.charCodeAt(n));
                        for (r = 0 < i ? i + 1 : 0; r < d; ) {
                            for (o = f,
                            s = 1,
                            a = v; d <= r && E("invalid-input"),
                            c = t.charCodeAt(r++),
                            (v <= (h = c - 48 < 10 ? c - 22 : c - 65 < 26 ? c - 65 : c - 97 < 26 ? c - 97 : v) || h > w((m - f) / s)) && E("overflow"),
                            f += h * s,
                            !(h < (l = a <= y ? S : y + x <= a ? x : a - y)); a += v)
                                s > w(m / (u = v - l)) && E("overflow"),
                                s *= u;
                            y = M(f - o, e = p.length + 1, 0 == o),
                            w(f / e) > m - g && E("overflow"),
                            g += w(f / e),
                            f %= e,
                            p.splice(f++, 0, g)
                        }
                        return D(p)
                    }
                    function y(t) {
                        var e, i, n, r, o, s, a, h, l, u, c, p, d, f, g, y = [];
                        for (p = (t = I(t)).length,
                        e = T,
                        o = b,
                        s = i = 0; s < p; ++s)
                            (c = t[s]) < 128 && y.push(C(c));
                        for (n = r = y.length,
                        r && y.push(_); n < p; ) {
                            for (a = m,
                            s = 0; s < p; ++s)
                                e <= (c = t[s]) && c < a && (a = c);
                            for (a - e > w((m - i) / (d = n + 1)) && E("overflow"),
                            i += (a - e) * d,
                            e = a,
                            s = 0; s < p; ++s)
                                if ((c = t[s]) < e && ++i > m && E("overflow"),
                                c == e) {
                                    for (h = i,
                                    l = v; !(h < (u = l <= o ? S : o + x <= l ? x : l - o)); l += v)
                                        g = h - u,
                                        f = v - u,
                                        y.push(C(A(u + g % f, 0))),
                                        h = w(g / f);
                                    y.push(C(A(h, 0))),
                                    o = M(i, d, n == r),
                                    i = 0,
                                    ++n
                                }
                            ++i,
                            ++e
                        }
                        return y.join("")
                    }
                    if (r = {
                        version: "1.2.4",
                        ucs2: {
                            decode: I,
                            encode: D
                        },
                        decode: g,
                        encode: y,
                        toASCII: function(t) {
                            return f(t, function(t) {
                                return l.test(t) ? "xn--" + y(t) : t
                            })
                        },
                        toUnicode: function(t) {
                            return f(t, function(t) {
                                return h.test(t) ? g(t.slice(4).toLowerCase()) : t
                            })
                        }
                    },
                    e && !e.nodeType)
                        if (i)
                            i.exports = r;
                        else
                            for (o in r)
                                r.hasOwnProperty(o) && (e[o] = r[o]);
                    else
                        t.punycode = r
                }(this)
            }
            ).call(this, "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {})
        }
        , {}],
        6: [function(t, e, i) {
            "use strict";
            e.exports = function(t, e, i, n) {
                e = e || "&",
                i = i || "=";
                var r = {};
                if ("string" != typeof t || 0 === t.length)
                    return r;
                var o = /\+/g;
                t = t.split(e);
                var s = 1e3;
                n && "number" == typeof n.maxKeys && (s = n.maxKeys);
                var a, h, l = t.length;
                0 < s && s < l && (l = s);
                for (var u = 0; u < l; ++u) {
                    var c, p, d, f, g = t[u].replace(o, "%20"), y = g.indexOf(i);
                    p = 0 <= y ? (c = g.substr(0, y),
                    g.substr(y + 1)) : (c = g,
                    ""),
                    d = decodeURIComponent(c),
                    f = decodeURIComponent(p),
                    a = r,
                    h = d,
                    Object.prototype.hasOwnProperty.call(a, h) ? m(r[d]) ? r[d].push(f) : r[d] = [r[d], f] : r[d] = f
                }
                return r
            }
            ;
            var m = Array.isArray || function(t) {
                return "[object Array]" === Object.prototype.toString.call(t)
            }
        }
        , {}],
        7: [function(t, e, i) {
            "use strict";
            var o = function(t) {
                switch (typeof t) {
                case "string":
                    return t;
                case "boolean":
                    return t ? "true" : "false";
                case "number":
                    return isFinite(t) ? t : "";
                default:
                    return ""
                }
            };
            e.exports = function(i, n, r, t) {
                return n = n || "&",
                r = r || "=",
                null === i && (i = void 0),
                "object" == typeof i ? a(h(i), function(t) {
                    var e = encodeURIComponent(o(t)) + r;
                    return s(i[t]) ? a(i[t], function(t) {
                        return e + encodeURIComponent(o(t))
                    }).join(n) : e + encodeURIComponent(o(i[t]))
                }).join(n) : t ? encodeURIComponent(o(t)) + r + encodeURIComponent(o(i)) : ""
            }
            ;
            var s = Array.isArray || function(t) {
                return "[object Array]" === Object.prototype.toString.call(t)
            }
            ;
            function a(t, e) {
                if (t.map)
                    return t.map(e);
                for (var i = [], n = 0; n < t.length; n++)
                    i.push(e(t[n], n));
                return i
            }
            var h = Object.keys || function(t) {
                var e = [];
                for (var i in t)
                    Object.prototype.hasOwnProperty.call(t, i) && e.push(i);
                return e
            }
        }
        , {}],
        8: [function(t, e, i) {
            "use strict";
            i.decode = i.parse = t("./decode"),
            i.encode = i.stringify = t("./encode")
        }
        , {
            "./decode": 6,
            "./encode": 7
        }],
        9: [function(t, e, i) {
            var P = t("punycode");
            function v() {
                this.protocol = null,
                this.slashes = null,
                this.auth = null,
                this.host = null,
                this.port = null,
                this.hostname = null,
                this.hash = null,
                this.search = null,
                this.query = null,
                this.pathname = null,
                this.path = null,
                this.href = null
            }
            i.parse = o,
            i.resolve = function(t, e) {
                return o(t, !1, !0).resolve(e)
            }
            ,
            i.resolveObject = function(t, e) {
                return t ? o(t, !1, !0).resolveObject(e) : e
            }
            ,
            i.format = function(t) {
                z(t) && (t = o(t));
                return t instanceof v ? t.format() : v.prototype.format.call(t)
            }
            ,
            i.Url = v;
            var R = /^([a-z0-9.+-]+:)/i
              , n = /:[0-9]*$/
              , r = ["{", "}", "|", "\\", "^", "`"].concat(["<", ">", '"', "`", " ", "\r", "\n", "\t"])
              , L = ["'"].concat(r)
              , O = ["%", "/", "?", ";", "#"].concat(L)
              , U = ["/", "?", "#"]
              , N = /^[a-z0-9A-Z_-]{0,63}$/
              , F = /^([a-z0-9A-Z_-]{0,63})(.*)$/
              , k = {
                javascript: !0,
                "javascript:": !0
            }
              , B = {
                javascript: !0,
                "javascript:": !0
            }
              , G = {
                http: !0,
                https: !0,
                ftp: !0,
                gopher: !0,
                file: !0,
                "http:": !0,
                "https:": !0,
                "ftp:": !0,
                "gopher:": !0,
                "file:": !0
            }
              , H = t("querystring");
            function o(t, e, i) {
                if (t && a(t) && t instanceof v)
                    return t;
                var n = new v;
                return n.parse(t, e, i),
                n
            }
            function z(t) {
                return "string" == typeof t
            }
            function a(t) {
                return "object" == typeof t && null !== t
            }
            function S(t) {
                return null === t
            }
            v.prototype.parse = function(t, e, i) {
                if (!z(t))
                    throw new TypeError("Parameter 'url' must be a string, not " + typeof t);
                var n = t;
                n = n.trim();
                var r = R.exec(n);
                if (r) {
                    var o = (r = r[0]).toLowerCase();
                    this.protocol = o,
                    n = n.substr(r.length)
                }
                if (i || r || n.match(/^\/\/[^@\/]+@[^@\/]+/)) {
                    var s = "//" === n.substr(0, 2);
                    !s || r && B[r] || (n = n.substr(2),
                    this.slashes = !0)
                }
                if (!B[r] && (s || r && !G[r])) {
                    for (var a, h, l = -1, u = 0; u < U.length; u++) {
                        -1 !== (c = n.indexOf(U[u])) && (-1 === l || c < l) && (l = c)
                    }
                    -1 !== (h = -1 === l ? n.lastIndexOf("@") : n.lastIndexOf("@", l)) && (a = n.slice(0, h),
                    n = n.slice(h + 1),
                    this.auth = decodeURIComponent(a)),
                    l = -1;
                    for (u = 0; u < O.length; u++) {
                        var c;
                        -1 !== (c = n.indexOf(O[u])) && (-1 === l || c < l) && (l = c)
                    }
                    -1 === l && (l = n.length),
                    this.host = n.slice(0, l),
                    n = n.slice(l),
                    this.parseHost(),
                    this.hostname = this.hostname || "";
                    var p = "[" === this.hostname[0] && "]" === this.hostname[this.hostname.length - 1];
                    if (!p)
                        for (var d = this.hostname.split(/\./), f = (u = 0,
                        d.length); u < f; u++) {
                            var g = d[u];
                            if (g && !g.match(N)) {
                                for (var y = "", m = 0, v = g.length; m < v; m++)
                                    127 < g.charCodeAt(m) ? y += "x" : y += g[m];
                                if (!y.match(N)) {
                                    var S = d.slice(0, u)
                                      , x = d.slice(u + 1)
                                      , b = g.match(F);
                                    b && (S.push(b[1]),
                                    x.unshift(b[2])),
                                    x.length && (n = "/" + x.join(".") + n),
                                    this.hostname = S.join(".");
                                    break
                                }
                            }
                        }
                    if (255 < this.hostname.length ? this.hostname = "" : this.hostname = this.hostname.toLowerCase(),
                    !p) {
                        var T = this.hostname.split(".")
                          , _ = [];
                        for (u = 0; u < T.length; ++u) {
                            var w = T[u];
                            _.push(w.match(/[^A-Za-z0-9_-]/) ? "xn--" + P.encode(w) : w)
                        }
                        this.hostname = _.join(".")
                    }
                    var C = this.port ? ":" + this.port : ""
                      , E = this.hostname || "";
                    this.host = E + C,
                    this.href += this.host,
                    p && (this.hostname = this.hostname.substr(1, this.hostname.length - 2),
                    "/" !== n[0] && (n = "/" + n))
                }
                if (!k[o])
                    for (u = 0,
                    f = L.length; u < f; u++) {
                        var I = L[u]
                          , D = encodeURIComponent(I);
                        D === I && (D = escape(I)),
                        n = n.split(I).join(D)
                    }
                var A = n.indexOf("#");
                -1 !== A && (this.hash = n.substr(A),
                n = n.slice(0, A));
                var M = n.indexOf("?");
                if (-1 !== M ? (this.search = n.substr(M),
                this.query = n.substr(M + 1),
                e && (this.query = H.parse(this.query)),
                n = n.slice(0, M)) : e && (this.search = "",
                this.query = {}),
                n && (this.pathname = n),
                G[o] && this.hostname && !this.pathname && (this.pathname = "/"),
                this.pathname || this.search) {
                    C = this.pathname || "",
                    w = this.search || "";
                    this.path = C + w
                }
                return this.href = this.format(),
                this
            }
            ,
            v.prototype.format = function() {
                var t = this.auth || "";
                t && (t = (t = encodeURIComponent(t)).replace(/%3A/i, ":"),
                t += "@");
                var e = this.protocol || ""
                  , i = this.pathname || ""
                  , n = this.hash || ""
                  , r = !1
                  , o = "";
                this.host ? r = t + this.host : this.hostname && (r = t + (-1 === this.hostname.indexOf(":") ? this.hostname : "[" + this.hostname + "]"),
                this.port && (r += ":" + this.port)),
                this.query && a(this.query) && Object.keys(this.query).length && (o = H.stringify(this.query));
                var s = this.search || o && "?" + o || "";
                return e && ":" !== e.substr(-1) && (e += ":"),
                this.slashes || (!e || G[e]) && !1 !== r ? (r = "//" + (r || ""),
                i && "/" !== i.charAt(0) && (i = "/" + i)) : r || (r = ""),
                n && "#" !== n.charAt(0) && (n = "#" + n),
                s && "?" !== s.charAt(0) && (s = "?" + s),
                e + r + (i = i.replace(/[?#]/g, function(t) {
                    return encodeURIComponent(t)
                })) + (s = s.replace("#", "%23")) + n
            }
            ,
            v.prototype.resolve = function(t) {
                return this.resolveObject(o(t, !1, !0)).format()
            }
            ,
            v.prototype.resolveObject = function(e) {
                if (z(e)) {
                    var t = new v;
                    t.parse(e, !1, !0),
                    e = t
                }
                var i = new v;
                if (Object.keys(this).forEach(function(t) {
                    i[t] = this[t]
                }, this),
                i.hash = e.hash,
                "" === e.href)
                    return i.href = i.format(),
                    i;
                if (e.slashes && !e.protocol)
                    return Object.keys(e).forEach(function(t) {
                        "protocol" !== t && (i[t] = e[t])
                    }),
                    G[i.protocol] && i.hostname && !i.pathname && (i.path = i.pathname = "/"),
                    i.href = i.format(),
                    i;
                if (e.protocol && e.protocol !== i.protocol) {
                    if (!G[e.protocol])
                        return Object.keys(e).forEach(function(t) {
                            i[t] = e[t]
                        }),
                        i.href = i.format(),
                        i;
                    if (i.protocol = e.protocol,
                    e.host || B[e.protocol])
                        i.pathname = e.pathname;
                    else {
                        for (var n = (e.pathname || "").split("/"); n.length && !(e.host = n.shift()); )
                            ;
                        e.host || (e.host = ""),
                        e.hostname || (e.hostname = ""),
                        "" !== n[0] && n.unshift(""),
                        n.length < 2 && n.unshift(""),
                        i.pathname = n.join("/")
                    }
                    if (i.search = e.search,
                    i.query = e.query,
                    i.host = e.host || "",
                    i.auth = e.auth,
                    i.hostname = e.hostname || e.host,
                    i.port = e.port,
                    i.pathname || i.search) {
                        var r = i.pathname || ""
                          , o = i.search || "";
                        i.path = r + o
                    }
                    return i.slashes = i.slashes || e.slashes,
                    i.href = i.format(),
                    i
                }
                var s = i.pathname && "/" === i.pathname.charAt(0)
                  , a = e.host || e.pathname && "/" === e.pathname.charAt(0)
                  , h = a || s || i.host && e.pathname
                  , l = h
                  , u = i.pathname && i.pathname.split("/") || []
                  , c = (n = e.pathname && e.pathname.split("/") || [],
                i.protocol && !G[i.protocol]);
                if (c && (i.hostname = "",
                i.port = null,
                i.host && ("" === u[0] ? u[0] = i.host : u.unshift(i.host)),
                i.host = "",
                e.protocol && (e.hostname = null,
                e.port = null,
                e.host && ("" === n[0] ? n[0] = e.host : n.unshift(e.host)),
                e.host = null),
                h = h && ("" === n[0] || "" === u[0])),
                a)
                    i.host = e.host || "" === e.host ? e.host : i.host,
                    i.hostname = e.hostname || "" === e.hostname ? e.hostname : i.hostname,
                    i.search = e.search,
                    i.query = e.query,
                    u = n;
                else if (n.length)
                    u || (u = []),
                    u.pop(),
                    u = u.concat(n),
                    i.search = e.search,
                    i.query = e.query;
                else if (null != e.search) {
                    if (c)
                        i.hostname = i.host = u.shift(),
                        (y = !!(i.host && 0 < i.host.indexOf("@")) && i.host.split("@")) && (i.auth = y.shift(),
                        i.host = i.hostname = y.shift());
                    return i.search = e.search,
                    i.query = e.query,
                    S(i.pathname) && S(i.search) || (i.path = (i.pathname ? i.pathname : "") + (i.search ? i.search : "")),
                    i.href = i.format(),
                    i
                }
                if (!u.length)
                    return i.pathname = null,
                    i.search ? i.path = "/" + i.search : i.path = null,
                    i.href = i.format(),
                    i;
                for (var p = u.slice(-1)[0], d = (i.host || e.host) && ("." === p || ".." === p) || "" === p, f = 0, g = u.length; 0 <= g; g--)
                    "." == (p = u[g]) ? u.splice(g, 1) : ".." === p ? (u.splice(g, 1),
                    f++) : f && (u.splice(g, 1),
                    f--);
                if (!h && !l)
                    for (; f--; f)
                        u.unshift("..");
                !h || "" === u[0] || u[0] && "/" === u[0].charAt(0) || u.unshift(""),
                d && "/" !== u.join("/").substr(-1) && u.push("");
                var y, m = "" === u[0] || u[0] && "/" === u[0].charAt(0);
                c && (i.hostname = i.host = m ? "" : u.length ? u.shift() : "",
                (y = !!(i.host && 0 < i.host.indexOf("@")) && i.host.split("@")) && (i.auth = y.shift(),
                i.host = i.hostname = y.shift()));
                return (h = h || i.host && u.length) && !m && u.unshift(""),
                u.length ? i.pathname = u.join("/") : (i.pathname = null,
                i.path = null),
                S(i.pathname) && S(i.search) || (i.path = (i.pathname ? i.pathname : "") + (i.search ? i.search : "")),
                i.auth = e.auth || i.auth,
                i.slashes = i.slashes || e.slashes,
                i.href = i.format(),
                i
            }
            ,
            v.prototype.parseHost = function() {
                var t = this.host
                  , e = n.exec(t);
                e && (":" !== (e = e[0]) && (this.port = e.substr(1)),
                t = t.substr(0, t.length - e.length)),
                t && (this.hostname = t)
            }
        }
        , {
            punycode: 5,
            querystring: 8
        }],
        10: [function(t, e, i) {
            "use strict";
            function g(t, e, i, n, r) {
                var o, s, a, h = 0;
                for (o = e,
                s = i - n; o < i; o += n)
                    h += (t[s] - t[o]) * (t[o + 1] + t[s + 1]),
                    s = o;
                if (r === 0 < h)
                    for (o = e; o < i; o += n)
                        a = l(o, a);
                else
                    for (o = i - n; e <= o; o -= n)
                        a = l(o, a);
                return a
            }
            function y(t, e, i) {
                i || (i = e);
                var n, r, o, s, a = e;
                do {
                    if (n = !1,
                    r = t,
                    o = a.i,
                    s = a.next.i,
                    r[o] === r[s] && r[o + 1] === r[s + 1] || 0 === h(t, a.prev.i, a.i, a.next.i)) {
                        if (a.prev.next = a.next,
                        a.next.prev = a.prev,
                        a.prevZ && (a.prevZ.nextZ = a.nextZ),
                        a.nextZ && (a.nextZ.prevZ = a.prevZ),
                        (a = i = a.prev) === a.next)
                            return null;
                        n = !0
                    } else
                        a = a.next
                } while (n || a !== i);return i
            }
            function m(t, e, i, n, r, o, s, a) {
                if (e) {
                    a || void 0 === r || function(t, e, i, n, r) {
                        var o = e;
                        for (; null === o.z && (o.z = R(t[o.i], t[o.i + 1], i, n, r)),
                        o.prevZ = o.prev,
                        o.nextZ = o.next,
                        o = o.next,
                        o !== e; )
                            ;
                        o.prevZ.nextZ = null,
                        o.prevZ = null,
                        function(t) {
                            var e, i, n, r, o, s, a, h, l = 1;
                            do {
                                for (i = t,
                                o = t = null,
                                s = 0; i; ) {
                                    for (s++,
                                    n = i,
                                    e = a = 0; e < l && (a++,
                                    n = n.nextZ); e++)
                                        ;
                                    for (h = l; 0 < a || 0 < h && n; )
                                        0 === a ? (n = (r = n).nextZ,
                                        h--) : 0 !== h && n ? i.z <= n.z ? (i = (r = i).nextZ,
                                        a--) : (n = (r = n).nextZ,
                                        h--) : (i = (r = i).nextZ,
                                        a--),
                                        o ? o.nextZ = r : t = r,
                                        r.prevZ = o,
                                        o = r;
                                    i = n
                                }
                                o.nextZ = null,
                                l *= 2
                            } while (1 < s)
                        }(o)
                    }(t, e, r, o, s);
                    for (var h, l, u = e; e.prev !== e.next; )
                        if (h = e.prev,
                        l = e.next,
                        c(t, e, r, o, s))
                            i.push(h.i / n),
                            i.push(e.i / n),
                            i.push(l.i / n),
                            (l.prev = h).next = l,
                            e.prevZ && (e.prevZ.nextZ = e.nextZ),
                            e.nextZ && (e.nextZ.prevZ = e.prevZ),
                            e = l.next,
                            u = l.next;
                        else if ((e = l) === u) {
                            a ? 1 === a ? m(t, e = p(t, e, i, n), i, n, r, o, s, 2) : 2 === a && d(t, e, i, n, r, o, s) : m(t, y(t, e), i, n, r, o, s, 1);
                            break
                        }
                }
            }
            function c(t, e, i, n, r) {
                var o = e.prev.i
                  , s = e.i
                  , a = e.next.i
                  , h = t[o]
                  , l = t[o + 1]
                  , u = t[s]
                  , c = t[s + 1]
                  , p = t[a]
                  , d = t[a + 1]
                  , f = h * c - l * u
                  , g = h * d - l * p
                  , y = f - g - (p * c - d * u);
                if (y <= 0)
                    return !1;
                var m, v, S, x, b, T, _, w = d - l, C = h - p, E = l - c, I = u - h;
                if (void 0 !== i) {
                    var D = u < h ? p < h ? h : p : p < u ? u : p
                      , A = c < l ? d < l ? l : d : d < c ? c : d
                      , M = R(h < u ? h < p ? h : p : u < p ? u : p, l < c ? l < d ? l : d : c < d ? c : d, i, n, r)
                      , P = R(D, A, i, n, r);
                    for (_ = e.nextZ; _ && _.z <= P; )
                        if (m = _.i,
                        _ = _.nextZ,
                        m !== o && m !== a && 0 <= (x = w * (v = t[m]) + C * (S = t[m + 1]) - g) && 0 <= (b = E * v + I * S + f) && 0 <= (T = y - x - b) && (x && b || x && T || b && T))
                            return !1;
                    for (_ = e.prevZ; _ && _.z >= M; )
                        if (m = _.i,
                        _ = _.prevZ,
                        m !== o && m !== a && 0 <= (x = w * (v = t[m]) + C * (S = t[m + 1]) - g) && 0 <= (b = E * v + I * S + f) && 0 <= (T = y - x - b) && (x && b || x && T || b && T))
                            return !1
                } else
                    for (_ = e.next.next; _ !== e.prev; )
                        if (m = _.i,
                        _ = _.next,
                        0 <= (x = w * (v = t[m]) + C * (S = t[m + 1]) - g) && 0 <= (b = E * v + I * S + f) && 0 <= (T = y - x - b) && (x && b || x && T || b && T))
                            return !1;
                return !0
            }
            function p(t, e, i, n) {
                var r = e;
                do {
                    var o = r.prev
                      , s = r.next.next;
                    if (o.i !== s.i && f(t, o.i, r.i, r.next.i, s.i) && M(t, o, s) && M(t, s, o)) {
                        i.push(o.i / n),
                        i.push(r.i / n),
                        i.push(s.i / n),
                        (o.next = s).prev = o;
                        var a = r.prevZ
                          , h = r.nextZ && r.nextZ.nextZ;
                        a && (a.nextZ = h),
                        h && (h.prevZ = a),
                        r = e = s
                    }
                    r = r.next
                } while (r !== e);return r
            }
            function d(t, e, i, n, r, o, s) {
                var a, h, l, u = e;
                do {
                    for (var c = u.next.next; c !== u.prev; ) {
                        if (u.i !== c.i && (l = c,
                        !function(t, e, i, n) {
                            var r = e;
                            do {
                                var o = r.i
                                  , s = r.next.i;
                                if (o !== i && s !== i && o !== n && s !== n && f(t, o, s, i, n))
                                    return !0;
                                r = r.next
                            } while (r !== e);return !1
                        }(a = t, h = u, h.i, l.i) && M(a, h, l) && M(a, l, h) && function(t, e, i, n) {
                            var r = e
                              , o = !1
                              , s = (t[i] + t[n]) / 2
                              , a = (t[i + 1] + t[n + 1]) / 2;
                            do {
                                var h = r.i
                                  , l = r.next.i;
                                t[h + 1] > a != t[l + 1] > a && s < (t[l] - t[h]) * (a - t[h + 1]) / (t[l + 1] - t[h + 1]) + t[h] && (o = !o),
                                r = r.next
                            } while (r !== e);return o
                        }(a, h, h.i, l.i))) {
                            var p = x(u, c);
                            return u = y(t, u, u.next),
                            p = y(t, p, p.next),
                            m(t, u, i, n, r, o, s),
                            void m(t, p, i, n, r, o, s)
                        }
                        c = c.next
                    }
                    u = u.next
                } while (u !== e)
            }
            function v(t, e, i) {
                if (i = function(t, e, i) {
                    var n, r, o, s = i, a = e.i, h = t[a], l = t[a + 1], u = -1 / 0;
                    do {
                        if (r = s.i,
                        o = s.next.i,
                        l <= t[r + 1] && l >= t[o + 1]) {
                            var c = t[r] + (l - t[r + 1]) * (t[o] - t[r]) / (t[o + 1] - t[r + 1]);
                            c <= h && u < c && (u = c,
                            n = t[r] < t[o] ? s : s.next)
                        }
                        s = s.next
                    } while (s !== i);if (!n)
                        return null;
                    var p, d, f, g, y, m, v = t[n.i], S = t[n.i + 1], x = h * S - l * v, b = h * l - l * u, T = l - l, _ = h - u, w = l - S, C = v - h, E = x - b - (u * S - l * v), I = E <= 0 ? -1 : 1, D = n, A = 1 / 0;
                    s = n.next;
                    for (; s !== D; )
                        p = t[s.i],
                        d = t[s.i + 1],
                        0 <= (f = h - p) && v <= p && 0 <= (g = (T * p + _ * d - b) * I) && 0 <= (y = (w * p + C * d + x) * I) && 0 <= E * I - g - y && (m = Math.abs(l - d) / f) < A && M(t, s, e) && (n = s,
                        A = m),
                        s = s.next;
                    return n
                }(t, e, i)) {
                    var n = x(i, e);
                    y(t, n, n.next)
                }
            }
            function R(t, e, i, n, r) {
                return (t = 1431655765 & ((t = 858993459 & ((t = 252645135 & ((t = 16711935 & ((t = 1e3 * (t - i) / r) | t << 8)) | t << 4)) | t << 2)) | t << 1)) | (e = 1431655765 & ((e = 858993459 & ((e = 252645135 & ((e = 16711935 & ((e = 1e3 * (e - n) / r) | e << 8)) | e << 4)) | e << 2)) | e << 1)) << 1
            }
            function S(t, e) {
                for (var i = e, n = e; t[i.i] < t[n.i] && (n = i),
                (i = i.next) !== e; )
                    ;
                return n
            }
            function h(t, e, i, n) {
                var r = (t[i + 1] - t[e + 1]) * (t[n] - t[i]) - (t[i] - t[e]) * (t[n + 1] - t[i + 1]);
                return 0 < r ? 1 : r < 0 ? -1 : 0
            }
            function f(t, e, i, n, r) {
                return h(t, e, i, n) !== h(t, e, i, r) && h(t, n, r, e) !== h(t, n, r, i)
            }
            function M(t, e, i) {
                return -1 === h(t, e.prev.i, e.i, e.next.i) ? -1 !== h(t, e.i, i.i, e.next.i) && -1 !== h(t, e.i, e.prev.i, i.i) : -1 === h(t, e.i, i.i, e.prev.i) || -1 === h(t, e.i, e.next.i, i.i)
            }
            function x(t, e) {
                var i = new s(t.i)
                  , n = new s(e.i)
                  , r = t.next
                  , o = e.prev;
                return (t.next = e).prev = t,
                (i.next = r).prev = i,
                (n.next = i).prev = n,
                (o.next = n).prev = o,
                n
            }
            function l(t, e) {
                var i = new s(t);
                return e ? (i.next = e.next,
                (i.prev = e).next.prev = i,
                e.next = i) : (i.prev = i).next = i,
                i
            }
            function s(t) {
                this.i = t,
                this.prev = null,
                this.next = null,
                this.z = null,
                this.prevZ = null,
                this.nextZ = null
            }
            e.exports = function(t, e, i) {
                i = i || 2;
                var n, r, o, s, a, h, l, u = e && e.length, c = u ? e[0] * i : t.length, p = y(t, g(t, 0, c, i, !0)), d = [];
                if (!p)
                    return d;
                u && (p = function(i, t, e, n) {
                    var r, o, s, a, h, l = [];
                    for (r = 0,
                    o = t.length; r < o; r++)
                        s = t[r] * n,
                        a = r < o - 1 ? t[r + 1] * n : i.length,
                        (h = y(i, g(i, s, a, n, !1))) && l.push(S(i, h));
                    for (l.sort(function(t, e) {
                        return i[t.i] - i[e.i]
                    }),
                    r = 0; r < l.length; r++)
                        v(i, l[r], e),
                        e = y(i, e, e.next);
                    return e
                }(t, e, p, i));
                if (t.length > 80 * i) {
                    n = o = t[0],
                    r = s = t[1];
                    for (var f = i; f < c; f += i)
                        a = t[f],
                        h = t[f + 1],
                        a < n && (n = a),
                        h < r && (r = h),
                        o < a && (o = a),
                        s < h && (s = h);
                    l = Math.max(o - n, s - r)
                }
                return m(t, p, d, i, n, r, l),
                d
            }
        }
        , {}],
        11: [function(t, e, i) {
            "use strict";
            var d = "function" != typeof Object.create && "~";
            function o(t, e, i) {
                this.fn = t,
                this.context = e,
                this.once = i || !1
            }
            function n() {}
            n.prototype._events = void 0,
            n.prototype.listeners = function(t, e) {
                var i = d ? d + t : t
                  , n = this._events && this._events[i];
                if (e)
                    return !!n;
                if (!n)
                    return [];
                if (this._events[i].fn)
                    return [this._events[i].fn];
                for (var r = 0, o = this._events[i].length, s = new Array(o); r < o; r++)
                    s[r] = this._events[i][r].fn;
                return s
            }
            ,
            n.prototype.emit = function(t, e, i, n, r, o) {
                var s = d ? d + t : t;
                if (!this._events || !this._events[s])
                    return !1;
                var a, h, l = this._events[s], u = arguments.length;
                if ("function" == typeof l.fn) {
                    switch (l.once && this.removeListener(t, l.fn, void 0, !0),
                    u) {
                    case 1:
                        return l.fn.call(l.context),
                        !0;
                    case 2:
                        return l.fn.call(l.context, e),
                        !0;
                    case 3:
                        return l.fn.call(l.context, e, i),
                        !0;
                    case 4:
                        return l.fn.call(l.context, e, i, n),
                        !0;
                    case 5:
                        return l.fn.call(l.context, e, i, n, r),
                        !0;
                    case 6:
                        return l.fn.call(l.context, e, i, n, r, o),
                        !0
                    }
                    for (h = 1,
                    a = new Array(u - 1); h < u; h++)
                        a[h - 1] = arguments[h];
                    l.fn.apply(l.context, a)
                } else {
                    var c, p = l.length;
                    for (h = 0; h < p; h++)
                        switch (l[h].once && this.removeListener(t, l[h].fn, void 0, !0),
                        u) {
                        case 1:
                            l[h].fn.call(l[h].context);
                            break;
                        case 2:
                            l[h].fn.call(l[h].context, e);
                            break;
                        case 3:
                            l[h].fn.call(l[h].context, e, i);
                            break;
                        default:
                            if (!a)
                                for (c = 1,
                                a = new Array(u - 1); c < u; c++)
                                    a[c - 1] = arguments[c];
                            l[h].fn.apply(l[h].context, a)
                        }
                }
                return !0
            }
            ,
            n.prototype.on = function(t, e, i) {
                var n = new o(e,i || this)
                  , r = d ? d + t : t;
                return this._events || (this._events = d ? {} : Object.create(null)),
                this._events[r] ? this._events[r].fn ? this._events[r] = [this._events[r], n] : this._events[r].push(n) : this._events[r] = n,
                this
            }
            ,
            n.prototype.once = function(t, e, i) {
                var n = new o(e,i || this,!0)
                  , r = d ? d + t : t;
                return this._events || (this._events = d ? {} : Object.create(null)),
                this._events[r] ? this._events[r].fn ? this._events[r] = [this._events[r], n] : this._events[r].push(n) : this._events[r] = n,
                this
            }
            ,
            n.prototype.removeListener = function(t, e, i, n) {
                var r = d ? d + t : t;
                if (!this._events || !this._events[r])
                    return this;
                var o = this._events[r]
                  , s = [];
                if (e)
                    if (o.fn)
                        (o.fn !== e || n && !o.once || i && o.context !== i) && s.push(o);
                    else
                        for (var a = 0, h = o.length; a < h; a++)
                            (o[a].fn !== e || n && !o[a].once || i && o[a].context !== i) && s.push(o[a]);
                return s.length ? this._events[r] = 1 === s.length ? s[0] : s : delete this._events[r],
                this
            }
            ,
            n.prototype.removeAllListeners = function(t) {
                return this._events && (t ? delete this._events[d ? d + t : t] : this._events = d ? {} : Object.create(null)),
                this
            }
            ,
            n.prototype.off = n.prototype.removeListener,
            n.prototype.addListener = n.prototype.on,
            n.prototype.setMaxListeners = function() {
                return this
            }
            ,
            n.prefixed = d,
            e.exports = n
        }
        , {}],
        12: [function(t, e, i) {
            "use strict";
            e.exports = Object.assign || function(t, e) {
                for (var i, n, r = function(t) {
                    if (null == t)
                        throw new TypeError("Object.assign cannot be called with null or undefined");
                    return Object(t)
                }(t), o = 1; o < arguments.length; o++) {
                    i = arguments[o],
                    n = Object.keys(Object(i));
                    for (var s = 0; s < n.length; s++)
                        r[n[s]] = i[n[s]]
                }
                return r
            }
        }
        , {}],
        13: [function(t, T, e) {
            (function(b) {
                !function() {
                    var i, t, p = {};
                    function s(t) {
                        var e = !1;
                        return function() {
                            if (e)
                                throw new Error("Callback was already called.");
                            e = !0,
                            t.apply(i, arguments)
                        }
                    }
                    null != (i = this) && (t = i.async),
                    p.noConflict = function() {
                        return i.async = t,
                        p
                    }
                    ;
                    var e = Object.prototype.toString
                      , d = Array.isArray || function(t) {
                        return "[object Array]" === e.call(t)
                    }
                      , f = function(t, e) {
                        if (t.forEach)
                            return t.forEach(e);
                        for (var i = 0; i < t.length; i += 1)
                            e(t[i], i, t)
                    }
                      , h = function(t, n) {
                        if (t.map)
                            return t.map(n);
                        var r = [];
                        return f(t, function(t, e, i) {
                            r.push(n(t, e, i))
                        }),
                        r
                    }
                      , g = function(t) {
                        if (Object.keys)
                            return Object.keys(t);
                        var e = [];
                        for (var i in t)
                            t.hasOwnProperty(i) && e.push(i);
                        return e
                    };
                    void 0 !== b && b.nextTick ? (p.nextTick = b.nextTick,
                    "undefined" != typeof setImmediate ? p.setImmediate = function(t) {
                        setImmediate(t)
                    }
                    : p.setImmediate = p.nextTick) : ("function" == typeof setImmediate ? p.nextTick = function(t) {
                        setImmediate(t)
                    }
                    : p.nextTick = function(t) {
                        setTimeout(t, 0)
                    }
                    ,
                    p.setImmediate = p.nextTick),
                    p.each = function(e, i, n) {
                        if (n = n || function() {}
                        ,
                        !e.length)
                            return n();
                        var r = 0;
                        function o(t) {
                            t ? (n(t),
                            n = function() {}
                            ) : (r += 1) >= e.length && n()
                        }
                        f(e, function(t) {
                            i(t, s(o))
                        })
                    }
                    ,
                    p.forEach = p.each,
                    p.eachSeries = function(e, t, i) {
                        if (i = i || function() {}
                        ,
                        !e.length)
                            return i();
                        var n = 0
                          , r = function() {
                            t(e[n], function(t) {
                                t ? (i(t),
                                i = function() {}
                                ) : (n += 1) >= e.length ? i() : r()
                            })
                        };
                        r()
                    }
                    ,
                    p.forEachSeries = p.eachSeries,
                    p.eachLimit = function(t, e, i, n) {
                        r(e).apply(null, [t, i, n])
                    }
                    ,
                    p.forEachLimit = p.eachLimit;
                    var r = function(a) {
                        return function(i, t, n) {
                            if (n = n || function() {}
                            ,
                            !i.length || a <= 0)
                                return n();
                            var r = 0
                              , o = 0
                              , s = 0;
                            !function e() {
                                if (r >= i.length)
                                    return n();
                                for (; s < a && o < i.length; )
                                    s += 1,
                                    t(i[(o += 1) - 1], function(t) {
                                        t ? (n(t),
                                        n = function() {}
                                        ) : (s -= 1,
                                        (r += 1) >= i.length ? n() : e())
                                    })
                            }()
                        }
                    }
                      , n = function(e) {
                        return function() {
                            var t = Array.prototype.slice.call(arguments);
                            return e.apply(null, [p.each].concat(t))
                        }
                    }
                      , o = function(e) {
                        return function() {
                            var t = Array.prototype.slice.call(arguments);
                            return e.apply(null, [p.eachSeries].concat(t))
                        }
                    }
                      , a = function(t, e, r, i) {
                        if (e = h(e, function(t, e) {
                            return {
                                index: e,
                                value: t
                            }
                        }),
                        i) {
                            var o = [];
                            t(e, function(i, n) {
                                r(i.value, function(t, e) {
                                    o[i.index] = e,
                                    n(t)
                                })
                            }, function(t) {
                                i(t, o)
                            })
                        } else
                            t(e, function(t, e) {
                                r(t.value, function(t) {
                                    e(t)
                                })
                            })
                    };
                    p.map = n(a),
                    p.mapSeries = o(a),
                    p.mapLimit = function(t, e, i, n) {
                        return l(e)(t, i, n)
                    }
                    ;
                    var l = function(t) {
                        return e = t,
                        i = a,
                        function() {
                            var t = Array.prototype.slice.call(arguments);
                            return i.apply(null, [r(e)].concat(t))
                        }
                        ;
                        var e, i
                    };
                    p.reduce = function(t, n, e, i) {
                        p.eachSeries(t, function(t, i) {
                            e(n, t, function(t, e) {
                                n = e,
                                i(t)
                            })
                        }, function(t) {
                            i(t, n)
                        })
                    }
                    ,
                    p.inject = p.reduce,
                    p.foldl = p.reduce,
                    p.reduceRight = function(t, e, i, n) {
                        var r = h(t, function(t) {
                            return t
                        }).reverse();
                        p.reduce(r, e, i, n)
                    }
                    ,
                    p.foldr = p.reduceRight;
                    var u = function(t, e, n, i) {
                        var r = [];
                        t(e = h(e, function(t, e) {
                            return {
                                index: e,
                                value: t
                            }
                        }), function(e, i) {
                            n(e.value, function(t) {
                                t && r.push(e),
                                i()
                            })
                        }, function(t) {
                            i(h(r.sort(function(t, e) {
                                return t.index - e.index
                            }), function(t) {
                                return t.value
                            }))
                        })
                    };
                    p.filter = n(u),
                    p.filterSeries = o(u),
                    p.select = p.filter,
                    p.selectSeries = p.filterSeries;
                    var c = function(t, e, n, i) {
                        var r = [];
                        t(e = h(e, function(t, e) {
                            return {
                                index: e,
                                value: t
                            }
                        }), function(e, i) {
                            n(e.value, function(t) {
                                t || r.push(e),
                                i()
                            })
                        }, function(t) {
                            i(h(r.sort(function(t, e) {
                                return t.index - e.index
                            }), function(t) {
                                return t.value
                            }))
                        })
                    };
                    p.reject = n(c),
                    p.rejectSeries = o(c);
                    var y = function(t, e, n, r) {
                        t(e, function(e, i) {
                            n(e, function(t) {
                                t ? (r(e),
                                r = function() {}
                                ) : i()
                            })
                        }, function(t) {
                            r()
                        })
                    };
                    p.detect = n(y),
                    p.detectSeries = o(y),
                    p.some = function(t, i, n) {
                        p.each(t, function(t, e) {
                            i(t, function(t) {
                                t && (n(!0),
                                n = function() {}
                                ),
                                e()
                            })
                        }, function(t) {
                            n(!1)
                        })
                    }
                    ,
                    p.any = p.some,
                    p.every = function(t, i, n) {
                        p.each(t, function(t, e) {
                            i(t, function(t) {
                                t || (n(!1),
                                n = function() {}
                                ),
                                e()
                            })
                        }, function(t) {
                            n(!0)
                        })
                    }
                    ,
                    p.all = p.every,
                    p.sortBy = function(t, e, i) {
                        p.map(t, function(i, n) {
                            e(i, function(t, e) {
                                t ? n(t) : n(null, {
                                    value: i,
                                    criteria: e
                                })
                            })
                        }, function(t, e) {
                            if (t)
                                return i(t);
                            i(null, h(e.sort(function(t, e) {
                                var i = t.criteria
                                  , n = e.criteria;
                                return i < n ? -1 : n < i ? 1 : 0
                            }), function(t) {
                                return t.value
                            }))
                        })
                    }
                    ,
                    p.auto = function(s, a) {
                        a = a || function() {}
                        ;
                        var t = g(s)
                          , e = t.length;
                        if (!e)
                            return a();
                        var h = {}
                          , l = []
                          , u = function(t) {
                            l.unshift(t)
                        }
                          , c = function() {
                            e--,
                            f(l.slice(0), function(t) {
                                t()
                            })
                        };
                        u(function() {
                            if (!e) {
                                var t = a;
                                a = function() {}
                                ,
                                t(null, h)
                            }
                        }),
                        f(t, function(o) {
                            var t = d(s[o]) ? s[o] : [s[o]]
                              , e = function(t) {
                                var e = Array.prototype.slice.call(arguments, 1);
                                if (e.length <= 1 && (e = e[0]),
                                t) {
                                    var i = {};
                                    f(g(h), function(t) {
                                        i[t] = h[t]
                                    }),
                                    i[o] = e,
                                    a(t, i),
                                    a = function() {}
                                } else
                                    h[o] = e,
                                    p.setImmediate(c)
                            }
                              , i = t.slice(0, Math.abs(t.length - 1)) || []
                              , n = function() {
                                return n = function(t, e) {
                                    return t && h.hasOwnProperty(e)
                                }
                                ,
                                r = !0,
                                ((t = i).reduce ? t.reduce(n, r) : (f(t, function(t, e, i) {
                                    r = n(r, t, e, i)
                                }),
                                r)) && !h.hasOwnProperty(o);
                                var t, n, r
                            };
                            if (n())
                                t[t.length - 1](e, h);
                            else {
                                var r = function() {
                                    n() && (!function(t) {
                                        for (var e = 0; e < l.length; e += 1)
                                            if (l[e] === t)
                                                return l.splice(e, 1)
                                    }(r),
                                    t[t.length - 1](e, h))
                                };
                                u(r)
                            }
                        })
                    }
                    ,
                    p.retry = function(n, r, o) {
                        var s = [];
                        "function" == typeof n && (o = r,
                        r = n,
                        n = 5),
                        n = parseInt(n, 10) || 5;
                        var t = function(i, e) {
                            for (var t = function(t, n) {
                                return function(i) {
                                    t(function(t, e) {
                                        i(!t || n, {
                                            err: t,
                                            result: e
                                        })
                                    }, e)
                                }
                            }; n; )
                                s.push(t(r, !(n -= 1)));
                            p.series(s, function(t, e) {
                                e = e[e.length - 1],
                                (i || o)(e.err, e.result)
                            })
                        };
                        return o ? t() : t
                    }
                    ,
                    p.waterfall = function(t, r) {
                        if (r = r || function() {}
                        ,
                        !d(t)) {
                            var e = new Error("First argument to waterfall must be an array of functions");
                            return r(e)
                        }
                        if (!t.length)
                            return r();
                        var o = function(n) {
                            return function(t) {
                                if (t)
                                    r.apply(null, arguments),
                                    r = function() {}
                                    ;
                                else {
                                    var e = Array.prototype.slice.call(arguments, 1)
                                      , i = n.next();
                                    i ? e.push(o(i)) : e.push(r),
                                    p.setImmediate(function() {
                                        n.apply(null, e)
                                    })
                                }
                            }
                        };
                        o(p.iterator(t))()
                    }
                    ;
                    var m = function(t, e, i) {
                        if (i = i || function() {}
                        ,
                        d(e))
                            t.map(e, function(t, i) {
                                t && t(function(t) {
                                    var e = Array.prototype.slice.call(arguments, 1);
                                    e.length <= 1 && (e = e[0]),
                                    i.call(null, t, e)
                                })
                            }, i);
                        else {
                            var r = {};
                            t.each(g(e), function(i, n) {
                                e[i](function(t) {
                                    var e = Array.prototype.slice.call(arguments, 1);
                                    e.length <= 1 && (e = e[0]),
                                    r[i] = e,
                                    n(t)
                                })
                            }, function(t) {
                                i(t, r)
                            })
                        }
                    };
                    p.parallel = function(t, e) {
                        m({
                            map: p.map,
                            each: p.each
                        }, t, e)
                    }
                    ,
                    p.parallelLimit = function(t, e, i) {
                        m({
                            map: l(e),
                            each: r(e)
                        }, t, i)
                    }
                    ,
                    p.series = function(t, e) {
                        if (e = e || function() {}
                        ,
                        d(t))
                            p.mapSeries(t, function(t, i) {
                                t && t(function(t) {
                                    var e = Array.prototype.slice.call(arguments, 1);
                                    e.length <= 1 && (e = e[0]),
                                    i.call(null, t, e)
                                })
                            }, e);
                        else {
                            var r = {};
                            p.eachSeries(g(t), function(i, n) {
                                t[i](function(t) {
                                    var e = Array.prototype.slice.call(arguments, 1);
                                    e.length <= 1 && (e = e[0]),
                                    r[i] = e,
                                    n(t)
                                })
                            }, function(t) {
                                e(t, r)
                            })
                        }
                    }
                    ,
                    p.iterator = function(i) {
                        var n = function(t) {
                            var e = function() {
                                return i.length && i[t].apply(null, arguments),
                                e.next()
                            };
                            return e.next = function() {
                                return t < i.length - 1 ? n(t + 1) : null
                            }
                            ,
                            e
                        };
                        return n(0)
                    }
                    ,
                    p.apply = function(t) {
                        var e = Array.prototype.slice.call(arguments, 1);
                        return function() {
                            return t.apply(null, e.concat(Array.prototype.slice.call(arguments)))
                        }
                    }
                    ;
                    var v = function(t, e, n, i) {
                        var r = [];
                        t(e, function(t, i) {
                            n(t, function(t, e) {
                                r = r.concat(e || []),
                                i(t)
                            })
                        }, function(t) {
                            i(t, r)
                        })
                    };
                    p.concat = n(v),
                    p.concatSeries = o(v),
                    p.whilst = function(e, i, n) {
                        e() ? i(function(t) {
                            if (t)
                                return n(t);
                            p.whilst(e, i, n)
                        }) : n()
                    }
                    ,
                    p.doWhilst = function(i, n, r) {
                        i(function(t) {
                            if (t)
                                return r(t);
                            var e = Array.prototype.slice.call(arguments, 1);
                            n.apply(null, e) ? p.doWhilst(i, n, r) : r()
                        })
                    }
                    ,
                    p.until = function(e, i, n) {
                        e() ? n() : i(function(t) {
                            if (t)
                                return n(t);
                            p.until(e, i, n)
                        })
                    }
                    ,
                    p.doUntil = function(i, n, r) {
                        i(function(t) {
                            if (t)
                                return r(t);
                            var e = Array.prototype.slice.call(arguments, 1);
                            n.apply(null, e) ? r() : p.doUntil(i, n, r)
                        })
                    }
                    ,
                    p.queue = function(i, t) {
                        function n(i, t, n, r) {
                            if (i.started || (i.started = !0),
                            d(t) || (t = [t]),
                            0 == t.length)
                                return p.setImmediate(function() {
                                    i.drain && i.drain()
                                });
                            f(t, function(t) {
                                var e = {
                                    data: t,
                                    callback: "function" == typeof r ? r : null
                                };
                                n ? i.tasks.unshift(e) : i.tasks.push(e),
                                i.saturated && i.tasks.length === i.concurrency && i.saturated(),
                                p.setImmediate(i.process)
                            })
                        }
                        void 0 === t && (t = 1);
                        var r = 0
                          , o = {
                            tasks: [],
                            concurrency: t,
                            saturated: null,
                            empty: null,
                            drain: null,
                            started: !1,
                            paused: !1,
                            push: function(t, e) {
                                n(o, t, !1, e)
                            },
                            kill: function() {
                                o.drain = null,
                                o.tasks = []
                            },
                            unshift: function(t, e) {
                                n(o, t, !0, e)
                            },
                            process: function() {
                                if (!o.paused && r < o.concurrency && o.tasks.length) {
                                    var t = o.tasks.shift();
                                    o.empty && 0 === o.tasks.length && o.empty(),
                                    r += 1;
                                    var e = s(function() {
                                        r -= 1,
                                        t.callback && t.callback.apply(t, arguments),
                                        o.drain && o.tasks.length + r === 0 && o.drain(),
                                        o.process()
                                    });
                                    i(t.data, e)
                                }
                            },
                            length: function() {
                                return o.tasks.length
                            },
                            running: function() {
                                return r
                            },
                            idle: function() {
                                return o.tasks.length + r === 0
                            },
                            pause: function() {
                                !0 !== o.paused && (o.paused = !0,
                                o.process())
                            },
                            resume: function() {
                                !1 !== o.paused && (o.paused = !1,
                                o.process())
                            }
                        };
                        return o
                    }
                    ,
                    p.priorityQueue = function(t, e) {
                        function o(t, e) {
                            return t.priority - e.priority
                        }
                        var n = p.queue(t, e);
                        return n.push = function(t, e, i) {
                            !function(i, t, n, r) {
                                if (i.started || (i.started = !0),
                                d(t) || (t = [t]),
                                0 == t.length)
                                    return p.setImmediate(function() {
                                        i.drain && i.drain()
                                    });
                                f(t, function(t) {
                                    var e = {
                                        data: t,
                                        priority: n,
                                        callback: "function" == typeof r ? r : null
                                    };
                                    i.tasks.splice(function(t, e, i) {
                                        for (var n = -1, r = t.length - 1; n < r; ) {
                                            var o = n + (r - n + 1 >>> 1);
                                            0 <= i(e, t[o]) ? n = o : r = o - 1
                                        }
                                        return n
                                    }(i.tasks, e, o) + 1, 0, e),
                                    i.saturated && i.tasks.length === i.concurrency && i.saturated(),
                                    p.setImmediate(i.process)
                                })
                            }(n, t, e, i)
                        }
                        ,
                        delete n.unshift,
                        n
                    }
                    ,
                    p.cargo = function(n, r) {
                        var o = !1
                          , s = []
                          , a = {
                            tasks: s,
                            payload: r,
                            saturated: null,
                            empty: null,
                            drain: null,
                            drained: !0,
                            push: function(t, e) {
                                d(t) || (t = [t]),
                                f(t, function(t) {
                                    s.push({
                                        data: t,
                                        callback: "function" == typeof e ? e : null
                                    }),
                                    a.drained = !1,
                                    a.saturated && s.length === r && a.saturated()
                                }),
                                p.setImmediate(a.process)
                            },
                            process: function t() {
                                if (!o) {
                                    if (0 === s.length)
                                        return a.drain && !a.drained && a.drain(),
                                        void (a.drained = !0);
                                    var i = "number" == typeof r ? s.splice(0, r) : s.splice(0, s.length)
                                      , e = h(i, function(t) {
                                        return t.data
                                    });
                                    a.empty && a.empty(),
                                    o = !0,
                                    n(e, function() {
                                        o = !1;
                                        var e = arguments;
                                        f(i, function(t) {
                                            t.callback && t.callback.apply(null, e)
                                        }),
                                        t()
                                    })
                                }
                            },
                            length: function() {
                                return s.length
                            },
                            running: function() {
                                return o
                            }
                        };
                        return a
                    }
                    ;
                    var S = function(i) {
                        return function(t) {
                            var e = Array.prototype.slice.call(arguments, 1);
                            t.apply(null, e.concat([function(t) {
                                var e = Array.prototype.slice.call(arguments, 1);
                                "undefined" != typeof console && (t ? console.error && console.error(t) : console[i] && f(e, function(t) {
                                    console[i](t)
                                }))
                            }
                            ]))
                        }
                    };
                    p.log = S("log"),
                    p.dir = S("dir"),
                    p.memoize = function(i, r) {
                        var o = {}
                          , s = {};
                        r = r || function(t) {
                            return t
                        }
                        ;
                        var t = function() {
                            var t = Array.prototype.slice.call(arguments)
                              , e = t.pop()
                              , n = r.apply(null, t);
                            n in o ? p.nextTick(function() {
                                e.apply(null, o[n])
                            }) : n in s ? s[n].push(e) : (s[n] = [e],
                            i.apply(null, t.concat([function() {
                                o[n] = arguments;
                                var t = s[n];
                                delete s[n];
                                for (var e = 0, i = t.length; e < i; e++)
                                    t[e].apply(null, arguments)
                            }
                            ])))
                        };
                        return t.memo = o,
                        t.unmemoized = i,
                        t
                    }
                    ,
                    p.unmemoize = function(t) {
                        return function() {
                            return (t.unmemoized || t).apply(null, arguments)
                        }
                    }
                    ,
                    p.times = function(t, e, i) {
                        for (var n = [], r = 0; r < t; r++)
                            n.push(r);
                        return p.map(n, e, i)
                    }
                    ,
                    p.timesSeries = function(t, e, i) {
                        for (var n = [], r = 0; r < t; r++)
                            n.push(r);
                        return p.mapSeries(n, e, i)
                    }
                    ,
                    p.seq = function() {
                        var e = arguments;
                        return function() {
                            var n = this
                              , t = Array.prototype.slice.call(arguments)
                              , i = t.pop();
                            p.reduce(e, t, function(t, e, i) {
                                e.apply(n, t.concat([function() {
                                    var t = arguments[0]
                                      , e = Array.prototype.slice.call(arguments, 1);
                                    i(t, e)
                                }
                                ]))
                            }, function(t, e) {
                                i.apply(n, [t].concat(e))
                            })
                        }
                    }
                    ,
                    p.compose = function() {
                        return p.seq.apply(null, Array.prototype.reverse.call(arguments))
                    }
                    ;
                    var x = function(e, r) {
                        var t = function() {
                            var i = this
                              , n = Array.prototype.slice.call(arguments)
                              , t = n.pop();
                            return e(r, function(t, e) {
                                t.apply(i, n.concat([e]))
                            }, t)
                        };
                        if (2 < arguments.length) {
                            var i = Array.prototype.slice.call(arguments, 2);
                            return t.apply(this, i)
                        }
                        return t
                    };
                    p.applyEach = n(x),
                    p.applyEachSeries = o(x),
                    p.forever = function(i, n) {
                        !function t(e) {
                            if (e) {
                                if (n)
                                    return n(e);
                                throw e
                            }
                            i(t)
                        }()
                    }
                    ,
                    void 0 !== T && T.exports ? T.exports = p : i.async = p
                }()
            }
            ).call(this, t("_process"))
        }
        , {
            _process: 4
        }],
        14: [function(t, e, i) {
            arguments[4][11][0].apply(i, arguments)
        }
        , {
            dup: 11
        }],
        15: [function(t, e, i) {
            var r = t("async")
              , n = t("url")
              , o = t("./Resource")
              , s = t("eventemitter3");
            function a(t, e) {
                s.call(this),
                e = e || 10,
                this.baseUrl = t || "",
                this.progress = 0,
                this.loading = !1,
                this._progressChunk = 0,
                this._beforeMiddleware = [],
                this._afterMiddleware = [],
                this._boundLoadResource = this._loadResource.bind(this),
                this._boundOnLoad = this._onLoad.bind(this),
                this._buffer = [],
                this._numToLoad = 0,
                this._queue = r.queue(this._boundLoadResource, e),
                this.resources = {}
            }
            (a.prototype = Object.create(s.prototype)).constructor = a,
            (e.exports = a).prototype.add = a.prototype.enqueue = function(t, e, i, n) {
                if (Array.isArray(t)) {
                    for (var r = 0; r < t.length; ++r)
                        this.add(t[r]);
                    return this
                }
                if ("object" == typeof t && (n = e || t.callback || t.onComplete,
                e = (i = t).url,
                t = t.name || t.key || t.url),
                "string" != typeof e && (n = i,
                i = e,
                e = t),
                "string" != typeof e)
                    throw new Error("No url passed to add resource to loader.");
                if ("function" == typeof i && (n = i,
                i = null),
                this.resources[t])
                    throw new Error('Resource with name "' + t + '" already exists.');
                return e = this._handleBaseUrl(e),
                this.resources[t] = new o(t,e,i),
                "function" == typeof n && this.resources[t].once("afterMiddleware", n),
                this._numToLoad++,
                this._queue.started ? (this._queue.push(this.resources[t]),
                this._progressChunk = (100 - this.progress) / (this._queue.length() + this._queue.running())) : (this._buffer.push(this.resources[t]),
                this._progressChunk = 100 / this._buffer.length),
                this
            }
            ,
            a.prototype._handleBaseUrl = function(t) {
                var e = n.parse(t);
                return e.protocol || 0 === e.pathname.indexOf("//") ? t : this.baseUrl.length && this.baseUrl.lastIndexOf("/") !== this.baseUrl.length - 1 && t.lastIndexOf("/") !== t.length - 1 ? this.baseUrl + "/" + t : this.baseUrl + t
            }
            ,
            a.prototype.before = a.prototype.pre = function(t) {
                return this._beforeMiddleware.push(t),
                this
            }
            ,
            a.prototype.after = a.prototype.use = function(t) {
                return this._afterMiddleware.push(t),
                this
            }
            ,
            a.prototype.reset = function() {
                this.progress = 0,
                this.loading = !1,
                this._progressChunk = 0,
                this._buffer.length = 0,
                this._numToLoad = 0,
                this._queue.kill(),
                this._queue.started = !1,
                this.resources = {}
            }
            ,
            a.prototype.load = function(t) {
                if ("function" == typeof t && this.once("complete", t),
                this._queue.started)
                    return this;
                this.emit("start", this);
                for (var e = 0; e < this._buffer.length; ++e)
                    this._queue.push(this._buffer[e]);
                return this._buffer.length = 0,
                this
            }
            ,
            a.prototype._loadResource = function(t, e) {
                var i = this;
                t._dequeue = e,
                this._runMiddleware(t, this._beforeMiddleware, function() {
                    t.load(i._boundOnLoad)
                })
            }
            ,
            a.prototype._onComplete = function() {
                this.emit("complete", this, this.resources)
            }
            ,
            a.prototype._onLoad = function(t) {
                this.progress += this._progressChunk,
                this.emit("progress", this, t),
                t.error ? this.emit("error", t.error, this, t) : this.emit("load", this, t),
                this._runMiddleware(t, this._afterMiddleware, function() {
                    t.emit("afterMiddleware", t),
                    this._numToLoad--,
                    0 === this._numToLoad && this._onComplete()
                }),
                t._dequeue()
            }
            ,
            a.prototype._runMiddleware = function(i, t, e) {
                var n = this;
                r.eachSeries(t, function(t, e) {
                    t.call(n, i, e)
                }, e.bind(this, i))
            }
            ,
            a.LOAD_TYPE = o.LOAD_TYPE,
            a.XHR_READY_STATE = o.XHR_READY_STATE,
            a.XHR_RESPONSE_TYPE = o.XHR_RESPONSE_TYPE
        }
        , {
            "./Resource": 16,
            async: 13,
            eventemitter3: 14,
            url: 9
        }],
        16: [function(t, e, i) {
            var n = t("eventemitter3")
              , r = t("url")
              , o = !(!window.XDomainRequest || "withCredentials"in new XMLHttpRequest)
              , s = null;
            function a(t, e, i) {
                if (n.call(this),
                i = i || {},
                "string" != typeof t || "string" != typeof e)
                    throw new Error("Both name and url are required for constructing a resource.");
                this.name = t,
                this.url = e,
                this.isDataUrl = 0 === this.url.indexOf("data:"),
                this.data = null,
                this.crossOrigin = !0 === i.crossOrigin ? "anonymous" : null,
                this.loadType = i.loadType || this._determineLoadType(),
                this.xhrType = i.xhrType,
                this.error = null,
                this.xhr = null,
                this.isJson = !1,
                this.isXml = !1,
                this.isImage = !1,
                this.isAudio = !1,
                this.isVideo = !1,
                this._dequeue = null,
                this._boundComplete = this.complete.bind(this),
                this._boundOnError = this._onError.bind(this),
                this._boundOnProgress = this._onProgress.bind(this),
                this._boundXhrOnError = this._xhrOnError.bind(this),
                this._boundXhrOnAbort = this._xhrOnAbort.bind(this),
                this._boundXhrOnLoad = this._xhrOnLoad.bind(this),
                this._boundXdrOnTimeout = this._xdrOnTimeout.bind(this)
            }
            function h(t) {
                return t.toString().replace("object ", "")
            }
            function l(t, e, i) {
                e && 0 === e.indexOf(".") && (e = e.substring(1)),
                e && (t[e] = i)
            }
            (a.prototype = Object.create(n.prototype)).constructor = a,
            (e.exports = a).prototype.complete = function() {
                this.data && this.data.removeEventListener && (this.data.removeEventListener("error", this._boundOnError),
                this.data.removeEventListener("load", this._boundComplete),
                this.data.removeEventListener("progress", this._boundOnProgress),
                this.data.removeEventListener("canplaythrough", this._boundComplete)),
                this.xhr && (this.xhr.removeEventListener ? (this.xhr.removeEventListener("error", this._boundXhrOnError),
                this.xhr.removeEventListener("abort", this._boundXhrOnAbort),
                this.xhr.removeEventListener("progress", this._boundOnProgress),
                this.xhr.removeEventListener("load", this._boundXhrOnLoad)) : (this.xhr.onerror = null,
                this.xhr.ontimeout = null,
                this.xhr.onprogress = null,
                this.xhr.onload = null)),
                this.emit("complete", this)
            }
            ,
            a.prototype.load = function(t) {
                switch (this.emit("start", this),
                t && this.once("complete", t),
                "string" != typeof this.crossOrigin && (this.crossOrigin = this._determineCrossOrigin(this.url)),
                this.loadType) {
                case a.LOAD_TYPE.IMAGE:
                    this._loadImage();
                    break;
                case a.LOAD_TYPE.AUDIO:
                    this._loadElement("audio");
                    break;
                case a.LOAD_TYPE.VIDEO:
                    this._loadElement("video");
                    break;
                case a.LOAD_TYPE.XHR:
                default:
                    o && this.crossOrigin ? this._loadXdr() : this._loadXhr()
                }
            }
            ,
            a.prototype._loadImage = function() {
                this.data = new Image,
                this.crossOrigin && (this.data.crossOrigin = this.crossOrigin),
                this.data.src = this.url,
                this.isImage = !0,
                this.data.addEventListener("error", this._boundOnError, !1),
                this.data.addEventListener("load", this._boundComplete, !1),
                this.data.addEventListener("progress", this._boundOnProgress, !1)
            }
            ,
            a.prototype._loadElement = function(t) {
                if (this.data = document.createElement(t),
                Array.isArray(this.url))
                    for (var e = 0; e < this.url.length; ++e)
                        this.data.appendChild(this._createSource(t, this.url[e]));
                else
                    this.data.appendChild(this._createSource(t, this.url));
                this["is" + t[0].toUpperCase() + t.substring(1)] = !0,
                this.data.addEventListener("error", this._boundOnError, !1),
                this.data.addEventListener("load", this._boundComplete, !1),
                this.data.addEventListener("progress", this._boundOnProgress, !1),
                this.data.addEventListener("canplaythrough", this._boundComplete, !1),
                this.data.load()
            }
            ,
            a.prototype._loadXhr = function() {
                "string" != typeof this.xhrType && (this.xhrType = this._determineXhrType());
                var t = this.xhr = new XMLHttpRequest;
                t.open("GET", this.url, !0),
                this.xhrType === a.XHR_RESPONSE_TYPE.JSON || this.xhrType === a.XHR_RESPONSE_TYPE.DOCUMENT ? t.responseType = a.XHR_RESPONSE_TYPE.TEXT : t.responseType = this.xhrType,
                t.addEventListener("error", this._boundXhrOnError, !1),
                t.addEventListener("abort", this._boundXhrOnAbort, !1),
                t.addEventListener("progress", this._boundOnProgress, !1),
                t.addEventListener("load", this._boundXhrOnLoad, !1),
                t.send()
            }
            ,
            a.prototype._loadXdr = function() {
                "string" != typeof this.xhrType && (this.xhrType = this._determineXhrType());
                var t = this.xhr = new XDomainRequest;
                t.timeout = 5e3,
                t.onerror = this._boundXhrOnError,
                t.ontimeout = this._boundXdrOnTimeout,
                t.onprogress = this._boundOnProgress,
                t.onload = this._boundXhrOnLoad,
                t.open("GET", this.url, !0),
                setTimeout(function() {
                    t.send()
                }, 0)
            }
            ,
            a.prototype._createSource = function(t, e, i) {
                i || (i = t + "/" + e.substr(e.lastIndexOf(".") + 1));
                var n = document.createElement("source");
                return n.src = e,
                n.type = i,
                n
            }
            ,
            a.prototype._onError = function(t) {
                this.error = new Error("Failed to load element using " + t.target.nodeName + ", crossOrigin:" + this.crossOrigin + ", name:" + this.url),
                this.complete()
            }
            ,
            a.prototype._onProgress = function(t) {
                t && t.lengthComputable && this.emit("progress", this, t.loaded / t.total)
            }
            ,
            a.prototype._xhrOnError = function() {
                this.error = new Error(h(this.xhr) + " Request failed. Status: " + this.xhr.status + ', text: "' + this.xhr.statusText + '"'),
                this.complete()
            }
            ,
            a.prototype._xhrOnAbort = function() {
                this.error = new Error(h(this.xhr) + " Request was aborted by the user."),
                this.complete()
            }
            ,
            a.prototype._xdrOnTimeout = function() {
                this.error = new Error(h(this.xhr) + " Request timed out."),
                this.complete()
            }
            ,
            a.prototype._xhrOnLoad = function() {
                var t = this.xhr
                  , e = void 0 !== t.status ? t.status : 200;
                if (200 === e || 204 === e || 0 === e && 0 < t.responseText.length)
                    if (this.xhrType === a.XHR_RESPONSE_TYPE.TEXT)
                        this.data = t.responseText;
                    else if (this.xhrType === a.XHR_RESPONSE_TYPE.JSON)
                        try {
                            this.data = JSON.parse(t.responseText),
                            this.isJson = !0
                        } catch (t) {
                            this.error = new Error("Error trying to parse loaded json:",t)
                        }
                    else if (this.xhrType === a.XHR_RESPONSE_TYPE.DOCUMENT)
                        try {
                            if (window.DOMParser) {
                                var i = new DOMParser;
                                this.data = i.parseFromString(t.responseText, "text/xml")
                            } else {
                                var n = document.createElement("div");
                                n.innerHTML = t.responseText,
                                this.data = n
                            }
                            this.isXml = !0
                        } catch (t) {
                            this.error = new Error("Error trying to parse loaded xml:",t)
                        }
                    else
                        this.data = t.response || t.responseText;
                else
                    this.error = new Error("[" + t.status + "]" + t.statusText + ":" + t.responseURL);
                this.complete()
            }
            ,
            a.prototype._determineCrossOrigin = function(t, e) {
                if (0 === t.indexOf("data:"))
                    return "";
                e = e || window.location,
                s || (s = document.createElement("a")),
                s.href = t;
                var i = !(t = r.parse(s.href)).port && "" === e.port || t.port === e.port;
                return t.hostname === e.hostname && i && t.protocol === e.protocol ? "" : "anonymous"
            }
            ,
            a.prototype._determineXhrType = function() {
                return a._xhrTypeMap[this._getExtension()] || a.XHR_RESPONSE_TYPE.TEXT
            }
            ,
            a.prototype._determineLoadType = function() {
                return a._loadTypeMap[this._getExtension()] || a.LOAD_TYPE.XHR
            }
            ,
            a.prototype._getExtension = function() {
                var t, e = this.url;
                if (this.isDataUrl) {
                    var i = e.indexOf("/");
                    t = e.substring(i + 1, e.indexOf(";", i))
                } else {
                    var n = e.indexOf("?");
                    -1 !== n && (e = e.substring(0, n)),
                    t = e.substring(e.lastIndexOf(".") + 1)
                }
                return t
            }
            ,
            a.prototype._getMimeFromXhrType = function(t) {
                switch (t) {
                case a.XHR_RESPONSE_TYPE.BUFFER:
                    return "application/octet-binary";
                case a.XHR_RESPONSE_TYPE.BLOB:
                    return "application/blob";
                case a.XHR_RESPONSE_TYPE.DOCUMENT:
                    return "application/xml";
                case a.XHR_RESPONSE_TYPE.JSON:
                    return "application/json";
                case a.XHR_RESPONSE_TYPE.DEFAULT:
                case a.XHR_RESPONSE_TYPE.TEXT:
                default:
                    return "text/plain"
                }
            }
            ,
            a.LOAD_TYPE = {
                XHR: 1,
                IMAGE: 2,
                AUDIO: 3,
                VIDEO: 4
            },
            a.XHR_READY_STATE = {
                UNSENT: 0,
                OPENED: 1,
                HEADERS_RECEIVED: 2,
                LOADING: 3,
                DONE: 4
            },
            a.XHR_RESPONSE_TYPE = {
                DEFAULT: "text",
                BUFFER: "arraybuffer",
                BLOB: "blob",
                DOCUMENT: "document",
                JSON: "json",
                TEXT: "text"
            },
            a._loadTypeMap = {
                gif: a.LOAD_TYPE.IMAGE,
                png: a.LOAD_TYPE.IMAGE,
                bmp: a.LOAD_TYPE.IMAGE,
                jpg: a.LOAD_TYPE.IMAGE,
                jpeg: a.LOAD_TYPE.IMAGE,
                tif: a.LOAD_TYPE.IMAGE,
                tiff: a.LOAD_TYPE.IMAGE,
                webp: a.LOAD_TYPE.IMAGE,
                tga: a.LOAD_TYPE.IMAGE
            },
            a._xhrTypeMap = {
                xhtml: a.XHR_RESPONSE_TYPE.DOCUMENT,
                html: a.XHR_RESPONSE_TYPE.DOCUMENT,
                htm: a.XHR_RESPONSE_TYPE.DOCUMENT,
                xml: a.XHR_RESPONSE_TYPE.DOCUMENT,
                tmx: a.XHR_RESPONSE_TYPE.DOCUMENT,
                tsx: a.XHR_RESPONSE_TYPE.DOCUMENT,
                svg: a.XHR_RESPONSE_TYPE.DOCUMENT,
                gif: a.XHR_RESPONSE_TYPE.BLOB,
                png: a.XHR_RESPONSE_TYPE.BLOB,
                bmp: a.XHR_RESPONSE_TYPE.BLOB,
                jpg: a.XHR_RESPONSE_TYPE.BLOB,
                jpeg: a.XHR_RESPONSE_TYPE.BLOB,
                tif: a.XHR_RESPONSE_TYPE.BLOB,
                tiff: a.XHR_RESPONSE_TYPE.BLOB,
                webp: a.XHR_RESPONSE_TYPE.BLOB,
                tga: a.XHR_RESPONSE_TYPE.BLOB,
                json: a.XHR_RESPONSE_TYPE.JSON,
                text: a.XHR_RESPONSE_TYPE.TEXT,
                txt: a.XHR_RESPONSE_TYPE.TEXT
            },
            a.setExtensionLoadType = function(t, e) {
                l(a._loadTypeMap, t, e)
            }
            ,
            a.setExtensionXhrType = function(t, e) {
                l(a._xhrTypeMap, t, e)
            }
        }
        , {
            eventemitter3: 14,
            url: 9
        }],
        17: [function(t, e, i) {
            e.exports = {
                _keyStr: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",
                encodeBinary: function(t) {
                    for (var e, i = "", n = new Array(4), r = 0, o = 0; r < t.length; ) {
                        for (e = new Array(3),
                        o = 0; o < e.length; o++)
                            r < t.length ? e[o] = 255 & t.charCodeAt(r++) : e[o] = 0;
                        switch (n[0] = e[0] >> 2,
                        n[1] = (3 & e[0]) << 4 | e[1] >> 4,
                        n[2] = (15 & e[1]) << 2 | e[2] >> 6,
                        n[3] = 63 & e[2],
                        r - (t.length - 1)) {
                        case 2:
                            n[3] = 64,
                            n[2] = 64;
                            break;
                        case 1:
                            n[3] = 64
                        }
                        for (o = 0; o < n.length; o++)
                            i += this._keyStr.charAt(n[o])
                    }
                    return i
                }
            }
        }
        , {}],
        18: [function(t, e, i) {
            e.exports = t("./Loader"),
            e.exports.Resource = t("./Resource"),
            e.exports.middleware = {
                caching: {
                    memory: t("./middlewares/caching/memory")
                },
                parsing: {
                    blob: t("./middlewares/parsing/blob")
                }
            }
        }
        , {
            "./Loader": 15,
            "./Resource": 16,
            "./middlewares/caching/memory": 19,
            "./middlewares/parsing/blob": 20
        }],
        19: [function(t, e, i) {
            var n = {};
            e.exports = function() {
                return function(t, e) {
                    n[t.url] ? (t.data = n[t.url],
                    t.complete()) : (t.once("complete", function() {
                        n[this.url] = this.data
                    }),
                    e())
                }
            }
        }
        , {}],
        20: [function(t, e, i) {
            var r = t("../../Resource")
              , o = t("../../b64");
            window.URL = window.URL || window.webkitURL,
            e.exports = function() {
                return function(t, e) {
                    if (!t.data)
                        return e();
                    if (t.xhr && t.xhrType === r.XHR_RESPONSE_TYPE.BLOB)
                        if (window.Blob && "string" != typeof t.data) {
                            if (0 === t.data.type.indexOf("image")) {
                                var i = URL.createObjectURL(t.data);
                                t.blob = t.data,
                                t.data = new Image,
                                t.data.src = i,
                                t.isImage = !0,
                                t.data.onload = function() {
                                    URL.revokeObjectURL(i),
                                    t.data.onload = null,
                                    e()
                                }
                            }
                        } else {
                            var n = t.xhr.getResponseHeader("content-type");
                            n && 0 === n.indexOf("image") && (t.data = new Image,
                            t.data.src = "data:" + n + ";base64," + o.encodeBinary(t.xhr.responseText),
                            t.isImage = !0,
                            t.data.onload = function() {
                                t.data.onload = null,
                                e()
                            }
                            )
                        }
                    else
                        e()
                }
            }
        }
        , {
            "../../Resource": 16,
            "../../b64": 17
        }],
        21: [function(t, e, i) {
            e.exports = {
                name: "pixi.js",
                version: "3.0.7",
                description: "Pixi.js is a fast lightweight 2D library that works across all devices.",
                author: "Mat Groves",
                contributors: ["Chad Engler <chad@pantherdev.com>", "Richard Davey <rdavey@gmail.com>"],
                main: "./src/index.js",
                homepage: "http://goodboydigital.com/",
                bugs: "https://github.com/GoodBoyDigital/pixi.js/issues",
                license: "MIT",
                repository: {
                    type: "git",
                    url: "https://github.com/GoodBoyDigital/pixi.js.git"
                },
                scripts: {
                    start: "gulp && gulp watch",
                    test: "gulp && testem ci",
                    build: "gulp",
                    docs: "jsdoc -c ./gulp/util/jsdoc.conf.json -R README.md"
                },
                files: ["bin/", "src/"],
                dependencies: {
                    async: "^0.9.0",
                    brfs: "^1.4.0",
                    earcut: "^2.0.1",
                    eventemitter3: "^1.1.0",
                    "object-assign": "^2.0.0",
                    "resource-loader": "^1.6.1"
                },
                devDependencies: {
                    browserify: "^10.2.3",
                    chai: "^3.0.0",
                    del: "^1.2.0",
                    gulp: "^3.9.0",
                    "gulp-cached": "^1.1.0",
                    "gulp-concat": "^2.5.2",
                    "gulp-debug": "^2.0.1",
                    "gulp-jshint": "^1.11.0",
                    "gulp-mirror": "^0.4.0",
                    "gulp-plumber": "^1.0.1",
                    "gulp-rename": "^1.2.2",
                    "gulp-sourcemaps": "^1.5.2",
                    "gulp-uglify": "^1.2.0",
                    "gulp-util": "^3.0.5",
                    "jaguarjs-jsdoc": "git+https://github.com/davidshimjs/jaguarjs-jsdoc.git",
                    jsdoc: "^3.3.0",
                    "jshint-summary": "^0.4.0",
                    minimist: "^1.1.1",
                    mocha: "^2.2.5",
                    "require-dir": "^0.3.0",
                    "run-sequence": "^1.1.0",
                    testem: "^0.8.3",
                    "vinyl-buffer": "^1.0.0",
                    "vinyl-source-stream": "^1.1.0",
                    watchify: "^3.2.1"
                },
                browserify: {
                    transform: ["brfs"]
                }
            }
        }
        , {}],
        22: [function(t, e, i) {
            var n = {
                VERSION: t("../../package.json").version,
                PI_2: 2 * Math.PI,
                RAD_TO_DEG: 180 / Math.PI,
                DEG_TO_RAD: Math.PI / 180,
                TARGET_FPMS: .06,
                RENDERER_TYPE: {
                    UNKNOWN: 0,
                    WEBGL: 1,
                    CANVAS: 2
                },
                BLEND_MODES: {
                    NORMAL: 0,
                    ADD: 1,
                    MULTIPLY: 2,
                    SCREEN: 3,
                    OVERLAY: 4,
                    DARKEN: 5,
                    LIGHTEN: 6,
                    COLOR_DODGE: 7,
                    COLOR_BURN: 8,
                    HARD_LIGHT: 9,
                    SOFT_LIGHT: 10,
                    DIFFERENCE: 11,
                    EXCLUSION: 12,
                    HUE: 13,
                    SATURATION: 14,
                    COLOR: 15,
                    LUMINOSITY: 16
                },
                DRAW_MODES: {
                    POINTS: 0,
                    LINES: 1,
                    LINE_LOOP: 2,
                    LINE_STRIP: 3,
                    TRIANGLES: 4,
                    TRIANGLE_STRIP: 5,
                    TRIANGLE_FAN: 6
                },
                SCALE_MODES: {
                    DEFAULT: 0,
                    LINEAR: 0,
                    NEAREST: 1
                },
                RETINA_PREFIX: /@(.+)x/,
                RESOLUTION: 1,
                FILTER_RESOLUTION: 1,
                DEFAULT_RENDER_OPTIONS: {
                    view: null,
                    resolution: 1,
                    antialias: !1,
                    forceFXAA: !1,
                    autoResize: !1,
                    transparent: !1,
                    backgroundColor: 0,
                    clearBeforeRender: !0,
                    preserveDrawingBuffer: !1
                },
                SHAPES: {
                    POLY: 0,
                    RECT: 1,
                    CIRC: 2,
                    ELIP: 3,
                    RREC: 4
                },
                SPRITE_BATCH_SIZE: 2e3
            };
            e.exports = n
        }
        , {
            "../../package.json": 21
        }],
        23: [function(t, e, i) {
            var c = t("../math")
              , n = t("./DisplayObject")
              , o = t("../textures/RenderTexture")
              , s = new c.Matrix;
            function r() {
                n.call(this),
                this.children = []
            }
            (r.prototype = Object.create(n.prototype)).constructor = r,
            e.exports = r,
            Object.defineProperties(r.prototype, {
                width: {
                    get: function() {
                        return this.scale.x * this.getLocalBounds().width
                    },
                    set: function(t) {
                        var e = this.getLocalBounds().width;
                        this.scale.x = 0 !== e ? t / e : 1,
                        this._width = t
                    }
                },
                height: {
                    get: function() {
                        return this.scale.y * this.getLocalBounds().height
                    },
                    set: function(t) {
                        var e = this.getLocalBounds().height;
                        this.scale.y = 0 !== e ? t / e : 1,
                        this._height = t
                    }
                }
            }),
            r.prototype.addChild = function(t) {
                return this.addChildAt(t, this.children.length)
            }
            ,
            r.prototype.addChildAt = function(t, e) {
                if (t === this)
                    return t;
                if (0 <= e && e <= this.children.length)
                    return t.parent && t.parent.removeChild(t),
                    (t.parent = this).children.splice(e, 0, t),
                    t.emit("added", this),
                    t;
                throw new Error(t + "addChildAt: The index " + e + " supplied is out of bounds " + this.children.length)
            }
            ,
            r.prototype.swapChildren = function(t, e) {
                if (t !== e) {
                    var i = this.getChildIndex(t)
                      , n = this.getChildIndex(e);
                    if (i < 0 || n < 0)
                        throw new Error("swapChildren: Both the supplied DisplayObjects must be children of the caller.");
                    this.children[i] = e,
                    this.children[n] = t
                }
            }
            ,
            r.prototype.getChildIndex = function(t) {
                var e = this.children.indexOf(t);
                if (-1 === e)
                    throw new Error("The supplied DisplayObject must be a child of the caller");
                return e
            }
            ,
            r.prototype.setChildIndex = function(t, e) {
                if (e < 0 || e >= this.children.length)
                    throw new Error("The supplied index is out of bounds");
                var i = this.getChildIndex(t);
                this.children.splice(i, 1),
                this.children.splice(e, 0, t)
            }
            ,
            r.prototype.getChildAt = function(t) {
                if (t < 0 || t >= this.children.length)
                    throw new Error("getChildAt: Supplied index " + t + " does not exist in the child list, or the supplied DisplayObject is not a child of the caller");
                return this.children[t]
            }
            ,
            r.prototype.removeChild = function(t) {
                var e = this.children.indexOf(t);
                if (-1 !== e)
                    return this.removeChildAt(e)
            }
            ,
            r.prototype.removeChildAt = function(t) {
                var e = this.getChildAt(t);
                return e.parent = null,
                this.children.splice(t, 1),
                e.emit("removed", this),
                e
            }
            ,
            r.prototype.removeChildren = function(t, e) {
                var i = t || 0
                  , n = "number" == typeof e ? e : this.children.length
                  , r = n - i;
                if (0 < r && r <= n) {
                    for (var o = this.children.splice(i, r), s = 0; s < o.length; ++s)
                        o[s].parent = null;
                    return o
                }
                if (0 === r && 0 === this.children.length)
                    return [];
                throw new RangeError("removeChildren: numeric values are outside the acceptable range.")
            }
            ,
            r.prototype.generateTexture = function(t, e, i) {
                var n = this.getLocalBounds()
                  , r = new o(t,0 | n.width,0 | n.height,i,e);
                return s.tx = -n.x,
                s.ty = -n.y,
                r.render(this, s),
                r
            }
            ,
            r.prototype.containerUpdateTransform = r.prototype.updateTransform = function() {
                if (this.visible) {
                    this.displayObjectUpdateTransform();
                    for (var t = 0, e = this.children.length; t < e; ++t)
                        this.children[t].updateTransform()
                }
            }
            ,
            r.prototype.containerGetBounds = r.prototype.getBounds = function() {
                if (!this._currentBounds) {
                    if (0 === this.children.length)
                        return c.Rectangle.EMPTY;
                    for (var t, e, i, n = 1 / 0, r = 1 / 0, o = -1 / 0, s = -1 / 0, a = !1, h = 0, l = this.children.length; h < l; ++h) {
                        this.children[h].visible && (a = !0,
                        n = n < (t = this.children[h].getBounds()).x ? n : t.x,
                        r = r < t.y ? r : t.y,
                        o = (e = t.width + t.x) < o ? o : e,
                        s = (i = t.height + t.y) < s ? s : i)
                    }
                    if (!a)
                        return c.Rectangle.EMPTY;
                    var u = this._bounds;
                    u.x = n,
                    u.y = r,
                    u.width = o - n,
                    u.height = s - r,
                    this._currentBounds = u
                }
                return this._currentBounds
            }
            ,
            r.prototype.getLocalBounds = function() {
                var t = this.worldTransform;
                this.worldTransform = c.Matrix.IDENTITY;
                for (var e = 0, i = this.children.length; e < i; ++e)
                    this.children[e].updateTransform();
                return this.worldTransform = t,
                this._currentBounds = null,
                this.getBounds(c.Matrix.IDENTITY)
            }
            ,
            r.prototype.renderWebGL = function(t) {
                var e, i;
                if (this.visible && !(this.worldAlpha <= 0) && this.renderable)
                    if (this._mask || this._filters) {
                        for (t.currentRenderer.flush(),
                        this._filters && t.filterManager.pushFilter(this, this._filters),
                        this._mask && t.maskManager.pushMask(this, this._mask),
                        t.currentRenderer.start(),
                        this._renderWebGL(t),
                        e = 0,
                        i = this.children.length; e < i; e++)
                            this.children[e].renderWebGL(t);
                        t.currentRenderer.flush(),
                        this._mask && t.maskManager.popMask(this, this._mask),
                        this._filters && t.filterManager.popFilter(),
                        t.currentRenderer.start()
                    } else
                        for (this._renderWebGL(t),
                        e = 0,
                        i = this.children.length; e < i; ++e)
                            this.children[e].renderWebGL(t)
            }
            ,
            r.prototype._renderWebGL = function(t) {}
            ,
            r.prototype._renderCanvas = function(t) {}
            ,
            r.prototype.renderCanvas = function(t) {
                if (this.visible && !(this.alpha <= 0) && this.renderable) {
                    this._mask && t.maskManager.pushMask(this._mask, t),
                    this._renderCanvas(t);
                    for (var e = 0, i = this.children.length; e < i; ++e)
                        this.children[e].renderCanvas(t);
                    this._mask && t.maskManager.popMask(t)
                }
            }
            ,
            r.prototype.destroy = function(t) {
                if (n.prototype.destroy.call(this),
                t)
                    for (var e = 0, i = this.children.length; e < i; ++e)
                        this.children[e].destroy(t);
                this.removeChildren(),
                this.children = null
            }
        }
        , {
            "../math": 32,
            "../textures/RenderTexture": 70,
            "./DisplayObject": 24
        }],
        24: [function(t, e, i) {
            var n = t("../math")
              , o = t("../textures/RenderTexture")
              , r = t("eventemitter3")
              , h = t("../const")
              , s = new n.Matrix;
            function a() {
                r.call(this),
                this.position = new n.Point,
                this.scale = new n.Point(1,1),
                this.pivot = new n.Point(0,0),
                this.rotation = 0,
                this.alpha = 1,
                this.visible = !0,
                this.renderable = !0,
                this.parent = null,
                this.worldAlpha = 1,
                this.worldTransform = new n.Matrix,
                this.filterArea = null,
                this._sr = 0,
                this._cr = 1,
                this._bounds = new n.Rectangle(0,0,1,1),
                this._currentBounds = null,
                this._mask = null,
                this._cacheAsBitmap = !1,
                this._cachedObject = null
            }
            (a.prototype = Object.create(r.prototype)).constructor = a,
            e.exports = a,
            Object.defineProperties(a.prototype, {
                x: {
                    get: function() {
                        return this.position.x
                    },
                    set: function(t) {
                        this.position.x = t
                    }
                },
                y: {
                    get: function() {
                        return this.position.y
                    },
                    set: function(t) {
                        this.position.y = t
                    }
                },
                worldVisible: {
                    get: function() {
                        var t = this;
                        do {
                            if (!t.visible)
                                return !1;
                            t = t.parent
                        } while (t);return !0
                    }
                },
                mask: {
                    get: function() {
                        return this._mask
                    },
                    set: function(t) {
                        this._mask && (this._mask.renderable = !0),
                        this._mask = t,
                        this._mask && (this._mask.renderable = !1)
                    }
                },
                filters: {
                    get: function() {
                        return this._filters && this._filters.slice()
                    },
                    set: function(t) {
                        this._filters = t && t.slice()
                    }
                }
            }),
            a.prototype.displayObjectUpdateTransform = a.prototype.updateTransform = function() {
                var t, e, i, n, r, o, s = this.parent.worldTransform, a = this.worldTransform;
                this.rotation % h.PI_2 ? (this.rotation !== this.rotationCache && (this.rotationCache = this.rotation,
                this._sr = Math.sin(this.rotation),
                this._cr = Math.cos(this.rotation)),
                t = this._cr * this.scale.x,
                e = this._sr * this.scale.x,
                i = -this._sr * this.scale.y,
                n = this._cr * this.scale.y,
                r = this.position.x,
                o = this.position.y,
                (this.pivot.x || this.pivot.y) && (r -= this.pivot.x * t + this.pivot.y * i,
                o -= this.pivot.x * e + this.pivot.y * n),
                a.a = t * s.a + e * s.c,
                a.b = t * s.b + e * s.d,
                a.c = i * s.a + n * s.c,
                a.d = i * s.b + n * s.d) : (t = this.scale.x,
                n = this.scale.y,
                r = this.position.x - this.pivot.x * t,
                o = this.position.y - this.pivot.y * n,
                a.a = t * s.a,
                a.b = t * s.b,
                a.c = n * s.c,
                a.d = n * s.d),
                a.tx = r * s.a + o * s.c + s.tx,
                a.ty = r * s.b + o * s.d + s.ty,
                this.worldAlpha = this.alpha * this.parent.worldAlpha,
                this._currentBounds = null
            }
            ,
            a.prototype.getBounds = function(t) {
                return n.Rectangle.EMPTY
            }
            ,
            a.prototype.getLocalBounds = function() {
                return this.getBounds(n.Matrix.IDENTITY)
            }
            ,
            a.prototype.toGlobal = function(t) {
                return this.displayObjectUpdateTransform(),
                this.worldTransform.apply(t)
            }
            ,
            a.prototype.toLocal = function(t, e) {
                return e && (t = e.toGlobal(t)),
                this.displayObjectUpdateTransform(),
                this.worldTransform.applyInverse(t)
            }
            ,
            a.prototype.renderWebGL = function(t) {}
            ,
            a.prototype.renderCanvas = function(t) {}
            ,
            a.prototype.generateTexture = function(t, e, i) {
                var n = this.getLocalBounds()
                  , r = new o(t,0 | n.width,0 | n.height,e,i);
                return s.tx = -n.x,
                s.ty = -n.y,
                r.render(this, s),
                r
            }
            ,
            a.prototype.destroy = function() {
                this.position = null,
                this.scale = null,
                this.pivot = null,
                this.parent = null,
                this._bounds = null,
                this._currentBounds = null,
                this._mask = null,
                this.worldTransform = null,
                this.filterArea = null
            }
        }
        , {
            "../const": 22,
            "../math": 32,
            "../textures/RenderTexture": 70,
            eventemitter3: 11
        }],
        25: [function(t, e, i) {
            var n = t("../display/Container")
              , s = t("../textures/Texture")
              , a = t("../renderers/canvas/utils/CanvasBuffer")
              , h = t("../renderers/canvas/utils/CanvasGraphics")
              , r = t("./GraphicsData")
              , C = t("../math")
              , y = t("../const")
              , o = new C.Point;
            function l() {
                n.call(this),
                this.fillAlpha = 1,
                this.lineWidth = 0,
                this.lineColor = 0,
                this.graphicsData = [],
                this.tint = 16777215,
                this._prevTint = 16777215,
                this.blendMode = y.BLEND_MODES.NORMAL,
                this.currentPath = null,
                this._webGL = {},
                this.isMask = !1,
                this.boundsPadding = 0,
                this._localBounds = new C.Rectangle(0,0,1,1),
                this.dirty = !0,
                this.glDirty = !1,
                this.boundsDirty = !0,
                this.cachedSpriteDirty = !1
            }
            (l.prototype = Object.create(n.prototype)).constructor = l,
            e.exports = l,
            Object.defineProperties(l.prototype, {}),
            l.prototype.clone = function() {
                var t = new l;
                t.renderable = this.renderable,
                t.fillAlpha = this.fillAlpha,
                t.lineWidth = this.lineWidth,
                t.lineColor = this.lineColor,
                t.tint = this.tint,
                t.blendMode = this.blendMode,
                t.isMask = this.isMask,
                t.boundsPadding = this.boundsPadding,
                t.dirty = this.dirty,
                t.glDirty = this.glDirty,
                t.cachedSpriteDirty = this.cachedSpriteDirty;
                for (var e = 0; e < this.graphicsData.length; ++e)
                    t.graphicsData.push(this.graphicsData[e].clone());
                return t.currentPath = t.graphicsData[t.graphicsData.length - 1],
                t.updateLocalBounds(),
                t
            }
            ,
            l.prototype.lineStyle = function(t, e, i) {
                return this.lineWidth = t || 0,
                this.lineColor = e || 0,
                this.lineAlpha = void 0 === i ? 1 : i,
                this.currentPath && (this.currentPath.shape.points.length ? this.drawShape(new C.Polygon(this.currentPath.shape.points.slice(-2))) : (this.currentPath.lineWidth = this.lineWidth,
                this.currentPath.lineColor = this.lineColor,
                this.currentPath.lineAlpha = this.lineAlpha)),
                this
            }
            ,
            l.prototype.moveTo = function(t, e) {
                return this.drawShape(new C.Polygon([t, e])),
                this
            }
            ,
            l.prototype.lineTo = function(t, e) {
                return this.currentPath.shape.points.push(t, e),
                this.dirty = !0,
                this
            }
            ,
            l.prototype.quadraticCurveTo = function(t, e, i, n) {
                this.currentPath ? 0 === this.currentPath.shape.points.length && (this.currentPath.shape.points = [0, 0]) : this.moveTo(0, 0);
                var r, o, s = this.currentPath.shape.points;
                0 === s.length && this.moveTo(0, 0);
                for (var a = s[s.length - 2], h = s[s.length - 1], l = 0, u = 1; u <= 20; ++u)
                    r = a + (t - a) * (l = u / 20),
                    o = h + (e - h) * l,
                    s.push(r + (t + (i - t) * l - r) * l, o + (e + (n - e) * l - o) * l);
                return this.dirty = this.boundsDirty = !0,
                this
            }
            ,
            l.prototype.bezierCurveTo = function(t, e, i, n, r, o) {
                this.currentPath ? 0 === this.currentPath.shape.points.length && (this.currentPath.shape.points = [0, 0]) : this.moveTo(0, 0);
                for (var s, a, h, l, u, c = this.currentPath.shape.points, p = c[c.length - 2], d = c[c.length - 1], f = 0, g = 1; g <= 20; ++g)
                    h = (a = (s = 1 - (f = g / 20)) * s) * s,
                    u = (l = f * f) * f,
                    c.push(h * p + 3 * a * f * t + 3 * s * l * i + u * r, h * d + 3 * a * f * e + 3 * s * l * n + u * o);
                return this.dirty = this.boundsDirty = !0,
                this
            }
            ,
            l.prototype.arcTo = function(t, e, i, n, r) {
                this.currentPath ? 0 === this.currentPath.shape.points.length && this.currentPath.shape.points.push(t, e) : this.moveTo(t, e);
                var o = this.currentPath.shape.points
                  , s = o[o.length - 2]
                  , a = o[o.length - 1] - e
                  , h = s - t
                  , l = n - e
                  , u = i - t
                  , c = Math.abs(a * u - h * l);
                if (c < 1e-8 || 0 === r)
                    o[o.length - 2] === t && o[o.length - 1] === e || o.push(t, e);
                else {
                    var p = a * a + h * h
                      , d = l * l + u * u
                      , f = a * l + h * u
                      , g = r * Math.sqrt(p) / c
                      , y = r * Math.sqrt(d) / c
                      , m = g * f / p
                      , v = y * f / d
                      , S = g * u + y * h
                      , x = g * l + y * a
                      , b = h * (y + m)
                      , T = a * (y + m)
                      , _ = u * (g + v)
                      , w = l * (g + v)
                      , C = Math.atan2(T - x, b - S)
                      , E = Math.atan2(w - x, _ - S);
                    this.arc(S + t, x + e, r, C, E, u * a < h * l)
                }
                return this.dirty = this.boundsDirty = !0,
                this
            }
            ,
            l.prototype.arc = function(t, e, i, n, r, o) {
                if (n === r)
                    return this;
                !(o = o || !1) && r <= n ? r += 2 * Math.PI : o && n <= r && (n += 2 * Math.PI);
                var s = o ? -1 * (n - r) : r - n
                  , a = 40 * Math.ceil(Math.abs(s) / (2 * Math.PI));
                if (0 === s)
                    return this;
                var h = t + Math.cos(n) * i
                  , l = e + Math.sin(n) * i;
                this.currentPath ? o && this.filling ? this.currentPath.shape.points.push(t, e) : this.currentPath.shape.points.push(h, l) : o && this.filling ? this.moveTo(t, e) : this.moveTo(h, l);
                for (var u = this.currentPath.shape.points, c = s / (2 * a), p = 2 * c, d = Math.cos(c), f = Math.sin(c), g = a - 1, y = g % 1 / g, m = 0; m <= g; m++) {
                    var v = c + n + p * (m + y * m)
                      , S = Math.cos(v)
                      , x = -Math.sin(v);
                    u.push((d * S + f * x) * i + t, (d * -x + f * S) * i + e)
                }
                return this.dirty = this.boundsDirty = !0,
                this
            }
            ,
            l.prototype.beginFill = function(t, e) {
                return this.filling = !0,
                this.fillColor = t || 0,
                this.fillAlpha = void 0 === e ? 1 : e,
                this.currentPath && this.currentPath.shape.points.length <= 2 && (this.currentPath.fill = this.filling,
                this.currentPath.fillColor = this.fillColor,
                this.currentPath.fillAlpha = this.fillAlpha),
                this
            }
            ,
            l.prototype.endFill = function() {
                return this.filling = !1,
                this.fillColor = null,
                this.fillAlpha = 1,
                this
            }
            ,
            l.prototype.drawRect = function(t, e, i, n) {
                return this.drawShape(new C.Rectangle(t,e,i,n)),
                this
            }
            ,
            l.prototype.drawRoundedRect = function(t, e, i, n, r) {
                return this.drawShape(new C.RoundedRectangle(t,e,i,n,r)),
                this
            }
            ,
            l.prototype.drawCircle = function(t, e, i) {
                return this.drawShape(new C.Circle(t,e,i)),
                this
            }
            ,
            l.prototype.drawEllipse = function(t, e, i, n) {
                return this.drawShape(new C.Ellipse(t,e,i,n)),
                this
            }
            ,
            l.prototype.drawPolygon = function(t) {
                var e = t;
                if (!Array.isArray(e)) {
                    e = new Array(arguments.length);
                    for (var i = 0; i < e.length; ++i)
                        e[i] = arguments[i]
                }
                return this.drawShape(new C.Polygon(e)),
                this
            }
            ,
            l.prototype.clear = function() {
                return this.lineWidth = 0,
                this.filling = !1,
                this.dirty = !0,
                this.clearDirty = !0,
                this.graphicsData = [],
                this
            }
            ,
            l.prototype.generateTexture = function(t, e, i) {
                e = e || 1;
                var n = this.getLocalBounds()
                  , r = new a(n.width * e,n.height * e)
                  , o = s.fromCanvas(r.canvas, i);
                return o.baseTexture.resolution = e,
                r.context.scale(e, e),
                r.context.translate(-n.x, -n.y),
                h.renderGraphics(this, r.context),
                o
            }
            ,
            l.prototype._renderWebGL = function(t) {
                this.glDirty && (this.dirty = !0,
                this.glDirty = !1),
                t.setObjectRenderer(t.plugins.graphics),
                t.plugins.graphics.render(this)
            }
            ,
            l.prototype._renderCanvas = function(t) {
                if (!0 !== this.isMask) {
                    this._prevTint !== this.tint && (this.dirty = !0,
                    this._prevTint = this.tint);
                    var e = t.context
                      , i = this.worldTransform;
                    this.blendMode !== t.currentBlendMode && (t.currentBlendMode = this.blendMode,
                    e.globalCompositeOperation = t.blendModes[t.currentBlendMode]);
                    var n = t.resolution;
                    e.setTransform(i.a * n, i.b * n, i.c * n, i.d * n, i.tx * n, i.ty * n),
                    h.renderGraphics(this, e)
                }
            }
            ,
            l.prototype.getBounds = function(t) {
                if (!this._currentBounds) {
                    if (!this.renderable)
                        return C.Rectangle.EMPTY;
                    this.boundsDirty && (this.updateLocalBounds(),
                    this.glDirty = !0,
                    this.cachedSpriteDirty = !0,
                    this.boundsDirty = !1);
                    var e = this._localBounds
                      , i = e.x
                      , n = e.width + e.x
                      , r = e.y
                      , o = e.height + e.y
                      , s = t || this.worldTransform
                      , a = s.a
                      , h = s.b
                      , l = s.c
                      , u = s.d
                      , c = s.tx
                      , p = s.ty
                      , d = a * n + l * o + c
                      , f = u * o + h * n + p
                      , g = a * i + l * o + c
                      , y = u * o + h * i + p
                      , m = a * i + l * r + c
                      , v = u * r + h * i + p
                      , S = a * n + l * r + c
                      , x = u * r + h * n + p
                      , b = d
                      , T = f
                      , _ = d
                      , w = f;
                    _ = S < (_ = m < (_ = g < _ ? g : _) ? m : _) ? S : _,
                    w = x < (w = v < (w = y < w ? y : w) ? v : w) ? x : w,
                    b = (b = (b = b < g ? g : b) < m ? m : b) < S ? S : b,
                    T = (T = (T = T < y ? y : T) < v ? v : T) < x ? x : T,
                    this._bounds.x = _,
                    this._bounds.width = b - _,
                    this._bounds.y = w,
                    this._bounds.height = T - w,
                    this._currentBounds = this._bounds
                }
                return this._currentBounds
            }
            ,
            l.prototype.containsPoint = function(t) {
                this.worldTransform.applyInverse(t, o);
                for (var e = this.graphicsData, i = 0; i < e.length; i++) {
                    var n = e[i];
                    if (n.fill && (n.shape && n.shape.contains(o.x, o.y)))
                        return !0
                }
                return !1
            }
            ,
            l.prototype.updateLocalBounds = function() {
                var t = 1 / 0
                  , e = -1 / 0
                  , i = 1 / 0
                  , n = -1 / 0;
                if (this.graphicsData.length)
                    for (var r, o, s, a, h, l, u = 0; u < this.graphicsData.length; u++) {
                        var c = this.graphicsData[u]
                          , p = c.type
                          , d = c.lineWidth;
                        if (r = c.shape,
                        p === y.SHAPES.RECT || p === y.SHAPES.RREC)
                            s = r.x - d / 2,
                            a = r.y - d / 2,
                            t = s < t ? s : t,
                            e = e < s + (h = r.width + d) ? s + h : e,
                            i = a < i ? a : i,
                            n = n < a + (l = r.height + d) ? a + l : n;
                        else if (p === y.SHAPES.CIRC)
                            s = r.x,
                            a = r.y,
                            t = s - (h = r.radius + d / 2) < t ? s - h : t,
                            e = e < s + h ? s + h : e,
                            i = a - (l = r.radius + d / 2) < i ? a - l : i,
                            n = n < a + l ? a + l : n;
                        else if (p === y.SHAPES.ELIP)
                            s = r.x,
                            a = r.y,
                            t = s - (h = r.width + d / 2) < t ? s - h : t,
                            e = e < s + h ? s + h : e,
                            i = a - (l = r.height + d / 2) < i ? a - l : i,
                            n = n < a + l ? a + l : n;
                        else {
                            o = r.points;
                            for (var f = 0; f < o.length; f += 2)
                                t = (s = o[f]) - d < t ? s - d : t,
                                e = e < s + d ? s + d : e,
                                i = (a = o[f + 1]) - d < i ? a - d : i,
                                n = n < a + d ? a + d : n
                        }
                    }
                else
                    n = i = e = t = 0;
                var g = this.boundsPadding;
                this._localBounds.x = t - g,
                this._localBounds.width = e - t + 2 * g,
                this._localBounds.y = i - g,
                this._localBounds.height = n - i + 2 * g
            }
            ,
            l.prototype.drawShape = function(t) {
                this.currentPath && this.currentPath.shape.points.length <= 2 && this.graphicsData.pop(),
                this.currentPath = null;
                var e = new r(this.lineWidth,this.lineColor,this.lineAlpha,this.fillColor,this.fillAlpha,this.filling,t);
                return this.graphicsData.push(e),
                e.type === y.SHAPES.POLY && (e.shape.closed = e.shape.closed || this.filling,
                this.currentPath = e),
                this.dirty = this.boundsDirty = !0,
                e
            }
            ,
            l.prototype.destroy = function() {
                n.prototype.destroy.apply(this, arguments);
                for (var t = 0; t < this.graphicsData.length; ++t)
                    this.graphicsData[t].destroy();
                for (var e in this._webgl)
                    for (var i = 0; i < this._webgl[e].data.length; ++i)
                        this._webgl[e].data[i].destroy();
                this.graphicsData = null,
                this.currentPath = null,
                this._webgl = null,
                this._localBounds = null
            }
        }
        , {
            "../const": 22,
            "../display/Container": 23,
            "../math": 32,
            "../renderers/canvas/utils/CanvasBuffer": 44,
            "../renderers/canvas/utils/CanvasGraphics": 45,
            "../textures/Texture": 71,
            "./GraphicsData": 26
        }],
        26: [function(t, e, i) {
            function n(t, e, i, n, r, o, s) {
                this.lineWidth = t,
                this.lineColor = e,
                this.lineAlpha = i,
                this._lineTint = e,
                this.fillColor = n,
                this.fillAlpha = r,
                this._fillTint = n,
                this.fill = o,
                this.shape = s,
                this.type = s.type
            }
            n.prototype.constructor = n,
            (e.exports = n).prototype.clone = function() {
                return new n(this.lineWidth,this.lineColor,this.lineAlpha,this.fillColor,this.fillAlpha,this.fill,this.shape)
            }
            ,
            n.prototype.destroy = function() {
                this.shape = null
            }
        }
        , {}],
        27: [function(t, e, i) {
            var H = t("../../utils")
              , z = t("../../math")
              , v = t("../../const")
              , n = t("../../renderers/webgl/utils/ObjectRenderer")
              , r = t("../../renderers/webgl/WebGLRenderer")
              , o = t("./WebGLGraphicsData")
              , x = t("earcut");
            function s(t) {
                n.call(this, t),
                this.graphicsDataPool = [],
                this.primitiveShader = null,
                this.complexPrimitiveShader = null,
                this.maximumSimplePolySize = 200
            }
            (s.prototype = Object.create(n.prototype)).constructor = s,
            e.exports = s,
            r.registerPlugin("graphics", s),
            s.prototype.onContextChange = function() {}
            ,
            s.prototype.destroy = function() {
                n.prototype.destroy.call(this);
                for (var t = 0; t < this.graphicsDataPool.length; ++t)
                    this.graphicsDataPool[t].destroy();
                this.graphicsDataPool = null
            }
            ,
            s.prototype.render = function(t) {
                var e, i = this.renderer, n = i.gl, r = i.shaderManager.plugins.primitiveShader;
                t.dirty && this.updateGraphics(t, n);
                var o = t._webGL[n.id];
                i.blendModeManager.setBlendMode(t.blendMode);
                for (var s = 0; s < o.data.length; s++)
                    1 === o.data[s].mode ? (e = o.data[s],
                    i.stencilManager.pushStencil(t, e, i),
                    n.uniform1f(i.shaderManager.complexPrimitiveShader.uniforms.alpha._location, t.worldAlpha * e.alpha),
                    n.drawElements(n.TRIANGLE_FAN, 4, n.UNSIGNED_SHORT, 2 * (e.indices.length - 4)),
                    i.stencilManager.popStencil(t, e, i)) : (e = o.data[s],
                    r = i.shaderManager.primitiveShader,
                    i.shaderManager.setShader(r),
                    n.uniformMatrix3fv(r.uniforms.translationMatrix._location, !1, t.worldTransform.toArray(!0)),
                    n.uniformMatrix3fv(r.uniforms.projectionMatrix._location, !1, i.currentRenderTarget.projectionMatrix.toArray(!0)),
                    n.uniform3fv(r.uniforms.tint._location, H.hex2rgb(t.tint)),
                    n.uniform1f(r.uniforms.alpha._location, t.worldAlpha),
                    n.bindBuffer(n.ARRAY_BUFFER, e.buffer),
                    n.vertexAttribPointer(r.attributes.aVertexPosition, 2, n.FLOAT, !1, 24, 0),
                    n.vertexAttribPointer(r.attributes.aColor, 4, n.FLOAT, !1, 24, 8),
                    n.bindBuffer(n.ELEMENT_ARRAY_BUFFER, e.indexBuffer),
                    n.drawElements(n.TRIANGLE_STRIP, e.indices.length, n.UNSIGNED_SHORT, 0))
            }
            ,
            s.prototype.updateGraphics = function(t) {
                var e, i, n = this.renderer.gl, r = t._webGL[n.id];
                if (r || (r = t._webGL[n.id] = {
                    lastIndex: 0,
                    data: [],
                    gl: n
                }),
                t.dirty = !1,
                t.clearDirty) {
                    for (t.clearDirty = !1,
                    e = 0; e < r.data.length; e++) {
                        var o = r.data[e];
                        o.reset(),
                        this.graphicsDataPool.push(o)
                    }
                    r.data = [],
                    r.lastIndex = 0
                }
                for (e = r.lastIndex; e < t.graphicsData.length; e++) {
                    var s = t.graphicsData[e];
                    if (s.type === v.SHAPES.POLY) {
                        if (s.points = s.shape.points.slice(),
                        s.shape.closed && (s.points[0] === s.points[s.points.length - 2] && s.points[1] === s.points[s.points.length - 1] || s.points.push(s.points[0], s.points[1])),
                        s.fill)
                            if (6 <= s.points.length)
                                if (s.points.length < 2 * this.maximumSimplePolySize)
                                    i = this.switchMode(r, 0),
                                    this.buildPoly(s, i) || (i = this.switchMode(r, 1),
                                    this.buildComplexPoly(s, i));
                                else
                                    i = this.switchMode(r, 1),
                                    this.buildComplexPoly(s, i);
                        0 < s.lineWidth && (i = this.switchMode(r, 0),
                        this.buildLine(s, i))
                    } else
                        i = this.switchMode(r, 0),
                        s.type === v.SHAPES.RECT ? this.buildRectangle(s, i) : s.type === v.SHAPES.CIRC || s.type === v.SHAPES.ELIP ? this.buildCircle(s, i) : s.type === v.SHAPES.RREC && this.buildRoundedRectangle(s, i);
                    r.lastIndex++
                }
                for (e = 0; e < r.data.length; e++)
                    (i = r.data[e]).dirty && i.upload()
            }
            ,
            s.prototype.switchMode = function(t, e) {
                var i;
                return t.data.length ? (32e4 < (i = t.data[t.data.length - 1]).points.length || i.mode !== e || 1 === e) && ((i = this.graphicsDataPool.pop() || new o(t.gl)).mode = e,
                t.data.push(i)) : ((i = this.graphicsDataPool.pop() || new o(t.gl)).mode = e,
                t.data.push(i)),
                i.dirty = !0,
                i
            }
            ,
            s.prototype.buildRectangle = function(t, e) {
                var i = t.shape
                  , n = i.x
                  , r = i.y
                  , o = i.width
                  , s = i.height;
                if (t.fill) {
                    var a = H.hex2rgb(t.fillColor)
                      , h = t.fillAlpha
                      , l = a[0] * h
                      , u = a[1] * h
                      , c = a[2] * h
                      , p = e.points
                      , d = e.indices
                      , f = p.length / 6;
                    p.push(n, r),
                    p.push(l, u, c, h),
                    p.push(n + o, r),
                    p.push(l, u, c, h),
                    p.push(n, r + s),
                    p.push(l, u, c, h),
                    p.push(n + o, r + s),
                    p.push(l, u, c, h),
                    d.push(f, f, f + 1, f + 2, f + 3, f + 3)
                }
                if (t.lineWidth) {
                    var g = t.points;
                    t.points = [n, r, n + o, r, n + o, r + s, n, r + s, n, r],
                    this.buildLine(t, e),
                    t.points = g
                }
            }
            ,
            s.prototype.buildRoundedRectangle = function(t, e) {
                var i = t.shape
                  , n = i.x
                  , r = i.y
                  , o = i.width
                  , s = i.height
                  , a = i.radius
                  , h = [];
                if (h.push(n, r + a),
                this.quadraticBezierCurve(n, r + s - a, n, r + s, n + a, r + s, h),
                this.quadraticBezierCurve(n + o - a, r + s, n + o, r + s, n + o, r + s - a, h),
                this.quadraticBezierCurve(n + o, r + a, n + o, r, n + o - a, r, h),
                this.quadraticBezierCurve(n + a, r, n, r, n, r + a + 1e-10, h),
                t.fill) {
                    var l = H.hex2rgb(t.fillColor)
                      , u = t.fillAlpha
                      , c = l[0] * u
                      , p = l[1] * u
                      , d = l[2] * u
                      , f = e.points
                      , g = e.indices
                      , y = f.length / 6
                      , m = x(h, null, 2)
                      , v = 0;
                    for (v = 0; v < m.length; v += 3)
                        g.push(m[v] + y),
                        g.push(m[v] + y),
                        g.push(m[v + 1] + y),
                        g.push(m[v + 2] + y),
                        g.push(m[v + 2] + y);
                    for (v = 0; v < h.length; v++)
                        f.push(h[v], h[++v], c, p, d, u)
                }
                if (t.lineWidth) {
                    var S = t.points;
                    t.points = h,
                    this.buildLine(t, e),
                    t.points = S
                }
            }
            ,
            s.prototype.quadraticBezierCurve = function(t, e, i, n, r, o, s) {
                var a, h, l, u, c, p, d = s || [];
                function f(t, e, i) {
                    return t + (e - t) * i
                }
                for (var g = 0, y = 0; y <= 20; y++)
                    a = f(t, i, g = y / 20),
                    h = f(e, n, g),
                    l = f(i, r, g),
                    u = f(n, o, g),
                    c = f(a, l, g),
                    p = f(h, u, g),
                    d.push(c, p);
                return d
            }
            ,
            s.prototype.buildCircle = function(t, e) {
                var i, n, r = t.shape, o = r.x, s = r.y;
                n = t.type === v.SHAPES.CIRC ? (i = r.radius,
                r.radius) : (i = r.width,
                r.height);
                var a = 2 * Math.PI / 40
                  , h = 0;
                if (t.fill) {
                    var l = H.hex2rgb(t.fillColor)
                      , u = t.fillAlpha
                      , c = l[0] * u
                      , p = l[1] * u
                      , d = l[2] * u
                      , f = e.points
                      , g = e.indices
                      , y = f.length / 6;
                    for (g.push(y),
                    h = 0; h < 41; h++)
                        f.push(o, s, c, p, d, u),
                        f.push(o + Math.sin(a * h) * i, s + Math.cos(a * h) * n, c, p, d, u),
                        g.push(y++, y++);
                    g.push(y - 1)
                }
                if (t.lineWidth) {
                    var m = t.points;
                    for (t.points = [],
                    h = 0; h < 41; h++)
                        t.points.push(o + Math.sin(a * h) * i, s + Math.cos(a * h) * n);
                    this.buildLine(t, e),
                    t.points = m
                }
            }
            ,
            s.prototype.buildLine = function(t, e) {
                var i = 0
                  , n = t.points;
                if (0 !== n.length) {
                    if (t.lineWidth % 2)
                        for (i = 0; i < n.length; i++)
                            n[i] += .5;
                    var r = new z.Point(n[0],n[1])
                      , o = new z.Point(n[n.length - 2],n[n.length - 1]);
                    if (r.x === o.x && r.y === o.y) {
                        (n = n.slice()).pop(),
                        n.pop();
                        var s = (o = new z.Point(n[n.length - 2],n[n.length - 1])).x + .5 * (r.x - o.x)
                          , a = o.y + .5 * (r.y - o.y);
                        n.unshift(s, a),
                        n.push(s, a)
                    }
                    var h, l, u, c, p, d, f, g, y, m, v, S, x, b, T, _, w, C, E, I, D, A, M = e.points, P = e.indices, R = n.length / 2, L = n.length, O = M.length / 6, U = t.lineWidth / 2, N = H.hex2rgb(t.lineColor), F = t.lineAlpha, k = N[0] * F, B = N[1] * F, G = N[2] * F;
                    for (u = n[0],
                    c = n[1],
                    p = n[2],
                    y = -(c - (d = n[3])),
                    m = u - p,
                    y /= A = Math.sqrt(y * y + m * m),
                    m /= A,
                    y *= U,
                    m *= U,
                    M.push(u - y, c - m, k, B, G, F),
                    M.push(u + y, c + m, k, B, G, F),
                    i = 1; i < R - 1; i++)
                        u = n[2 * (i - 1)],
                        c = n[2 * (i - 1) + 1],
                        p = n[2 * i],
                        d = n[2 * i + 1],
                        f = n[2 * (i + 1)],
                        g = n[2 * (i + 1) + 1],
                        y = -(c - d),
                        m = u - p,
                        y /= A = Math.sqrt(y * y + m * m),
                        m /= A,
                        y *= U,
                        m *= U,
                        v = -(d - g),
                        S = p - f,
                        v /= A = Math.sqrt(v * v + S * S),
                        S /= A,
                        w = (-y + u) * (-m + d) - (-y + p) * (-m + c),
                        I = (-(v *= U) + f) * (-(S *= U) + d) - (-v + p) * (-S + g),
                        D = (T = -m + c - (-m + d)) * (E = -v + p - (-v + f)) - (C = -S + g - (-S + d)) * (_ = -y + p - (-y + u)),
                        Math.abs(D) < .1 ? (D += 10.1,
                        M.push(p - y, d - m, k, B, G, F),
                        M.push(p + y, d + m, k, B, G, F)) : 19600 < ((h = (_ * I - E * w) / D) - p) * (h - p) + ((l = (C * w - T * I) / D) - d) + (l - d) ? (x = y - v,
                        b = m - S,
                        x /= A = Math.sqrt(x * x + b * b),
                        b /= A,
                        x *= U,
                        b *= U,
                        M.push(p - x, d - b),
                        M.push(k, B, G, F),
                        M.push(p + x, d + b),
                        M.push(k, B, G, F),
                        M.push(p - x, d - b),
                        M.push(k, B, G, F),
                        L++) : (M.push(h, l),
                        M.push(k, B, G, F),
                        M.push(p - (h - p), d - (l - d)),
                        M.push(k, B, G, F));
                    for (u = n[2 * (R - 2)],
                    c = n[2 * (R - 2) + 1],
                    p = n[2 * (R - 1)],
                    y = -(c - (d = n[2 * (R - 1) + 1])),
                    m = u - p,
                    y /= A = Math.sqrt(y * y + m * m),
                    m /= A,
                    y *= U,
                    m *= U,
                    M.push(p - y, d - m),
                    M.push(k, B, G, F),
                    M.push(p + y, d + m),
                    M.push(k, B, G, F),
                    P.push(O),
                    i = 0; i < L; i++)
                        P.push(O++);
                    P.push(O - 1)
                }
            }
            ,
            s.prototype.buildComplexPoly = function(t, e) {
                var i = t.points.slice();
                if (!(i.length < 6)) {
                    var n = e.indices;
                    e.points = i,
                    e.alpha = t.fillAlpha,
                    e.color = H.hex2rgb(t.fillColor);
                    for (var r, o, s = 1 / 0, a = -1 / 0, h = 1 / 0, l = -1 / 0, u = 0; u < i.length; u += 2)
                        s = (r = i[u]) < s ? r : s,
                        a = a < r ? r : a,
                        h = (o = i[u + 1]) < h ? o : h,
                        l = l < o ? o : l;
                    i.push(s, h, a, h, a, l, s, l);
                    var c = i.length / 2;
                    for (u = 0; u < c; u++)
                        n.push(u)
                }
            }
            ,
            s.prototype.buildPoly = function(t, e) {
                var i = t.points;
                if (!(i.length < 6)) {
                    var n = e.points
                      , r = e.indices
                      , o = i.length / 2
                      , s = H.hex2rgb(t.fillColor)
                      , a = t.fillAlpha
                      , h = s[0] * a
                      , l = s[1] * a
                      , u = s[2] * a
                      , c = x(i, null, 2);
                    if (!c)
                        return !1;
                    var p = n.length / 6
                      , d = 0;
                    for (d = 0; d < c.length; d += 3)
                        r.push(c[d] + p),
                        r.push(c[d] + p),
                        r.push(c[d + 1] + p),
                        r.push(c[d + 2] + p),
                        r.push(c[d + 2] + p);
                    for (d = 0; d < o; d++)
                        n.push(i[2 * d], i[2 * d + 1], h, l, u, a);
                    return !0
                }
            }
        }
        , {
            "../../const": 22,
            "../../math": 32,
            "../../renderers/webgl/WebGLRenderer": 48,
            "../../renderers/webgl/utils/ObjectRenderer": 62,
            "../../utils": 76,
            "./WebGLGraphicsData": 28,
            earcut: 10
        }],
        28: [function(t, e, i) {
            function n(t) {
                this.gl = t,
                this.color = [0, 0, 0],
                this.points = [],
                this.indices = [],
                this.buffer = t.createBuffer(),
                this.indexBuffer = t.createBuffer(),
                this.mode = 1,
                this.alpha = 1,
                this.dirty = !0,
                this.glPoints = null,
                this.glIndices = null
            }
            n.prototype.constructor = n,
            (e.exports = n).prototype.reset = function() {
                this.points.length = 0,
                this.indices.length = 0
            }
            ,
            n.prototype.upload = function() {
                var t = this.gl;
                this.glPoints = new Float32Array(this.points),
                t.bindBuffer(t.ARRAY_BUFFER, this.buffer),
                t.bufferData(t.ARRAY_BUFFER, this.glPoints, t.STATIC_DRAW),
                this.glIndices = new Uint16Array(this.indices),
                t.bindBuffer(t.ELEMENT_ARRAY_BUFFER, this.indexBuffer),
                t.bufferData(t.ELEMENT_ARRAY_BUFFER, this.glIndices, t.STATIC_DRAW),
                this.dirty = !1
            }
            ,
            n.prototype.destroy = function() {
                this.color = null,
                this.points = null,
                this.indices = null,
                this.gl.deleteBuffer(this.buffer),
                this.gl.deleteBuffer(this.indexBuffer),
                this.gl = null,
                this.buffer = null,
                this.indexBuffer = null,
                this.glPoints = null,
                this.glIndices = null
            }
        }
        , {}],
        29: [function(t, e, i) {
            var r = e.exports = Object.assign(t("./const"), t("./math"), {
                utils: t("./utils"),
                ticker: t("./ticker"),
                DisplayObject: t("./display/DisplayObject"),
                Container: t("./display/Container"),
                Sprite: t("./sprites/Sprite"),
                ParticleContainer: t("./particles/ParticleContainer"),
                SpriteRenderer: t("./sprites/webgl/SpriteRenderer"),
                ParticleRenderer: t("./particles/webgl/ParticleRenderer"),
                Text: t("./text/Text"),
                Graphics: t("./graphics/Graphics"),
                GraphicsData: t("./graphics/GraphicsData"),
                GraphicsRenderer: t("./graphics/webgl/GraphicsRenderer"),
                Texture: t("./textures/Texture"),
                BaseTexture: t("./textures/BaseTexture"),
                RenderTexture: t("./textures/RenderTexture"),
                VideoBaseTexture: t("./textures/VideoBaseTexture"),
                TextureUvs: t("./textures/TextureUvs"),
                CanvasRenderer: t("./renderers/canvas/CanvasRenderer"),
                CanvasGraphics: t("./renderers/canvas/utils/CanvasGraphics"),
                CanvasBuffer: t("./renderers/canvas/utils/CanvasBuffer"),
                WebGLRenderer: t("./renderers/webgl/WebGLRenderer"),
                ShaderManager: t("./renderers/webgl/managers/ShaderManager"),
                Shader: t("./renderers/webgl/shaders/Shader"),
                ObjectRenderer: t("./renderers/webgl/utils/ObjectRenderer"),
                RenderTarget: t("./renderers/webgl/utils/RenderTarget"),
                AbstractFilter: t("./renderers/webgl/filters/AbstractFilter"),
                FXAAFilter: t("./renderers/webgl/filters/FXAAFilter"),
                SpriteMaskFilter: t("./renderers/webgl/filters/SpriteMaskFilter"),
                autoDetectRenderer: function(t, e, i, n) {
                    return t = t || 800,
                    e = e || 600,
                    !n && r.utils.isWebGLSupported() ? new r.WebGLRenderer(t,e,i) : new r.CanvasRenderer(t,e,i)
                }
            })
        }
        , {
            "./const": 22,
            "./display/Container": 23,
            "./display/DisplayObject": 24,
            "./graphics/Graphics": 25,
            "./graphics/GraphicsData": 26,
            "./graphics/webgl/GraphicsRenderer": 27,
            "./math": 32,
            "./particles/ParticleContainer": 38,
            "./particles/webgl/ParticleRenderer": 40,
            "./renderers/canvas/CanvasRenderer": 43,
            "./renderers/canvas/utils/CanvasBuffer": 44,
            "./renderers/canvas/utils/CanvasGraphics": 45,
            "./renderers/webgl/WebGLRenderer": 48,
            "./renderers/webgl/filters/AbstractFilter": 49,
            "./renderers/webgl/filters/FXAAFilter": 50,
            "./renderers/webgl/filters/SpriteMaskFilter": 51,
            "./renderers/webgl/managers/ShaderManager": 55,
            "./renderers/webgl/shaders/Shader": 60,
            "./renderers/webgl/utils/ObjectRenderer": 62,
            "./renderers/webgl/utils/RenderTarget": 64,
            "./sprites/Sprite": 66,
            "./sprites/webgl/SpriteRenderer": 67,
            "./text/Text": 68,
            "./textures/BaseTexture": 69,
            "./textures/RenderTexture": 70,
            "./textures/Texture": 71,
            "./textures/TextureUvs": 72,
            "./textures/VideoBaseTexture": 73,
            "./ticker": 75,
            "./utils": 76
        }],
        30: [function(t, e, i) {
            var o = t("./Point");
            function n() {
                this.a = 1,
                this.b = 0,
                this.c = 0,
                this.d = 1,
                this.tx = 0,
                this.ty = 0
            }
            n.prototype.constructor = n,
            (e.exports = n).prototype.fromArray = function(t) {
                this.a = t[0],
                this.b = t[1],
                this.c = t[3],
                this.d = t[4],
                this.tx = t[2],
                this.ty = t[5]
            }
            ,
            n.prototype.toArray = function(t, e) {
                this.array || (this.array = new Float32Array(9));
                var i = e || this.array;
                return t ? (i[0] = this.a,
                i[1] = this.b,
                i[2] = 0,
                i[3] = this.c,
                i[4] = this.d,
                i[5] = 0,
                i[6] = this.tx,
                i[7] = this.ty) : (i[0] = this.a,
                i[1] = this.c,
                i[2] = this.tx,
                i[3] = this.b,
                i[4] = this.d,
                i[5] = this.ty,
                i[6] = 0,
                i[7] = 0),
                i[8] = 1,
                i
            }
            ,
            n.prototype.apply = function(t, e) {
                e = e || new o;
                var i = t.x
                  , n = t.y;
                return e.x = this.a * i + this.c * n + this.tx,
                e.y = this.b * i + this.d * n + this.ty,
                e
            }
            ,
            n.prototype.applyInverse = function(t, e) {
                e = e || new o;
                var i = 1 / (this.a * this.d + this.c * -this.b)
                  , n = t.x
                  , r = t.y;
                return e.x = this.d * i * n + -this.c * i * r + (this.ty * this.c - this.tx * this.d) * i,
                e.y = this.a * i * r + -this.b * i * n + (-this.ty * this.a + this.tx * this.b) * i,
                e
            }
            ,
            n.prototype.translate = function(t, e) {
                return this.tx += t,
                this.ty += e,
                this
            }
            ,
            n.prototype.scale = function(t, e) {
                return this.a *= t,
                this.d *= e,
                this.c *= t,
                this.b *= e,
                this.tx *= t,
                this.ty *= e,
                this
            }
            ,
            n.prototype.rotate = function(t) {
                var e = Math.cos(t)
                  , i = Math.sin(t)
                  , n = this.a
                  , r = this.c
                  , o = this.tx;
                return this.a = n * e - this.b * i,
                this.b = n * i + this.b * e,
                this.c = r * e - this.d * i,
                this.d = r * i + this.d * e,
                this.tx = o * e - this.ty * i,
                this.ty = o * i + this.ty * e,
                this
            }
            ,
            n.prototype.append = function(t) {
                var e = this.a
                  , i = this.b
                  , n = this.c
                  , r = this.d;
                return this.a = t.a * e + t.b * n,
                this.b = t.a * i + t.b * r,
                this.c = t.c * e + t.d * n,
                this.d = t.c * i + t.d * r,
                this.tx = t.tx * e + t.ty * n + this.tx,
                this.ty = t.tx * i + t.ty * r + this.ty,
                this
            }
            ,
            n.prototype.prepend = function(t) {
                var e = this.tx;
                if (1 !== t.a || 0 !== t.b || 0 !== t.c || 1 !== t.d) {
                    var i = this.a
                      , n = this.c;
                    this.a = i * t.a + this.b * t.c,
                    this.b = i * t.b + this.b * t.d,
                    this.c = n * t.a + this.d * t.c,
                    this.d = n * t.b + this.d * t.d
                }
                return this.tx = e * t.a + this.ty * t.c + t.tx,
                this.ty = e * t.b + this.ty * t.d + t.ty,
                this
            }
            ,
            n.prototype.invert = function() {
                var t = this.a
                  , e = this.b
                  , i = this.c
                  , n = this.d
                  , r = this.tx
                  , o = t * n - e * i;
                return this.a = n / o,
                this.b = -e / o,
                this.c = -i / o,
                this.d = t / o,
                this.tx = (i * this.ty - n * r) / o,
                this.ty = -(t * this.ty - e * r) / o,
                this
            }
            ,
            n.prototype.identity = function() {
                return this.a = 1,
                this.b = 0,
                this.c = 0,
                this.d = 1,
                this.tx = 0,
                this.ty = 0,
                this
            }
            ,
            n.prototype.clone = function() {
                var t = new n;
                return t.a = this.a,
                t.b = this.b,
                t.c = this.c,
                t.d = this.d,
                t.tx = this.tx,
                t.ty = this.ty,
                t
            }
            ,
            n.prototype.copy = function(t) {
                return t.a = this.a,
                t.b = this.b,
                t.c = this.c,
                t.d = this.d,
                t.tx = this.tx,
                t.ty = this.ty,
                t
            }
            ,
            n.IDENTITY = new n,
            n.TEMP_MATRIX = new n
        }
        , {
            "./Point": 31
        }],
        31: [function(t, e, i) {
            function n(t, e) {
                this.x = t || 0,
                this.y = e || 0
            }
            n.prototype.constructor = n,
            (e.exports = n).prototype.clone = function() {
                return new n(this.x,this.y)
            }
            ,
            n.prototype.copy = function(t) {
                this.set(t.x, t.y)
            }
            ,
            n.prototype.equals = function(t) {
                return t.x === this.x && t.y === this.y
            }
            ,
            n.prototype.set = function(t, e) {
                this.x = t || 0,
                this.y = e || (0 !== e ? this.x : 0)
            }
        }
        , {}],
        32: [function(t, e, i) {
            e.exports = {
                Point: t("./Point"),
                Matrix: t("./Matrix"),
                Circle: t("./shapes/Circle"),
                Ellipse: t("./shapes/Ellipse"),
                Polygon: t("./shapes/Polygon"),
                Rectangle: t("./shapes/Rectangle"),
                RoundedRectangle: t("./shapes/RoundedRectangle")
            }
        }
        , {
            "./Matrix": 30,
            "./Point": 31,
            "./shapes/Circle": 33,
            "./shapes/Ellipse": 34,
            "./shapes/Polygon": 35,
            "./shapes/Rectangle": 36,
            "./shapes/RoundedRectangle": 37
        }],
        33: [function(t, e, i) {
            var n = t("./Rectangle")
              , r = t("../../const");
            function o(t, e, i) {
                this.x = t || 0,
                this.y = e || 0,
                this.radius = i || 0,
                this.type = r.SHAPES.CIRC
            }
            o.prototype.constructor = o,
            (e.exports = o).prototype.clone = function() {
                return new o(this.x,this.y,this.radius)
            }
            ,
            o.prototype.contains = function(t, e) {
                if (this.radius <= 0)
                    return !1;
                var i = this.x - t
                  , n = this.y - e;
                return (i *= i) + (n *= n) <= this.radius * this.radius
            }
            ,
            o.prototype.getBounds = function() {
                return new n(this.x - this.radius,this.y - this.radius,2 * this.radius,2 * this.radius)
            }
        }
        , {
            "../../const": 22,
            "./Rectangle": 36
        }],
        34: [function(t, e, i) {
            var n = t("./Rectangle")
              , r = t("../../const");
            function o(t, e, i, n) {
                this.x = t || 0,
                this.y = e || 0,
                this.width = i || 0,
                this.height = n || 0,
                this.type = r.SHAPES.ELIP
            }
            o.prototype.constructor = o,
            (e.exports = o).prototype.clone = function() {
                return new o(this.x,this.y,this.width,this.height)
            }
            ,
            o.prototype.contains = function(t, e) {
                if (this.width <= 0 || this.height <= 0)
                    return !1;
                var i = (t - this.x) / this.width
                  , n = (e - this.y) / this.height;
                return (i *= i) + (n *= n) <= 1
            }
            ,
            o.prototype.getBounds = function() {
                return new n(this.x - this.width,this.y - this.height,this.width,this.height)
            }
        }
        , {
            "../../const": 22,
            "./Rectangle": 36
        }],
        35: [function(t, e, i) {
            var s = t("../Point")
              , a = t("../../const");
            function n(t) {
                var e = t;
                if (!Array.isArray(e)) {
                    e = new Array(arguments.length);
                    for (var i = 0; i < e.length; ++i)
                        e[i] = arguments[i]
                }
                if (e[0]instanceof s) {
                    for (var n = [], r = 0, o = e.length; r < o; r++)
                        n.push(e[r].x, e[r].y);
                    e = n
                }
                this.closed = !0,
                this.points = e,
                this.type = a.SHAPES.POLY
            }
            n.prototype.constructor = n,
            (e.exports = n).prototype.clone = function() {
                return new n(this.points.slice())
            }
            ,
            n.prototype.contains = function(t, e) {
                for (var i = !1, n = this.points.length / 2, r = 0, o = n - 1; r < n; o = r++) {
                    var s = this.points[2 * r]
                      , a = this.points[2 * r + 1]
                      , h = this.points[2 * o]
                      , l = this.points[2 * o + 1];
                    e < a != e < l && t < (h - s) * (e - a) / (l - a) + s && (i = !i)
                }
                return i
            }
        }
        , {
            "../../const": 22,
            "../Point": 31
        }],
        36: [function(t, e, i) {
            var r = t("../../const");
            function n(t, e, i, n) {
                this.x = t || 0,
                this.y = e || 0,
                this.width = i || 0,
                this.height = n || 0,
                this.type = r.SHAPES.RECT
            }
            n.prototype.constructor = n,
            (e.exports = n).EMPTY = new n(0,0,0,0),
            n.prototype.clone = function() {
                return new n(this.x,this.y,this.width,this.height)
            }
            ,
            n.prototype.contains = function(t, e) {
                return !(this.width <= 0 || this.height <= 0) && (t >= this.x && t < this.x + this.width && e >= this.y && e < this.y + this.height)
            }
        }
        , {
            "../../const": 22
        }],
        37: [function(t, e, i) {
            var o = t("../../const");
            function n(t, e, i, n, r) {
                this.x = t || 0,
                this.y = e || 0,
                this.width = i || 0,
                this.height = n || 0,
                this.radius = r || 20,
                this.type = o.SHAPES.RREC
            }
            n.prototype.constructor = n,
            (e.exports = n).prototype.clone = function() {
                return new n(this.x,this.y,this.width,this.height,this.radius)
            }
            ,
            n.prototype.contains = function(t, e) {
                return !(this.width <= 0 || this.height <= 0) && (t >= this.x && t <= this.x + this.width && e >= this.y && e <= this.y + this.height)
            }
        }
        , {
            "../../const": 22
        }],
        38: [function(t, e, i) {
            var n = t("../display/Container")
              , r = t("../const");
            function o(t, e) {
                n.call(this),
                this._properties = [!1, !0, !1, !1, !1],
                this._size = t || 15e3,
                this._buffers = null,
                this._updateStatic = !1,
                this.interactiveChildren = !1,
                this.blendMode = r.BLEND_MODES.NORMAL,
                this.roundPixels = !0,
                this.setProperties(e)
            }
            (o.prototype = Object.create(n.prototype)).constructor = o,
            (e.exports = o).prototype.setProperties = function(t) {
                t && (this._properties[0] = "scale"in t ? !!t.scale : this._properties[0],
                this._properties[1] = "position"in t ? !!t.position : this._properties[1],
                this._properties[2] = "rotation"in t ? !!t.rotation : this._properties[2],
                this._properties[3] = "uvs"in t ? !!t.uvs : this._properties[3],
                this._properties[4] = "alpha"in t ? !!t.alpha : this._properties[4])
            }
            ,
            o.prototype.updateTransform = function() {
                this.displayObjectUpdateTransform()
            }
            ,
            o.prototype.renderWebGL = function(t) {
                this.visible && !(this.worldAlpha <= 0) && this.children.length && this.renderable && (t.setObjectRenderer(t.plugins.particle),
                t.plugins.particle.render(this))
            }
            ,
            o.prototype.addChildAt = function(t, e) {
                if (t === this)
                    return t;
                if (0 <= e && e <= this.children.length)
                    return t.parent && t.parent.removeChild(t),
                    (t.parent = this).children.splice(e, 0, t),
                    this._updateStatic = !0,
                    t;
                throw new Error(t + "addChildAt: The index " + e + " supplied is out of bounds " + this.children.length)
            }
            ,
            o.prototype.removeChildAt = function(t) {
                var e = this.getChildAt(t);
                return e.parent = null,
                this.children.splice(t, 1),
                this._updateStatic = !0,
                e
            }
            ,
            o.prototype.renderCanvas = function(t) {
                if (this.visible && !(this.worldAlpha <= 0) && this.children.length && this.renderable) {
                    var e = t.context
                      , i = this.worldTransform
                      , n = !0
                      , r = 0
                      , o = 0
                      , s = 0
                      , a = 0;
                    e.globalAlpha = this.worldAlpha,
                    this.displayObjectUpdateTransform();
                    for (var h = 0; h < this.children.length; ++h) {
                        var l = this.children[h];
                        if (l.visible) {
                            var u = l.texture.frame;
                            if (e.globalAlpha = this.worldAlpha * l.alpha,
                            l.rotation % (2 * Math.PI) == 0)
                                n && (e.setTransform(i.a, i.b, i.c, i.d, i.tx, i.ty),
                                n = !1),
                                r = l.anchor.x * (-u.width * l.scale.x) + l.position.x + .5,
                                o = l.anchor.y * (-u.height * l.scale.y) + l.position.y + .5,
                                s = u.width * l.scale.x,
                                a = u.height * l.scale.y;
                            else {
                                n || (n = !0),
                                l.displayObjectUpdateTransform();
                                var c = l.worldTransform;
                                t.roundPixels ? e.setTransform(c.a, c.b, c.c, c.d, 0 | c.tx, 0 | c.ty) : e.setTransform(c.a, c.b, c.c, c.d, c.tx, c.ty),
                                r = l.anchor.x * -u.width + .5,
                                o = l.anchor.y * -u.height + .5,
                                s = u.width,
                                a = u.height
                            }
                            e.drawImage(l.texture.baseTexture.source, u.x, u.y, u.width, u.height, r, o, s, a)
                        }
                    }
                }
            }
            ,
            o.prototype.destroy = function() {
                if (n.prototype.destroy.apply(this, arguments),
                this._buffers)
                    for (var t = 0; t < this._buffers.length; ++t)
                        this._buffers[t].destroy();
                this._properties = null,
                this._buffers = null
            }
        }
        , {
            "../const": 22,
            "../display/Container": 23
        }],
        39: [function(t, e, i) {
            function n(t, e, i) {
                this.gl = t,
                this.vertSize = 2,
                this.vertByteSize = 4 * this.vertSize,
                this.size = i,
                this.dynamicProperties = [],
                this.staticProperties = [];
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    r.dynamic ? this.dynamicProperties.push(r) : this.staticProperties.push(r)
                }
                this.staticStride = 0,
                this.staticBuffer = null,
                this.staticData = null,
                this.dynamicStride = 0,
                this.dynamicBuffer = null,
                this.dynamicData = null,
                this.initBuffers()
            }
            n.prototype.constructor = n,
            (e.exports = n).prototype.initBuffers = function() {
                var t, e, i = this.gl, n = 0;
                for (t = this.dynamicStride = 0; t < this.dynamicProperties.length; t++)
                    (e = this.dynamicProperties[t]).offset = n,
                    n += e.size,
                    this.dynamicStride += e.size;
                this.dynamicData = new Float32Array(this.size * this.dynamicStride * 4),
                this.dynamicBuffer = i.createBuffer(),
                i.bindBuffer(i.ARRAY_BUFFER, this.dynamicBuffer),
                i.bufferData(i.ARRAY_BUFFER, this.dynamicData, i.DYNAMIC_DRAW);
                var r = 0;
                for (t = this.staticStride = 0; t < this.staticProperties.length; t++)
                    (e = this.staticProperties[t]).offset = r,
                    r += e.size,
                    this.staticStride += e.size;
                this.staticData = new Float32Array(this.size * this.staticStride * 4),
                this.staticBuffer = i.createBuffer(),
                i.bindBuffer(i.ARRAY_BUFFER, this.staticBuffer),
                i.bufferData(i.ARRAY_BUFFER, this.staticData, i.DYNAMIC_DRAW)
            }
            ,
            n.prototype.uploadDynamic = function(t, e, i) {
                for (var n = this.gl, r = 0; r < this.dynamicProperties.length; r++) {
                    var o = this.dynamicProperties[r];
                    o.uploadFunction(t, e, i, this.dynamicData, this.dynamicStride, o.offset)
                }
                n.bindBuffer(n.ARRAY_BUFFER, this.dynamicBuffer),
                n.bufferSubData(n.ARRAY_BUFFER, 0, this.dynamicData)
            }
            ,
            n.prototype.uploadStatic = function(t, e, i) {
                for (var n = this.gl, r = 0; r < this.staticProperties.length; r++) {
                    var o = this.staticProperties[r];
                    o.uploadFunction(t, e, i, this.staticData, this.staticStride, o.offset)
                }
                n.bindBuffer(n.ARRAY_BUFFER, this.staticBuffer),
                n.bufferSubData(n.ARRAY_BUFFER, 0, this.staticData)
            }
            ,
            n.prototype.bind = function() {
                var t, e, i = this.gl;
                for (i.bindBuffer(i.ARRAY_BUFFER, this.dynamicBuffer),
                t = 0; t < this.dynamicProperties.length; t++)
                    e = this.dynamicProperties[t],
                    i.vertexAttribPointer(e.attribute, e.size, i.FLOAT, !1, 4 * this.dynamicStride, 4 * e.offset);
                for (i.bindBuffer(i.ARRAY_BUFFER, this.staticBuffer),
                t = 0; t < this.staticProperties.length; t++)
                    e = this.staticProperties[t],
                    i.vertexAttribPointer(e.attribute, e.size, i.FLOAT, !1, 4 * this.staticStride, 4 * e.offset)
            }
            ,
            n.prototype.destroy = function() {
                this.dynamicProperties = null,
                this.dynamicData = null,
                this.gl.deleteBuffer(this.dynamicBuffer),
                this.staticProperties = null,
                this.staticData = null,
                this.gl.deleteBuffer(this.staticBuffer)
            }
        }
        , {}],
        40: [function(t, e, i) {
            var r = t("../../renderers/webgl/utils/ObjectRenderer")
              , n = t("../../renderers/webgl/WebGLRenderer")
              , o = t("./ParticleShader")
              , s = t("./ParticleBuffer")
              , a = t("../../math");
            function h(t) {
                r.call(this, t),
                this.size = 15e3;
                var e = 6 * this.size;
                this.indices = new Uint16Array(e);
                for (var i = 0, n = 0; i < e; i += 6,
                n += 4)
                    this.indices[i + 0] = n + 0,
                    this.indices[i + 1] = n + 1,
                    this.indices[i + 2] = n + 2,
                    this.indices[i + 3] = n + 0,
                    this.indices[i + 4] = n + 2,
                    this.indices[i + 5] = n + 3;
                this.shader = null,
                this.indexBuffer = null,
                this.properties = null,
                this.tempMatrix = new a.Matrix
            }
            (h.prototype = Object.create(r.prototype)).constructor = h,
            e.exports = h,
            n.registerPlugin("particle", h),
            h.prototype.onContextChange = function() {
                var t = this.renderer.gl;
                this.shader = new o(this.renderer.shaderManager),
                this.indexBuffer = t.createBuffer(),
                t.bindBuffer(t.ELEMENT_ARRAY_BUFFER, this.indexBuffer),
                t.bufferData(t.ELEMENT_ARRAY_BUFFER, this.indices, t.STATIC_DRAW),
                this.properties = [{
                    attribute: this.shader.attributes.aVertexPosition,
                    dynamic: !1,
                    size: 2,
                    uploadFunction: this.uploadVertices,
                    offset: 0
                }, {
                    attribute: this.shader.attributes.aPositionCoord,
                    dynamic: !0,
                    size: 2,
                    uploadFunction: this.uploadPosition,
                    offset: 0
                }, {
                    attribute: this.shader.attributes.aRotation,
                    dynamic: !1,
                    size: 1,
                    uploadFunction: this.uploadRotation,
                    offset: 0
                }, {
                    attribute: this.shader.attributes.aTextureCoord,
                    dynamic: !1,
                    size: 2,
                    uploadFunction: this.uploadUvs,
                    offset: 0
                }, {
                    attribute: this.shader.attributes.aColor,
                    dynamic: !1,
                    size: 1,
                    uploadFunction: this.uploadAlpha,
                    offset: 0
                }]
            }
            ,
            h.prototype.start = function() {
                var t = this.renderer.gl;
                t.activeTexture(t.TEXTURE0),
                t.bindBuffer(t.ELEMENT_ARRAY_BUFFER, this.indexBuffer);
                var e = this.shader;
                this.renderer.shaderManager.setShader(e)
            }
            ,
            h.prototype.render = function(t) {
                var e = t.children
                  , i = e.length
                  , n = t._size;
                if (0 !== i) {
                    n < i && (i = n),
                    t._buffers || (t._buffers = this.generateBuffers(t)),
                    this.renderer.blendModeManager.setBlendMode(t.blendMode);
                    var r = this.renderer.gl
                      , o = t.worldTransform.copy(this.tempMatrix);
                    o.prepend(this.renderer.currentRenderTarget.projectionMatrix),
                    r.uniformMatrix3fv(this.shader.uniforms.projectionMatrix._location, !1, o.toArray(!0)),
                    r.uniform1f(this.shader.uniforms.uAlpha._location, t.worldAlpha);
                    var s = t._updateStatic
                      , a = e[0]._texture.baseTexture;
                    if (a._glTextures[r.id])
                        r.bindTexture(r.TEXTURE_2D, a._glTextures[r.id]);
                    else {
                        if (!this.renderer.updateTexture(a))
                            return;
                        this.properties[0].dynamic && this.properties[3].dynamic || (s = !0)
                    }
                    for (var h = 0, l = 0; l < i; l += this.size) {
                        var u = i - l;
                        u > this.size && (u = this.size);
                        var c = t._buffers[h++];
                        c.uploadDynamic(e, l, u),
                        s && c.uploadStatic(e, l, u),
                        c.bind(this.shader),
                        r.drawElements(r.TRIANGLES, 6 * u, r.UNSIGNED_SHORT, 0),
                        this.renderer.drawCount++
                    }
                    t._updateStatic = !1
                }
            }
            ,
            h.prototype.generateBuffers = function(t) {
                var e, i = this.renderer.gl, n = [], r = t._size;
                for (e = 0; e < t._properties.length; e++)
                    this.properties[e].dynamic = t._properties[e];
                for (e = 0; e < r; e += this.size)
                    n.push(new s(i,this.properties,this.size,this.shader));
                return n
            }
            ,
            h.prototype.uploadVertices = function(t, e, i, n, r, o) {
                for (var s, a, h, l, u, c, p, d, f, g = 0; g < i; g++)
                    a = (s = t[e + g])._texture,
                    l = s.scale.x,
                    u = s.scale.y,
                    a.trim ? (c = (p = (h = a.trim).x - s.anchor.x * h.width) + a.crop.width,
                    d = (f = h.y - s.anchor.y * h.height) + a.crop.height) : (c = a._frame.width * (1 - s.anchor.x),
                    p = a._frame.width * -s.anchor.x,
                    d = a._frame.height * (1 - s.anchor.y),
                    f = a._frame.height * -s.anchor.y),
                    n[o] = p * l,
                    n[o + 1] = f * u,
                    n[o + r] = c * l,
                    n[o + r + 1] = f * u,
                    n[o + 2 * r] = c * l,
                    n[o + 2 * r + 1] = d * u,
                    n[o + 3 * r] = p * l,
                    n[o + 3 * r + 1] = d * u,
                    o += 4 * r
            }
            ,
            h.prototype.uploadPosition = function(t, e, i, n, r, o) {
                for (var s = 0; s < i; s++) {
                    var a = t[e + s].position;
                    n[o] = a.x,
                    n[o + 1] = a.y,
                    n[o + r] = a.x,
                    n[o + r + 1] = a.y,
                    n[o + 2 * r] = a.x,
                    n[o + 2 * r + 1] = a.y,
                    n[o + 3 * r] = a.x,
                    n[o + 3 * r + 1] = a.y,
                    o += 4 * r
                }
            }
            ,
            h.prototype.uploadRotation = function(t, e, i, n, r, o) {
                for (var s = 0; s < i; s++) {
                    var a = t[e + s].rotation;
                    n[o] = a,
                    n[o + r] = a,
                    n[o + 2 * r] = a,
                    n[o + 3 * r] = a,
                    o += 4 * r
                }
            }
            ,
            h.prototype.uploadUvs = function(t, e, i, n, r, o) {
                for (var s = 0; s < i; s++) {
                    var a = t[e + s]._texture._uvs;
                    a ? (n[o] = a.x0,
                    n[o + 1] = a.y0,
                    n[o + r] = a.x1,
                    n[o + r + 1] = a.y1,
                    n[o + 2 * r] = a.x2,
                    n[o + 2 * r + 1] = a.y2,
                    n[o + 3 * r] = a.x3,
                    n[o + 3 * r + 1] = a.y3) : (n[o] = 0,
                    n[o + 1] = 0,
                    n[o + r] = 0,
                    n[o + r + 1] = 0,
                    n[o + 2 * r] = 0,
                    n[o + 2 * r + 1] = 0,
                    n[o + 3 * r] = 0,
                    n[o + 3 * r + 1] = 0),
                    o += 4 * r
                }
            }
            ,
            h.prototype.uploadAlpha = function(t, e, i, n, r, o) {
                for (var s = 0; s < i; s++) {
                    var a = t[e + s].alpha;
                    n[o] = a,
                    n[o + r] = a,
                    n[o + 2 * r] = a,
                    n[o + 3 * r] = a,
                    o += 4 * r
                }
            }
            ,
            h.prototype.destroy = function() {
                this.renderer.gl && this.renderer.gl.deleteBuffer(this.indexBuffer),
                r.prototype.destroy.apply(this, arguments),
                this.shader.destroy(),
                this.indices = null,
                this.tempMatrix = null
            }
        }
        , {
            "../../math": 32,
            "../../renderers/webgl/WebGLRenderer": 48,
            "../../renderers/webgl/utils/ObjectRenderer": 62,
            "./ParticleBuffer": 39,
            "./ParticleShader": 41
        }],
        41: [function(t, e, i) {
            var n = t("../../renderers/webgl/shaders/TextureShader");
            function r(t) {
                n.call(this, t, ["attribute vec2 aVertexPosition;", "attribute vec2 aTextureCoord;", "attribute float aColor;", "attribute vec2 aPositionCoord;", "attribute vec2 aScale;", "attribute float aRotation;", "uniform mat3 projectionMatrix;", "varying vec2 vTextureCoord;", "varying float vColor;", "void main(void){", "   vec2 v = aVertexPosition;", "   v.x = (aVertexPosition.x) * cos(aRotation) - (aVertexPosition.y) * sin(aRotation);", "   v.y = (aVertexPosition.x) * sin(aRotation) + (aVertexPosition.y) * cos(aRotation);", "   v = v + aPositionCoord;", "   gl_Position = vec4((projectionMatrix * vec3(v, 1.0)).xy, 0.0, 1.0);", "   vTextureCoord = aTextureCoord;", "   vColor = aColor;", "}"].join("\n"), ["precision lowp float;", "varying vec2 vTextureCoord;", "varying float vColor;", "uniform sampler2D uSampler;", "uniform float uAlpha;", "void main(void){", "  vec4 color = texture2D(uSampler, vTextureCoord) * vColor * uAlpha;", "  if (color.a == 0.0) discard;", "  gl_FragColor = color;", "}"].join("\n"), {
                    uAlpha: {
                        type: "1f",
                        value: 1
                    }
                }, {
                    aPositionCoord: 0,
                    aRotation: 0
                })
            }
            (r.prototype = Object.create(n.prototype)).constructor = r,
            e.exports = r
        }
        , {
            "../../renderers/webgl/shaders/TextureShader": 61
        }],
        42: [function(t, e, i) {
            var o = t("../utils")
              , s = t("../math")
              , a = t("../const")
              , h = t("eventemitter3");
            function n(t, e, i, n) {
                if (h.call(this),
                o.sayHello(t),
                n)
                    for (var r in a.DEFAULT_RENDER_OPTIONS)
                        void 0 === n[r] && (n[r] = a.DEFAULT_RENDER_OPTIONS[r]);
                else
                    n = a.DEFAULT_RENDER_OPTIONS;
                this.type = a.RENDERER_TYPE.UNKNOWN,
                this.width = e || 800,
                this.height = i || 600,
                this.view = n.view || document.createElement("canvas"),
                this.resolution = n.resolution,
                this.transparent = n.transparent,
                this.autoResize = n.autoResize || !1,
                this.blendModes = null,
                this.preserveDrawingBuffer = n.preserveDrawingBuffer,
                this.clearBeforeRender = n.clearBeforeRender,
                this._backgroundColor = 0,
                this._backgroundColorRgb = [0, 0, 0],
                this._backgroundColorString = "#000000",
                this.backgroundColor = n.backgroundColor || this._backgroundColor,
                this._tempDisplayObjectParent = {
                    worldTransform: new s.Matrix,
                    worldAlpha: 1,
                    children: []
                },
                this._lastObjectRendered = this._tempDisplayObjectParent
            }
            (n.prototype = Object.create(h.prototype)).constructor = n,
            e.exports = n,
            Object.defineProperties(n.prototype, {
                backgroundColor: {
                    get: function() {
                        return this._backgroundColor
                    },
                    set: function(t) {
                        this._backgroundColor = t,
                        this._backgroundColorString = o.hex2string(t),
                        o.hex2rgb(t, this._backgroundColorRgb)
                    }
                }
            }),
            n.prototype.resize = function(t, e) {
                this.width = t * this.resolution,
                this.height = e * this.resolution,
                this.view.width = this.width,
                this.view.height = this.height,
                this.autoResize && (this.view.style.width = this.width / this.resolution + "px",
                this.view.style.height = this.height / this.resolution + "px")
            }
            ,
            n.prototype.destroy = function(t) {
                t && this.view.parent && this.view.parent.removeChild(this.view),
                this.type = a.RENDERER_TYPE.UNKNOWN,
                this.width = 0,
                this.height = 0,
                this.view = null,
                this.resolution = 0,
                this.transparent = !1,
                this.autoResize = !1,
                this.blendModes = null,
                this.preserveDrawingBuffer = !1,
                this.clearBeforeRender = !1,
                this._backgroundColor = 0,
                this._backgroundColorRgb = null,
                this._backgroundColorString = null
            }
        }
        , {
            "../const": 22,
            "../math": 32,
            "../utils": 76,
            eventemitter3: 11
        }],
        43: [function(t, e, i) {
            var n = t("../SystemRenderer")
              , r = t("./utils/CanvasMaskManager")
              , o = t("../../utils")
              , s = t("../../math")
              , a = t("../../const");
            function h(t, e, i) {
                n.call(this, "Canvas", t, e, i),
                this.type = a.RENDERER_TYPE.CANVAS,
                this.context = this.view.getContext("2d", {
                    alpha: this.transparent
                }),
                this.refresh = !0,
                this.maskManager = new r,
                this.roundPixels = !1,
                this.currentScaleMode = a.SCALE_MODES.DEFAULT,
                this.currentBlendMode = a.BLEND_MODES.NORMAL,
                this.smoothProperty = "imageSmoothingEnabled",
                this.context.imageSmoothingEnabled || (this.context.webkitImageSmoothingEnabled ? this.smoothProperty = "webkitImageSmoothingEnabled" : this.context.mozImageSmoothingEnabled ? this.smoothProperty = "mozImageSmoothingEnabled" : this.context.oImageSmoothingEnabled ? this.smoothProperty = "oImageSmoothingEnabled" : this.context.msImageSmoothingEnabled && (this.smoothProperty = "msImageSmoothingEnabled")),
                this.initPlugins(),
                this._mapBlendModes(),
                this._tempDisplayObjectParent = {
                    worldTransform: new s.Matrix,
                    worldAlpha: 1
                },
                this.resize(t, e)
            }
            (h.prototype = Object.create(n.prototype)).constructor = h,
            e.exports = h,
            o.pluginTarget.mixin(h),
            h.prototype.render = function(t) {
                var e = t.parent;
                (this._lastObjectRendered = t).parent = this._tempDisplayObjectParent,
                t.updateTransform(),
                t.parent = e,
                this.context.setTransform(1, 0, 0, 1, 0, 0),
                this.context.globalAlpha = 1,
                this.currentBlendMode = a.BLEND_MODES.NORMAL,
                this.context.globalCompositeOperation = this.blendModes[a.BLEND_MODES.NORMAL],
                navigator.isCocoonJS && this.view.screencanvas && (this.context.fillStyle = "black",
                this.context.clear()),
                this.clearBeforeRender && (this.transparent ? this.context.clearRect(0, 0, this.width, this.height) : (this.context.fillStyle = this._backgroundColorString,
                this.context.fillRect(0, 0, this.width, this.height))),
                this.renderDisplayObject(t, this.context)
            }
            ,
            h.prototype.destroy = function(t) {
                this.destroyPlugins(),
                n.prototype.destroy.call(this, t),
                this.context = null,
                this.refresh = !0,
                this.maskManager.destroy(),
                this.maskManager = null,
                this.roundPixels = !1,
                this.currentScaleMode = 0,
                this.currentBlendMode = 0,
                this.smoothProperty = null
            }
            ,
            h.prototype.renderDisplayObject = function(t, e) {
                var i = this.context;
                this.context = e,
                t.renderCanvas(this),
                this.context = i
            }
            ,
            h.prototype.resize = function(t, e) {
                n.prototype.resize.call(this, t, e),
                this.currentScaleMode = a.SCALE_MODES.DEFAULT,
                this.smoothProperty && (this.context[this.smoothProperty] = this.currentScaleMode === a.SCALE_MODES.LINEAR)
            }
            ,
            h.prototype._mapBlendModes = function() {
                this.blendModes || (this.blendModes = {},
                o.canUseNewCanvasBlendModes() ? (this.blendModes[a.BLEND_MODES.NORMAL] = "source-over",
                this.blendModes[a.BLEND_MODES.ADD] = "lighter",
                this.blendModes[a.BLEND_MODES.MULTIPLY] = "multiply",
                this.blendModes[a.BLEND_MODES.SCREEN] = "screen",
                this.blendModes[a.BLEND_MODES.OVERLAY] = "overlay",
                this.blendModes[a.BLEND_MODES.DARKEN] = "darken",
                this.blendModes[a.BLEND_MODES.LIGHTEN] = "lighten",
                this.blendModes[a.BLEND_MODES.COLOR_DODGE] = "color-dodge",
                this.blendModes[a.BLEND_MODES.COLOR_BURN] = "color-burn",
                this.blendModes[a.BLEND_MODES.HARD_LIGHT] = "hard-light",
                this.blendModes[a.BLEND_MODES.SOFT_LIGHT] = "soft-light",
                this.blendModes[a.BLEND_MODES.DIFFERENCE] = "difference",
                this.blendModes[a.BLEND_MODES.EXCLUSION] = "exclusion",
                this.blendModes[a.BLEND_MODES.HUE] = "hue",
                this.blendModes[a.BLEND_MODES.SATURATION] = "saturate",
                this.blendModes[a.BLEND_MODES.COLOR] = "color",
                this.blendModes[a.BLEND_MODES.LUMINOSITY] = "luminosity") : (this.blendModes[a.BLEND_MODES.NORMAL] = "source-over",
                this.blendModes[a.BLEND_MODES.ADD] = "lighter",
                this.blendModes[a.BLEND_MODES.MULTIPLY] = "source-over",
                this.blendModes[a.BLEND_MODES.SCREEN] = "source-over",
                this.blendModes[a.BLEND_MODES.OVERLAY] = "source-over",
                this.blendModes[a.BLEND_MODES.DARKEN] = "source-over",
                this.blendModes[a.BLEND_MODES.LIGHTEN] = "source-over",
                this.blendModes[a.BLEND_MODES.COLOR_DODGE] = "source-over",
                this.blendModes[a.BLEND_MODES.COLOR_BURN] = "source-over",
                this.blendModes[a.BLEND_MODES.HARD_LIGHT] = "source-over",
                this.blendModes[a.BLEND_MODES.SOFT_LIGHT] = "source-over",
                this.blendModes[a.BLEND_MODES.DIFFERENCE] = "source-over",
                this.blendModes[a.BLEND_MODES.EXCLUSION] = "source-over",
                this.blendModes[a.BLEND_MODES.HUE] = "source-over",
                this.blendModes[a.BLEND_MODES.SATURATION] = "source-over",
                this.blendModes[a.BLEND_MODES.COLOR] = "source-over",
                this.blendModes[a.BLEND_MODES.LUMINOSITY] = "source-over"))
            }
        }
        , {
            "../../const": 22,
            "../../math": 32,
            "../../utils": 76,
            "../SystemRenderer": 42,
            "./utils/CanvasMaskManager": 46
        }],
        44: [function(t, e, i) {
            function n(t, e) {
                this.canvas = document.createElement("canvas"),
                this.context = this.canvas.getContext("2d"),
                this.canvas.width = t,
                this.canvas.height = e
            }
            n.prototype.constructor = n,
            e.exports = n,
            Object.defineProperties(n.prototype, {
                width: {
                    get: function() {
                        return this.canvas.width
                    },
                    set: function(t) {
                        this.canvas.width = t
                    }
                },
                height: {
                    get: function() {
                        return this.canvas.height
                    },
                    set: function(t) {
                        this.canvas.height = t
                    }
                }
            }),
            n.prototype.clear = function() {
                this.context.setTransform(1, 0, 0, 1, 0, 0),
                this.context.clearRect(0, 0, this.canvas.width, this.canvas.height)
            }
            ,
            n.prototype.resize = function(t, e) {
                this.canvas.width = t,
                this.canvas.height = e
            }
            ,
            n.prototype.destroy = function() {
                this.context = null,
                this.canvas = null
            }
        }
        , {}],
        45: [function(t, e, i) {
            var E = t("../../../const")
              , n = {};
            (e.exports = n).renderGraphics = function(t, e) {
                var i = t.worldAlpha;
                t.dirty && (this.updateGraphicsTint(t),
                t.dirty = !1);
                for (var n = 0; n < t.graphicsData.length; n++) {
                    var r = t.graphicsData[n]
                      , o = r.shape
                      , s = r._fillTint
                      , a = r._lineTint;
                    if (e.lineWidth = r.lineWidth,
                    r.type === E.SHAPES.POLY) {
                        e.beginPath();
                        var h = o.points;
                        e.moveTo(h[0], h[1]);
                        for (var l = 1; l < h.length / 2; l++)
                            e.lineTo(h[2 * l], h[2 * l + 1]);
                        o.closed && e.lineTo(h[0], h[1]),
                        h[0] === h[h.length - 2] && h[1] === h[h.length - 1] && e.closePath(),
                        r.fill && (e.globalAlpha = r.fillAlpha * i,
                        e.fillStyle = "#" + ("00000" + (0 | s).toString(16)).substr(-6),
                        e.fill()),
                        r.lineWidth && (e.globalAlpha = r.lineAlpha * i,
                        e.strokeStyle = "#" + ("00000" + (0 | a).toString(16)).substr(-6),
                        e.stroke())
                    } else if (r.type === E.SHAPES.RECT)
                        (r.fillColor || 0 === r.fillColor) && (e.globalAlpha = r.fillAlpha * i,
                        e.fillStyle = "#" + ("00000" + (0 | s).toString(16)).substr(-6),
                        e.fillRect(o.x, o.y, o.width, o.height)),
                        r.lineWidth && (e.globalAlpha = r.lineAlpha * i,
                        e.strokeStyle = "#" + ("00000" + (0 | a).toString(16)).substr(-6),
                        e.strokeRect(o.x, o.y, o.width, o.height));
                    else if (r.type === E.SHAPES.CIRC)
                        e.beginPath(),
                        e.arc(o.x, o.y, o.radius, 0, 2 * Math.PI),
                        e.closePath(),
                        r.fill && (e.globalAlpha = r.fillAlpha * i,
                        e.fillStyle = "#" + ("00000" + (0 | s).toString(16)).substr(-6),
                        e.fill()),
                        r.lineWidth && (e.globalAlpha = r.lineAlpha * i,
                        e.strokeStyle = "#" + ("00000" + (0 | a).toString(16)).substr(-6),
                        e.stroke());
                    else if (r.type === E.SHAPES.ELIP) {
                        var u = 2 * o.width
                          , c = 2 * o.height
                          , p = o.x - u / 2
                          , d = o.y - c / 2;
                        e.beginPath();
                        var f = u / 2 * .5522848
                          , g = c / 2 * .5522848
                          , y = p + u
                          , m = d + c
                          , v = p + u / 2
                          , S = d + c / 2;
                        e.moveTo(p, S),
                        e.bezierCurveTo(p, S - g, v - f, d, v, d),
                        e.bezierCurveTo(v + f, d, y, S - g, y, S),
                        e.bezierCurveTo(y, S + g, v + f, m, v, m),
                        e.bezierCurveTo(v - f, m, p, S + g, p, S),
                        e.closePath(),
                        r.fill && (e.globalAlpha = r.fillAlpha * i,
                        e.fillStyle = "#" + ("00000" + (0 | s).toString(16)).substr(-6),
                        e.fill()),
                        r.lineWidth && (e.globalAlpha = r.lineAlpha * i,
                        e.strokeStyle = "#" + ("00000" + (0 | a).toString(16)).substr(-6),
                        e.stroke())
                    } else if (r.type === E.SHAPES.RREC) {
                        var x = o.x
                          , b = o.y
                          , T = o.width
                          , _ = o.height
                          , w = o.radius
                          , C = Math.min(T, _) / 2 | 0;
                        w = C < w ? C : w,
                        e.beginPath(),
                        e.moveTo(x, b + w),
                        e.lineTo(x, b + _ - w),
                        e.quadraticCurveTo(x, b + _, x + w, b + _),
                        e.lineTo(x + T - w, b + _),
                        e.quadraticCurveTo(x + T, b + _, x + T, b + _ - w),
                        e.lineTo(x + T, b + w),
                        e.quadraticCurveTo(x + T, b, x + T - w, b),
                        e.lineTo(x + w, b),
                        e.quadraticCurveTo(x, b, x, b + w),
                        e.closePath(),
                        (r.fillColor || 0 === r.fillColor) && (e.globalAlpha = r.fillAlpha * i,
                        e.fillStyle = "#" + ("00000" + (0 | s).toString(16)).substr(-6),
                        e.fill()),
                        r.lineWidth && (e.globalAlpha = r.lineAlpha * i,
                        e.strokeStyle = "#" + ("00000" + (0 | a).toString(16)).substr(-6),
                        e.stroke())
                    }
                }
            }
            ,
            n.renderGraphicsMask = function(t, e) {
                var i = t.graphicsData.length;
                if (0 !== i) {
                    e.beginPath();
                    for (var n = 0; n < i; n++) {
                        var r = t.graphicsData[n]
                          , o = r.shape;
                        if (r.type === E.SHAPES.POLY) {
                            var s = o.points;
                            e.moveTo(s[0], s[1]);
                            for (var a = 1; a < s.length / 2; a++)
                                e.lineTo(s[2 * a], s[2 * a + 1]);
                            s[0] === s[s.length - 2] && s[1] === s[s.length - 1] && e.closePath()
                        } else if (r.type === E.SHAPES.RECT)
                            e.rect(o.x, o.y, o.width, o.height),
                            e.closePath();
                        else if (r.type === E.SHAPES.CIRC)
                            e.arc(o.x, o.y, o.radius, 0, 2 * Math.PI),
                            e.closePath();
                        else if (r.type === E.SHAPES.ELIP) {
                            var h = 2 * o.width
                              , l = 2 * o.height
                              , u = o.x - h / 2
                              , c = o.y - l / 2
                              , p = h / 2 * .5522848
                              , d = l / 2 * .5522848
                              , f = u + h
                              , g = c + l
                              , y = u + h / 2
                              , m = c + l / 2;
                            e.moveTo(u, m),
                            e.bezierCurveTo(u, m - d, y - p, c, y, c),
                            e.bezierCurveTo(y + p, c, f, m - d, f, m),
                            e.bezierCurveTo(f, m + d, y + p, g, y, g),
                            e.bezierCurveTo(y - p, g, u, m + d, u, m),
                            e.closePath()
                        } else if (r.type === E.SHAPES.RREC) {
                            var v = o.x
                              , S = o.y
                              , x = o.width
                              , b = o.height
                              , T = o.radius
                              , _ = Math.min(x, b) / 2 | 0;
                            T = _ < T ? _ : T,
                            e.moveTo(v, S + T),
                            e.lineTo(v, S + b - T),
                            e.quadraticCurveTo(v, S + b, v + T, S + b),
                            e.lineTo(v + x - T, S + b),
                            e.quadraticCurveTo(v + x, S + b, v + x, S + b - T),
                            e.lineTo(v + x, S + T),
                            e.quadraticCurveTo(v + x, S, v + x - T, S),
                            e.lineTo(v + T, S),
                            e.quadraticCurveTo(v, S, v, S + T),
                            e.closePath()
                        }
                    }
                }
            }
            ,
            n.updateGraphicsTint = function(t) {
                if (16777215 !== t.tint)
                    for (var e = (t.tint >> 16 & 255) / 255, i = (t.tint >> 8 & 255) / 255, n = (255 & t.tint) / 255, r = 0; r < t.graphicsData.length; r++) {
                        var o = t.graphicsData[r]
                          , s = 0 | o.fillColor
                          , a = 0 | o.lineColor;
                        o._fillTint = ((s >> 16 & 255) / 255 * e * 255 << 16) + ((s >> 8 & 255) / 255 * i * 255 << 8) + (255 & s) / 255 * n * 255,
                        o._lineTint = ((a >> 16 & 255) / 255 * e * 255 << 16) + ((a >> 8 & 255) / 255 * i * 255 << 8) + (255 & a) / 255 * n * 255
                    }
            }
        }
        , {
            "../../../const": 22
        }],
        46: [function(t, e, i) {
            var o = t("./CanvasGraphics");
            function n() {}
            n.prototype.constructor = n,
            (e.exports = n).prototype.pushMask = function(t, e) {
                e.context.save();
                var i = t.alpha
                  , n = t.worldTransform
                  , r = e.resolution;
                e.context.setTransform(n.a * r, n.b * r, n.c * r, n.d * r, n.tx * r, n.ty * r),
                t.texture || (o.renderGraphicsMask(t, e.context),
                e.context.clip()),
                t.worldAlpha = i
            }
            ,
            n.prototype.popMask = function(t) {
                t.context.restore()
            }
            ,
            n.prototype.destroy = function() {}
        }
        , {
            "./CanvasGraphics": 45
        }],
        47: [function(t, e, i) {
            var p = t("../../../utils")
              , s = {};
            (e.exports = s).getTintedTexture = function(t, e) {
                var i = t.texture
                  , n = "#" + ("00000" + (0 | (e = s.roundColor(e))).toString(16)).substr(-6);
                if (i.tintCache = i.tintCache || {},
                i.tintCache[n])
                    return i.tintCache[n];
                var r = s.canvas || document.createElement("canvas");
                if (s.tintMethod(i, e, r),
                s.convertTintToImage) {
                    var o = new Image;
                    o.src = r.toDataURL(),
                    i.tintCache[n] = o
                } else
                    i.tintCache[n] = r,
                    s.canvas = null;
                return r
            }
            ,
            s.tintWithMultiply = function(t, e, i) {
                var n = i.getContext("2d")
                  , r = t.crop;
                i.width = r.width,
                i.height = r.height,
                n.fillStyle = "#" + ("00000" + (0 | e).toString(16)).substr(-6),
                n.fillRect(0, 0, r.width, r.height),
                n.globalCompositeOperation = "multiply",
                n.drawImage(t.baseTexture.source, r.x, r.y, r.width, r.height, 0, 0, r.width, r.height),
                n.globalCompositeOperation = "destination-atop",
                n.drawImage(t.baseTexture.source, r.x, r.y, r.width, r.height, 0, 0, r.width, r.height)
            }
            ,
            s.tintWithOverlay = function(t, e, i) {
                var n = i.getContext("2d")
                  , r = t.crop;
                i.width = r.width,
                i.height = r.height,
                n.globalCompositeOperation = "copy",
                n.fillStyle = "#" + ("00000" + (0 | e).toString(16)).substr(-6),
                n.fillRect(0, 0, r.width, r.height),
                n.globalCompositeOperation = "destination-atop",
                n.drawImage(t.baseTexture.source, r.x, r.y, r.width, r.height, 0, 0, r.width, r.height)
            }
            ,
            s.tintWithPerPixel = function(t, e, i) {
                var n = i.getContext("2d")
                  , r = t.crop;
                i.width = r.width,
                i.height = r.height,
                n.globalCompositeOperation = "copy",
                n.drawImage(t.baseTexture.source, r.x, r.y, r.width, r.height, 0, 0, r.width, r.height);
                for (var o = p.hex2rgb(e), s = o[0], a = o[1], h = o[2], l = n.getImageData(0, 0, r.width, r.height), u = l.data, c = 0; c < u.length; c += 4)
                    u[c + 0] *= s,
                    u[c + 1] *= a,
                    u[c + 2] *= h;
                n.putImageData(l, 0, 0)
            }
            ,
            s.roundColor = function(t) {
                var e = s.cacheStepsPerColorChannel
                  , i = p.hex2rgb(t);
                return i[0] = Math.min(255, i[0] / e * e),
                i[1] = Math.min(255, i[1] / e * e),
                i[2] = Math.min(255, i[2] / e * e),
                p.rgb2hex(i)
            }
            ,
            s.cacheStepsPerColorChannel = 8,
            s.convertTintToImage = !1,
            s.canUseMultiply = p.canUseNewCanvasBlendModes(),
            s.tintMethod = s.canUseMultiply ? s.tintWithMultiply : s.tintWithPerPixel
        }
        , {
            "../../../utils": 76
        }],
        48: [function(t, e, i) {
            var n = t("../SystemRenderer")
              , r = t("./managers/ShaderManager")
              , o = t("./managers/MaskManager")
              , s = t("./managers/StencilManager")
              , a = t("./managers/FilterManager")
              , h = t("./managers/BlendModeManager")
              , l = t("./utils/RenderTarget")
              , u = t("./utils/ObjectRenderer")
              , c = t("./filters/FXAAFilter")
              , p = t("../../utils")
              , d = t("../../const");
            function f(t, e, i) {
                i = i || {},
                n.call(this, "WebGL", t, e, i),
                this.type = d.RENDERER_TYPE.WEBGL,
                this.handleContextLost = this.handleContextLost.bind(this),
                this.handleContextRestored = this.handleContextRestored.bind(this),
                this.view.addEventListener("webglcontextlost", this.handleContextLost, !1),
                this.view.addEventListener("webglcontextrestored", this.handleContextRestored, !1),
                this._useFXAA = !!i.forceFXAA && i.antialias,
                this._FXAAFilter = null,
                this._contextOptions = {
                    alpha: this.transparent,
                    antialias: i.antialias,
                    premultipliedAlpha: this.transparent && "notMultiplied" !== this.transparent,
                    stencil: !0,
                    preserveDrawingBuffer: i.preserveDrawingBuffer
                },
                this.drawCount = 0,
                this.shaderManager = new r(this),
                this.maskManager = new o(this),
                this.stencilManager = new s(this),
                this.filterManager = new a(this),
                this.blendModeManager = new h(this),
                this.currentRenderTarget = null,
                this.currentRenderer = new u(this),
                this.initPlugins(),
                this._createContext(),
                this._initContext(),
                this._mapGlModes(),
                this._renderTargetStack = []
            }
            (f.prototype = Object.create(n.prototype)).constructor = f,
            e.exports = f,
            p.pluginTarget.mixin(f),
            f.glContextId = 0,
            f.prototype._createContext = function() {
                var t = this.view.getContext("webgl", this._contextOptions) || this.view.getContext("experimental-webgl", this._contextOptions);
                if (!(this.gl = t))
                    throw new Error("This browser does not support webGL. Try using the canvas renderer");
                this.glContextId = f.glContextId++,
                t.id = this.glContextId,
                t.renderer = this
            }
            ,
            f.prototype._initContext = function() {
                var t = this.gl;
                t.disable(t.DEPTH_TEST),
                t.disable(t.CULL_FACE),
                t.enable(t.BLEND),
                this.renderTarget = new l(t,this.width,this.height,null,this.resolution,!0),
                this.setRenderTarget(this.renderTarget),
                this.emit("context", t),
                this.resize(this.width, this.height),
                this._useFXAA || (this._useFXAA = this._contextOptions.antialias && !t.getContextAttributes().antialias),
                this._useFXAA && (window.console.warn("FXAA antialiasing being used instead of native antialiasing"),
                this._FXAAFilter = [new c])
            }
            ,
            f.prototype.render = function(t) {
                if (!this.gl.isContextLost()) {
                    this.drawCount = 0,
                    this._lastObjectRendered = t,
                    this._useFXAA && (this._FXAAFilter[0].uniforms.resolution.value.x = this.width,
                    this._FXAAFilter[0].uniforms.resolution.value.y = this.height,
                    t.filterArea = this.renderTarget.size,
                    t.filters = this._FXAAFilter);
                    var e = t.parent;
                    t.parent = this._tempDisplayObjectParent,
                    t.updateTransform(),
                    t.parent = e;
                    var i = this.gl;
                    this.setRenderTarget(this.renderTarget),
                    this.clearBeforeRender && (this.transparent ? i.clearColor(0, 0, 0, 0) : i.clearColor(this._backgroundColorRgb[0], this._backgroundColorRgb[1], this._backgroundColorRgb[2], 1),
                    i.clear(i.COLOR_BUFFER_BIT)),
                    this.renderDisplayObject(t, this.renderTarget)
                }
            }
            ,
            f.prototype.renderDisplayObject = function(t, e, i) {
                this.setRenderTarget(e),
                i && e.clear(),
                this.filterManager.setFilterStack(e.filterStack),
                t.renderWebGL(this),
                this.currentRenderer.flush()
            }
            ,
            f.prototype.setObjectRenderer = function(t) {
                this.currentRenderer !== t && (this.currentRenderer.stop(),
                this.currentRenderer = t,
                this.currentRenderer.start())
            }
            ,
            f.prototype.setRenderTarget = function(t) {
                this.currentRenderTarget !== t && (this.currentRenderTarget = t,
                this.currentRenderTarget.activate(),
                this.stencilManager.setMaskStack(t.stencilMaskStack))
            }
            ,
            f.prototype.resize = function(t, e) {
                n.prototype.resize.call(this, t, e),
                this.filterManager.resize(t, e),
                this.renderTarget.resize(t, e),
                this.currentRenderTarget === this.renderTarget && (this.renderTarget.activate(),
                this.gl.viewport(0, 0, this.width, this.height))
            }
            ,
            f.prototype.updateTexture = function(t) {
                if ((t = t.baseTexture || t).hasLoaded) {
                    var e = this.gl;
                    return t._glTextures[e.id] || (t._glTextures[e.id] = e.createTexture(),
                    t.on("update", this.updateTexture, this),
                    t.on("dispose", this.destroyTexture, this)),
                    e.bindTexture(e.TEXTURE_2D, t._glTextures[e.id]),
                    e.pixelStorei(e.UNPACK_PREMULTIPLY_ALPHA_WEBGL, t.premultipliedAlpha),
                    e.texImage2D(e.TEXTURE_2D, 0, e.RGBA, e.RGBA, e.UNSIGNED_BYTE, t.source),
                    e.texParameteri(e.TEXTURE_2D, e.TEXTURE_MAG_FILTER, t.scaleMode === d.SCALE_MODES.LINEAR ? e.LINEAR : e.NEAREST),
                    t.mipmap && t.isPowerOfTwo ? (e.texParameteri(e.TEXTURE_2D, e.TEXTURE_MIN_FILTER, t.scaleMode === d.SCALE_MODES.LINEAR ? e.LINEAR_MIPMAP_LINEAR : e.NEAREST_MIPMAP_NEAREST),
                    e.generateMipmap(e.TEXTURE_2D)) : e.texParameteri(e.TEXTURE_2D, e.TEXTURE_MIN_FILTER, t.scaleMode === d.SCALE_MODES.LINEAR ? e.LINEAR : e.NEAREST),
                    t.isPowerOfTwo ? (e.texParameteri(e.TEXTURE_2D, e.TEXTURE_WRAP_S, e.REPEAT),
                    e.texParameteri(e.TEXTURE_2D, e.TEXTURE_WRAP_T, e.REPEAT)) : (e.texParameteri(e.TEXTURE_2D, e.TEXTURE_WRAP_S, e.CLAMP_TO_EDGE),
                    e.texParameteri(e.TEXTURE_2D, e.TEXTURE_WRAP_T, e.CLAMP_TO_EDGE)),
                    t._glTextures[e.id]
                }
            }
            ,
            f.prototype.destroyTexture = function(t) {
                (t = t.baseTexture || t).hasLoaded && t._glTextures[this.gl.id] && this.gl.deleteTexture(t._glTextures[this.gl.id])
            }
            ,
            f.prototype.handleContextLost = function(t) {
                t.preventDefault()
            }
            ,
            f.prototype.handleContextRestored = function() {
                for (var t in this._initContext(),
                p.BaseTextureCache)
                    p.BaseTextureCache[t]._glTextures.length = 0
            }
            ,
            f.prototype.destroy = function(t) {
                this.destroyPlugins(),
                this.view.removeEventListener("webglcontextlost", this.handleContextLost),
                this.view.removeEventListener("webglcontextrestored", this.handleContextRestored),
                n.prototype.destroy.call(this, t),
                this.uid = 0,
                this.shaderManager.destroy(),
                this.maskManager.destroy(),
                this.stencilManager.destroy(),
                this.filterManager.destroy(),
                this.shaderManager = null,
                this.maskManager = null,
                this.filterManager = null,
                this.blendModeManager = null,
                this.handleContextLost = null,
                this.handleContextRestored = null,
                this._contextOptions = null,
                this.drawCount = 0,
                this.gl = null
            }
            ,
            f.prototype._mapGlModes = function() {
                var t = this.gl;
                this.blendModes || (this.blendModes = {},
                this.blendModes[d.BLEND_MODES.NORMAL] = [t.ONE, t.ONE_MINUS_SRC_ALPHA],
                this.blendModes[d.BLEND_MODES.ADD] = [t.SRC_ALPHA, t.DST_ALPHA],
                this.blendModes[d.BLEND_MODES.MULTIPLY] = [t.DST_COLOR, t.ONE_MINUS_SRC_ALPHA],
                this.blendModes[d.BLEND_MODES.SCREEN] = [t.SRC_ALPHA, t.ONE],
                this.blendModes[d.BLEND_MODES.OVERLAY] = [t.ONE, t.ONE_MINUS_SRC_ALPHA],
                this.blendModes[d.BLEND_MODES.DARKEN] = [t.ONE, t.ONE_MINUS_SRC_ALPHA],
                this.blendModes[d.BLEND_MODES.LIGHTEN] = [t.ONE, t.ONE_MINUS_SRC_ALPHA],
                this.blendModes[d.BLEND_MODES.COLOR_DODGE] = [t.ONE, t.ONE_MINUS_SRC_ALPHA],
                this.blendModes[d.BLEND_MODES.COLOR_BURN] = [t.ONE, t.ONE_MINUS_SRC_ALPHA],
                this.blendModes[d.BLEND_MODES.HARD_LIGHT] = [t.ONE, t.ONE_MINUS_SRC_ALPHA],
                this.blendModes[d.BLEND_MODES.SOFT_LIGHT] = [t.ONE, t.ONE_MINUS_SRC_ALPHA],
                this.blendModes[d.BLEND_MODES.DIFFERENCE] = [t.ONE, t.ONE_MINUS_SRC_ALPHA],
                this.blendModes[d.BLEND_MODES.EXCLUSION] = [t.ONE, t.ONE_MINUS_SRC_ALPHA],
                this.blendModes[d.BLEND_MODES.HUE] = [t.ONE, t.ONE_MINUS_SRC_ALPHA],
                this.blendModes[d.BLEND_MODES.SATURATION] = [t.ONE, t.ONE_MINUS_SRC_ALPHA],
                this.blendModes[d.BLEND_MODES.COLOR] = [t.ONE, t.ONE_MINUS_SRC_ALPHA],
                this.blendModes[d.BLEND_MODES.LUMINOSITY] = [t.ONE, t.ONE_MINUS_SRC_ALPHA]),
                this.drawModes || (this.drawModes = {},
                this.drawModes[d.DRAW_MODES.POINTS] = t.POINTS,
                this.drawModes[d.DRAW_MODES.LINES] = t.LINES,
                this.drawModes[d.DRAW_MODES.LINE_LOOP] = t.LINE_LOOP,
                this.drawModes[d.DRAW_MODES.LINE_STRIP] = t.LINE_STRIP,
                this.drawModes[d.DRAW_MODES.TRIANGLES] = t.TRIANGLES,
                this.drawModes[d.DRAW_MODES.TRIANGLE_STRIP] = t.TRIANGLE_STRIP,
                this.drawModes[d.DRAW_MODES.TRIANGLE_FAN] = t.TRIANGLE_FAN)
            }
        }
        , {
            "../../const": 22,
            "../../utils": 76,
            "../SystemRenderer": 42,
            "./filters/FXAAFilter": 50,
            "./managers/BlendModeManager": 52,
            "./managers/FilterManager": 53,
            "./managers/MaskManager": 54,
            "./managers/ShaderManager": 55,
            "./managers/StencilManager": 56,
            "./utils/ObjectRenderer": 62,
            "./utils/RenderTarget": 64
        }],
        49: [function(t, e, i) {
            var n = t("../shaders/TextureShader");
            function r(t, e, i) {
                this.shaders = [],
                this.padding = 0,
                this.uniforms = i || {},
                this.vertexSrc = t || n.defaultVertexSrc,
                this.fragmentSrc = e || n.defaultFragmentSrc
            }
            r.prototype.constructor = r,
            (e.exports = r).prototype.getShader = function(t) {
                var e = t.gl
                  , i = this.shaders[e.id];
                return i || (i = new n(t.shaderManager,this.vertexSrc,this.fragmentSrc,this.uniforms,this.attributes),
                this.shaders[e.id] = i),
                i
            }
            ,
            r.prototype.applyFilter = function(t, e, i, n) {
                var r = this.getShader(t);
                t.filterManager.applyFilter(r, e, i, n)
            }
            ,
            r.prototype.syncUniform = function(t) {
                for (var e = 0, i = this.shaders.length; e < i; ++e)
                    this.shaders[e].syncUniform(t)
            }
        }
        , {
            "../shaders/TextureShader": 61
        }],
        50: [function(t, e, i) {
            var n = t("./AbstractFilter");
            function r() {
                n.call(this, "\nprecision mediump float;\n\nattribute vec2 aVertexPosition;\nattribute vec2 aTextureCoord;\nattribute vec4 aColor;\n\nuniform mat3 projectionMatrix;\nuniform vec2 resolution;\n\nvarying vec2 vTextureCoord;\nvarying vec4 vColor;\n\nvarying vec2 vResolution;\n\n//texcoords computed in vertex step\n//to avoid dependent texture reads\nvarying vec2 v_rgbNW;\nvarying vec2 v_rgbNE;\nvarying vec2 v_rgbSW;\nvarying vec2 v_rgbSE;\nvarying vec2 v_rgbM;\n\n\nvoid texcoords(vec2 fragCoord, vec2 resolution,\n            out vec2 v_rgbNW, out vec2 v_rgbNE,\n            out vec2 v_rgbSW, out vec2 v_rgbSE,\n            out vec2 v_rgbM) {\n    vec2 inverseVP = 1.0 / resolution.xy;\n    v_rgbNW = (fragCoord + vec2(-1.0, -1.0)) * inverseVP;\n    v_rgbNE = (fragCoord + vec2(1.0, -1.0)) * inverseVP;\n    v_rgbSW = (fragCoord + vec2(-1.0, 1.0)) * inverseVP;\n    v_rgbSE = (fragCoord + vec2(1.0, 1.0)) * inverseVP;\n    v_rgbM = vec2(fragCoord * inverseVP);\n}\n\nvoid main(void){\n   gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\n   vTextureCoord = aTextureCoord;\n   vColor = vec4(aColor.rgb * aColor.a, aColor.a);\n   vResolution = resolution;\n\n   //compute the texture coords and send them to varyings\n   texcoords(aTextureCoord * resolution, resolution, v_rgbNW, v_rgbNE, v_rgbSW, v_rgbSE, v_rgbM);\n}\n", 'precision lowp float;\n\n\n/**\nBasic FXAA implementation based on the code on geeks3d.com with the\nmodification that the texture2DLod stuff was removed since it\'s\nunsupported by WebGL.\n\n--\n\nFrom:\nhttps://github.com/mitsuhiko/webgl-meincraft\n\nCopyright (c) 2011 by Armin Ronacher.\n\nSome rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are\nmet:\n\n    * Redistributions of source code must retain the above copyright\n      notice, this list of conditions and the following disclaimer.\n\n    * Redistributions in binary form must reproduce the above\n      copyright notice, this list of conditions and the following\n      disclaimer in the documentation and/or other materials provided\n      with the distribution.\n\n    * The names of the contributors may not be used to endorse or\n      promote products derived from this software without specific\n      prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n"AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\nLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\nA PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\nOWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\nLIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\nTHEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\n\n#ifndef FXAA_REDUCE_MIN\n    #define FXAA_REDUCE_MIN   (1.0/ 128.0)\n#endif\n#ifndef FXAA_REDUCE_MUL\n    #define FXAA_REDUCE_MUL   (1.0 / 8.0)\n#endif\n#ifndef FXAA_SPAN_MAX\n    #define FXAA_SPAN_MAX     8.0\n#endif\n\n//optimized version for mobile, where dependent\n//texture reads can be a bottleneck\nvec4 fxaa(sampler2D tex, vec2 fragCoord, vec2 resolution,\n            vec2 v_rgbNW, vec2 v_rgbNE,\n            vec2 v_rgbSW, vec2 v_rgbSE,\n            vec2 v_rgbM) {\n    vec4 color;\n    mediump vec2 inverseVP = vec2(1.0 / resolution.x, 1.0 / resolution.y);\n    vec3 rgbNW = texture2D(tex, v_rgbNW).xyz;\n    vec3 rgbNE = texture2D(tex, v_rgbNE).xyz;\n    vec3 rgbSW = texture2D(tex, v_rgbSW).xyz;\n    vec3 rgbSE = texture2D(tex, v_rgbSE).xyz;\n    vec4 texColor = texture2D(tex, v_rgbM);\n    vec3 rgbM  = texColor.xyz;\n    vec3 luma = vec3(0.299, 0.587, 0.114);\n    float lumaNW = dot(rgbNW, luma);\n    float lumaNE = dot(rgbNE, luma);\n    float lumaSW = dot(rgbSW, luma);\n    float lumaSE = dot(rgbSE, luma);\n    float lumaM  = dot(rgbM,  luma);\n    float lumaMin = min(lumaM, min(min(lumaNW, lumaNE), min(lumaSW, lumaSE)));\n    float lumaMax = max(lumaM, max(max(lumaNW, lumaNE), max(lumaSW, lumaSE)));\n\n    mediump vec2 dir;\n    dir.x = -((lumaNW + lumaNE) - (lumaSW + lumaSE));\n    dir.y =  ((lumaNW + lumaSW) - (lumaNE + lumaSE));\n\n    float dirReduce = max((lumaNW + lumaNE + lumaSW + lumaSE) *\n                          (0.25 * FXAA_REDUCE_MUL), FXAA_REDUCE_MIN);\n\n    float rcpDirMin = 1.0 / (min(abs(dir.x), abs(dir.y)) + dirReduce);\n    dir = min(vec2(FXAA_SPAN_MAX, FXAA_SPAN_MAX),\n              max(vec2(-FXAA_SPAN_MAX, -FXAA_SPAN_MAX),\n              dir * rcpDirMin)) * inverseVP;\n\n    vec3 rgbA = 0.5 * (\n        texture2D(tex, fragCoord * inverseVP + dir * (1.0 / 3.0 - 0.5)).xyz +\n        texture2D(tex, fragCoord * inverseVP + dir * (2.0 / 3.0 - 0.5)).xyz);\n    vec3 rgbB = rgbA * 0.5 + 0.25 * (\n        texture2D(tex, fragCoord * inverseVP + dir * -0.5).xyz +\n        texture2D(tex, fragCoord * inverseVP + dir * 0.5).xyz);\n\n    float lumaB = dot(rgbB, luma);\n    if ((lumaB < lumaMin) || (lumaB > lumaMax))\n        color = vec4(rgbA, texColor.a);\n    else\n        color = vec4(rgbB, texColor.a);\n    return color;\n}\n\n\nvarying vec2 vTextureCoord;\nvarying vec4 vColor;\nvarying vec2 vResolution;\n\n//texcoords computed in vertex step\n//to avoid dependent texture reads\nvarying vec2 v_rgbNW;\nvarying vec2 v_rgbNE;\nvarying vec2 v_rgbSW;\nvarying vec2 v_rgbSE;\nvarying vec2 v_rgbM;\n\nuniform sampler2D uSampler;\n\n\nvoid main(void){\n\n    gl_FragColor = fxaa(uSampler, vTextureCoord * vResolution, vResolution, v_rgbNW, v_rgbNE, v_rgbSW, v_rgbSE, v_rgbM);\n\n}\n', {
                    resolution: {
                        type: "v2",
                        value: {
                            x: 1,
                            y: 1
                        }
                    }
                })
            }
            (r.prototype = Object.create(n.prototype)).constructor = r,
            (e.exports = r).prototype.applyFilter = function(t, e, i) {
                var n = t.filterManager
                  , r = this.getShader(t);
                n.applyFilter(r, e, i)
            }
        }
        , {
            "./AbstractFilter": 49
        }],
        51: [function(t, e, i) {
            var n = t("./AbstractFilter")
              , r = t("../../../math");
            function o(t) {
                var e = new r.Matrix;
                n.call(this, "attribute vec2 aVertexPosition;\nattribute vec2 aTextureCoord;\nattribute vec4 aColor;\n\nuniform mat3 projectionMatrix;\nuniform mat3 otherMatrix;\n\nvarying vec2 vMaskCoord;\nvarying vec2 vTextureCoord;\nvarying vec4 vColor;\n\nvoid main(void)\n{\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\n    vTextureCoord = aTextureCoord;\n    vMaskCoord = ( otherMatrix * vec3( aTextureCoord, 1.0)  ).xy;\n    vColor = vec4(aColor.rgb * aColor.a, aColor.a);\n}\n", "precision lowp float;\n\nvarying vec2 vMaskCoord;\nvarying vec2 vTextureCoord;\nvarying vec4 vColor;\n\nuniform sampler2D uSampler;\nuniform float alpha;\nuniform sampler2D mask;\n\nvoid main(void)\n{\n    // check clip! this will stop the mask bleeding out from the edges\n    vec2 text = abs( vMaskCoord - 0.5 );\n    text = step(0.5, text);\n    float clip = 1.0 - max(text.y, text.x);\n    vec4 original = texture2D(uSampler, vTextureCoord);\n    vec4 masky = texture2D(mask, vMaskCoord);\n    original *= (masky.r * masky.a * alpha * clip);\n    gl_FragColor = original;\n}\n", {
                    mask: {
                        type: "sampler2D",
                        value: t._texture
                    },
                    alpha: {
                        type: "f",
                        value: 1
                    },
                    otherMatrix: {
                        type: "mat3",
                        value: e.toArray(!0)
                    }
                }),
                this.maskSprite = t,
                this.maskMatrix = e
            }
            (o.prototype = Object.create(n.prototype)).constructor = o,
            (e.exports = o).prototype.applyFilter = function(t, e, i) {
                var n = t.filterManager;
                this.uniforms.mask.value = this.maskSprite._texture,
                n.calculateMappedMatrix(e.frame, this.maskSprite, this.maskMatrix),
                this.uniforms.otherMatrix.value = this.maskMatrix.toArray(!0),
                this.uniforms.alpha.value = this.maskSprite.worldAlpha;
                var r = this.getShader(t);
                n.applyFilter(r, e, i)
            }
            ,
            Object.defineProperties(o.prototype, {
                map: {
                    get: function() {
                        return this.uniforms.mask.value
                    },
                    set: function(t) {
                        this.uniforms.mask.value = t
                    }
                },
                offset: {
                    get: function() {
                        return this.uniforms.offset.value
                    },
                    set: function(t) {
                        this.uniforms.offset.value = t
                    }
                }
            })
        }
        , {
            "../../../math": 32,
            "./AbstractFilter": 49
        }],
        52: [function(t, e, i) {
            var n = t("./WebGLManager");
            function r(t) {
                n.call(this, t),
                this.currentBlendMode = 99999
            }
            (r.prototype = Object.create(n.prototype)).constructor = r,
            (e.exports = r).prototype.setBlendMode = function(t) {
                if (this.currentBlendMode === t)
                    return !1;
                this.currentBlendMode = t;
                var e = this.renderer.blendModes[this.currentBlendMode];
                return this.renderer.gl.blendFunc(e[0], e[1]),
                !0
            }
        }
        , {
            "./WebGLManager": 57
        }],
        53: [function(t, e, i) {
            var n = t("./WebGLManager")
              , r = t("../utils/RenderTarget")
              , c = t("../../../const")
              , o = t("../utils/Quad")
              , l = t("../../../math");
            function s(t) {
                n.call(this, t),
                this.filterStack = [],
                this.filterStack.push({
                    renderTarget: t.currentRenderTarget,
                    filter: [],
                    bounds: null
                }),
                this.texturePool = [],
                this.textureSize = new l.Rectangle(0,0,t.width,t.height),
                this.currentFrame = null
            }
            (s.prototype = Object.create(n.prototype)).constructor = s,
            (e.exports = s).prototype.onContextChange = function() {
                this.texturePool.length = 0;
                var t = this.renderer.gl;
                this.quad = new o(t)
            }
            ,
            s.prototype.setFilterStack = function(t) {
                this.filterStack = t
            }
            ,
            s.prototype.pushFilter = function(t, e) {
                var i = t.filterArea ? t.filterArea.clone() : t.getBounds();
                i.x = 0 | i.x,
                i.y = 0 | i.y,
                i.width = 0 | i.width,
                i.height = 0 | i.height;
                var n = 0 | e[0].padding;
                if (i.x -= n,
                i.y -= n,
                i.width += 2 * n,
                i.height += 2 * n,
                this.renderer.currentRenderTarget.transform) {
                    var r = this.renderer.currentRenderTarget.transform;
                    i.x += r.tx,
                    i.y += r.ty,
                    this.capFilterArea(i),
                    i.x -= r.tx,
                    i.y -= r.ty
                } else
                    this.capFilterArea(i);
                if (0 < i.width && 0 < i.height) {
                    this.currentFrame = i;
                    var o = this.getRenderTarget();
                    this.renderer.setRenderTarget(o),
                    o.clear(),
                    this.filterStack.push({
                        renderTarget: o,
                        filter: e
                    })
                } else
                    this.filterStack.push({
                        renderTarget: null,
                        filter: e
                    })
            }
            ,
            s.prototype.popFilter = function() {
                var t = this.filterStack.pop()
                  , e = this.filterStack[this.filterStack.length - 1]
                  , i = t.renderTarget;
                if (t.renderTarget) {
                    var n = e.renderTarget
                      , r = this.renderer.gl;
                    this.currentFrame = i.frame,
                    this.quad.map(this.textureSize, i.frame),
                    r.bindBuffer(r.ARRAY_BUFFER, this.quad.vertexBuffer),
                    r.bindBuffer(r.ELEMENT_ARRAY_BUFFER, this.quad.indexBuffer);
                    var o = t.filter;
                    if (r.vertexAttribPointer(this.renderer.shaderManager.defaultShader.attributes.aVertexPosition, 2, r.FLOAT, !1, 0, 0),
                    r.vertexAttribPointer(this.renderer.shaderManager.defaultShader.attributes.aTextureCoord, 2, r.FLOAT, !1, 0, 32),
                    r.vertexAttribPointer(this.renderer.shaderManager.defaultShader.attributes.aColor, 4, r.FLOAT, !1, 0, 64),
                    this.renderer.blendModeManager.setBlendMode(c.BLEND_MODES.NORMAL),
                    1 === o.length)
                        o[0].uniforms.dimensions && (o[0].uniforms.dimensions.value[0] = this.renderer.width,
                        o[0].uniforms.dimensions.value[1] = this.renderer.height,
                        o[0].uniforms.dimensions.value[2] = this.quad.vertices[0],
                        o[0].uniforms.dimensions.value[3] = this.quad.vertices[5]),
                        o[0].applyFilter(this.renderer, i, n),
                        this.returnRenderTarget(i);
                    else {
                        for (var s = i, a = this.getRenderTarget(!0), h = 0; h < o.length - 1; h++) {
                            var l = o[h];
                            l.uniforms.dimensions && (l.uniforms.dimensions.value[0] = this.renderer.width,
                            l.uniforms.dimensions.value[1] = this.renderer.height,
                            l.uniforms.dimensions.value[2] = this.quad.vertices[0],
                            l.uniforms.dimensions.value[3] = this.quad.vertices[5]),
                            l.applyFilter(this.renderer, s, a);
                            var u = s;
                            s = a,
                            a = u
                        }
                        o[o.length - 1].applyFilter(this.renderer, s, n),
                        this.returnRenderTarget(s),
                        this.returnRenderTarget(a)
                    }
                    return t.filter
                }
            }
            ,
            s.prototype.getRenderTarget = function(t) {
                var e = this.texturePool.pop() || new r(this.renderer.gl,this.textureSize.width,this.textureSize.height,c.SCALE_MODES.LINEAR,this.renderer.resolution * c.FILTER_RESOLUTION);
                return e.frame = this.currentFrame,
                t && e.clear(!0),
                e
            }
            ,
            s.prototype.returnRenderTarget = function(t) {
                this.texturePool.push(t)
            }
            ,
            s.prototype.applyFilter = function(t, e, i, n) {
                var r = this.renderer.gl;
                this.renderer.setRenderTarget(i),
                n && i.clear(),
                this.renderer.shaderManager.setShader(t),
                t.uniforms.projectionMatrix.value = this.renderer.currentRenderTarget.projectionMatrix.toArray(!0),
                t.syncUniforms(),
                r.activeTexture(r.TEXTURE0),
                r.bindTexture(r.TEXTURE_2D, e.texture),
                r.drawElements(r.TRIANGLES, 6, r.UNSIGNED_SHORT, 0)
            }
            ,
            s.prototype.calculateMappedMatrix = function(t, e, i) {
                var n = e.worldTransform.copy(l.Matrix.TEMP_MATRIX)
                  , r = e._texture.baseTexture
                  , o = i.identity()
                  , s = this.textureSize.height / this.textureSize.width;
                o.translate(t.x / this.textureSize.width, t.y / this.textureSize.height),
                o.scale(1, s);
                var a = this.textureSize.width / r.width
                  , h = this.textureSize.height / r.height;
                return n.tx /= r.width * a,
                n.ty /= r.width * a,
                n.invert(),
                o.prepend(n),
                o.scale(1, 1 / s),
                o.scale(a, h),
                o.translate(e.anchor.x, e.anchor.y),
                o
            }
            ,
            s.prototype.capFilterArea = function(t) {
                t.x < 0 && (t.width += t.x,
                t.x = 0),
                t.y < 0 && (t.height += t.y,
                t.y = 0),
                t.x + t.width > this.textureSize.width && (t.width = this.textureSize.width - t.x),
                t.y + t.height > this.textureSize.height && (t.height = this.textureSize.height - t.y)
            }
            ,
            s.prototype.resize = function(t, e) {
                this.textureSize.width = t,
                this.textureSize.height = e;
                for (var i = 0; i < this.texturePool.length; i++)
                    this.texturePool[i].resize(t, e)
            }
            ,
            s.prototype.destroy = function() {
                var t = this.texturePool ? this.texturePool.length : 0;
                this.filterStack = null;
                for (var e = this.offsetY = 0; e < t; e++)
                    this.texturePool[e].destroy();
                this.texturePool = null
            }
        }
        , {
            "../../../const": 22,
            "../../../math": 32,
            "../utils/Quad": 63,
            "../utils/RenderTarget": 64,
            "./WebGLManager": 57
        }],
        54: [function(t, e, i) {
            var n = t("./WebGLManager")
              , r = t("../filters/SpriteMaskFilter");
            function o(t) {
                n.call(this, t),
                this.stencilStack = [],
                this.reverse = !0,
                this.count = 0,
                this.alphaMaskPool = []
            }
            (o.prototype = Object.create(n.prototype)).constructor = o,
            (e.exports = o).prototype.pushMask = function(t, e) {
                e.texture ? this.pushSpriteMask(t, e) : this.pushStencilMask(t, e)
            }
            ,
            o.prototype.popMask = function(t, e) {
                e.texture ? this.popSpriteMask(t, e) : this.popStencilMask(t, e)
            }
            ,
            o.prototype.pushSpriteMask = function(t, e) {
                var i = this.alphaMaskPool.pop();
                i || (i = [new r(e)]),
                i[0].maskSprite = e,
                this.renderer.filterManager.pushFilter(t, i)
            }
            ,
            o.prototype.popSpriteMask = function() {
                var t = this.renderer.filterManager.popFilter();
                this.alphaMaskPool.push(t)
            }
            ,
            o.prototype.pushStencilMask = function(t, e) {
                this.renderer.stencilManager.pushMask(e)
            }
            ,
            o.prototype.popStencilMask = function(t, e) {
                this.renderer.stencilManager.popMask(e)
            }
        }
        , {
            "../filters/SpriteMaskFilter": 51,
            "./WebGLManager": 57
        }],
        55: [function(t, e, i) {
            var n = t("./WebGLManager")
              , r = t("../shaders/TextureShader")
              , o = t("../shaders/ComplexPrimitiveShader")
              , s = t("../shaders/PrimitiveShader")
              , a = t("../../../utils");
            function h(t) {
                n.call(this, t),
                this.maxAttibs = 10,
                this.attribState = [],
                this.tempAttribState = [];
                for (var e = 0; e < this.maxAttibs; e++)
                    this.attribState[e] = !1;
                this.stack = [],
                this._currentId = -1,
                this.currentShader = null
            }
            (h.prototype = Object.create(n.prototype)).constructor = h,
            a.pluginTarget.mixin(h),
            (e.exports = h).prototype.onContextChange = function() {
                this.initPlugins();
                var t = this.renderer.gl;
                this.maxAttibs = t.getParameter(t.MAX_VERTEX_ATTRIBS),
                this.attribState = [];
                for (var e = 0; e < this.maxAttibs; e++)
                    this.attribState[e] = !1;
                this.defaultShader = new r(this),
                this.primitiveShader = new s(this),
                this.complexPrimitiveShader = new o(this)
            }
            ,
            h.prototype.setAttribs = function(t) {
                var e;
                for (e = 0; e < this.tempAttribState.length; e++)
                    this.tempAttribState[e] = !1;
                for (var i in t)
                    this.tempAttribState[t[i]] = !0;
                var n = this.renderer.gl;
                for (e = 0; e < this.attribState.length; e++)
                    this.attribState[e] !== this.tempAttribState[e] && (this.attribState[e] = this.tempAttribState[e],
                    this.attribState[e] ? n.enableVertexAttribArray(e) : n.disableVertexAttribArray(e))
            }
            ,
            h.prototype.setShader = function(t) {
                return this._currentId !== t.uid && (this._currentId = t.uid,
                this.currentShader = t,
                this.renderer.gl.useProgram(t.program),
                this.setAttribs(t.attributes),
                !0)
            }
            ,
            h.prototype.destroy = function() {
                n.prototype.destroy.call(this),
                this.destroyPlugins(),
                this.attribState = null,
                this.tempAttribState = null
            }
        }
        , {
            "../../../utils": 76,
            "../shaders/ComplexPrimitiveShader": 58,
            "../shaders/PrimitiveShader": 59,
            "../shaders/TextureShader": 61,
            "./WebGLManager": 57
        }],
        56: [function(t, e, i) {
            var n = t("./WebGLManager")
              , r = t("../../../utils");
            function o(t) {
                n.call(this, t),
                this.stencilMaskStack = null
            }
            (o.prototype = Object.create(n.prototype)).constructor = o,
            (e.exports = o).prototype.setMaskStack = function(t) {
                this.stencilMaskStack = t;
                var e = this.renderer.gl;
                0 === t.stencilStack.length ? e.disable(e.STENCIL_TEST) : e.enable(e.STENCIL_TEST)
            }
            ,
            o.prototype.pushStencil = function(t, e) {
                this.renderer.currentRenderTarget.attachStencilBuffer();
                var i = this.renderer.gl
                  , n = this.stencilMaskStack;
                this.bindGraphics(t, e, this.renderer),
                0 === n.stencilStack.length && (i.enable(i.STENCIL_TEST),
                i.clear(i.STENCIL_BUFFER_BIT),
                n.reverse = !0,
                n.count = 0),
                n.stencilStack.push(e);
                var r = n.count;
                i.colorMask(!1, !1, !1, !1),
                i.stencilFunc(i.ALWAYS, 0, 255),
                i.stencilOp(i.KEEP, i.KEEP, i.INVERT),
                1 === e.mode ? (i.drawElements(i.TRIANGLE_FAN, e.indices.length - 4, i.UNSIGNED_SHORT, 0),
                n.reverse ? (i.stencilFunc(i.EQUAL, 255 - r, 255),
                i.stencilOp(i.KEEP, i.KEEP, i.DECR)) : (i.stencilFunc(i.EQUAL, r, 255),
                i.stencilOp(i.KEEP, i.KEEP, i.INCR)),
                i.drawElements(i.TRIANGLE_FAN, 4, i.UNSIGNED_SHORT, 2 * (e.indices.length - 4)),
                n.reverse ? i.stencilFunc(i.EQUAL, 255 - (r + 1), 255) : i.stencilFunc(i.EQUAL, r + 1, 255),
                n.reverse = !n.reverse) : (n.reverse ? (i.stencilFunc(i.EQUAL, r, 255),
                i.stencilOp(i.KEEP, i.KEEP, i.INCR)) : (i.stencilFunc(i.EQUAL, 255 - r, 255),
                i.stencilOp(i.KEEP, i.KEEP, i.DECR)),
                i.drawElements(i.TRIANGLE_STRIP, e.indices.length, i.UNSIGNED_SHORT, 0),
                n.reverse ? i.stencilFunc(i.EQUAL, r + 1, 255) : i.stencilFunc(i.EQUAL, 255 - (r + 1), 255)),
                i.colorMask(!0, !0, !0, !0),
                i.stencilOp(i.KEEP, i.KEEP, i.KEEP),
                n.count++
            }
            ,
            o.prototype.bindGraphics = function(t, e) {
                this._currentGraphics = t;
                var i, n = this.renderer.gl;
                1 === e.mode ? (i = this.renderer.shaderManager.complexPrimitiveShader,
                this.renderer.shaderManager.setShader(i),
                n.uniformMatrix3fv(i.uniforms.translationMatrix._location, !1, t.worldTransform.toArray(!0)),
                n.uniformMatrix3fv(i.uniforms.projectionMatrix._location, !1, this.renderer.currentRenderTarget.projectionMatrix.toArray(!0)),
                n.uniform3fv(i.uniforms.tint._location, r.hex2rgb(t.tint)),
                n.uniform3fv(i.uniforms.color._location, e.color),
                n.uniform1f(i.uniforms.alpha._location, t.worldAlpha),
                n.bindBuffer(n.ARRAY_BUFFER, e.buffer),
                n.vertexAttribPointer(i.attributes.aVertexPosition, 2, n.FLOAT, !1, 8, 0)) : (i = this.renderer.shaderManager.primitiveShader,
                this.renderer.shaderManager.setShader(i),
                n.uniformMatrix3fv(i.uniforms.translationMatrix._location, !1, t.worldTransform.toArray(!0)),
                n.uniformMatrix3fv(i.uniforms.projectionMatrix._location, !1, this.renderer.currentRenderTarget.projectionMatrix.toArray(!0)),
                n.uniform3fv(i.uniforms.tint._location, r.hex2rgb(t.tint)),
                n.uniform1f(i.uniforms.alpha._location, t.worldAlpha),
                n.bindBuffer(n.ARRAY_BUFFER, e.buffer),
                n.vertexAttribPointer(i.attributes.aVertexPosition, 2, n.FLOAT, !1, 24, 0),
                n.vertexAttribPointer(i.attributes.aColor, 4, n.FLOAT, !1, 24, 8)),
                n.bindBuffer(n.ELEMENT_ARRAY_BUFFER, e.indexBuffer)
            }
            ,
            o.prototype.popStencil = function(t, e) {
                var i = this.renderer.gl
                  , n = this.stencilMaskStack;
                if (n.stencilStack.pop(),
                n.count--,
                0 === n.stencilStack.length)
                    i.disable(i.STENCIL_TEST);
                else {
                    var r = n.count;
                    this.bindGraphics(t, e, this.renderer),
                    i.colorMask(!1, !1, !1, !1),
                    1 === e.mode ? (n.reverse = !n.reverse,
                    n.reverse ? (i.stencilFunc(i.EQUAL, 255 - (r + 1), 255),
                    i.stencilOp(i.KEEP, i.KEEP, i.INCR)) : (i.stencilFunc(i.EQUAL, r + 1, 255),
                    i.stencilOp(i.KEEP, i.KEEP, i.DECR)),
                    i.drawElements(i.TRIANGLE_FAN, 4, i.UNSIGNED_SHORT, 2 * (e.indices.length - 4)),
                    i.stencilFunc(i.ALWAYS, 0, 255),
                    i.stencilOp(i.KEEP, i.KEEP, i.INVERT),
                    i.drawElements(i.TRIANGLE_FAN, e.indices.length - 4, i.UNSIGNED_SHORT, 0)) : (n.reverse ? (i.stencilFunc(i.EQUAL, r + 1, 255),
                    i.stencilOp(i.KEEP, i.KEEP, i.DECR)) : (i.stencilFunc(i.EQUAL, 255 - (r + 1), 255),
                    i.stencilOp(i.KEEP, i.KEEP, i.INCR)),
                    i.drawElements(i.TRIANGLE_STRIP, e.indices.length, i.UNSIGNED_SHORT, 0)),
                    n.reverse ? i.stencilFunc(i.EQUAL, r, 255) : i.stencilFunc(i.EQUAL, 255 - r, 255),
                    i.colorMask(!0, !0, !0, !0),
                    i.stencilOp(i.KEEP, i.KEEP, i.KEEP)
                }
            }
            ,
            o.prototype.destroy = function() {
                n.prototype.destroy.call(this),
                this.stencilMaskStack.stencilStack = null
            }
            ,
            o.prototype.pushMask = function(t) {
                this.renderer.setObjectRenderer(this.renderer.plugins.graphics),
                t.dirty && this.renderer.plugins.graphics.updateGraphics(t, this.renderer.gl),
                t._webGL[this.renderer.gl.id].data.length && this.pushStencil(t, t._webGL[this.renderer.gl.id].data[0], this.renderer)
            }
            ,
            o.prototype.popMask = function(t) {
                this.renderer.setObjectRenderer(this.renderer.plugins.graphics),
                this.popStencil(t, t._webGL[this.renderer.gl.id].data[0], this.renderer)
            }
        }
        , {
            "../../../utils": 76,
            "./WebGLManager": 57
        }],
        57: [function(t, e, i) {
            function n(t) {
                this.renderer = t,
                this.renderer.on("context", this.onContextChange, this)
            }
            n.prototype.constructor = n,
            (e.exports = n).prototype.onContextChange = function() {}
            ,
            n.prototype.destroy = function() {
                this.renderer.off("context", this.onContextChange, this),
                this.renderer = null
            }
        }
        , {}],
        58: [function(t, e, i) {
            var n = t("./Shader");
            function r(t) {
                n.call(this, t, ["attribute vec2 aVertexPosition;", "uniform mat3 translationMatrix;", "uniform mat3 projectionMatrix;", "uniform vec3 tint;", "uniform float alpha;", "uniform vec3 color;", "varying vec4 vColor;", "void main(void){", "   gl_Position = vec4((projectionMatrix * translationMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);", "   vColor = vec4(color * alpha * tint, alpha);", "}"].join("\n"), ["precision mediump float;", "varying vec4 vColor;", "void main(void){", "   gl_FragColor = vColor;", "}"].join("\n"), {
                    tint: {
                        type: "3f",
                        value: [0, 0, 0]
                    },
                    alpha: {
                        type: "1f",
                        value: 0
                    },
                    color: {
                        type: "3f",
                        value: [0, 0, 0]
                    },
                    translationMatrix: {
                        type: "mat3",
                        value: new Float32Array(9)
                    },
                    projectionMatrix: {
                        type: "mat3",
                        value: new Float32Array(9)
                    }
                }, {
                    aVertexPosition: 0
                })
            }
            (r.prototype = Object.create(n.prototype)).constructor = r,
            e.exports = r
        }
        , {
            "./Shader": 60
        }],
        59: [function(t, e, i) {
            var n = t("./Shader");
            function r(t) {
                n.call(this, t, ["attribute vec2 aVertexPosition;", "attribute vec4 aColor;", "uniform mat3 translationMatrix;", "uniform mat3 projectionMatrix;", "uniform float alpha;", "uniform float flipY;", "uniform vec3 tint;", "varying vec4 vColor;", "void main(void){", "   gl_Position = vec4((projectionMatrix * translationMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);", "   vColor = aColor * vec4(tint * alpha, alpha);", "}"].join("\n"), ["precision mediump float;", "varying vec4 vColor;", "void main(void){", "   gl_FragColor = vColor;", "}"].join("\n"), {
                    tint: {
                        type: "3f",
                        value: [0, 0, 0]
                    },
                    alpha: {
                        type: "1f",
                        value: 0
                    },
                    translationMatrix: {
                        type: "mat3",
                        value: new Float32Array(9)
                    },
                    projectionMatrix: {
                        type: "mat3",
                        value: new Float32Array(9)
                    }
                }, {
                    aVertexPosition: 0,
                    aColor: 0
                })
            }
            (r.prototype = Object.create(n.prototype)).constructor = r,
            e.exports = r
        }
        , {
            "./Shader": 60
        }],
        60: [function(t, e, i) {
            var a = t("../../../utils");
            function n(t, e, i, n, r) {
                if (!e || !i)
                    throw new Error("Pixi.js Error. Shader requires vertexSrc and fragmentSrc");
                this.uid = a.uid(),
                this.gl = t.renderer.gl,
                this.shaderManager = t,
                this.program = null,
                this.uniforms = n || {},
                this.attributes = r || {},
                this.textureCount = 1,
                this.vertexSrc = e,
                this.fragmentSrc = i,
                this.init()
            }
            n.prototype.constructor = n,
            (e.exports = n).prototype.init = function() {
                this.compile(),
                this.gl.useProgram(this.program),
                this.cacheUniformLocations(Object.keys(this.uniforms)),
                this.cacheAttributeLocations(Object.keys(this.attributes))
            }
            ,
            n.prototype.cacheUniformLocations = function(t) {
                for (var e = 0; e < t.length; ++e)
                    this.uniforms[t[e]]._location = this.gl.getUniformLocation(this.program, t[e])
            }
            ,
            n.prototype.cacheAttributeLocations = function(t) {
                for (var e = 0; e < t.length; ++e)
                    this.attributes[t[e]] = this.gl.getAttribLocation(this.program, t[e])
            }
            ,
            n.prototype.compile = function() {
                var t = this.gl
                  , e = this._glCompile(t.VERTEX_SHADER, this.vertexSrc)
                  , i = this._glCompile(t.FRAGMENT_SHADER, this.fragmentSrc)
                  , n = t.createProgram();
                return t.attachShader(n, e),
                t.attachShader(n, i),
                t.linkProgram(n),
                t.getProgramParameter(n, t.LINK_STATUS) || (console.error("Pixi.js Error: Could not initialize shader."),
                console.error("gl.VALIDATE_STATUS", t.getProgramParameter(n, t.VALIDATE_STATUS)),
                console.error("gl.getError()", t.getError()),
                "" !== t.getProgramInfoLog(n) && console.warn("Pixi.js Warning: gl.getProgramInfoLog()", t.getProgramInfoLog(n)),
                t.deleteProgram(n),
                n = null),
                t.deleteShader(e),
                t.deleteShader(i),
                this.program = n
            }
            ,
            n.prototype.syncUniform = function(t) {
                var e, i, n = t._location, r = t.value, o = this.gl;
                switch (t.type) {
                case "b":
                case "bool":
                case "boolean":
                    o.uniform1i(n, r ? 1 : 0);
                    break;
                case "i":
                case "1i":
                    o.uniform1i(n, r);
                    break;
                case "f":
                case "1f":
                    o.uniform1f(n, r);
                    break;
                case "2f":
                    o.uniform2f(n, r[0], r[1]);
                    break;
                case "3f":
                    o.uniform3f(n, r[0], r[1], r[2]);
                    break;
                case "4f":
                    o.uniform4f(n, r[0], r[1], r[2], r[3]);
                    break;
                case "v2":
                    o.uniform2f(n, r.x, r.y);
                    break;
                case "v3":
                    o.uniform3f(n, r.x, r.y, r.z);
                    break;
                case "v4":
                    o.uniform4f(n, r.x, r.y, r.z, r.w);
                    break;
                case "1iv":
                    o.uniform1iv(n, r);
                    break;
                case "2iv":
                    o.uniform2iv(n, r);
                    break;
                case "3iv":
                    o.uniform3iv(n, r);
                    break;
                case "4iv":
                    o.uniform4iv(n, r);
                    break;
                case "1fv":
                    o.uniform1fv(n, r);
                    break;
                case "2fv":
                    o.uniform2fv(n, r);
                    break;
                case "3fv":
                    o.uniform3fv(n, r);
                    break;
                case "4fv":
                    o.uniform4fv(n, r);
                    break;
                case "m2":
                case "mat2":
                case "Matrix2fv":
                    o.uniformMatrix2fv(n, t.transpose, r);
                    break;
                case "m3":
                case "mat3":
                case "Matrix3fv":
                    o.uniformMatrix3fv(n, t.transpose, r);
                    break;
                case "m4":
                case "mat4":
                case "Matrix4fv":
                    o.uniformMatrix4fv(n, t.transpose, r);
                    break;
                case "c":
                    "number" == typeof r && (r = a.hex2rgb(r)),
                    o.uniform3f(n, r[0], r[1], r[2]);
                    break;
                case "iv1":
                    o.uniform1iv(n, r);
                    break;
                case "iv":
                    o.uniform3iv(n, r);
                    break;
                case "fv1":
                    o.uniform1fv(n, r);
                    break;
                case "fv":
                    o.uniform3fv(n, r);
                    break;
                case "v2v":
                    for (t._array || (t._array = new Float32Array(2 * r.length)),
                    e = 0,
                    i = r.length; e < i; ++e)
                        t._array[2 * e] = r[e].x,
                        t._array[2 * e + 1] = r[e].y;
                    o.uniform2fv(n, t._array);
                    break;
                case "v3v":
                    for (t._array || (t._array = new Float32Array(3 * r.length)),
                    e = 0,
                    i = r.length; e < i; ++e)
                        t._array[3 * e] = r[e].x,
                        t._array[3 * e + 1] = r[e].y,
                        t._array[3 * e + 2] = r[e].z;
                    o.uniform3fv(n, t._array);
                    break;
                case "v4v":
                    for (t._array || (t._array = new Float32Array(4 * r.length)),
                    e = 0,
                    i = r.length; e < i; ++e)
                        t._array[4 * e] = r[e].x,
                        t._array[4 * e + 1] = r[e].y,
                        t._array[4 * e + 2] = r[e].z,
                        t._array[4 * e + 3] = r[e].w;
                    o.uniform4fv(n, t._array);
                    break;
                case "t":
                case "sampler2D":
                    if (!t.value || !t.value.baseTexture.hasLoaded)
                        break;
                    o.activeTexture(o["TEXTURE" + this.textureCount]);
                    var s = t.value.baseTexture._glTextures[o.id];
                    s || (this.initSampler2D(t),
                    s = t.value.baseTexture._glTextures[o.id]),
                    o.bindTexture(o.TEXTURE_2D, s),
                    o.uniform1i(t._location, this.textureCount),
                    this.textureCount++;
                    break;
                default:
                    console.warn("Pixi.js Shader Warning: Unknown uniform type: " + t.type)
                }
            }
            ,
            n.prototype.syncUniforms = function() {
                for (var t in this.textureCount = 1,
                this.uniforms)
                    this.syncUniform(this.uniforms[t])
            }
            ,
            n.prototype.initSampler2D = function(t) {
                var e = this.gl
                  , i = t.value.baseTexture;
                if (i.hasLoaded)
                    if (t.textureData) {
                        var n = t.textureData;
                        i._glTextures[e.id] = e.createTexture(),
                        e.bindTexture(e.TEXTURE_2D, i._glTextures[e.id]),
                        e.pixelStorei(e.UNPACK_PREMULTIPLY_ALPHA_WEBGL, i.premultipliedAlpha),
                        e.texImage2D(e.TEXTURE_2D, 0, n.luminance ? e.LUMINANCE : e.RGBA, e.RGBA, e.UNSIGNED_BYTE, i.source),
                        e.texParameteri(e.TEXTURE_2D, e.TEXTURE_MAG_FILTER, n.magFilter ? n.magFilter : e.LINEAR),
                        e.texParameteri(e.TEXTURE_2D, e.TEXTURE_MIN_FILTER, n.wrapS ? n.wrapS : e.CLAMP_TO_EDGE),
                        e.texParameteri(e.TEXTURE_2D, e.TEXTURE_WRAP_T, n.wrapS ? n.wrapS : e.CLAMP_TO_EDGE),
                        e.texParameteri(e.TEXTURE_2D, e.TEXTURE_WRAP_S, n.wrapT ? n.wrapT : e.CLAMP_TO_EDGE)
                    } else
                        this.shaderManager.renderer.updateTexture(i)
            }
            ,
            n.prototype.destroy = function() {
                this.gl.deleteProgram(this.program),
                this.gl = null,
                this.uniforms = null,
                this.attributes = null,
                this.vertexSrc = null,
                this.fragmentSrc = null
            }
            ,
            n.prototype._glCompile = function(t, e) {
                var i = this.gl.createShader(t);
                return this.gl.shaderSource(i, e),
                this.gl.compileShader(i),
                this.gl.getShaderParameter(i, this.gl.COMPILE_STATUS) ? i : (console.log(this.gl.getShaderInfoLog(i)),
                null)
            }
        }
        , {
            "../../../utils": 76
        }],
        61: [function(t, e, i) {
            var l = t("./Shader");
            function u(t, e, i, n, r) {
                var o = {
                    uSampler: {
                        type: "sampler2D",
                        value: 0
                    },
                    projectionMatrix: {
                        type: "mat3",
                        value: new Float32Array([1, 0, 0, 0, 1, 0, 0, 0, 1])
                    }
                };
                if (n)
                    for (var s in n)
                        o[s] = n[s];
                var a = {
                    aVertexPosition: 0,
                    aTextureCoord: 0,
                    aColor: 0
                };
                if (r)
                    for (var h in r)
                        a[h] = r[h];
                e = e || u.defaultVertexSrc,
                i = i || u.defaultFragmentSrc,
                l.call(this, t, e, i, o, a)
            }
            (u.prototype = Object.create(l.prototype)).constructor = u,
            (e.exports = u).defaultVertexSrc = ["precision lowp float;", "attribute vec2 aVertexPosition;", "attribute vec2 aTextureCoord;", "attribute vec4 aColor;", "uniform mat3 projectionMatrix;", "varying vec2 vTextureCoord;", "varying vec4 vColor;", "void main(void){", "   gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);", "   vTextureCoord = aTextureCoord;", "   vColor = vec4(aColor.rgb * aColor.a, aColor.a);", "}"].join("\n"),
            u.defaultFragmentSrc = ["precision lowp float;", "varying vec2 vTextureCoord;", "varying vec4 vColor;", "uniform sampler2D uSampler;", "void main(void){", "   gl_FragColor = texture2D(uSampler, vTextureCoord) * vColor ;", "}"].join("\n")
        }
        , {
            "./Shader": 60
        }],
        62: [function(t, e, i) {
            var n = t("../managers/WebGLManager");
            function r(t) {
                n.call(this, t)
            }
            (r.prototype = Object.create(n.prototype)).constructor = r,
            (e.exports = r).prototype.start = function() {}
            ,
            r.prototype.stop = function() {
                this.flush()
            }
            ,
            r.prototype.flush = function() {}
            ,
            r.prototype.render = function(t) {}
        }
        , {
            "../managers/WebGLManager": 57
        }],
        63: [function(t, e, i) {
            function n(t) {
                this.gl = t,
                this.vertices = new Float32Array([0, 0, 200, 0, 200, 200, 0, 200]),
                this.uvs = new Float32Array([0, 0, 1, 0, 1, 1, 0, 1]),
                this.colors = new Float32Array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]),
                this.indices = new Uint16Array([0, 1, 2, 0, 3, 2]),
                this.vertexBuffer = t.createBuffer(),
                this.indexBuffer = t.createBuffer(),
                t.bindBuffer(t.ARRAY_BUFFER, this.vertexBuffer),
                t.bufferData(t.ARRAY_BUFFER, 128, t.DYNAMIC_DRAW),
                t.bindBuffer(t.ELEMENT_ARRAY_BUFFER, this.indexBuffer),
                t.bufferData(t.ELEMENT_ARRAY_BUFFER, this.indices, t.STATIC_DRAW),
                this.upload()
            }
            (n.prototype.constructor = n).prototype.map = function(t, e) {
                var i = 0
                  , n = 0;
                this.uvs[0] = i,
                this.uvs[1] = n,
                this.uvs[2] = i + e.width / t.width,
                this.uvs[3] = n,
                this.uvs[4] = i + e.width / t.width,
                this.uvs[5] = n + e.height / t.height,
                this.uvs[6] = i,
                this.uvs[7] = n + e.height / t.height,
                i = e.x,
                n = e.y,
                this.vertices[0] = i,
                this.vertices[1] = n,
                this.vertices[2] = i + e.width,
                this.vertices[3] = n,
                this.vertices[4] = i + e.width,
                this.vertices[5] = n + e.height,
                this.vertices[6] = i,
                this.vertices[7] = n + e.height,
                this.upload()
            }
            ,
            n.prototype.upload = function() {
                var t = this.gl;
                t.bindBuffer(t.ARRAY_BUFFER, this.vertexBuffer),
                t.bufferSubData(t.ARRAY_BUFFER, 0, this.vertices),
                t.bufferSubData(t.ARRAY_BUFFER, 32, this.uvs),
                t.bufferSubData(t.ARRAY_BUFFER, 64, this.colors)
            }
            ,
            e.exports = n
        }
        , {}],
        64: [function(t, e, i) {
            var s = t("../../../math")
              , a = t("../../../utils")
              , h = t("../../../const")
              , l = t("./StencilMaskStack")
              , n = function(t, e, i, n, r, o) {
                (this.gl = t,
                this.frameBuffer = null,
                this.texture = null,
                this.size = new s.Rectangle(0,0,1,1),
                this.resolution = r || h.RESOLUTION,
                this.projectionMatrix = new s.Matrix,
                this.transform = null,
                this.frame = null,
                this.stencilBuffer = null,
                this.stencilMaskStack = new l,
                this.filterStack = [{
                    renderTarget: this,
                    filter: [],
                    bounds: this.size
                }],
                this.scaleMode = n || h.SCALE_MODES.DEFAULT,
                this.root = o,
                this.root) || (this.frameBuffer = t.createFramebuffer(),
                this.texture = t.createTexture(),
                t.bindTexture(t.TEXTURE_2D, this.texture),
                t.texParameteri(t.TEXTURE_2D, t.TEXTURE_MAG_FILTER, n === h.SCALE_MODES.LINEAR ? t.LINEAR : t.NEAREST),
                t.texParameteri(t.TEXTURE_2D, t.TEXTURE_MIN_FILTER, n === h.SCALE_MODES.LINEAR ? t.LINEAR : t.NEAREST),
                a.isPowerOfTwo(e, i) ? (t.texParameteri(t.TEXTURE_2D, t.TEXTURE_WRAP_S, t.REPEAT),
                t.texParameteri(t.TEXTURE_2D, t.TEXTURE_WRAP_T, t.REPEAT)) : (t.texParameteri(t.TEXTURE_2D, t.TEXTURE_WRAP_S, t.CLAMP_TO_EDGE),
                t.texParameteri(t.TEXTURE_2D, t.TEXTURE_WRAP_T, t.CLAMP_TO_EDGE)),
                t.bindFramebuffer(t.FRAMEBUFFER, this.frameBuffer),
                t.framebufferTexture2D(t.FRAMEBUFFER, t.COLOR_ATTACHMENT0, t.TEXTURE_2D, this.texture, 0));
                this.resize(e, i)
            };
            n.prototype.constructor = n,
            (e.exports = n).prototype.clear = function(t) {
                var e = this.gl;
                t && e.bindFramebuffer(e.FRAMEBUFFER, this.frameBuffer),
                e.clearColor(0, 0, 0, 0),
                e.clear(e.COLOR_BUFFER_BIT)
            }
            ,
            n.prototype.attachStencilBuffer = function() {
                if (!this.stencilBuffer && !this.root) {
                    var t = this.gl;
                    this.stencilBuffer = t.createRenderbuffer(),
                    t.bindRenderbuffer(t.RENDERBUFFER, this.stencilBuffer),
                    t.framebufferRenderbuffer(t.FRAMEBUFFER, t.DEPTH_STENCIL_ATTACHMENT, t.RENDERBUFFER, this.stencilBuffer),
                    t.renderbufferStorage(t.RENDERBUFFER, t.DEPTH_STENCIL, this.size.width * this.resolution, this.size.height * this.resolution)
                }
            }
            ,
            n.prototype.activate = function() {
                var t = this.gl;
                t.bindFramebuffer(t.FRAMEBUFFER, this.frameBuffer);
                var e = this.frame || this.size;
                this.calculateProjection(e),
                this.transform && this.projectionMatrix.append(this.transform),
                t.viewport(0, 0, e.width * this.resolution, e.height * this.resolution)
            }
            ,
            n.prototype.calculateProjection = function(t) {
                var e = this.projectionMatrix;
                e.identity(),
                this.root ? (e.a = 1 / t.width * 2,
                e.d = -1 / t.height * 2,
                e.tx = -1 - t.x * e.a,
                e.ty = 1 - t.y * e.d) : (e.a = 1 / t.width * 2,
                e.d = 1 / t.height * 2,
                e.tx = -1 - t.x * e.a,
                e.ty = -1 - t.y * e.d)
            }
            ,
            n.prototype.resize = function(t, e) {
                if (t |= 0,
                e |= 0,
                this.size.width !== t || this.size.height !== e) {
                    if (this.size.width = t,
                    this.size.height = e,
                    !this.root) {
                        var i = this.gl;
                        i.bindTexture(i.TEXTURE_2D, this.texture),
                        i.texImage2D(i.TEXTURE_2D, 0, i.RGBA, t * this.resolution, e * this.resolution, 0, i.RGBA, i.UNSIGNED_BYTE, null),
                        this.stencilBuffer && (i.bindRenderbuffer(i.RENDERBUFFER, this.stencilBuffer),
                        i.renderbufferStorage(i.RENDERBUFFER, i.DEPTH_STENCIL, t * this.resolution, e * this.resolution))
                    }
                    var n = this.frame || this.size;
                    this.calculateProjection(n)
                }
            }
            ,
            n.prototype.destroy = function() {
                var t = this.gl;
                t.deleteFramebuffer(this.frameBuffer),
                t.deleteTexture(this.texture),
                this.frameBuffer = null,
                this.texture = null
            }
        }
        , {
            "../../../const": 22,
            "../../../math": 32,
            "../../../utils": 76,
            "./StencilMaskStack": 65
        }],
        65: [function(t, e, i) {
            function n() {
                this.stencilStack = [],
                this.reverse = !0,
                this.count = 0
            }
            n.prototype.constructor = n,
            e.exports = n
        }
        , {}],
        66: [function(t, e, i) {
            var n = t("../math")
              , r = t("../textures/Texture")
              , o = t("../display/Container")
              , u = t("../renderers/canvas/utils/CanvasTinter")
              , s = t("../utils")
              , c = t("../const")
              , a = new n.Point;
            function h(t) {
                o.call(this),
                this.anchor = new n.Point,
                this._texture = null,
                this._width = 0,
                this._height = 0,
                this.tint = 16777215,
                this.blendMode = c.BLEND_MODES.NORMAL,
                this.shader = null,
                this.cachedTint = 16777215,
                this.texture = t || r.EMPTY
            }
            (h.prototype = Object.create(o.prototype)).constructor = h,
            e.exports = h,
            Object.defineProperties(h.prototype, {
                width: {
                    get: function() {
                        return this.scale.x * this.texture._frame.width
                    },
                    set: function(t) {
                        this.scale.x = t / this.texture._frame.width,
                        this._width = t
                    }
                },
                height: {
                    get: function() {
                        return this.scale.y * this.texture._frame.height
                    },
                    set: function(t) {
                        this.scale.y = t / this.texture._frame.height,
                        this._height = t
                    }
                },
                texture: {
                    get: function() {
                        return this._texture
                    },
                    set: function(t) {
                        this._texture !== t && (this._texture = t,
                        this.cachedTint = 16777215,
                        t && (t.baseTexture.hasLoaded ? this._onTextureUpdate() : t.once("update", this._onTextureUpdate, this)))
                    }
                }
            }),
            h.prototype._onTextureUpdate = function() {
                this._width && (this.scale.x = this._width / this.texture.frame.width),
                this._height && (this.scale.y = this._height / this.texture.frame.height)
            }
            ,
            h.prototype._renderWebGL = function(t) {
                t.setObjectRenderer(t.plugins.sprite),
                t.plugins.sprite.render(this)
            }
            ,
            h.prototype.getBounds = function(t) {
                if (!this._currentBounds) {
                    var e, i, n, r, o = this._texture._frame.width, s = this._texture._frame.height, a = o * (1 - this.anchor.x), h = o * -this.anchor.x, l = s * (1 - this.anchor.y), u = s * -this.anchor.y, c = t || this.worldTransform, p = c.a, d = c.b, f = c.c, g = c.d, y = c.tx, m = c.ty;
                    if (0 === d && 0 === f)
                        p < 0 && (p *= -1),
                        g < 0 && (g *= -1),
                        e = p * h + y,
                        i = p * a + y,
                        n = g * u + m,
                        r = g * l + m;
                    else {
                        var v = p * h + f * u + y
                          , S = g * u + d * h + m
                          , x = p * a + f * u + y
                          , b = g * u + d * a + m
                          , T = p * a + f * l + y
                          , _ = g * l + d * a + m
                          , w = p * h + f * l + y
                          , C = g * l + d * h + m;
                        e = w < (e = T < (e = x < (e = v) ? x : e) ? T : e) ? w : e,
                        n = C < (n = _ < (n = b < (n = S) ? b : n) ? _ : n) ? C : n,
                        i = (i = (i = (i = v) < x ? x : i) < T ? T : i) < w ? w : i,
                        r = (r = (r = (r = S) < b ? b : r) < _ ? _ : r) < C ? C : r
                    }
                    if (this.children.length) {
                        var E = this.containerGetBounds();
                        a = E.x,
                        h = E.x + E.width,
                        e = e < a ? e : a,
                        n = n < (l = E.y) ? n : l,
                        i = h < i ? i : h,
                        r = (u = E.y + E.height) < r ? r : u
                    }
                    var I = this._bounds;
                    I.x = e,
                    I.width = i - e,
                    I.y = n,
                    I.height = r - n,
                    this._currentBounds = I
                }
                return this._currentBounds
            }
            ,
            h.prototype.getLocalBounds = function() {
                return this._bounds.x = -this._texture._frame.width * this.anchor.x,
                this._bounds.y = -this._texture._frame.height * this.anchor.y,
                this._bounds.width = this._texture._frame.width,
                this._bounds.height = this._texture._frame.height,
                this._bounds
            }
            ,
            h.prototype.containsPoint = function(t) {
                this.worldTransform.applyInverse(t, a);
                var e, i = this._texture._frame.width, n = this._texture._frame.height, r = -i * this.anchor.x;
                return a.x > r && a.x < r + i && (e = -n * this.anchor.y,
                a.y > e && a.y < e + n)
            }
            ,
            h.prototype._renderCanvas = function(t) {
                if (!(this.texture.crop.width <= 0 || this.texture.crop.height <= 0) && (this.blendMode !== t.currentBlendMode && (t.currentBlendMode = this.blendMode,
                t.context.globalCompositeOperation = t.blendModes[t.currentBlendMode]),
                this.texture.valid)) {
                    var e, i, n, r, o = this._texture, s = this.worldTransform;
                    if (t.context.globalAlpha = this.worldAlpha,
                    t.smoothProperty && t.currentScaleMode !== o.baseTexture.scaleMode && (t.currentScaleMode = o.baseTexture.scaleMode,
                    t.context[t.smoothProperty] = t.currentScaleMode === c.SCALE_MODES.LINEAR),
                    o.rotate) {
                        var a = s.a
                          , h = s.b;
                        s.a = -s.c,
                        s.b = -s.d,
                        s.c = a,
                        s.d = h,
                        n = o.crop.height,
                        r = o.crop.width,
                        e = o.trim ? o.trim.y - this.anchor.y * o.trim.height : this.anchor.y * -o._frame.height,
                        i = o.trim ? o.trim.x - this.anchor.x * o.trim.width : this.anchor.x * -o._frame.width
                    } else
                        n = o.crop.width,
                        r = o.crop.height,
                        e = o.trim ? o.trim.x - this.anchor.x * o.trim.width : this.anchor.x * -o._frame.width,
                        i = o.trim ? o.trim.y - this.anchor.y * o.trim.height : this.anchor.y * -o._frame.height;
                    t.roundPixels ? t.context.setTransform(s.a, s.b, s.c, s.d, s.tx * t.resolution | 0, s.ty * t.resolution | 0) : t.context.setTransform(s.a, s.b, s.c, s.d, s.tx * t.resolution, s.ty * t.resolution),
                    e |= 0,
                    i |= 0;
                    var l = o.baseTexture.resolution;
                    16777215 !== this.tint ? (this.cachedTint !== this.tint && (this.cachedTint = this.tint,
                    this.tintedTexture = u.getTintedTexture(this, this.tint)),
                    t.context.drawImage(this.tintedTexture, 0, 0, n * l, r * l, e * t.resolution, i * t.resolution, n * t.resolution, r * t.resolution)) : t.context.drawImage(o.baseTexture.source, o.crop.x * l, o.crop.y * l, n * l, r * l, e * t.resolution, i * t.resolution, n * t.resolution, r * t.resolution)
                }
            }
            ,
            h.prototype.destroy = function(t, e) {
                o.prototype.destroy.call(this),
                this.anchor = null,
                t && this._texture.destroy(e),
                this._texture = null,
                this.shader = null
            }
            ,
            h.fromFrame = function(t) {
                var e = s.TextureCache[t];
                if (!e)
                    throw new Error('The frameId "' + t + '" does not exist in the texture cache');
                return new h(e)
            }
            ,
            h.fromImage = function(t, e, i) {
                return new h(r.fromImage(t, e, i))
            }
        }
        , {
            "../const": 22,
            "../display/Container": 23,
            "../math": 32,
            "../renderers/canvas/utils/CanvasTinter": 47,
            "../textures/Texture": 71,
            "../utils": 76
        }],
        67: [function(t, e, i) {
            var o = t("../../renderers/webgl/utils/ObjectRenderer")
              , n = t("../../renderers/webgl/WebGLRenderer")
              , s = t("../../const");
            function r(t) {
                o.call(this, t),
                this.vertSize = 5,
                this.vertByteSize = 4 * this.vertSize,
                this.size = s.SPRITE_BATCH_SIZE;
                var e = 4 * this.size * this.vertByteSize
                  , i = 6 * this.size;
                this.vertices = new ArrayBuffer(e),
                this.positions = new Float32Array(this.vertices),
                this.colors = new Uint32Array(this.vertices),
                this.indices = new Uint16Array(i);
                for (var n = 0, r = 0; n < i; n += 6,
                r += 4)
                    this.indices[n + 0] = r + 0,
                    this.indices[n + 1] = r + 1,
                    this.indices[n + 2] = r + 2,
                    this.indices[n + 3] = r + 0,
                    this.indices[n + 4] = r + 2,
                    this.indices[n + 5] = r + 3;
                this.currentBatchSize = 0,
                this.sprites = [],
                this.shader = null
            }
            (r.prototype = Object.create(o.prototype)).constructor = r,
            e.exports = r,
            n.registerPlugin("sprite", r),
            r.prototype.onContextChange = function() {
                var t = this.renderer.gl;
                this.shader = this.renderer.shaderManager.defaultShader,
                this.vertexBuffer = t.createBuffer(),
                this.indexBuffer = t.createBuffer(),
                t.bindBuffer(t.ELEMENT_ARRAY_BUFFER, this.indexBuffer),
                t.bufferData(t.ELEMENT_ARRAY_BUFFER, this.indices, t.STATIC_DRAW),
                t.bindBuffer(t.ARRAY_BUFFER, this.vertexBuffer),
                t.bufferData(t.ARRAY_BUFFER, this.vertices, t.DYNAMIC_DRAW),
                this.currentBlendMode = 99999
            }
            ,
            r.prototype.render = function(t) {
                var e = t._texture;
                this.currentBatchSize >= this.size && this.flush();
                var i = e._uvs;
                if (i) {
                    var n, r, o, s, a = t.anchor.x, h = t.anchor.y;
                    if (e.trim) {
                        var l = e.trim;
                        n = (r = l.x - a * l.width) + e.crop.width,
                        o = (s = l.y - h * l.height) + e.crop.height
                    } else
                        n = e._frame.width * (1 - a),
                        r = e._frame.width * -a,
                        o = e._frame.height * (1 - h),
                        s = e._frame.height * -h;
                    var u = this.currentBatchSize * this.vertByteSize
                      , c = t.worldTransform
                      , p = c.a
                      , d = c.b
                      , f = c.c
                      , g = c.d
                      , y = c.tx
                      , m = c.ty
                      , v = this.colors
                      , S = this.positions;
                    this.renderer.roundPixels ? (S[u] = p * r + f * s + y | 0,
                    S[u + 1] = g * s + d * r + m | 0,
                    S[u + 5] = p * n + f * s + y | 0,
                    S[u + 6] = g * s + d * n + m | 0,
                    S[u + 10] = p * n + f * o + y | 0,
                    S[u + 11] = g * o + d * n + m | 0,
                    S[u + 15] = p * r + f * o + y | 0,
                    S[u + 16] = g * o + d * r + m | 0) : (S[u] = p * r + f * s + y,
                    S[u + 1] = g * s + d * r + m,
                    S[u + 5] = p * n + f * s + y,
                    S[u + 6] = g * s + d * n + m,
                    S[u + 10] = p * n + f * o + y,
                    S[u + 11] = g * o + d * n + m,
                    S[u + 15] = p * r + f * o + y,
                    S[u + 16] = g * o + d * r + m),
                    S[u + 2] = i.x0,
                    S[u + 3] = i.y0,
                    S[u + 7] = i.x1,
                    S[u + 8] = i.y1,
                    S[u + 12] = i.x2,
                    S[u + 13] = i.y2,
                    S[u + 17] = i.x3,
                    S[u + 18] = i.y3;
                    var x = t.tint;
                    v[u + 4] = v[u + 9] = v[u + 14] = v[u + 19] = (x >> 16) + (65280 & x) + ((255 & x) << 16) + (255 * t.worldAlpha << 24),
                    this.sprites[this.currentBatchSize++] = t
                }
            }
            ,
            r.prototype.flush = function() {
                if (0 !== this.currentBatchSize) {
                    var t, e, i, n, r = this.renderer.gl;
                    if (this.currentBatchSize > .5 * this.size)
                        r.bufferSubData(r.ARRAY_BUFFER, 0, this.vertices);
                    else {
                        var o = this.positions.subarray(0, this.currentBatchSize * this.vertByteSize);
                        r.bufferSubData(r.ARRAY_BUFFER, 0, o)
                    }
                    for (var s, a = 0, h = 0, l = null, u = this.renderer.blendModeManager.currentBlendMode, c = null, p = !1, d = !1, f = 0, g = this.currentBatchSize; f < g; f++)
                        e = (s = this.sprites[f])._texture.baseTexture,
                        p = u !== (i = s.blendMode),
                        d = c !== (n = s.shader || this.shader),
                        (l !== e || p || d) && (this.renderBatch(l, a, h),
                        h = f,
                        a = 0,
                        l = e,
                        p && (u = i,
                        this.renderer.blendModeManager.setBlendMode(u)),
                        d && ((t = (c = n).shaders ? c.shaders[r.id] : c) || (t = c.getShader(this.renderer)),
                        this.renderer.shaderManager.setShader(t),
                        t.uniforms.projectionMatrix.value = this.renderer.currentRenderTarget.projectionMatrix.toArray(!0),
                        t.syncUniforms(),
                        r.activeTexture(r.TEXTURE0))),
                        a++;
                    this.renderBatch(l, a, h),
                    this.currentBatchSize = 0
                }
            }
            ,
            r.prototype.renderBatch = function(t, e, i) {
                if (0 !== e) {
                    var n = this.renderer.gl;
                    t._glTextures[n.id] ? n.bindTexture(n.TEXTURE_2D, t._glTextures[n.id]) : this.renderer.updateTexture(t),
                    n.drawElements(n.TRIANGLES, 6 * e, n.UNSIGNED_SHORT, 6 * i * 2),
                    this.renderer.drawCount++
                }
            }
            ,
            r.prototype.start = function() {
                var t = this.renderer.gl;
                t.bindBuffer(t.ARRAY_BUFFER, this.vertexBuffer),
                t.bindBuffer(t.ELEMENT_ARRAY_BUFFER, this.indexBuffer);
                var e = this.vertByteSize;
                t.vertexAttribPointer(this.shader.attributes.aVertexPosition, 2, t.FLOAT, !1, e, 0),
                t.vertexAttribPointer(this.shader.attributes.aTextureCoord, 2, t.FLOAT, !1, e, 8),
                t.vertexAttribPointer(this.shader.attributes.aColor, 4, t.UNSIGNED_BYTE, !0, e, 16)
            }
            ,
            r.prototype.destroy = function() {
                this.renderer.gl.deleteBuffer(this.vertexBuffer),
                this.renderer.gl.deleteBuffer(this.indexBuffer),
                this.shader.destroy(),
                this.renderer = null,
                this.vertices = null,
                this.positions = null,
                this.colors = null,
                this.indices = null,
                this.vertexBuffer = null,
                this.indexBuffer = null,
                this.sprites = null,
                this.shader = null
            }
        }
        , {
            "../../const": 22,
            "../../renderers/webgl/WebGLRenderer": 48,
            "../../renderers/webgl/utils/ObjectRenderer": 62
        }],
        68: [function(t, e, i) {
            var r = t("../sprites/Sprite")
              , o = t("../textures/Texture")
              , s = t("../math")
              , n = t("../utils")
              , a = t("../const");
            function f(t, e, i) {
                this.canvas = document.createElement("canvas"),
                this.context = this.canvas.getContext("2d"),
                this.resolution = i || a.RESOLUTION,
                this._text = null,
                this._style = null;
                var n = o.fromCanvas(this.canvas);
                n.trim = new s.Rectangle,
                r.call(this, n),
                this.text = t,
                this.style = e
            }
            (f.prototype = Object.create(r.prototype)).constructor = f,
            (e.exports = f).fontPropertiesCache = {},
            f.fontPropertiesCanvas = document.createElement("canvas"),
            f.fontPropertiesContext = f.fontPropertiesCanvas.getContext("2d"),
            Object.defineProperties(f.prototype, {
                width: {
                    get: function() {
                        return this.dirty && this.updateText(),
                        this.scale.x * this._texture._frame.width
                    },
                    set: function(t) {
                        this.scale.x = t / this._texture._frame.width,
                        this._width = t
                    }
                },
                height: {
                    get: function() {
                        return this.dirty && this.updateText(),
                        this.scale.y * this._texture._frame.height
                    },
                    set: function(t) {
                        this.scale.y = t / this._texture._frame.height,
                        this._height = t
                    }
                },
                style: {
                    get: function() {
                        return this._style
                    },
                    set: function(t) {
                        "number" == typeof (t = t || {}).fill && (t.fill = n.hex2string(t.fill)),
                        "number" == typeof t.stroke && (t.stroke = n.hex2string(t.stroke)),
                        "number" == typeof t.dropShadowColor && (t.dropShadowColor = n.hex2string(t.dropShadowColor)),
                        t.font = t.font || "bold 20pt Arial",
                        t.fill = t.fill || "black",
                        t.align = t.align || "left",
                        t.stroke = t.stroke || "black",
                        t.strokeThickness = t.strokeThickness || 0,
                        t.wordWrap = t.wordWrap || !1,
                        t.wordWrapWidth = t.wordWrapWidth || 100,
                        t.dropShadow = t.dropShadow || !1,
                        t.dropShadowColor = t.dropShadowColor || "#000000",
                        t.dropShadowAngle = t.dropShadowAngle || Math.PI / 6,
                        t.dropShadowDistance = t.dropShadowDistance || 5,
                        t.padding = t.padding || 0,
                        t.textBaseline = t.textBaseline || "alphabetic",
                        t.lineJoin = t.lineJoin || "miter",
                        t.miterLimit = t.miterLimit || 10,
                        this._style = t,
                        this.dirty = !0
                    }
                },
                text: {
                    get: function() {
                        return this._text
                    },
                    set: function(t) {
                        t = t.toString() || " ",
                        this._text !== t && (this._text = t,
                        this.dirty = !0)
                    }
                }
            }),
            f.prototype.updateText = function() {
                var t = this._style;
                this.context.font = t.font;
                for (var e = (t.wordWrap ? this.wordWrap(this._text) : this._text).split(/(?:\r\n|\r|\n)/), i = new Array(e.length), n = 0, r = this.determineFontProperties(t.font), o = 0; o < e.length; o++) {
                    var s = this.context.measureText(e[o]).width;
                    i[o] = s,
                    n = Math.max(n, s)
                }
                var a = n + t.strokeThickness;
                t.dropShadow && (a += t.dropShadowDistance),
                this.canvas.width = (a + this.context.lineWidth) * this.resolution;
                var h, l, u = this.style.lineHeight || r.fontSize + t.strokeThickness, c = u * e.length;
                if (t.dropShadow && (c += t.dropShadowDistance),
                this.canvas.height = (c + 2 * this._style.padding) * this.resolution,
                this.context.scale(this.resolution, this.resolution),
                navigator.isCocoonJS && this.context.clearRect(0, 0, this.canvas.width, this.canvas.height),
                this.context.font = t.font,
                this.context.strokeStyle = t.stroke,
                this.context.lineWidth = t.strokeThickness,
                this.context.textBaseline = t.textBaseline,
                this.context.lineJoin = t.lineJoin,
                this.context.miterLimit = t.miterLimit,
                t.dropShadow) {
                    this.context.fillStyle = t.dropShadowColor;
                    var p = Math.cos(t.dropShadowAngle) * t.dropShadowDistance
                      , d = Math.sin(t.dropShadowAngle) * t.dropShadowDistance;
                    for (o = 0; o < e.length; o++)
                        h = t.strokeThickness / 2,
                        l = t.strokeThickness / 2 + o * u + r.ascent,
                        "right" === t.align ? h += n - i[o] : "center" === t.align && (h += (n - i[o]) / 2),
                        t.fill && this.context.fillText(e[o], h + p, l + d + this._style.padding)
                }
                for (this.context.fillStyle = t.fill,
                o = 0; o < e.length; o++)
                    h = t.strokeThickness / 2,
                    l = t.strokeThickness / 2 + o * u + r.ascent,
                    "right" === t.align ? h += n - i[o] : "center" === t.align && (h += (n - i[o]) / 2),
                    t.stroke && t.strokeThickness && this.context.strokeText(e[o], h, l + this._style.padding),
                    t.fill && this.context.fillText(e[o], h, l + this._style.padding);
                this.updateTexture()
            }
            ,
            f.prototype.updateTexture = function() {
                var t = this._texture;
                t.baseTexture.hasLoaded = !0,
                t.baseTexture.resolution = this.resolution,
                t.baseTexture.width = this.canvas.width / this.resolution,
                t.baseTexture.height = this.canvas.height / this.resolution,
                t.crop.width = t._frame.width = this.canvas.width / this.resolution,
                t.crop.height = t._frame.height = this.canvas.height / this.resolution,
                t.trim.x = 0,
                t.trim.y = -this._style.padding,
                t.trim.width = t._frame.width,
                t.trim.height = t._frame.height - 2 * this._style.padding,
                this._width = this.canvas.width / this.resolution,
                this._height = this.canvas.height / this.resolution,
                t.baseTexture.emit("update", t.baseTexture),
                this.dirty = !1
            }
            ,
            f.prototype.renderWebGL = function(t) {
                this.dirty && this.updateText(),
                r.prototype.renderWebGL.call(this, t)
            }
            ,
            f.prototype._renderCanvas = function(t) {
                this.dirty && this.updateText(),
                r.prototype._renderCanvas.call(this, t)
            }
            ,
            f.prototype.determineFontProperties = function(t) {
                var e = f.fontPropertiesCache[t];
                if (!e) {
                    e = {};
                    var i = f.fontPropertiesCanvas
                      , n = f.fontPropertiesContext;
                    n.font = t;
                    var r = Math.ceil(n.measureText("|MÉq").width)
                      , o = Math.ceil(n.measureText("M").width)
                      , s = 2 * o;
                    o = 1.4 * o | 0,
                    i.width = r,
                    i.height = s,
                    n.fillStyle = "#f00",
                    n.fillRect(0, 0, r, s),
                    n.font = t,
                    n.textBaseline = "alphabetic",
                    n.fillStyle = "#000",
                    n.fillText("|MÉq", 0, o);
                    var a, h, l = n.getImageData(0, 0, r, s).data, u = l.length, c = 4 * r, p = 0, d = !1;
                    for (a = 0; a < o; a++) {
                        for (h = 0; h < c; h += 4)
                            if (255 !== l[p + h]) {
                                d = !0;
                                break
                            }
                        if (d)
                            break;
                        p += c
                    }
                    for (e.ascent = o - a,
                    p = u - c,
                    d = !1,
                    a = s; o < a; a--) {
                        for (h = 0; h < c; h += 4)
                            if (255 !== l[p + h]) {
                                d = !0;
                                break
                            }
                        if (d)
                            break;
                        p -= c
                    }
                    e.descent = a - o,
                    e.fontSize = e.ascent + e.descent,
                    f.fontPropertiesCache[t] = e
                }
                return e
            }
            ,
            f.prototype.wordWrap = function(t) {
                for (var e = "", i = t.split("\n"), n = this._style.wordWrapWidth, r = 0; r < i.length; r++) {
                    for (var o = n, s = i[r].split(" "), a = 0; a < s.length; a++) {
                        var h = this.context.measureText(s[a]).width
                          , l = h + this.context.measureText(" ").width;
                        0 === a || o < l ? (0 < a && (e += "\n"),
                        e += s[a],
                        o = n - h) : (o -= l,
                        e += " " + s[a])
                    }
                    r < i.length - 1 && (e += "\n")
                }
                return e
            }
            ,
            f.prototype.getBounds = function(t) {
                return this.dirty && this.updateText(),
                r.prototype.getBounds.call(this, t)
            }
            ,
            f.prototype.destroy = function(t) {
                this.context = null,
                this.canvas = null,
                this._style = null,
                this._texture.destroy(void 0 === t || t)
            }
        }
        , {
            "../const": 22,
            "../math": 32,
            "../sprites/Sprite": 66,
            "../textures/Texture": 71,
            "../utils": 76
        }],
        69: [function(t, e, i) {
            var o = t("../utils")
              , n = t("../const")
              , r = t("eventemitter3");
            function s(t, e, i) {
                r.call(this),
                this.uid = o.uid(),
                this.resolution = i || 1,
                this.width = 100,
                this.height = 100,
                this.realWidth = 100,
                this.realHeight = 100,
                this.scaleMode = e || n.SCALE_MODES.DEFAULT,
                this.hasLoaded = !1,
                this.isLoading = !1,
                this.source = null,
                this.premultipliedAlpha = !0,
                this.imageUrl = null,
                this.isPowerOfTwo = !1,
                this.mipmap = !1,
                this._glTextures = [],
                t && this.loadSource(t)
            }
            (s.prototype = Object.create(r.prototype)).constructor = s,
            (e.exports = s).prototype.update = function() {
                this.realWidth = this.source.naturalWidth || this.source.width,
                this.realHeight = this.source.naturalHeight || this.source.height,
                this.width = this.realWidth / this.resolution,
                this.height = this.realHeight / this.resolution,
                this.isPowerOfTwo = o.isPowerOfTwo(this.realWidth, this.realHeight),
                this.emit("update", this)
            }
            ,
            s.prototype.loadSource = function(t) {
                var e = this.isLoading;
                if (this.hasLoaded = !1,
                this.isLoading = !1,
                e && this.source && (this.source.onload = null,
                this.source.onerror = null),
                this.source = t,
                (this.source.complete || this.source.getContext) && this.source.width && this.source.height)
                    this._sourceLoaded();
                else if (!t.getContext) {
                    this.isLoading = !0;
                    var i = this;
                    t.onload = function() {
                        t.onload = null,
                        t.onerror = null,
                        i.isLoading && (i.isLoading = !1,
                        i._sourceLoaded(),
                        i.emit("loaded", i))
                    }
                    ,
                    t.onerror = function() {
                        t.onload = null,
                        t.onerror = null,
                        i.isLoading && (i.isLoading = !1,
                        i.emit("error", i))
                    }
                    ,
                    t.complete && t.src && (this.isLoading = !1,
                    t.onload = null,
                    t.onerror = null,
                    t.width && t.height ? (this._sourceLoaded(),
                    e && this.emit("loaded", this)) : e && this.emit("error", this))
                }
            }
            ,
            s.prototype._sourceLoaded = function() {
                this.hasLoaded = !0,
                this.update()
            }
            ,
            s.prototype.destroy = function() {
                this.imageUrl ? (delete o.BaseTextureCache[this.imageUrl],
                delete o.TextureCache[this.imageUrl],
                this.imageUrl = null,
                navigator.isCocoonJS || (this.source.src = "")) : this.source && this.source._pixiId && delete o.BaseTextureCache[this.source._pixiId],
                this.source = null,
                this.dispose()
            }
            ,
            s.prototype.dispose = function() {
                this.emit("dispose", this),
                this._glTextures.length = 0
            }
            ,
            s.prototype.updateSourceImage = function(t) {
                this.source.src = t,
                this.loadSource(this.source)
            }
            ,
            s.fromImage = function(t, e, i) {
                var n = o.BaseTextureCache[t];
                if (void 0 === e && 0 !== t.indexOf("data:") && (e = !0),
                !n) {
                    var r = new Image;
                    e && (r.crossOrigin = ""),
                    (n = new s(r,i)).imageUrl = t,
                    r.src = t,
                    (o.BaseTextureCache[t] = n).resolution = o.getResolutionOfUrl(t)
                }
                return n
            }
            ,
            s.fromCanvas = function(t, e) {
                t._pixiId || (t._pixiId = "canvas_" + o.uid());
                var i = o.BaseTextureCache[t._pixiId];
                return i || (i = new s(t,e)),
                i
            }
        }
        , {
            "../const": 22,
            "../utils": 76,
            eventemitter3: 11
        }],
        70: [function(t, e, i) {
            var a = t("./BaseTexture")
              , h = t("./Texture")
              , l = t("../renderers/webgl/utils/RenderTarget")
              , u = t("../renderers/webgl/managers/FilterManager")
              , c = t("../renderers/canvas/utils/CanvasBuffer")
              , p = t("../math")
              , d = t("../const")
              , f = new p.Matrix;
            function n(t, e, i, n, r) {
                if (!t)
                    throw new Error("Unable to create RenderTexture, you must pass a renderer into the constructor.");
                e = e || 100,
                i = i || 100,
                r = r || d.RESOLUTION;
                var o = new a;
                if (o.width = e,
                o.height = i,
                o.resolution = r,
                o.scaleMode = n || d.SCALE_MODES.DEFAULT,
                o.hasLoaded = !0,
                h.call(this, o, new p.Rectangle(0,0,e,i)),
                this.width = e,
                this.height = i,
                this.resolution = r,
                this.render = null,
                this.renderer = t,
                this.renderer.type === d.RENDERER_TYPE.WEBGL) {
                    var s = this.renderer.gl;
                    this.textureBuffer = new l(s,this.width,this.height,o.scaleMode,this.resolution),
                    this.baseTexture._glTextures[s.id] = this.textureBuffer.texture,
                    this.filterManager = new u(this.renderer),
                    this.filterManager.onContextChange(),
                    this.filterManager.resize(e, i),
                    this.render = this.renderWebGL,
                    this.renderer.currentRenderer.start(),
                    this.renderer.currentRenderTarget.activate()
                } else
                    this.render = this.renderCanvas,
                    this.textureBuffer = new c(this.width * this.resolution,this.height * this.resolution),
                    this.baseTexture.source = this.textureBuffer.canvas;
                this.valid = !0,
                this._updateUvs()
            }
            (n.prototype = Object.create(h.prototype)).constructor = n,
            (e.exports = n).prototype.resize = function(t, e, i) {
                t === this.width && e === this.height || (this.valid = 0 < t && 0 < e,
                this.width = this._frame.width = this.crop.width = t,
                this.height = this._frame.height = this.crop.height = e,
                i && (this.baseTexture.width = this.width,
                this.baseTexture.height = this.height),
                this.valid && (this.textureBuffer.resize(this.width, this.height),
                this.filterManager && this.filterManager.resize(this.width, this.height)))
            }
            ,
            n.prototype.clear = function() {
                this.valid && (this.renderer.type === d.RENDERER_TYPE.WEBGL && this.renderer.gl.bindFramebuffer(this.renderer.gl.FRAMEBUFFER, this.textureBuffer.frameBuffer),
                this.textureBuffer.clear())
            }
            ,
            n.prototype.renderWebGL = function(t, e, i, n) {
                if (this.valid) {
                    if (n = void 0 === n || n,
                    this.textureBuffer.transform = e,
                    this.textureBuffer.activate(),
                    t.worldAlpha = 1,
                    n) {
                        t.worldTransform.identity(),
                        t.currentBounds = null;
                        var r, o, s = t.children;
                        for (r = 0,
                        o = s.length; r < o; ++r)
                            s[r].updateTransform()
                    }
                    var a = this.renderer.filterManager;
                    this.renderer.filterManager = this.filterManager,
                    this.renderer.renderDisplayObject(t, this.textureBuffer, i),
                    this.renderer.filterManager = a
                }
            }
            ,
            n.prototype.renderCanvas = function(t, e, i, n) {
                if (this.valid) {
                    n = !!n;
                    var r = t.worldTransform
                      , o = f;
                    o.identity(),
                    e && o.append(e),
                    t.worldTransform = o,
                    t.worldAlpha = 1;
                    var s, a, h = t.children;
                    for (s = 0,
                    a = h.length; s < a; ++s)
                        h[s].updateTransform();
                    i && this.textureBuffer.clear(),
                    t.worldTransform = r;
                    var l = this.textureBuffer.context
                      , u = this.renderer.resolution;
                    this.renderer.resolution = this.resolution,
                    this.renderer.renderDisplayObject(t, l),
                    this.renderer.resolution = u
                }
            }
            ,
            n.prototype.destroy = function() {
                h.prototype.destroy.call(this, !0),
                this.textureBuffer.destroy(),
                this.filterManager && this.filterManager.destroy(),
                this.renderer = null
            }
            ,
            n.prototype.getImage = function() {
                var t = new Image;
                return t.src = this.getBase64(),
                t
            }
            ,
            n.prototype.getBase64 = function() {
                return this.getCanvas().toDataURL()
            }
            ,
            n.prototype.getCanvas = function() {
                if (this.renderer.type !== d.RENDERER_TYPE.WEBGL)
                    return this.textureBuffer.canvas;
                var t = this.renderer.gl
                  , e = this.textureBuffer.size.width
                  , i = this.textureBuffer.size.height
                  , n = new Uint8Array(4 * e * i);
                t.bindFramebuffer(t.FRAMEBUFFER, this.textureBuffer.frameBuffer),
                t.readPixels(0, 0, e, i, t.RGBA, t.UNSIGNED_BYTE, n),
                t.bindFramebuffer(t.FRAMEBUFFER, null);
                var r = new c(e,i)
                  , o = r.context.getImageData(0, 0, e, i);
                return o.data.set(n),
                r.context.putImageData(o, 0, 0),
                r.canvas
            }
            ,
            n.prototype.getPixels = function() {
                var t, e;
                if (this.renderer.type !== d.RENDERER_TYPE.WEBGL)
                    return t = this.textureBuffer.canvas.width,
                    e = this.textureBuffer.canvas.height,
                    this.textureBuffer.canvas.getContext("2d").getImageData(0, 0, t, e).data;
                var i = this.renderer.gl;
                t = this.textureBuffer.size.width,
                e = this.textureBuffer.size.height;
                var n = new Uint8Array(4 * t * e);
                return i.bindFramebuffer(i.FRAMEBUFFER, this.textureBuffer.frameBuffer),
                i.readPixels(0, 0, t, e, i.RGBA, i.UNSIGNED_BYTE, n),
                i.bindFramebuffer(i.FRAMEBUFFER, null),
                n
            }
            ,
            n.prototype.getPixel = function(t, e) {
                if (this.renderer.type !== d.RENDERER_TYPE.WEBGL)
                    return this.textureBuffer.canvas.getContext("2d").getImageData(t, e, 1, 1).data;
                var i = this.renderer.gl
                  , n = new Uint8Array(4);
                return i.bindFramebuffer(i.FRAMEBUFFER, this.textureBuffer.frameBuffer),
                i.readPixels(t, e, 1, 1, i.RGBA, i.UNSIGNED_BYTE, n),
                i.bindFramebuffer(i.FRAMEBUFFER, null),
                n
            }
        }
        , {
            "../const": 22,
            "../math": 32,
            "../renderers/canvas/utils/CanvasBuffer": 44,
            "../renderers/webgl/managers/FilterManager": 53,
            "../renderers/webgl/utils/RenderTarget": 64,
            "./BaseTexture": 69,
            "./Texture": 71
        }],
        71: [function(t, e, i) {
            var r = t("./BaseTexture")
              , n = t("./VideoBaseTexture")
              , o = t("./TextureUvs")
              , s = t("eventemitter3")
              , a = t("../math")
              , h = t("../utils");
            function l(t, e, i, n, r) {
                s.call(this),
                this.noFrame = !1,
                e || (this.noFrame = !0,
                e = new a.Rectangle(0,0,1,1)),
                t instanceof l && (t = t.baseTexture),
                this.baseTexture = t,
                this._frame = e,
                this.trim = n,
                this.valid = !1,
                this.requiresUpdate = !1,
                this._uvs = null,
                this.width = 0,
                this.height = 0,
                this.crop = i || e,
                this.rotate = !!r,
                t.hasLoaded ? (this.noFrame && (e = new a.Rectangle(0,0,t.width,t.height),
                t.on("update", this.onBaseTextureUpdated, this)),
                this.frame = e) : t.once("loaded", this.onBaseTextureLoaded, this)
            }
            (l.prototype = Object.create(s.prototype)).constructor = l,
            e.exports = l,
            Object.defineProperties(l.prototype, {
                frame: {
                    get: function() {
                        return this._frame
                    },
                    set: function(t) {
                        if (this._frame = t,
                        this.noFrame = !1,
                        this.width = t.width,
                        this.height = t.height,
                        !this.trim && !this.rotate && (t.x + t.width > this.baseTexture.width || t.y + t.height > this.baseTexture.height))
                            throw new Error("Texture Error: frame does not fit inside the base Texture dimensions " + this);
                        this.valid = t && t.width && t.height && this.baseTexture.hasLoaded,
                        this.trim ? (this.width = this.trim.width,
                        this.height = this.trim.height,
                        this._frame.width = this.trim.width,
                        this._frame.height = this.trim.height) : this.crop = t,
                        this.valid && this._updateUvs()
                    }
                }
            }),
            l.prototype.update = function() {
                this.baseTexture.update()
            }
            ,
            l.prototype.onBaseTextureLoaded = function(t) {
                this.noFrame ? this.frame = new a.Rectangle(0,0,t.width,t.height) : this.frame = this._frame,
                this.emit("update", this)
            }
            ,
            l.prototype.onBaseTextureUpdated = function(t) {
                this._frame.width = t.width,
                this._frame.height = t.height,
                this.emit("update", this)
            }
            ,
            l.prototype.destroy = function(t) {
                this.baseTexture && (t && this.baseTexture.destroy(),
                this.baseTexture.off("update", this.onBaseTextureUpdated, this),
                this.baseTexture.off("loaded", this.onBaseTextureLoaded, this),
                this.baseTexture = null),
                this._frame = null,
                this._uvs = null,
                this.trim = null,
                this.crop = null,
                this.valid = !1
            }
            ,
            l.prototype.clone = function() {
                return new l(this.baseTexture,this.frame,this.crop,this.trim,this.rotate)
            }
            ,
            l.prototype._updateUvs = function() {
                this._uvs || (this._uvs = new o),
                this._uvs.set(this.crop, this.baseTexture, this.rotate)
            }
            ,
            l.fromImage = function(t, e, i) {
                var n = h.TextureCache[t];
                return n || (n = new l(r.fromImage(t, e, i)),
                h.TextureCache[t] = n),
                n
            }
            ,
            l.fromFrame = function(t) {
                var e = h.TextureCache[t];
                if (!e)
                    throw new Error('The frameId "' + t + '" does not exist in the texture cache');
                return e
            }
            ,
            l.fromCanvas = function(t, e) {
                return new l(r.fromCanvas(t, e))
            }
            ,
            l.fromVideo = function(t, e) {
                return "string" == typeof t ? l.fromVideoUrl(t, e) : new l(n.fromVideo(t, e))
            }
            ,
            l.fromVideoUrl = function(t, e) {
                return new l(n.fromUrl(t, e))
            }
            ,
            l.addTextureToCache = function(t, e) {
                h.TextureCache[e] = t
            }
            ,
            l.removeTextureFromCache = function(t) {
                var e = h.TextureCache[t];
                return delete h.TextureCache[t],
                delete h.BaseTextureCache[t],
                e
            }
            ,
            l.hasTextureInCache = function(t) {
                return !!h.TextureCache[t]
            }
            ,
            l.EMPTY = new l(new r)
        }
        , {
            "../math": 32,
            "../utils": 76,
            "./BaseTexture": 69,
            "./TextureUvs": 72,
            "./VideoBaseTexture": 73,
            eventemitter3: 11
        }],
        72: [function(t, e, i) {
            function n() {
                this.x0 = 0,
                this.y0 = 0,
                this.x1 = 1,
                this.y1 = 0,
                this.x2 = 1,
                this.y2 = 1,
                this.x3 = 0,
                this.y3 = 1
            }
            (e.exports = n).prototype.set = function(t, e, i) {
                var n = e.width
                  , r = e.height;
                i ? (this.x0 = (t.x + t.height) / n,
                this.y0 = t.y / r,
                this.x1 = (t.x + t.height) / n,
                this.y1 = (t.y + t.width) / r,
                this.x2 = t.x / n,
                this.y2 = (t.y + t.width) / r,
                this.x3 = t.x / n,
                this.y3 = t.y / r) : (this.x0 = t.x / n,
                this.y0 = t.y / r,
                this.x1 = (t.x + t.width) / n,
                this.y1 = t.y / r,
                this.x2 = (t.x + t.width) / n,
                this.y2 = (t.y + t.height) / r,
                this.x3 = t.x / n,
                this.y3 = (t.y + t.height) / r)
            }
        }
        , {}],
        73: [function(t, e, i) {
            var n = t("./BaseTexture")
              , r = t("../utils");
            function o(t, e) {
                if (!t)
                    throw new Error("No video source element specified.");
                (t.readyState === t.HAVE_ENOUGH_DATA || t.readyState === t.HAVE_FUTURE_DATA) && t.width && t.height && (t.complete = !0),
                n.call(this, t, e),
                this.autoUpdate = !1,
                this._onUpdate = this._onUpdate.bind(this),
                this._onCanPlay = this._onCanPlay.bind(this),
                t.complete || (t.addEventListener("canplay", this._onCanPlay),
                t.addEventListener("canplaythrough", this._onCanPlay),
                t.addEventListener("play", this._onPlayStart.bind(this)),
                t.addEventListener("pause", this._onPlayStop.bind(this))),
                this.__loaded = !1
            }
            function s(t, e) {
                e || (e = "video/" + t.substr(t.lastIndexOf(".") + 1));
                var i = document.createElement("source");
                return i.src = t,
                i.type = e,
                i
            }
            (o.prototype = Object.create(n.prototype)).constructor = o,
            (e.exports = o).prototype._onUpdate = function() {
                this.autoUpdate && (window.requestAnimationFrame(this._onUpdate),
                this.update())
            }
            ,
            o.prototype._onPlayStart = function() {
                this.autoUpdate || (window.requestAnimationFrame(this._onUpdate),
                this.autoUpdate = !0)
            }
            ,
            o.prototype._onPlayStop = function() {
                this.autoUpdate = !1
            }
            ,
            o.prototype._onCanPlay = function() {
                this.hasLoaded = !0,
                this.source && (this.source.removeEventListener("canplay", this._onCanPlay),
                this.source.removeEventListener("canplaythrough", this._onCanPlay),
                this.width = this.source.videoWidth,
                this.height = this.source.videoHeight,
                this.source.play(),
                this.__loaded || (this.__loaded = !0,
                this.emit("loaded", this)))
            }
            ,
            o.prototype.destroy = function() {
                this.source && this.source._pixiId && (delete r.BaseTextureCache[this.source._pixiId],
                delete this.source._pixiId),
                n.prototype.destroy.call(this)
            }
            ,
            o.fromVideo = function(t, e) {
                t._pixiId || (t._pixiId = "video_" + r.uid());
                var i = r.BaseTextureCache[t._pixiId];
                return i || (i = new o(t,e),
                r.BaseTextureCache[t._pixiId] = i),
                i
            }
            ,
            o.fromUrls = o.fromUrl = function(t, e) {
                var i = document.createElement("video");
                if (Array.isArray(t))
                    for (var n = 0; n < t.length; ++n)
                        i.appendChild(s(t.src || t, t.mime));
                else
                    i.appendChild(s(t.src || t, t.mime));
                return i.load(),
                i.play(),
                o.fromVideo(i, e)
            }
        }
        , {
            "../utils": 76,
            "./BaseTexture": 69
        }],
        74: [function(t, e, i) {
            var n = t("../const")
              , r = t("eventemitter3")
              , o = "tick";
            function s() {
                var e = this;
                this._tick = function(t) {
                    e._requestId = null,
                    e.started && (e.update(t),
                    e.started && null === e._requestId && e._emitter.listeners(o, !0) && (e._requestId = requestAnimationFrame(e._tick)))
                }
                ,
                this._emitter = new r,
                this._requestId = null,
                this._maxElapsedMS = 100,
                this.autoStart = !1,
                this.deltaTime = 1,
                this.elapsedMS = 1 / n.TARGET_FPMS,
                this.lastTime = 0,
                this.speed = 1,
                this.started = !1
            }
            Object.defineProperties(s.prototype, {
                FPS: {
                    get: function() {
                        return 1e3 / this.elapsedMS
                    }
                },
                minFPS: {
                    get: function() {
                        return 1e3 / this._maxElapsedMS
                    },
                    set: function(t) {
                        var e = Math.min(Math.max(0, t) / 1e3, n.TARGET_FPMS);
                        this._maxElapsedMS = 1 / e
                    }
                }
            }),
            s.prototype._requestIfNeeded = function() {
                null === this._requestId && this._emitter.listeners(o, !0) && (this.lastTime = performance.now(),
                this._requestId = requestAnimationFrame(this._tick))
            }
            ,
            s.prototype._cancelIfNeeded = function() {
                null !== this._requestId && (cancelAnimationFrame(this._requestId),
                this._requestId = null)
            }
            ,
            s.prototype._startIfPossible = function() {
                this.started ? this._requestIfNeeded() : this.autoStart && this.start()
            }
            ,
            s.prototype.add = function(t, e) {
                return this._emitter.on(o, t, e),
                this._startIfPossible(),
                this
            }
            ,
            s.prototype.addOnce = function(t, e) {
                return this._emitter.once(o, t, e),
                this._startIfPossible(),
                this
            }
            ,
            s.prototype.remove = function(t, e) {
                return this._emitter.off(o, t, e),
                this._emitter.listeners(o, !0) || this._cancelIfNeeded(),
                this
            }
            ,
            s.prototype.start = function() {
                this.started || (this.started = !0,
                this._requestIfNeeded())
            }
            ,
            s.prototype.stop = function() {
                this.started && (this.started = !1,
                this._cancelIfNeeded())
            }
            ,
            s.prototype.update = function(t) {
                var e;
                t = t || performance.now(),
                (e = this.elapsedMS = t - this.lastTime) > this._maxElapsedMS && (e = this._maxElapsedMS),
                this.deltaTime = e * n.TARGET_FPMS * this.speed,
                this._emitter.emit(o, this.deltaTime),
                this.lastTime = t
            }
            ,
            e.exports = s
        }
        , {
            "../const": 22,
            eventemitter3: 11
        }],
        75: [function(t, e, i) {
            var n = t("./Ticker")
              , r = new n;
            r.autoStart = !0,
            e.exports = {
                shared: r,
                Ticker: n
            }
        }
        , {
            "./Ticker": 74
        }],
        76: [function(t, e, i) {
            var n = t("../const")
              , r = e.exports = {
                _uid: 0,
                _saidHello: !1,
                pluginTarget: t("./pluginTarget"),
                async: t("async"),
                uid: function() {
                    return ++r._uid
                },
                hex2rgb: function(t, e) {
                    return (e = e || [])[0] = (t >> 16 & 255) / 255,
                    e[1] = (t >> 8 & 255) / 255,
                    e[2] = (255 & t) / 255,
                    e
                },
                hex2string: function(t) {
                    return t = t.toString(16),
                    "#" + (t = "000000".substr(0, 6 - t.length) + t)
                },
                rgb2hex: function(t) {
                    return (255 * t[0] << 16) + (255 * t[1] << 8) + 255 * t[2]
                },
                canUseNewCanvasBlendModes: function() {
                },
                getNextPowerOfTwo: function(t) {
                    if (0 < t && 0 == (t & t - 1))
                        return t;
                    for (var e = 1; e < t; )
                        e <<= 1;
                    return e
                },
                isPowerOfTwo: function(t, e) {
                    return 0 < t && 0 == (t & t - 1) && 0 < e && 0 == (e & e - 1)
                },
                getResolutionOfUrl: function(t) {
                    var e = n.RETINA_PREFIX.exec(t);
                    return e ? parseFloat(e[1]) : 1
                },
                sayHello: function(t) {
                    if (!r._saidHello) {
                        if (-1 < navigator.userAgent.toLowerCase().indexOf("chrome")) {
                            var e = ["\n %c %c %c Pixi.js " + n.VERSION + " - ✰ " + t + " ✰  %c  %c  http://www.pixijs.com/  %c %c ♥%c♥%c♥ \n\n", "background: #ff66a5; padding:5px 0;", "background: #ff66a5; padding:5px 0;", "color: #ff66a5; background: #030307; padding:5px 0;", "background: #ff66a5; padding:5px 0;", "background: #ffc3dc; padding:5px 0;", "background: #ff66a5; padding:5px 0;", "color: #ff2424; background: #fff; padding:5px 0;", "color: #ff2424; background: #fff; padding:5px 0;", "color: #ff2424; background: #fff; padding:5px 0;"];
                            window.console.log.apply(console, e)
                        } else
                            window.console && window.console.log("Pixi.js " + n.VERSION + " - " + t + " - http://www.pixijs.com/");
                        r._saidHello = !0
                    }
                },
                isWebGLSupported: function() {
                    var t = {
                        stencil: !0
                    };
                    try {
                        if (!window.WebGLRenderingContext)
                            return !1;
                        var e = document.createElement("canvas")
                          , i = e.getContext("webgl", t) || e.getContext("experimental-webgl", t);
                        return !(!i || !i.getContextAttributes().stencil)
                    } catch (t) {
                        return !1
                    }
                },
                TextureCache: {},
                BaseTextureCache: {}
            }
        }
        , {
            "../const": 22,
            "./pluginTarget": 77,
            async: 2
        }],
        77: [function(t, e, i) {
            e.exports = {
                mixin: function(t) {
                    var i;
                    (i = t).__plugins = {},
                    i.registerPlugin = function(t, e) {
                        i.__plugins[t] = e
                    }
                    ,
                    i.prototype.initPlugins = function() {
                        for (var t in this.plugins = this.plugins || {},
                        i.__plugins)
                            this.plugins[t] = new i.__plugins[t](this)
                    }
                    ,
                    i.prototype.destroyPlugins = function() {
                        for (var t in this.plugins)
                            this.plugins[t].destroy(),
                            this.plugins[t] = null;
                        this.plugins = null
                    }
                }
            }
        }
        , {}],
        78: [function(t, e, i) {
            var n = t("./core")
              , r = t("./mesh")
              , o = t("./extras")
              , s = t("./filters");
            n.SpriteBatch = function() {
                throw new ReferenceError("SpriteBatch does not exist any more, please use the new ParticleContainer instead.")
            }
            ,
            n.AssetLoader = function() {
                throw new ReferenceError("The loader system was overhauled in pixi v3, please see the new PIXI.loaders.Loader class.")
            }
            ,
            Object.defineProperties(n, {
                Stage: {
                    get: function() {
                        return console.warn("You do not need to use a PIXI Stage any more, you can simply render any container."),
                        n.Container
                    }
                },
                DisplayObjectContainer: {
                    get: function() {
                        return console.warn("DisplayObjectContainer has been shortened to Container, please use Container from now on."),
                        n.Container
                    }
                },
                Strip: {
                    get: function() {
                        return console.warn("The Strip class has been renamed to Mesh and moved to mesh.Mesh, please use mesh.Mesh from now on."),
                        r.Mesh
                    }
                },
                Rope: {
                    get: function() {
                        return console.warn("The Rope class has been moved to mesh.Rope, please use mesh.Rope from now on."),
                        r.Rope
                    }
                },
                MovieClip: {
                    get: function() {
                        return console.warn("The MovieClip class has been moved to extras.MovieClip, please use extras.MovieClip from now on."),
                        o.MovieClip
                    }
                },
                TilingSprite: {
                    get: function() {
                        return console.warn("The TilingSprite class has been moved to extras.TilingSprite, please use extras.TilingSprite from now on."),
                        o.TilingSprite
                    }
                },
                BitmapText: {
                    get: function() {
                        return console.warn("The BitmapText class has been moved to extras.BitmapText, please use extras.BitmapText from now on."),
                        o.BitmapText
                    }
                },
                blendModes: {
                    get: function() {
                        return console.warn("The blendModes has been moved to BLEND_MODES, please use BLEND_MODES from now on."),
                        n.BLEND_MODES
                    }
                },
                scaleModes: {
                    get: function() {
                        return console.warn("The scaleModes has been moved to SCALE_MODES, please use SCALE_MODES from now on."),
                        n.SCALE_MODES
                    }
                },
                BaseTextureCache: {
                    get: function() {
                        return console.warn("The BaseTextureCache class has been moved to utils.BaseTextureCache, please use utils.BaseTextureCache from now on."),
                        n.utils.BaseTextureCache
                    }
                },
                TextureCache: {
                    get: function() {
                        return console.warn("The TextureCache class has been moved to utils.TextureCache, please use utils.TextureCache from now on."),
                        n.utils.TextureCache
                    }
                },
                math: {
                    get: function() {
                        return console.warn("The math namespace is deprecated, please access members already accessible on PIXI."),
                        n
                    }
                }
            }),
            n.Sprite.prototype.setTexture = function(t) {
                this.texture = t,
                console.warn("setTexture is now deprecated, please use the texture property, e.g : sprite.texture = texture;")
            }
            ,
            o.BitmapText.prototype.setText = function(t) {
                this.text = t,
                console.warn("setText is now deprecated, please use the text property, e.g : myBitmapText.text = 'my text';")
            }
            ,
            n.Text.prototype.setText = function(t) {
                this.text = t,
                console.warn("setText is now deprecated, please use the text property, e.g : myText.text = 'my text';")
            }
            ,
            n.Text.prototype.setStyle = function(t) {
                this.style = t,
                console.warn("setStyle is now deprecated, please use the style property, e.g : myText.style = style;")
            }
            ,
            n.Texture.prototype.setFrame = function(t) {
                this.frame = t,
                console.warn("setFrame is now deprecated, please use the frame property, e.g : myTexture.frame = frame;")
            }
            ,
            Object.defineProperties(s, {
                AbstractFilter: {
                    get: function() {
                        return console.warn("filters.AbstractFilter is an undocumented alias, please use AbstractFilter from now on."),
                        n.AbstractFilter
                    }
                },
                FXAAFilter: {
                    get: function() {
                        return console.warn("filters.FXAAFilter is an undocumented alias, please use FXAAFilter from now on."),
                        n.FXAAFilter
                    }
                },
                SpriteMaskFilter: {
                    get: function() {
                        return console.warn("filters.SpriteMaskFilter is an undocumented alias, please use SpriteMaskFilter from now on."),
                        n.SpriteMaskFilter
                    }
                }
            }),
            n.utils.uuid = function() {
                return console.warn("utils.uuid() is deprecated, please use utils.uid() from now on."),
                n.utils.uid()
            }
        }
        , {
            "./core": 29,
            "./extras": 85,
            "./filters": 102,
            "./mesh": 126
        }],
        79: [function(t, e, i) {
            var x = t("../core");
            function b(t, e) {
                x.Container.call(this),
                e = e || {},
                this.textWidth = 0,
                this.textHeight = 0,
                this._glyphs = [],
                this._font = {
                    tint: void 0 !== e.tint ? e.tint : 16777215,
                    align: e.align || "left",
                    name: null,
                    size: 0
                },
                this.font = e.font,
                this._text = t,
                this.maxWidth = 0,
                this.dirty = !1,
                this.updateText()
            }
            (b.prototype = Object.create(x.Container.prototype)).constructor = b,
            e.exports = b,
            Object.defineProperties(b.prototype, {
                tint: {
                    get: function() {
                        return this._font.tint
                    },
                    set: function(t) {
                        this._font.tint = "number" == typeof t && 0 <= t ? t : 16777215,
                        this.dirty = !0
                    }
                },
                align: {
                    get: function() {
                        return this._font.align
                    },
                    set: function(t) {
                        this._font.align = t || "left",
                        this.dirty = !0
                    }
                },
                font: {
                    get: function() {
                        return this._font
                    },
                    set: function(t) {
                        t && ("string" == typeof t ? (t = t.split(" "),
                        this._font.name = 1 === t.length ? t[0] : t.slice(1).join(" "),
                        this._font.size = 2 <= t.length ? parseInt(t[0], 10) : b.fonts[this._font.name].size) : (this._font.name = t.name,
                        this._font.size = "number" == typeof t.size ? t.size : parseInt(t.size, 10)),
                        this.dirty = !0)
                    }
                },
                text: {
                    get: function() {
                        return this._text
                    },
                    set: function(t) {
                        t = t.toString() || " ",
                        this._text !== t && (this._text = t,
                        this.dirty = !0)
                    }
                }
            }),
            b.prototype.updateText = function() {
                var t = b.fonts[this._font.name]
                  , e = new x.Point
                  , i = null
                  , n = []
                  , r = 0
                  , o = 0
                  , s = []
                  , a = 0;
                t || console.error("invalid font not found: " + this._font.name);
                for (var h = this._font.size / t.size, l = -1, u = -1, c = 0; c < this.text.length; c++) {
                    var p = this.text.charCodeAt(c);
                    if ((l = /(\s)/.test(this.text.charAt(c)) ? c : l) == c && (u = r),
                    /(?:\r\n|\r|\n)/.test(this.text.charAt(c)))
                        s.push(r),
                        o = Math.max(o, r),
                        a++,
                        e.x = 0,
                        e.y += t.lineHeight,
                        i = null;
                    else if (-1 !== l && 0 < this.maxWidth && e.x * h > this.maxWidth) {
                        -1 != u && (r = u);
                        var d = c - l;
                        n.splice(n.length - d, d),
                        c = l,
                        u = l = -1,
                        s.push(r),
                        o = Math.max(o, r),
                        a++,
                        e.x = 0,
                        e.y += t.lineHeight,
                        i = null
                    } else {
                        var f = t.chars[p];
                        f && (i && f.kerning[i] && (e.x += f.kerning[i]),
                        n.push({
                            texture: f.texture,
                            line: a,
                            charCode: p,
                            position: new x.Point(e.x + f.xOffset,e.y + f.yOffset)
                        }),
                        r = e.x + (f.texture.width + f.xOffset),
                        e.x += f.xAdvance,
                        i = p)
                    }
                }
                s.push(r),
                o = Math.max(o, r);
                var g = [];
                for (c = 0; c <= a; c++) {
                    var y = 0;
                    "right" === this._font.align ? y = o - s[c] : "center" === this._font.align && (y = (o - s[c]) / 2),
                    g.push(y)
                }
                var m = n.length
                  , v = this.tint;
                for (c = 0; c < m; c++) {
                    var S = this._glyphs[c];
                    S ? S.texture = n[c].texture : (S = new x.Sprite(n[c].texture),
                    this._glyphs.push(S)),
                    S.position.x = (n[c].position.x + g[n[c].line]) * h,
                    S.position.y = n[c].position.y * h,
                    S.scale.x = S.scale.y = h,
                    S.tint = v,
                    S.parent || this.addChild(S)
                }
                for (c = m; c < this._glyphs.length; ++c)
                    this.removeChild(this._glyphs[c]);
                this.textWidth = o * h,
                this.textHeight = (e.y + t.lineHeight) * h
            }
            ,
            b.prototype.updateTransform = function() {
                this.validate(),
                this.containerUpdateTransform()
            }
            ,
            b.prototype.getLocalBounds = function() {
                return this.validate(),
                x.Container.prototype.getLocalBounds.call(this)
            }
            ,
            b.prototype.validate = function() {
                this.dirty && (this.updateText(),
                this.dirty = !1)
            }
            ,
            b.fonts = {}
        }
        , {
            "../core": 29
        }],
        80: [function(t, e, i) {
            var n = t("../core");
            function r(t) {
                n.Sprite.call(this, t[0]),
                this._textures = t,
                this.animationSpeed = 1,
                this.loop = !0,
                this.onComplete = null,
                this._currentTime = 0,
                this.playing = !1
            }
            (r.prototype = Object.create(n.Sprite.prototype)).constructor = r,
            e.exports = r,
            Object.defineProperties(r.prototype, {
                totalFrames: {
                    get: function() {
                        return this._textures.length
                    }
                },
                textures: {
                    get: function() {
                        return this._textures
                    },
                    set: function(t) {
                        this._textures = t,
                        this.texture = this._textures[Math.floor(this._currentTime) % this._textures.length]
                    }
                },
                currentFrame: {
                    get: function() {
                        return Math.floor(this._currentTime) % this._textures.length
                    }
                }
            }),
            r.prototype.stop = function() {
                this.playing && (this.playing = !1,
                n.ticker.shared.remove(this.update, this))
            }
            ,
            r.prototype.play = function() {
                this.playing || (this.playing = !0,
                n.ticker.shared.add(this.update, this))
            }
            ,
            r.prototype.gotoAndStop = function(t) {
                this.stop(),
                this._currentTime = t;
                var e = Math.floor(this._currentTime);
                this._texture = this._textures[e % this._textures.length]
            }
            ,
            r.prototype.gotoAndPlay = function(t) {
                this._currentTime = t,
                this.play()
            }
            ,
            r.prototype.update = function(t) {
                this._currentTime += this.animationSpeed * t;
                var e = Math.floor(this._currentTime);
                e < 0 ? this.loop ? this._texture = this._textures[this._textures.length - 1 + e % this._textures.length] : (this.gotoAndStop(0),
                this.onComplete && this.onComplete()) : this.loop || e < this._textures.length ? this._texture = this._textures[e % this._textures.length] : e >= this._textures.length && (this.gotoAndStop(this.textures.length - 1),
                this.onComplete && this.onComplete())
            }
            ,
            r.prototype.destroy = function() {
                this.stop(),
                n.Sprite.prototype.destroy.call(this)
            }
            ,
            r.fromFrames = function(t) {
                for (var e = [], i = 0; i < t.length; ++i)
                    e.push(new n.Texture.fromFrame(t[i]));
                return new r(e)
            }
            ,
            r.fromImages = function(t) {
                for (var e = [], i = 0; i < t.length; ++i)
                    e.push(new n.Texture.fromImage(t[i]));
                return new r(e)
            }
        }
        , {
            "../core": 29
        }],
        81: [function(t, e, i) {
            var l = t("../core")
              , o = new l.Point;
            function s(t, e, i) {
                l.Sprite.call(this, t),
                this.tileScale = new l.Point(1,1),
                this.tilePosition = new l.Point(0,0),
                this._width = e || 100,
                this._height = i || 100,
                this._uvs = new l.TextureUvs,
                this._canvasPattern = null,
                this.shader = new l.AbstractFilter(["precision lowp float;", "attribute vec2 aVertexPosition;", "attribute vec2 aTextureCoord;", "attribute vec4 aColor;", "uniform mat3 projectionMatrix;", "uniform vec4 uFrame;", "uniform vec4 uTransform;", "varying vec2 vTextureCoord;", "varying vec4 vColor;", "void main(void){", "   gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);", "   vec2 coord = aTextureCoord;", "   coord -= uTransform.xy;", "   coord /= uTransform.zw;", "   vTextureCoord = coord;", "   vColor = vec4(aColor.rgb * aColor.a, aColor.a);", "}"].join("\n"),["precision lowp float;", "varying vec2 vTextureCoord;", "varying vec4 vColor;", "uniform sampler2D uSampler;", "uniform vec4 uFrame;", "uniform vec2 uPixelSize;", "void main(void){", "   vec2 coord = mod(vTextureCoord, uFrame.zw);", "   coord = clamp(coord, uPixelSize, uFrame.zw - uPixelSize);", "   coord += uFrame.xy;", "   gl_FragColor =  texture2D(uSampler, coord) * vColor ;", "}"].join("\n"),{
                    uFrame: {
                        type: "4fv",
                        value: [0, 0, 1, 1]
                    },
                    uTransform: {
                        type: "4fv",
                        value: [0, 0, 1, 1]
                    },
                    uPixelSize: {
                        type: "2fv",
                        value: [1, 1]
                    }
                })
            }
            (s.prototype = Object.create(l.Sprite.prototype)).constructor = s,
            e.exports = s,
            Object.defineProperties(s.prototype, {
                width: {
                    get: function() {
                        return this._width
                    },
                    set: function(t) {
                        this._width = t
                    }
                },
                height: {
                    get: function() {
                        return this._height
                    },
                    set: function(t) {
                        this._height = t
                    }
                }
            }),
            s.prototype._onTextureUpdate = function() {}
            ,
            s.prototype._renderWebGL = function(t) {
                var e = this._texture;
                if (e && e._uvs) {
                    var i = e._uvs
                      , n = e._frame.width
                      , r = e._frame.height
                      , o = e.baseTexture.width
                      , s = e.baseTexture.height;
                    e._uvs = this._uvs,
                    e._frame.width = this.width,
                    e._frame.height = this.height,
                    this.shader.uniforms.uPixelSize.value[0] = 1 / o,
                    this.shader.uniforms.uPixelSize.value[1] = 1 / s,
                    this.shader.uniforms.uFrame.value[0] = i.x0,
                    this.shader.uniforms.uFrame.value[1] = i.y0,
                    this.shader.uniforms.uFrame.value[2] = i.x1 - i.x0,
                    this.shader.uniforms.uFrame.value[3] = i.y2 - i.y0,
                    this.shader.uniforms.uTransform.value[0] = this.tilePosition.x % (n * this.tileScale.x) / this._width,
                    this.shader.uniforms.uTransform.value[1] = this.tilePosition.y % (r * this.tileScale.y) / this._height,
                    this.shader.uniforms.uTransform.value[2] = o / this._width * this.tileScale.x,
                    this.shader.uniforms.uTransform.value[3] = s / this._height * this.tileScale.y,
                    t.setObjectRenderer(t.plugins.sprite),
                    t.plugins.sprite.render(this),
                    e._uvs = i,
                    e._frame.width = n,
                    e._frame.height = r
                }
            }
            ,
            s.prototype._renderCanvas = function(t) {
                var e = this._texture;
                if (e.baseTexture.hasLoaded) {
                    var i = t.context
                      , n = this.worldTransform
                      , r = t.resolution
                      , o = e.baseTexture
                      , s = this.tilePosition.x % (e._frame.width * this.tileScale.x)
                      , a = this.tilePosition.y % (e._frame.height * this.tileScale.y);
                    if (!this._canvasPattern) {
                        var h = new l.CanvasBuffer(e._frame.width,e._frame.height);
                        h.context.drawImage(o.source, -e._frame.x, -e._frame.y),
                        this._canvasPattern = h.context.createPattern(h.canvas, "repeat")
                    }
                    i.globalAlpha = this.worldAlpha,
                    i.setTransform(n.a * r, n.b * r, n.c * r, n.d * r, n.tx * r, n.ty * r),
                    i.scale(this.tileScale.x, this.tileScale.y),
                    i.translate(s + this.anchor.x * -this._width, a + this.anchor.y * -this._height),
                    this.blendMode !== t.currentBlendMode && (t.currentBlendMode = this.blendMode,
                    i.globalCompositeOperation = t.blendModes[t.currentBlendMode]),
                    i.fillStyle = this._canvasPattern,
                    i.fillRect(-s, -a, this._width / this.tileScale.x, this._height / this.tileScale.y)
                }
            }
            ,
            s.prototype.getBounds = function() {
                var t, e, i, n, r = this._width, o = this._height, s = r * (1 - this.anchor.x), a = r * -this.anchor.x, h = o * (1 - this.anchor.y), l = o * -this.anchor.y, u = this.worldTransform, c = u.a, p = u.b, d = u.c, f = u.d, g = u.tx, y = u.ty, m = c * a + d * l + g, v = f * l + p * a + y, S = c * s + d * l + g, x = f * l + p * s + y, b = c * s + d * h + g, T = f * h + p * s + y, _ = c * a + d * h + g, w = f * h + p * a + y;
                t = _ < (t = b < (t = S < (t = m) ? S : t) ? b : t) ? _ : t,
                i = w < (i = T < (i = x < (i = v) ? x : i) ? T : i) ? w : i,
                e = (e = (e = (e = m) < S ? S : e) < b ? b : e) < _ ? _ : e,
                n = (n = (n = (n = v) < x ? x : n) < T ? T : n) < w ? w : n;
                var C = this._bounds;
                return C.x = t,
                C.width = e - t,
                C.y = i,
                C.height = n - i,
                this._currentBounds = C
            }
            ,
            s.prototype.containsPoint = function(t) {
                this.worldTransform.applyInverse(t, o);
                var e, i = this._width, n = this._height, r = -i * this.anchor.x;
                return o.x > r && o.x < r + i && (e = -n * this.anchor.y,
                o.y > e && o.y < e + n)
            }
            ,
            s.prototype.destroy = function() {
                l.Sprite.prototype.destroy.call(this),
                this.tileScale = null,
                this._tileScaleOffset = null,
                this.tilePosition = null,
                this._uvs = null
            }
            ,
            s.fromFrame = function(t, e, i) {
                var n = l.utils.TextureCache[t];
                if (!n)
                    throw new Error('The frameId "' + t + '" does not exist in the texture cache ' + this);
                return new s(n,e,i)
            }
            ,
            s.fromImage = function(t, e, i, n, r) {
                return new s(l.Texture.fromImage(t, n, r),e,i)
            }
        }
        , {
            "../core": 29
        }],
        82: [function(t, e, i) {
            var a = t("../core")
              , n = a.DisplayObject
              , h = new a.Matrix;
            n.prototype._cacheAsBitmap = !1,
            n.prototype._originalRenderWebGL = null,
            n.prototype._originalRenderCanvas = null,
            n.prototype._originalUpdateTransform = null,
            n.prototype._originalHitTest = null,
            n.prototype._originalDestroy = null,
            n.prototype._cachedSprite = null,
            Object.defineProperties(n.prototype, {
                cacheAsBitmap: {
                    get: function() {
                        return this._cacheAsBitmap
                    },
                    set: function(t) {
                        this._cacheAsBitmap !== t && ((this._cacheAsBitmap = t) ? (this._originalRenderWebGL = this.renderWebGL,
                        this._originalRenderCanvas = this.renderCanvas,
                        this._originalUpdateTransform = this.updateTransform,
                        this._originalGetBounds = this.getBounds,
                        this._originalDestroy = this.destroy,
                        this._originalContainsPoint = this.containsPoint,
                        this.renderWebGL = this._renderCachedWebGL,
                        this.renderCanvas = this._renderCachedCanvas,
                        this.destroy = this._cacheAsBitmapDestroy) : (this._cachedSprite && this._destroyCachedDisplayObject(),
                        this.renderWebGL = this._originalRenderWebGL,
                        this.renderCanvas = this._originalRenderCanvas,
                        this.getBounds = this._originalGetBounds,
                        this.destroy = this._originalDestroy,
                        this.updateTransform = this._originalUpdateTransform,
                        this.containsPoint = this._originalContainsPoint))
                    }
                }
            }),
            n.prototype._renderCachedWebGL = function(t) {
                !this.visible || this.worldAlpha <= 0 || !this.renderable || (this._initCachedDisplayObject(t),
                this._cachedSprite.worldAlpha = this.worldAlpha,
                t.setObjectRenderer(t.plugins.sprite),
                t.plugins.sprite.render(this._cachedSprite))
            }
            ,
            n.prototype._initCachedDisplayObject = function(t) {
                if (!this._cachedSprite) {
                    t.currentRenderer.flush();
                    var e = this.getLocalBounds().clone();
                    if (this._filters) {
                        var i = this._filters[0].padding;
                        e.x -= i,
                        e.y -= i,
                        e.width += 2 * i,
                        e.height += 2 * i
                    }
                    var n = t.currentRenderTarget
                      , r = t.filterManager.filterStack
                      , o = new a.RenderTexture(t,0 | e.width,0 | e.height)
                      , s = h;
                    s.tx = -e.x,
                    s.ty = -e.y,
                    this.renderWebGL = this._originalRenderWebGL,
                    o.render(this, s, !0, !0),
                    t.setRenderTarget(n),
                    t.filterManager.filterStack = r,
                    this.renderWebGL = this._renderCachedWebGL,
                    this.updateTransform = this.displayObjectUpdateTransform,
                    this.getBounds = this._getCachedBounds,
                    this._cachedSprite = new a.Sprite(o),
                    this._cachedSprite.worldTransform = this.worldTransform,
                    this._cachedSprite.anchor.x = -e.x / e.width,
                    this._cachedSprite.anchor.y = -e.y / e.height,
                    this.updateTransform(),
                    this.containsPoint = this._cachedSprite.containsPoint.bind(this._cachedSprite)
                }
            }
            ,
            n.prototype._renderCachedCanvas = function(t) {
                !this.visible || this.worldAlpha <= 0 || !this.renderable || (this._initCachedDisplayObjectCanvas(t),
                this._cachedSprite.worldAlpha = this.worldAlpha,
                this._cachedSprite.renderCanvas(t))
            }
            ,
            n.prototype._initCachedDisplayObjectCanvas = function(t) {
                if (!this._cachedSprite) {
                    var e = this.getLocalBounds()
                      , i = t.context
                      , n = new a.RenderTexture(t,0 | e.width,0 | e.height)
                      , r = h;
                    r.tx = -e.x,
                    r.ty = -e.y,
                    this.renderCanvas = this._originalRenderCanvas,
                    n.render(this, r, !0),
                    t.context = i,
                    this.renderCanvas = this._renderCachedCanvas,
                    this.updateTransform = this.displayObjectUpdateTransform,
                    this.getBounds = this._getCachedBounds,
                    this._cachedSprite = new a.Sprite(n),
                    this._cachedSprite.worldTransform = this.worldTransform,
                    this._cachedSprite.anchor.x = -e.x / e.width,
                    this._cachedSprite.anchor.y = -e.y / e.height,
                    this.updateTransform(),
                    this.containsPoint = this._cachedSprite.containsPoint.bind(this._cachedSprite)
                }
            }
            ,
            n.prototype._getCachedBounds = function() {
                return this._cachedSprite._currentBounds = null,
                this._cachedSprite.getBounds()
            }
            ,
            n.prototype._destroyCachedDisplayObject = function() {
                this._cachedSprite._texture.destroy(),
                this._cachedSprite = null
            }
            ,
            n.prototype._cacheAsBitmapDestroy = function() {
                this.cacheAsBitmap = !1,
                this._originalDestroy()
            }
        }
        , {
            "../core": 29
        }],
        83: [function(t, e, i) {
            var n = t("../core");
            n.DisplayObject.prototype.name = null,
            n.Container.prototype.getChildByName = function(t) {
                for (var e = 0; e < this.children.length; e++)
                    if (this.children[e].name === t)
                        return this.children[e];
                return null
            }
        }
        , {
            "../core": 29
        }],
        84: [function(t, e, i) {
            var n = t("../core");
            n.DisplayObject.prototype.getGlobalPosition = function(t) {
                return t = t || new n.Point,
                this.parent ? (this.displayObjectUpdateTransform(),
                t.x = this.worldTransform.tx,
                t.y = this.worldTransform.ty) : (t.x = this.position.x,
                t.y = this.position.y),
                t
            }
        }
        , {
            "../core": 29
        }],
        85: [function(t, e, i) {
            t("./cacheAsBitmap"),
            t("./getChildByName"),
            t("./getGlobalPosition"),
            e.exports = {
                MovieClip: t("./MovieClip"),
                TilingSprite: t("./TilingSprite"),
                BitmapText: t("./BitmapText")
            }
        }
        , {
            "./BitmapText": 79,
            "./MovieClip": 80,
            "./TilingSprite": 81,
            "./cacheAsBitmap": 82,
            "./getChildByName": 83,
            "./getGlobalPosition": 84
        }],
        86: [function(t, e, i) {
            var n = t("../../core");
            function r() {
                n.AbstractFilter.call(this, null, "precision mediump float;\n\nuniform vec4 dimensions;\nuniform float pixelSize;\nuniform sampler2D uSampler;\n\nfloat character(float n, vec2 p)\n{\n    p = floor(p*vec2(4.0, -4.0) + 2.5);\n    if (clamp(p.x, 0.0, 4.0) == p.x && clamp(p.y, 0.0, 4.0) == p.y)\n    {\n        if (int(mod(n/exp2(p.x + 5.0*p.y), 2.0)) == 1) return 1.0;\n    }\n    return 0.0;\n}\n\nvoid main()\n{\n    vec2 uv = gl_FragCoord.xy;\n\n    vec3 col = texture2D(uSampler, floor( uv / pixelSize ) * pixelSize / dimensions.xy).rgb;\n\n    float gray = (col.r + col.g + col.b) / 3.0;\n\n    float n =  65536.0;             // .\n    if (gray > 0.2) n = 65600.0;    // :\n    if (gray > 0.3) n = 332772.0;   // *\n    if (gray > 0.4) n = 15255086.0; // o\n    if (gray > 0.5) n = 23385164.0; // &\n    if (gray > 0.6) n = 15252014.0; // 8\n    if (gray > 0.7) n = 13199452.0; // @\n    if (gray > 0.8) n = 11512810.0; // #\n\n    vec2 p = mod( uv / ( pixelSize * 0.5 ), 2.0) - vec2(1.0);\n    col = col * character(n, p);\n\n    gl_FragColor = vec4(col, 1.0);\n}\n", {
                    dimensions: {
                        type: "4fv",
                        value: new Float32Array([0, 0, 0, 0])
                    },
                    pixelSize: {
                        type: "1f",
                        value: 8
                    }
                })
            }
            (r.prototype = Object.create(n.AbstractFilter.prototype)).constructor = r,
            e.exports = r,
            Object.defineProperties(r.prototype, {
                size: {
                    get: function() {
                        return this.uniforms.pixelSize.value
                    },
                    set: function(t) {
                        this.uniforms.pixelSize.value = t
                    }
                }
            })
        }
        , {
            "../../core": 29
        }],
        87: [function(t, e, i) {
            var r = t("../../core")
              , n = t("../blur/BlurXFilter")
              , o = t("../blur/BlurYFilter");
            function s() {
                r.AbstractFilter.call(this),
                this.blurXFilter = new n,
                this.blurYFilter = new o,
                this.defaultFilter = new r.AbstractFilter
            }
            (s.prototype = Object.create(r.AbstractFilter.prototype)).constructor = s,
            (e.exports = s).prototype.applyFilter = function(t, e, i) {
                var n = t.filterManager.getRenderTarget(!0);
                this.defaultFilter.applyFilter(t, e, i),
                this.blurXFilter.applyFilter(t, e, n),
                t.blendModeManager.setBlendMode(r.BLEND_MODES.SCREEN),
                this.blurYFilter.applyFilter(t, n, i),
                t.blendModeManager.setBlendMode(r.BLEND_MODES.NORMAL),
                t.filterManager.returnRenderTarget(n)
            }
            ,
            Object.defineProperties(s.prototype, {
                blur: {
                    get: function() {
                        return this.blurXFilter.blur
                    },
                    set: function(t) {
                        this.blurXFilter.blur = this.blurYFilter.blur = t
                    }
                },
                blurX: {
                    get: function() {
                        return this.blurXFilter.blur
                    },
                    set: function(t) {
                        this.blurXFilter.blur = t
                    }
                },
                blurY: {
                    get: function() {
                        return this.blurYFilter.blur
                    },
                    set: function(t) {
                        this.blurYFilter.blur = t
                    }
                }
            })
        }
        , {
            "../../core": 29,
            "../blur/BlurXFilter": 90,
            "../blur/BlurYFilter": 91
        }],
        88: [function(t, e, i) {
            var n = t("../../core");
            function r(t, e) {
                n.AbstractFilter.call(this, "attribute vec2 aVertexPosition;\nattribute vec2 aTextureCoord;\nattribute vec4 aColor;\n\nuniform float strength;\nuniform float dirX;\nuniform float dirY;\nuniform mat3 projectionMatrix;\n\nvarying vec2 vTextureCoord;\nvarying vec4 vColor;\nvarying vec2 vBlurTexCoords[3];\n\nvoid main(void)\n{\n    gl_Position = vec4((projectionMatrix * vec3((aVertexPosition), 1.0)).xy, 0.0, 1.0);\n    vTextureCoord = aTextureCoord;\n\n    vBlurTexCoords[0] = aTextureCoord + vec2( (0.004 * strength) * dirX, (0.004 * strength) * dirY );\n    vBlurTexCoords[1] = aTextureCoord + vec2( (0.008 * strength) * dirX, (0.008 * strength) * dirY );\n    vBlurTexCoords[2] = aTextureCoord + vec2( (0.012 * strength) * dirX, (0.012 * strength) * dirY );\n\n    vColor = vec4(aColor.rgb * aColor.a, aColor.a);\n}\n", "precision lowp float;\n\nvarying vec2 vTextureCoord;\nvarying vec2 vBlurTexCoords[3];\nvarying vec4 vColor;\n\nuniform sampler2D uSampler;\n\nvoid main(void)\n{\n    gl_FragColor = vec4(0.0);\n\n    gl_FragColor += texture2D(uSampler, vTextureCoord     ) * 0.3989422804014327;\n    gl_FragColor += texture2D(uSampler, vBlurTexCoords[ 0]) * 0.2419707245191454;\n    gl_FragColor += texture2D(uSampler, vBlurTexCoords[ 1]) * 0.05399096651318985;\n    gl_FragColor += texture2D(uSampler, vBlurTexCoords[ 2]) * 0.004431848411938341;\n}\n", {
                    strength: {
                        type: "1f",
                        value: 1
                    },
                    dirX: {
                        type: "1f",
                        value: t || 0
                    },
                    dirY: {
                        type: "1f",
                        value: e || 0
                    }
                }),
                this.defaultFilter = new n.AbstractFilter,
                this.passes = 1,
                this.dirX = t || 0,
                this.dirY = e || 0,
                this.strength = 4
            }
            (r.prototype = Object.create(n.AbstractFilter.prototype)).constructor = r,
            (e.exports = r).prototype.applyFilter = function(t, e, i, n) {
                var r = this.getShader(t);
                if (this.uniforms.strength.value = this.strength / 4 / this.passes * (e.frame.width / e.size.width),
                1 === this.passes)
                    t.filterManager.applyFilter(r, e, i, n);
                else {
                    var o = t.filterManager.getRenderTarget(!0);
                    t.filterManager.applyFilter(r, e, o, n);
                    for (var s = 0; s < this.passes - 2; s++)
                        t.filterManager.applyFilter(r, o, o, n);
                    t.filterManager.applyFilter(r, o, i, n),
                    t.filterManager.returnRenderTarget(o)
                }
            }
            ,
            Object.defineProperties(r.prototype, {
                blur: {
                    get: function() {
                        return this.strength
                    },
                    set: function(t) {
                        this.padding = .5 * t,
                        this.strength = t
                    }
                },
                dirX: {
                    get: function() {
                        return this.dirX
                    },
                    set: function(t) {
                        this.uniforms.dirX.value = t
                    }
                },
                dirY: {
                    get: function() {
                        return this.dirY
                    },
                    set: function(t) {
                        this.uniforms.dirY.value = t
                    }
                }
            })
        }
        , {
            "../../core": 29
        }],
        89: [function(t, e, i) {
            var n = t("../../core")
              , r = t("./BlurXFilter")
              , o = t("./BlurYFilter");
            function s() {
                n.AbstractFilter.call(this),
                this.blurXFilter = new r,
                this.blurYFilter = new o
            }
            (s.prototype = Object.create(n.AbstractFilter.prototype)).constructor = s,
            (e.exports = s).prototype.applyFilter = function(t, e, i) {
                var n = t.filterManager.getRenderTarget(!0);
                this.blurXFilter.applyFilter(t, e, n),
                this.blurYFilter.applyFilter(t, n, i),
                t.filterManager.returnRenderTarget(n)
            }
            ,
            Object.defineProperties(s.prototype, {
                blur: {
                    get: function() {
                        return this.blurXFilter.blur
                    },
                    set: function(t) {
                        this.padding = .5 * Math.abs(t),
                        this.blurXFilter.blur = this.blurYFilter.blur = t
                    }
                },
                passes: {
                    get: function() {
                        return this.blurXFilter.passes
                    },
                    set: function(t) {
                        this.blurXFilter.passes = this.blurYFilter.passes = t
                    }
                },
                blurX: {
                    get: function() {
                        return this.blurXFilter.blur
                    },
                    set: function(t) {
                        this.blurXFilter.blur = t
                    }
                },
                blurY: {
                    get: function() {
                        return this.blurYFilter.blur
                    },
                    set: function(t) {
                        this.blurYFilter.blur = t
                    }
                }
            })
        }
        , {
            "../../core": 29,
            "./BlurXFilter": 90,
            "./BlurYFilter": 91
        }],
        90: [function(t, e, i) {
            var n = t("../../core");
            function r() {
                n.AbstractFilter.call(this, "attribute vec2 aVertexPosition;\nattribute vec2 aTextureCoord;\nattribute vec4 aColor;\n\nuniform float strength;\nuniform mat3 projectionMatrix;\n\nvarying vec2 vTextureCoord;\nvarying vec4 vColor;\nvarying vec2 vBlurTexCoords[6];\n\nvoid main(void)\n{\n    gl_Position = vec4((projectionMatrix * vec3((aVertexPosition), 1.0)).xy, 0.0, 1.0);\n    vTextureCoord = aTextureCoord;\n\n    vBlurTexCoords[ 0] = aTextureCoord + vec2(-0.012 * strength, 0.0);\n    vBlurTexCoords[ 1] = aTextureCoord + vec2(-0.008 * strength, 0.0);\n    vBlurTexCoords[ 2] = aTextureCoord + vec2(-0.004 * strength, 0.0);\n    vBlurTexCoords[ 3] = aTextureCoord + vec2( 0.004 * strength, 0.0);\n    vBlurTexCoords[ 4] = aTextureCoord + vec2( 0.008 * strength, 0.0);\n    vBlurTexCoords[ 5] = aTextureCoord + vec2( 0.012 * strength, 0.0);\n\n    vColor = vec4(aColor.rgb * aColor.a, aColor.a);\n}\n", "precision lowp float;\n\nvarying vec2 vTextureCoord;\nvarying vec2 vBlurTexCoords[6];\nvarying vec4 vColor;\n\nuniform sampler2D uSampler;\n\nvoid main(void)\n{\n    gl_FragColor = vec4(0.0);\n\n    gl_FragColor += texture2D(uSampler, vBlurTexCoords[ 0])*0.004431848411938341;\n    gl_FragColor += texture2D(uSampler, vBlurTexCoords[ 1])*0.05399096651318985;\n    gl_FragColor += texture2D(uSampler, vBlurTexCoords[ 2])*0.2419707245191454;\n    gl_FragColor += texture2D(uSampler, vTextureCoord     )*0.3989422804014327;\n    gl_FragColor += texture2D(uSampler, vBlurTexCoords[ 3])*0.2419707245191454;\n    gl_FragColor += texture2D(uSampler, vBlurTexCoords[ 4])*0.05399096651318985;\n    gl_FragColor += texture2D(uSampler, vBlurTexCoords[ 5])*0.004431848411938341;\n}\n", {
                    strength: {
                        type: "1f",
                        value: 1
                    }
                }),
                this.passes = 1,
                this.strength = 4
            }
            (r.prototype = Object.create(n.AbstractFilter.prototype)).constructor = r,
            (e.exports = r).prototype.applyFilter = function(t, e, i, n) {
                var r = this.getShader(t);
                if (this.uniforms.strength.value = this.strength / 4 / this.passes * (e.frame.width / e.size.width),
                1 === this.passes)
                    t.filterManager.applyFilter(r, e, i, n);
                else {
                    for (var o = t.filterManager.getRenderTarget(!0), s = e, a = o, h = 0; h < this.passes - 1; h++) {
                        t.filterManager.applyFilter(r, s, a, !0);
                        var l = a;
                        a = s,
                        s = l
                    }
                    t.filterManager.applyFilter(r, s, i, n),
                    t.filterManager.returnRenderTarget(o)
                }
            }
            ,
            Object.defineProperties(r.prototype, {
                blur: {
                    get: function() {
                        return this.strength
                    },
                    set: function(t) {
                        this.padding = .5 * Math.abs(t),
                        this.strength = t
                    }
                }
            })
        }
        , {
            "../../core": 29
        }],
        91: [function(t, e, i) {
            var n = t("../../core");
            function r() {
                n.AbstractFilter.call(this, "attribute vec2 aVertexPosition;\nattribute vec2 aTextureCoord;\nattribute vec4 aColor;\n\nuniform float strength;\nuniform mat3 projectionMatrix;\n\nvarying vec2 vTextureCoord;\nvarying vec4 vColor;\nvarying vec2 vBlurTexCoords[6];\n\nvoid main(void)\n{\n    gl_Position = vec4((projectionMatrix * vec3((aVertexPosition), 1.0)).xy, 0.0, 1.0);\n    vTextureCoord = aTextureCoord;\n\n    vBlurTexCoords[ 0] = aTextureCoord + vec2(0.0, -0.012 * strength);\n    vBlurTexCoords[ 1] = aTextureCoord + vec2(0.0, -0.008 * strength);\n    vBlurTexCoords[ 2] = aTextureCoord + vec2(0.0, -0.004 * strength);\n    vBlurTexCoords[ 3] = aTextureCoord + vec2(0.0,  0.004 * strength);\n    vBlurTexCoords[ 4] = aTextureCoord + vec2(0.0,  0.008 * strength);\n    vBlurTexCoords[ 5] = aTextureCoord + vec2(0.0,  0.012 * strength);\n\n   vColor = vec4(aColor.rgb * aColor.a, aColor.a);\n}\n", "precision lowp float;\n\nvarying vec2 vTextureCoord;\nvarying vec2 vBlurTexCoords[6];\nvarying vec4 vColor;\n\nuniform sampler2D uSampler;\n\nvoid main(void)\n{\n    gl_FragColor = vec4(0.0);\n\n    gl_FragColor += texture2D(uSampler, vBlurTexCoords[ 0])*0.004431848411938341;\n    gl_FragColor += texture2D(uSampler, vBlurTexCoords[ 1])*0.05399096651318985;\n    gl_FragColor += texture2D(uSampler, vBlurTexCoords[ 2])*0.2419707245191454;\n    gl_FragColor += texture2D(uSampler, vTextureCoord     )*0.3989422804014327;\n    gl_FragColor += texture2D(uSampler, vBlurTexCoords[ 3])*0.2419707245191454;\n    gl_FragColor += texture2D(uSampler, vBlurTexCoords[ 4])*0.05399096651318985;\n    gl_FragColor += texture2D(uSampler, vBlurTexCoords[ 5])*0.004431848411938341;\n}\n", {
                    strength: {
                        type: "1f",
                        value: 1
                    }
                }),
                this.passes = 1,
                this.strength = 4
            }
            (r.prototype = Object.create(n.AbstractFilter.prototype)).constructor = r,
            (e.exports = r).prototype.applyFilter = function(t, e, i, n) {
                var r = this.getShader(t);
                if (this.uniforms.strength.value = Math.abs(this.strength) / 4 / this.passes * (e.frame.height / e.size.height),
                1 === this.passes)
                    t.filterManager.applyFilter(r, e, i, n);
                else {
                    for (var o = t.filterManager.getRenderTarget(!0), s = e, a = o, h = 0; h < this.passes - 1; h++) {
                        t.filterManager.applyFilter(r, s, a, !0);
                        var l = a;
                        a = s,
                        s = l
                    }
                    t.filterManager.applyFilter(r, s, i, n),
                    t.filterManager.returnRenderTarget(o)
                }
            }
            ,
            Object.defineProperties(r.prototype, {
                blur: {
                    get: function() {
                        return this.strength
                    },
                    set: function(t) {
                        this.padding = .5 * Math.abs(t),
                        this.strength = t
                    }
                }
            })
        }
        , {
            "../../core": 29
        }],
        92: [function(t, e, i) {
            var n = t("../../core");
            function r() {
                n.AbstractFilter.call(this, null, "precision mediump float;\n\nvarying vec2 vTextureCoord;\n\nuniform sampler2D uSampler;\nuniform vec2 delta;\n\nfloat random(vec3 scale, float seed)\n{\n    return fract(sin(dot(gl_FragCoord.xyz + seed, scale)) * 43758.5453 + seed);\n}\n\nvoid main(void)\n{\n    vec4 color = vec4(0.0);\n    float total = 0.0;\n\n    float offset = random(vec3(12.9898, 78.233, 151.7182), 0.0);\n\n    for (float t = -30.0; t <= 30.0; t++)\n    {\n        float percent = (t + offset - 0.5) / 30.0;\n        float weight = 1.0 - abs(percent);\n        vec4 sample = texture2D(uSampler, vTextureCoord + delta * percent);\n        sample.rgb *= sample.a;\n        color += sample * weight;\n        total += weight;\n    }\n\n    gl_FragColor = color / total;\n    gl_FragColor.rgb /= gl_FragColor.a + 0.00001;\n}\n", {
                    delta: {
                        type: "v2",
                        value: {
                            x: .1,
                            y: 0
                        }
                    }
                })
            }
            (r.prototype = Object.create(n.AbstractFilter.prototype)).constructor = r,
            e.exports = r
        }
        , {
            "../../core": 29
        }],
        93: [function(t, e, i) {
            var n = t("../../core");
            function r() {
                n.AbstractFilter.call(this, null, "precision mediump float;\n\nvarying vec2 vTextureCoord;\nuniform sampler2D uSampler;\nuniform float m[25];\n\nvoid main(void)\n{\n\n    vec4 c = texture2D(uSampler, vTextureCoord);\n\n    gl_FragColor.r = (m[0] * c.r);\n        gl_FragColor.r += (m[1] * c.g);\n        gl_FragColor.r += (m[2] * c.b);\n        gl_FragColor.r += (m[3] * c.a);\n        gl_FragColor.r += m[4];\n\n    gl_FragColor.g = (m[5] * c.r);\n        gl_FragColor.g += (m[6] * c.g);\n        gl_FragColor.g += (m[7] * c.b);\n        gl_FragColor.g += (m[8] * c.a);\n        gl_FragColor.g += m[9];\n\n     gl_FragColor.b = (m[10] * c.r);\n        gl_FragColor.b += (m[11] * c.g);\n        gl_FragColor.b += (m[12] * c.b);\n        gl_FragColor.b += (m[13] * c.a);\n        gl_FragColor.b += m[14];\n\n     gl_FragColor.a = (m[15] * c.r);\n        gl_FragColor.a += (m[16] * c.g);\n        gl_FragColor.a += (m[17] * c.b);\n        gl_FragColor.a += (m[18] * c.a);\n        gl_FragColor.a += m[19];\n\n}\n", {
                    m: {
                        type: "1fv",
                        value: [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0]
                    }
                })
            }
            (r.prototype = Object.create(n.AbstractFilter.prototype)).constructor = r,
            (e.exports = r).prototype._loadMatrix = function(t, e) {
                var i = t;
                (e = !!e) && (this._multiply(i, this.uniforms.m.value, t),
                i = this._colorMatrix(i)),
                this.uniforms.m.value = i
            }
            ,
            r.prototype._multiply = function(t, e, i) {
                return t[0] = e[0] * i[0] + e[1] * i[5] + e[2] * i[10] + e[3] * i[15],
                t[1] = e[0] * i[1] + e[1] * i[6] + e[2] * i[11] + e[3] * i[16],
                t[2] = e[0] * i[2] + e[1] * i[7] + e[2] * i[12] + e[3] * i[17],
                t[3] = e[0] * i[3] + e[1] * i[8] + e[2] * i[13] + e[3] * i[18],
                t[4] = e[0] * i[4] + e[1] * i[9] + e[2] * i[14] + e[3] * i[19],
                t[5] = e[5] * i[0] + e[6] * i[5] + e[7] * i[10] + e[8] * i[15],
                t[6] = e[5] * i[1] + e[6] * i[6] + e[7] * i[11] + e[8] * i[16],
                t[7] = e[5] * i[2] + e[6] * i[7] + e[7] * i[12] + e[8] * i[17],
                t[8] = e[5] * i[3] + e[6] * i[8] + e[7] * i[13] + e[8] * i[18],
                t[9] = e[5] * i[4] + e[6] * i[9] + e[7] * i[14] + e[8] * i[19],
                t[10] = e[10] * i[0] + e[11] * i[5] + e[12] * i[10] + e[13] * i[15],
                t[11] = e[10] * i[1] + e[11] * i[6] + e[12] * i[11] + e[13] * i[16],
                t[12] = e[10] * i[2] + e[11] * i[7] + e[12] * i[12] + e[13] * i[17],
                t[13] = e[10] * i[3] + e[11] * i[8] + e[12] * i[13] + e[13] * i[18],
                t[14] = e[10] * i[4] + e[11] * i[9] + e[12] * i[14] + e[13] * i[19],
                t[15] = e[15] * i[0] + e[16] * i[5] + e[17] * i[10] + e[18] * i[15],
                t[16] = e[15] * i[1] + e[16] * i[6] + e[17] * i[11] + e[18] * i[16],
                t[17] = e[15] * i[2] + e[16] * i[7] + e[17] * i[12] + e[18] * i[17],
                t[18] = e[15] * i[3] + e[16] * i[8] + e[17] * i[13] + e[18] * i[18],
                t[19] = e[15] * i[4] + e[16] * i[9] + e[17] * i[14] + e[18] * i[19],
                t
            }
            ,
            r.prototype._colorMatrix = function(t) {
                var e = new Float32Array(t);
                return e[4] /= 255,
                e[9] /= 255,
                e[14] /= 255,
                e[19] /= 255,
                e
            }
            ,
            r.prototype.brightness = function(t, e) {
                var i = [t, 0, 0, 0, 0, 0, t, 0, 0, 0, 0, 0, t, 0, 0, 0, 0, 0, 1, 0];
                this._loadMatrix(i, e)
            }
            ,
            r.prototype.grayscale = r.prototype.greyscale = function(t, e) {
                var i = [t, t, t, 0, 0, t, t, t, 0, 0, t, t, t, 0, 0, 0, 0, 0, 1, 0];
                this._loadMatrix(i, e)
            }
            ,
            r.prototype.blackAndWhite = function(t) {
                this._loadMatrix([.3, .6, .1, 0, 0, .3, .6, .1, 0, 0, .3, .6, .1, 0, 0, 0, 0, 0, 1, 0], t)
            }
            ,
            r.prototype.hue = function(t, e) {
                t = (t || 0) / 180 * Math.PI;
                var i = Math.cos(t)
                  , n = Math.sin(t)
                  , r = [.213 + .787 * i + -.213 * n, .715 + -.715 * i + -.715 * n, .072 + -.072 * i + .928 * n, 0, 0, .213 + -.213 * i + .143 * n, .715 + i * (1 - .715) + .14 * n, .072 + -.072 * i + -.283 * n, 0, 0, .213 + -.213 * i + -.787 * n, .715 + -.715 * i + .715 * n, .072 + .928 * i + .072 * n, 0, 0, 0, 0, 0, 1, 0];
                this._loadMatrix(r, e)
            }
            ,
            r.prototype.contrast = function(t, e) {
                var i = (t || 0) + 1
                  , n = -128 * (i - 1)
                  , r = [i, 0, 0, 0, n, 0, i, 0, 0, n, 0, 0, i, 0, n, 0, 0, 0, 1, 0];
                this._loadMatrix(r, e)
            }
            ,
            r.prototype.saturate = function(t, e) {
                var i = 2 * (t || 0) / 3 + 1
                  , n = -.5 * (i - 1)
                  , r = [i, n, n, 0, 0, n, i, n, 0, 0, n, n, i, 0, 0, 0, 0, 0, 1, 0];
                this._loadMatrix(r, e)
            }
            ,
            r.prototype.desaturate = function(t) {
                this.saturate(-1)
            }
            ,
            r.prototype.negative = function(t) {
                this._loadMatrix([0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0], t)
            }
            ,
            r.prototype.sepia = function(t) {
                this._loadMatrix([.393, .7689999, .18899999, 0, 0, .349, .6859999, .16799999, 0, 0, .272, .5339999, .13099999, 0, 0, 0, 0, 0, 1, 0], t)
            }
            ,
            r.prototype.technicolor = function(t) {
                this._loadMatrix([1.9125277891456083, -.8545344976951645, -.09155508482755585, 0, 11.793603434377337, -.3087833385928097, 1.7658908555458428, -.10601743074722245, 0, -70.35205161461398, -.231103377548616, -.7501899197440212, 1.847597816108189, 0, 30.950940869491138, 0, 0, 0, 1, 0], t)
            }
            ,
            r.prototype.polaroid = function(t) {
                this._loadMatrix([1.438, -.062, -.062, 0, 0, -.122, 1.378, -.122, 0, 0, -.016, -.016, 1.483, 0, 0, 0, 0, 0, 1, 0], t)
            }
            ,
            r.prototype.toBGR = function(t) {
                this._loadMatrix([0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0], t)
            }
            ,
            r.prototype.kodachrome = function(t) {
                this._loadMatrix([1.1285582396593525, -.3967382283601348, -.03992559172921793, 0, 63.72958762196502, -.16404339962244616, 1.0835251566291304, -.05498805115633132, 0, 24.732407896706203, -.16786010706155763, -.5603416277695248, 1.6014850761964943, 0, 35.62982807460946, 0, 0, 0, 1, 0], t)
            }
            ,
            r.prototype.browni = function(t) {
                this._loadMatrix([.5997023498159715, .34553243048391263, -.2708298674538042, 0, 47.43192855600873, -.037703249837783157, .8609577587992641, .15059552388459913, 0, -36.96841498319127, .24113635128153335, -.07441037908422492, .44972182064877153, 0, -7.562075277591283, 0, 0, 0, 1, 0], t)
            }
            ,
            r.prototype.vintage = function(t) {
                this._loadMatrix([.6279345635605994, .3202183420819367, -.03965408211312453, 0, 9.651285835294123, .02578397704808868, .6441188644374771, .03259127616149294, 0, 7.462829176470591, .0466055556782719, -.0851232987247891, .5241648018700465, 0, 5.159190588235296, 0, 0, 0, 1, 0], t)
            }
            ,
            r.prototype.colorTone = function(t, e, i, n, r) {
                var o = ((i = i || 16770432) >> 16 & 255) / 255
                  , s = (i >> 8 & 255) / 255
                  , a = (255 & i) / 255
                  , h = ((n = n || 3375104) >> 16 & 255) / 255
                  , l = (n >> 8 & 255) / 255
                  , u = (255 & n) / 255
                  , c = [.3, .59, .11, 0, 0, o, s, a, t = t || .2, 0, h, l, u, e = e || .15, 0, o - h, s - l, a - u, 0, 0];
                this._loadMatrix(c, r)
            }
            ,
            r.prototype.night = function(t, e) {
                var i = [-2 * (t = t || .1), -t, 0, 0, 0, -t, 0, t, 0, 0, 0, t, 2 * t, 0, 0, 0, 0, 0, 1, 0];
                this._loadMatrix(i, e)
            }
            ,
            r.prototype.predator = function(t, e) {
                var i = [11.224130630493164 * t, -4.794486999511719 * t, -2.8746118545532227 * t, 0 * t, .40342438220977783 * t, -3.6330697536468506 * t, 9.193157196044922 * t, -2.951810836791992 * t, 0 * t, -1.316135048866272 * t, -3.2184197902679443 * t, -4.2375030517578125 * t, 7.476448059082031 * t, 0 * t, .8044459223747253 * t, 0, 0, 0, 1, 0];
                this._loadMatrix(i, e)
            }
            ,
            r.prototype.lsd = function(t) {
                this._loadMatrix([2, -.4, .5, 0, 0, -.5, 2, -.4, 0, 0, -.4, -.5, 3, 0, 0, 0, 0, 0, 1, 0], t)
            }
            ,
            r.prototype.reset = function() {
                this._loadMatrix([1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], !1)
            }
            ,
            Object.defineProperties(r.prototype, {
                matrix: {
                    get: function() {
                        return this.uniforms.m.value
                    },
                    set: function(t) {
                        this.uniforms.m.value = t
                    }
                }
            })
        }
        , {
            "../../core": 29
        }],
        94: [function(t, e, i) {
            var n = t("../../core");
            function r() {
                n.AbstractFilter.call(this, null, "precision mediump float;\n\nvarying vec2 vTextureCoord;\n\nuniform sampler2D uSampler;\nuniform float step;\n\nvoid main(void)\n{\n    vec4 color = texture2D(uSampler, vTextureCoord);\n\n    color = floor(color * step) / step;\n\n    gl_FragColor = color;\n}\n", {
                    step: {
                        type: "1f",
                        value: 5
                    }
                })
            }
            (r.prototype = Object.create(n.AbstractFilter.prototype)).constructor = r,
            e.exports = r,
            Object.defineProperties(r.prototype, {
                step: {
                    get: function() {
                        return this.uniforms.step.value
                    },
                    set: function(t) {
                        this.uniforms.step.value = t
                    }
                }
            })
        }
        , {
            "../../core": 29
        }],
        95: [function(t, e, i) {
            var n = t("../../core");
            function r(t, e, i) {
                n.AbstractFilter.call(this, null, "precision mediump float;\n\nvarying mediump vec2 vTextureCoord;\n\nuniform sampler2D uSampler;\nuniform vec2 texelSize;\nuniform float matrix[9];\n\nvoid main(void)\n{\n   vec4 c11 = texture2D(uSampler, vTextureCoord - texelSize); // top left\n   vec4 c12 = texture2D(uSampler, vec2(vTextureCoord.x, vTextureCoord.y - texelSize.y)); // top center\n   vec4 c13 = texture2D(uSampler, vec2(vTextureCoord.x + texelSize.x, vTextureCoord.y - texelSize.y)); // top right\n\n   vec4 c21 = texture2D(uSampler, vec2(vTextureCoord.x - texelSize.x, vTextureCoord.y)); // mid left\n   vec4 c22 = texture2D(uSampler, vTextureCoord); // mid center\n   vec4 c23 = texture2D(uSampler, vec2(vTextureCoord.x + texelSize.x, vTextureCoord.y)); // mid right\n\n   vec4 c31 = texture2D(uSampler, vec2(vTextureCoord.x - texelSize.x, vTextureCoord.y + texelSize.y)); // bottom left\n   vec4 c32 = texture2D(uSampler, vec2(vTextureCoord.x, vTextureCoord.y + texelSize.y)); // bottom center\n   vec4 c33 = texture2D(uSampler, vTextureCoord + texelSize); // bottom right\n\n   gl_FragColor =\n       c11 * matrix[0] + c12 * matrix[1] + c13 * matrix[2] +\n       c21 * matrix[3] + c22 * matrix[4] + c23 * matrix[5] +\n       c31 * matrix[6] + c32 * matrix[7] + c33 * matrix[8];\n\n   gl_FragColor.a = c22.a;\n}\n", {
                    matrix: {
                        type: "1fv",
                        value: new Float32Array(t)
                    },
                    texelSize: {
                        type: "v2",
                        value: {
                            x: 1 / e,
                            y: 1 / i
                        }
                    }
                })
            }
            (r.prototype = Object.create(n.AbstractFilter.prototype)).constructor = r,
            e.exports = r,
            Object.defineProperties(r.prototype, {
                matrix: {
                    get: function() {
                        return this.uniforms.matrix.value
                    },
                    set: function(t) {
                        this.uniforms.matrix.value = new Float32Array(t)
                    }
                },
                width: {
                    get: function() {
                        return 1 / this.uniforms.texelSize.value.x
                    },
                    set: function(t) {
                        this.uniforms.texelSize.value.x = 1 / t
                    }
                },
                height: {
                    get: function() {
                        return 1 / this.uniforms.texelSize.value.y
                    },
                    set: function(t) {
                        this.uniforms.texelSize.value.y = 1 / t
                    }
                }
            })
        }
        , {
            "../../core": 29
        }],
        96: [function(t, e, i) {
            var n = t("../../core");
            function r() {
                n.AbstractFilter.call(this, null, "precision mediump float;\n\nvarying vec2 vTextureCoord;\n\nuniform sampler2D uSampler;\n\nvoid main(void)\n{\n    float lum = length(texture2D(uSampler, vTextureCoord.xy).rgb);\n\n    gl_FragColor = vec4(1.0, 1.0, 1.0, 1.0);\n\n    if (lum < 1.00)\n    {\n        if (mod(gl_FragCoord.x + gl_FragCoord.y, 10.0) == 0.0)\n        {\n            gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);\n        }\n    }\n\n    if (lum < 0.75)\n    {\n        if (mod(gl_FragCoord.x - gl_FragCoord.y, 10.0) == 0.0)\n        {\n            gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);\n        }\n    }\n\n    if (lum < 0.50)\n    {\n        if (mod(gl_FragCoord.x + gl_FragCoord.y - 5.0, 10.0) == 0.0)\n        {\n            gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);\n        }\n    }\n\n    if (lum < 0.3)\n    {\n        if (mod(gl_FragCoord.x - gl_FragCoord.y - 5.0, 10.0) == 0.0)\n        {\n            gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);\n        }\n    }\n}\n")
            }
            (r.prototype = Object.create(n.AbstractFilter.prototype)).constructor = r,
            e.exports = r
        }
        , {
            "../../core": 29
        }],
        97: [function(t, e, i) {
            var n = t("../../core");
            function r(t) {
                var e = new n.Matrix;
                t.renderable = !1,
                n.AbstractFilter.call(this, "attribute vec2 aVertexPosition;\nattribute vec2 aTextureCoord;\nattribute vec4 aColor;\n\nuniform mat3 projectionMatrix;\nuniform mat3 otherMatrix;\n\nvarying vec2 vMapCoord;\nvarying vec2 vTextureCoord;\nvarying vec4 vColor;\n\nvoid main(void)\n{\n   gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\n   vTextureCoord = aTextureCoord;\n   vMapCoord = ( otherMatrix * vec3( aTextureCoord, 1.0)  ).xy;\n   vColor = vec4(aColor.rgb * aColor.a, aColor.a);\n}\n", "precision lowp float;\n\nvarying vec2 vMapCoord;\nvarying vec2 vTextureCoord;\nvarying vec4 vColor;\n\nuniform vec2 scale;\n\nuniform sampler2D uSampler;\nuniform sampler2D mapSampler;\n\nvoid main(void)\n{\n   vec4 original =  texture2D(uSampler, vTextureCoord);\n   vec4 map =  texture2D(mapSampler, vMapCoord);\n\n   map -= 0.5;\n   map.xy *= scale;\n\n   gl_FragColor = texture2D(uSampler, vec2(vTextureCoord.x + map.x, vTextureCoord.y + map.y));\n}\n", {
                    mapSampler: {
                        type: "sampler2D",
                        value: t.texture
                    },
                    otherMatrix: {
                        type: "mat3",
                        value: e.toArray(!0)
                    },
                    scale: {
                        type: "v2",
                        value: {
                            x: 1,
                            y: 1
                        }
                    }
                }),
                this.maskSprite = t,
                this.maskMatrix = e,
                this.scale = new n.Point(20,20)
            }
            (r.prototype = Object.create(n.AbstractFilter.prototype)).constructor = r,
            (e.exports = r).prototype.applyFilter = function(t, e, i) {
                var n = t.filterManager;
                n.calculateMappedMatrix(e.frame, this.maskSprite, this.maskMatrix),
                this.uniforms.otherMatrix.value = this.maskMatrix.toArray(!0),
                this.uniforms.scale.value.x = this.scale.x * (1 / e.frame.width),
                this.uniforms.scale.value.y = this.scale.y * (1 / e.frame.height);
                var r = this.getShader(t);
                n.applyFilter(r, e, i)
            }
            ,
            Object.defineProperties(r.prototype, {
                map: {
                    get: function() {
                        return this.uniforms.mapSampler.value
                    },
                    set: function(t) {
                        this.uniforms.mapSampler.value = t
                    }
                }
            })
        }
        , {
            "../../core": 29
        }],
        98: [function(t, e, i) {
            var n = t("../../core");
            function r() {
                n.AbstractFilter.call(this, null, "precision mediump float;\n\nvarying vec2 vTextureCoord;\nvarying vec4 vColor;\n\nuniform vec4 dimensions;\nuniform sampler2D uSampler;\n\nuniform float angle;\nuniform float scale;\n\nfloat pattern()\n{\n   float s = sin(angle), c = cos(angle);\n   vec2 tex = vTextureCoord * dimensions.xy;\n   vec2 point = vec2(\n       c * tex.x - s * tex.y,\n       s * tex.x + c * tex.y\n   ) * scale;\n   return (sin(point.x) * sin(point.y)) * 4.0;\n}\n\nvoid main()\n{\n   vec4 color = texture2D(uSampler, vTextureCoord);\n   float average = (color.r + color.g + color.b) / 3.0;\n   gl_FragColor = vec4(vec3(average * 10.0 - 5.0 + pattern()), color.a);\n}\n", {
                    scale: {
                        type: "1f",
                        value: 1
                    },
                    angle: {
                        type: "1f",
                        value: 5
                    },
                    dimensions: {
                        type: "4fv",
                        value: [0, 0, 0, 0]
                    }
                })
            }
            (r.prototype = Object.create(n.AbstractFilter.prototype)).constructor = r,
            e.exports = r,
            Object.defineProperties(r.prototype, {
                scale: {
                    get: function() {
                        return this.uniforms.scale.value
                    },
                    set: function(t) {
                        this.uniforms.scale.value = t
                    }
                },
                angle: {
                    get: function() {
                        return this.uniforms.angle.value
                    },
                    set: function(t) {
                        this.uniforms.angle.value = t
                    }
                }
            })
        }
        , {
            "../../core": 29
        }],
        99: [function(t, e, i) {
            var n = t("../../core");
            function r() {
                n.AbstractFilter.call(this, "attribute vec2 aVertexPosition;\nattribute vec2 aTextureCoord;\nattribute vec4 aColor;\n\nuniform float strength;\nuniform vec2 offset;\n\nuniform mat3 projectionMatrix;\n\nvarying vec2 vTextureCoord;\nvarying vec4 vColor;\nvarying vec2 vBlurTexCoords[6];\n\nvoid main(void)\n{\n    gl_Position = vec4((projectionMatrix * vec3((aVertexPosition+offset), 1.0)).xy, 0.0, 1.0);\n    vTextureCoord = aTextureCoord;\n\n    vBlurTexCoords[ 0] = aTextureCoord + vec2(0.0, -0.012 * strength);\n    vBlurTexCoords[ 1] = aTextureCoord + vec2(0.0, -0.008 * strength);\n    vBlurTexCoords[ 2] = aTextureCoord + vec2(0.0, -0.004 * strength);\n    vBlurTexCoords[ 3] = aTextureCoord + vec2(0.0,  0.004 * strength);\n    vBlurTexCoords[ 4] = aTextureCoord + vec2(0.0,  0.008 * strength);\n    vBlurTexCoords[ 5] = aTextureCoord + vec2(0.0,  0.012 * strength);\n\n   vColor = vec4(aColor.rgb * aColor.a, aColor.a);\n}\n", "precision lowp float;\n\nvarying vec2 vTextureCoord;\nvarying vec2 vBlurTexCoords[6];\nvarying vec4 vColor;\n\nuniform vec3 color;\nuniform float alpha;\n\nuniform sampler2D uSampler;\n\nvoid main(void)\n{\n    vec4 sum = vec4(0.0);\n\n    sum += texture2D(uSampler, vBlurTexCoords[ 0])*0.004431848411938341;\n    sum += texture2D(uSampler, vBlurTexCoords[ 1])*0.05399096651318985;\n    sum += texture2D(uSampler, vBlurTexCoords[ 2])*0.2419707245191454;\n    sum += texture2D(uSampler, vTextureCoord     )*0.3989422804014327;\n    sum += texture2D(uSampler, vBlurTexCoords[ 3])*0.2419707245191454;\n    sum += texture2D(uSampler, vBlurTexCoords[ 4])*0.05399096651318985;\n    sum += texture2D(uSampler, vBlurTexCoords[ 5])*0.004431848411938341;\n\n    gl_FragColor = vec4( color.rgb * sum.a * alpha, sum.a * alpha );\n}\n", {
                    blur: {
                        type: "1f",
                        value: 1 / 512
                    },
                    color: {
                        type: "c",
                        value: [0, 0, 0]
                    },
                    alpha: {
                        type: "1f",
                        value: .7
                    },
                    offset: {
                        type: "2f",
                        value: [5, 5]
                    },
                    strength: {
                        type: "1f",
                        value: 1
                    }
                }),
                this.passes = 1,
                this.strength = 4
            }
            (r.prototype = Object.create(n.AbstractFilter.prototype)).constructor = r,
            (e.exports = r).prototype.applyFilter = function(t, e, i, n) {
                var r = this.getShader(t);
                if (this.uniforms.strength.value = this.strength / 4 / this.passes * (e.frame.height / e.size.height),
                1 === this.passes)
                    t.filterManager.applyFilter(r, e, i, n);
                else {
                    for (var o = t.filterManager.getRenderTarget(!0), s = e, a = o, h = 0; h < this.passes - 1; h++) {
                        t.filterManager.applyFilter(r, s, a, n);
                        var l = a;
                        a = s,
                        s = l
                    }
                    t.filterManager.applyFilter(r, s, i, n),
                    t.filterManager.returnRenderTarget(o)
                }
            }
            ,
            Object.defineProperties(r.prototype, {
                blur: {
                    get: function() {
                        return this.strength
                    },
                    set: function(t) {
                        this.padding = .5 * t,
                        this.strength = t
                    }
                }
            })
        }
        , {
            "../../core": 29
        }],
        100: [function(t, e, i) {
            var r = t("../../core")
              , n = t("../blur/BlurXFilter")
              , o = t("./BlurYTintFilter");
            function s() {
                r.AbstractFilter.call(this),
                this.blurXFilter = new n,
                this.blurYTintFilter = new o,
                this.defaultFilter = new r.AbstractFilter,
                this.padding = 30,
                this._dirtyPosition = !0,
                this._angle = 45 * Math.PI / 180,
                this._distance = 10,
                this.alpha = .75,
                this.hideObject = !1,
                this.blendMode = r.BLEND_MODES.MULTIPLY
            }
            (s.prototype = Object.create(r.AbstractFilter.prototype)).constructor = s,
            (e.exports = s).prototype.applyFilter = function(t, e, i) {
                var n = t.filterManager.getRenderTarget(!0);
                this._dirtyPosition && (this._dirtyPosition = !1,
                this.blurYTintFilter.uniforms.offset.value[0] = Math.sin(this._angle) * this._distance,
                this.blurYTintFilter.uniforms.offset.value[1] = Math.cos(this._angle) * this._distance),
                this.blurXFilter.applyFilter(t, e, n),
                t.blendModeManager.setBlendMode(this.blendMode),
                this.blurYTintFilter.applyFilter(t, n, i),
                t.blendModeManager.setBlendMode(r.BLEND_MODES.NORMAL),
                this.hideObject || this.defaultFilter.applyFilter(t, e, i),
                t.filterManager.returnRenderTarget(n)
            }
            ,
            Object.defineProperties(s.prototype, {
                blur: {
                    get: function() {
                        return this.blurXFilter.blur
                    },
                    set: function(t) {
                        this.blurXFilter.blur = this.blurYTintFilter.blur = t
                    }
                },
                blurX: {
                    get: function() {
                        return this.blurXFilter.blur
                    },
                    set: function(t) {
                        this.blurXFilter.blur = t
                    }
                },
                blurY: {
                    get: function() {
                        return this.blurYTintFilter.blur
                    },
                    set: function(t) {
                        this.blurYTintFilter.blur = t
                    }
                },
                color: {
                    get: function() {
                        return r.utils.rgb2hex(this.blurYTintFilter.uniforms.color.value)
                    },
                    set: function(t) {
                        this.blurYTintFilter.uniforms.color.value = r.utils.hex2rgb(t)
                    }
                },
                alpha: {
                    get: function() {
                        return this.blurYTintFilter.uniforms.alpha.value
                    },
                    set: function(t) {
                        this.blurYTintFilter.uniforms.alpha.value = t
                    }
                },
                distance: {
                    get: function() {
                        return this._distance
                    },
                    set: function(t) {
                        this._dirtyPosition = !0,
                        this._distance = t
                    }
                },
                angle: {
                    get: function() {
                        return this._angle
                    },
                    set: function(t) {
                        this._dirtyPosition = !0,
                        this._angle = t
                    }
                }
            })
        }
        , {
            "../../core": 29,
            "../blur/BlurXFilter": 90,
            "./BlurYTintFilter": 99
        }],
        101: [function(t, e, i) {
            var n = t("../../core");
            function r() {
                n.AbstractFilter.call(this, null, "precision mediump float;\n\nvarying vec2 vTextureCoord;\nvarying vec4 vColor;\n\nuniform sampler2D uSampler;\nuniform float gray;\n\nvoid main(void)\n{\n   gl_FragColor = texture2D(uSampler, vTextureCoord);\n   gl_FragColor.rgb = mix(gl_FragColor.rgb, vec3(0.2126*gl_FragColor.r + 0.7152*gl_FragColor.g + 0.0722*gl_FragColor.b), gray);\n}\n", {
                    gray: {
                        type: "1f",
                        value: 1
                    }
                })
            }
            (r.prototype = Object.create(n.AbstractFilter.prototype)).constructor = r,
            e.exports = r,
            Object.defineProperties(r.prototype, {
                gray: {
                    get: function() {
                        return this.uniforms.gray.value
                    },
                    set: function(t) {
                        this.uniforms.gray.value = t
                    }
                }
            })
        }
        , {
            "../../core": 29
        }],
        102: [function(t, e, i) {
            e.exports = {
                AsciiFilter: t("./ascii/AsciiFilter"),
                BloomFilter: t("./bloom/BloomFilter"),
                BlurFilter: t("./blur/BlurFilter"),
                BlurXFilter: t("./blur/BlurXFilter"),
                BlurYFilter: t("./blur/BlurYFilter"),
                BlurDirFilter: t("./blur/BlurDirFilter"),
                ColorMatrixFilter: t("./color/ColorMatrixFilter"),
                ColorStepFilter: t("./color/ColorStepFilter"),
                ConvolutionFilter: t("./convolution/ConvolutionFilter"),
                CrossHatchFilter: t("./crosshatch/CrossHatchFilter"),
                DisplacementFilter: t("./displacement/DisplacementFilter"),
                DotScreenFilter: t("./dot/DotScreenFilter"),
                GrayFilter: t("./gray/GrayFilter"),
                DropShadowFilter: t("./dropshadow/DropShadowFilter"),
                InvertFilter: t("./invert/InvertFilter"),
                NoiseFilter: t("./noise/NoiseFilter"),
                NormalMapFilter: t("./normal/NormalMapFilter"),
                PixelateFilter: t("./pixelate/PixelateFilter"),
                RGBSplitFilter: t("./rgb/RGBSplitFilter"),
                ShockwaveFilter: t("./shockwave/ShockwaveFilter"),
                SepiaFilter: t("./sepia/SepiaFilter"),
                SmartBlurFilter: t("./blur/SmartBlurFilter"),
                TiltShiftFilter: t("./tiltshift/TiltShiftFilter"),
                TiltShiftXFilter: t("./tiltshift/TiltShiftXFilter"),
                TiltShiftYFilter: t("./tiltshift/TiltShiftYFilter"),
                TwistFilter: t("./twist/TwistFilter")
            }
        }
        , {
            "./ascii/AsciiFilter": 86,
            "./bloom/BloomFilter": 87,
            "./blur/BlurDirFilter": 88,
            "./blur/BlurFilter": 89,
            "./blur/BlurXFilter": 90,
            "./blur/BlurYFilter": 91,
            "./blur/SmartBlurFilter": 92,
            "./color/ColorMatrixFilter": 93,
            "./color/ColorStepFilter": 94,
            "./convolution/ConvolutionFilter": 95,
            "./crosshatch/CrossHatchFilter": 96,
            "./displacement/DisplacementFilter": 97,
            "./dot/DotScreenFilter": 98,
            "./dropshadow/DropShadowFilter": 100,
            "./gray/GrayFilter": 101,
            "./invert/InvertFilter": 103,
            "./noise/NoiseFilter": 104,
            "./normal/NormalMapFilter": 105,
            "./pixelate/PixelateFilter": 106,
            "./rgb/RGBSplitFilter": 107,
            "./sepia/SepiaFilter": 108,
            "./shockwave/ShockwaveFilter": 109,
            "./tiltshift/TiltShiftFilter": 111,
            "./tiltshift/TiltShiftXFilter": 112,
            "./tiltshift/TiltShiftYFilter": 113,
            "./twist/TwistFilter": 114
        }],
        103: [function(t, e, i) {
            var n = t("../../core");
            function r() {
                n.AbstractFilter.call(this, null, "precision mediump float;\n\nvarying vec2 vTextureCoord;\n\nuniform float invert;\nuniform sampler2D uSampler;\n\nvoid main(void)\n{\n    gl_FragColor = texture2D(uSampler, vTextureCoord);\n\n    gl_FragColor.rgb = mix( (vec3(1)-gl_FragColor.rgb) * gl_FragColor.a, gl_FragColor.rgb, 1.0 - invert);\n}\n", {
                    invert: {
                        type: "1f",
                        value: 1
                    }
                })
            }
            (r.prototype = Object.create(n.AbstractFilter.prototype)).constructor = r,
            e.exports = r,
            Object.defineProperties(r.prototype, {
                invert: {
                    get: function() {
                        return this.uniforms.invert.value
                    },
                    set: function(t) {
                        this.uniforms.invert.value = t
                    }
                }
            })
        }
        , {
            "../../core": 29
        }],
        104: [function(t, e, i) {
            var n = t("../../core");
            function r() {
                n.AbstractFilter.call(this, null, "precision mediump float;\n\nvarying vec2 vTextureCoord;\nvarying vec4 vColor;\n\nuniform float noise;\nuniform sampler2D uSampler;\n\nfloat rand(vec2 co)\n{\n    return fract(sin(dot(co.xy, vec2(12.9898, 78.233))) * 43758.5453);\n}\n\nvoid main()\n{\n    vec4 color = texture2D(uSampler, vTextureCoord);\n\n    float diff = (rand(vTextureCoord) - 0.5) * noise;\n\n    color.r += diff;\n    color.g += diff;\n    color.b += diff;\n\n    gl_FragColor = color;\n}\n", {
                    noise: {
                        type: "1f",
                        value: .5
                    }
                })
            }
            (r.prototype = Object.create(n.AbstractFilter.prototype)).constructor = r,
            e.exports = r,
            Object.defineProperties(r.prototype, {
                noise: {
                    get: function() {
                        return this.uniforms.noise.value
                    },
                    set: function(t) {
                        this.uniforms.noise.value = t
                    }
                }
            })
        }
        , {
            "../../core": 29
        }],
        105: [function(t, e, i) {
            var n = t("../../core");
            function r(t) {
                n.AbstractFilter.call(this, null, "precision mediump float;\n\nvarying vec2 vTextureCoord;\nvarying vec4 vColor;\n\nuniform sampler2D displacementMap;\nuniform sampler2D uSampler;\n\nuniform vec4 dimensions;\n\nconst vec2 Resolution = vec2(1.0,1.0);      //resolution of screen\nuniform vec3 LightPos;    //light position, normalized\nconst vec4 LightColor = vec4(1.0, 1.0, 1.0, 1.0);      //light RGBA -- alpha is intensity\nconst vec4 AmbientColor = vec4(1.0, 1.0, 1.0, 0.5);    //ambient RGBA -- alpha is intensity\nconst vec3 Falloff = vec3(0.0, 1.0, 0.2);         //attenuation coefficients\n\nuniform vec3 LightDir; // = vec3(1.0, 0.0, 1.0);\n\nuniform vec2 mapDimensions; // = vec2(256.0, 256.0);\n\n\nvoid main(void)\n{\n    vec2 mapCords = vTextureCoord.xy;\n\n    vec4 color = texture2D(uSampler, vTextureCoord.st);\n    vec3 nColor = texture2D(displacementMap, vTextureCoord.st).rgb;\n\n\n    mapCords *= vec2(dimensions.x/512.0, dimensions.y/512.0);\n\n    mapCords.y *= -1.0;\n    mapCords.y += 1.0;\n\n    // RGBA of our diffuse color\n    vec4 DiffuseColor = texture2D(uSampler, vTextureCoord);\n\n    // RGB of our normal map\n    vec3 NormalMap = texture2D(displacementMap, mapCords).rgb;\n\n    // The delta position of light\n    // vec3 LightDir = vec3(LightPos.xy - (gl_FragCoord.xy / Resolution.xy), LightPos.z);\n    vec3 LightDir = vec3(LightPos.xy - (mapCords.xy), LightPos.z);\n\n    // Correct for aspect ratio\n    // LightDir.x *= Resolution.x / Resolution.y;\n\n    // Determine distance (used for attenuation) BEFORE we normalize our LightDir\n    float D = length(LightDir);\n\n    // normalize our vectors\n    vec3 N = normalize(NormalMap * 2.0 - 1.0);\n    vec3 L = normalize(LightDir);\n\n    // Pre-multiply light color with intensity\n    // Then perform 'N dot L' to determine our diffuse term\n    vec3 Diffuse = (LightColor.rgb * LightColor.a) * max(dot(N, L), 0.0);\n\n    // pre-multiply ambient color with intensity\n    vec3 Ambient = AmbientColor.rgb * AmbientColor.a;\n\n    // calculate attenuation\n    float Attenuation = 1.0 / ( Falloff.x + (Falloff.y*D) + (Falloff.z*D*D) );\n\n    // the calculation which brings it all together\n    vec3 Intensity = Ambient + Diffuse * Attenuation;\n    vec3 FinalColor = DiffuseColor.rgb * Intensity;\n    gl_FragColor = vColor * vec4(FinalColor, DiffuseColor.a);\n\n    // gl_FragColor = vec4(1.0, 0.0, 0.0, Attenuation); // vColor * vec4(FinalColor, DiffuseColor.a);\n\n/*\n    // normalise color\n    vec3 normal = normalize(nColor * 2.0 - 1.0);\n\n    vec3 deltaPos = vec3( (light.xy - gl_FragCoord.xy) / resolution.xy, light.z );\n\n    float lambert = clamp(dot(normal, lightDir), 0.0, 1.0);\n\n    float d = sqrt(dot(deltaPos, deltaPos));\n    float att = 1.0 / ( attenuation.x + (attenuation.y*d) + (attenuation.z*d*d) );\n\n    vec3 result = (ambientColor * ambientIntensity) + (lightColor.rgb * lambert) * att;\n    result *= color.rgb;\n\n    gl_FragColor = vec4(result, 1.0);\n*/\n}\n", {
                    displacementMap: {
                        type: "sampler2D",
                        value: t
                    },
                    scale: {
                        type: "2f",
                        value: {
                            x: 15,
                            y: 15
                        }
                    },
                    offset: {
                        type: "2f",
                        value: {
                            x: 0,
                            y: 0
                        }
                    },
                    mapDimensions: {
                        type: "2f",
                        value: {
                            x: 1,
                            y: 1
                        }
                    },
                    dimensions: {
                        type: "4f",
                        value: [0, 0, 0, 0]
                    },
                    LightPos: {
                        type: "3f",
                        value: [0, 1, 0]
                    }
                }),
                t.baseTexture._powerOf2 = !0,
                t.baseTexture.hasLoaded ? this.onTextureLoaded() : t.baseTexture.once("loaded", this.onTextureLoaded, this)
            }
            (r.prototype = Object.create(n.AbstractFilter.prototype)).constructor = r,
            (e.exports = r).prototype.onTextureLoaded = function() {
                this.uniforms.mapDimensions.value.x = this.uniforms.displacementMap.value.width,
                this.uniforms.mapDimensions.value.y = this.uniforms.displacementMap.value.height
            }
            ,
            Object.defineProperties(r.prototype, {
                map: {
                    get: function() {
                        return this.uniforms.displacementMap.value
                    },
                    set: function(t) {
                        this.uniforms.displacementMap.value = t
                    }
                },
                scale: {
                    get: function() {
                        return this.uniforms.scale.value
                    },
                    set: function(t) {
                        this.uniforms.scale.value = t
                    }
                },
                offset: {
                    get: function() {
                        return this.uniforms.offset.value
                    },
                    set: function(t) {
                        this.uniforms.offset.value = t
                    }
                }
            })
        }
        , {
            "../../core": 29
        }],
        106: [function(t, e, i) {
            var n = t("../../core");
            function r() {
                n.AbstractFilter.call(this, null, "precision mediump float;\n\nvarying vec2 vTextureCoord;\n\nuniform vec4 dimensions;\nuniform vec2 pixelSize;\nuniform sampler2D uSampler;\n\nvoid main(void)\n{\n    vec2 coord = vTextureCoord;\n\n    vec2 size = dimensions.xy / pixelSize;\n\n    vec2 color = floor( ( vTextureCoord * size ) ) / size + pixelSize/dimensions.xy * 0.5;\n\n    gl_FragColor = texture2D(uSampler, color);\n}\n", {
                    dimensions: {
                        type: "4fv",
                        value: new Float32Array([0, 0, 0, 0])
                    },
                    pixelSize: {
                        type: "v2",
                        value: {
                            x: 10,
                            y: 10
                        }
                    }
                })
            }
            (r.prototype = Object.create(n.AbstractFilter.prototype)).constructor = r,
            e.exports = r,
            Object.defineProperties(r.prototype, {
                size: {
                    get: function() {
                        return this.uniforms.pixelSize.value
                    },
                    set: function(t) {
                        this.uniforms.pixelSize.value = t
                    }
                }
            })
        }
        , {
            "../../core": 29
        }],
        107: [function(t, e, i) {
            var n = t("../../core");
            function r() {
                n.AbstractFilter.call(this, null, "precision mediump float;\n\nvarying vec2 vTextureCoord;\n\nuniform sampler2D uSampler;\nuniform vec4 dimensions;\nuniform vec2 red;\nuniform vec2 green;\nuniform vec2 blue;\n\nvoid main(void)\n{\n   gl_FragColor.r = texture2D(uSampler, vTextureCoord + red/dimensions.xy).r;\n   gl_FragColor.g = texture2D(uSampler, vTextureCoord + green/dimensions.xy).g;\n   gl_FragColor.b = texture2D(uSampler, vTextureCoord + blue/dimensions.xy).b;\n   gl_FragColor.a = texture2D(uSampler, vTextureCoord).a;\n}\n", {
                    red: {
                        type: "v2",
                        value: {
                            x: 20,
                            y: 20
                        }
                    },
                    green: {
                        type: "v2",
                        value: {
                            x: -20,
                            y: 20
                        }
                    },
                    blue: {
                        type: "v2",
                        value: {
                            x: 20,
                            y: -20
                        }
                    },
                    dimensions: {
                        type: "4fv",
                        value: [0, 0, 0, 0]
                    }
                })
            }
            (r.prototype = Object.create(n.AbstractFilter.prototype)).constructor = r,
            e.exports = r,
            Object.defineProperties(r.prototype, {
                red: {
                    get: function() {
                        return this.uniforms.red.value
                    },
                    set: function(t) {
                        this.uniforms.red.value = t
                    }
                },
                green: {
                    get: function() {
                        return this.uniforms.green.value
                    },
                    set: function(t) {
                        this.uniforms.green.value = t
                    }
                },
                blue: {
                    get: function() {
                        return this.uniforms.blue.value
                    },
                    set: function(t) {
                        this.uniforms.blue.value = t
                    }
                }
            })
        }
        , {
            "../../core": 29
        }],
        108: [function(t, e, i) {
            var n = t("../../core");
            function r() {
                n.AbstractFilter.call(this, null, "precision mediump float;\n\nvarying vec2 vTextureCoord;\n\nuniform sampler2D uSampler;\nuniform float sepia;\n\nconst mat3 sepiaMatrix = mat3(0.3588, 0.7044, 0.1368, 0.2990, 0.5870, 0.1140, 0.2392, 0.4696, 0.0912);\n\nvoid main(void)\n{\n   gl_FragColor = texture2D(uSampler, vTextureCoord);\n   gl_FragColor.rgb = mix( gl_FragColor.rgb, gl_FragColor.rgb * sepiaMatrix, sepia);\n}\n", {
                    sepia: {
                        type: "1f",
                        value: 1
                    }
                })
            }
            (r.prototype = Object.create(n.AbstractFilter.prototype)).constructor = r,
            e.exports = r,
            Object.defineProperties(r.prototype, {
                sepia: {
                    get: function() {
                        return this.uniforms.sepia.value
                    },
                    set: function(t) {
                        this.uniforms.sepia.value = t
                    }
                }
            })
        }
        , {
            "../../core": 29
        }],
        109: [function(t, e, i) {
            var n = t("../../core");
            function r() {
                n.AbstractFilter.call(this, null, "precision lowp float;\n\nvarying vec2 vTextureCoord;\n\nuniform sampler2D uSampler;\n\nuniform vec2 center;\nuniform vec3 params; // 10.0, 0.8, 0.1\nuniform float time;\n\nvoid main()\n{\n    vec2 uv = vTextureCoord;\n    vec2 texCoord = uv;\n\n    float dist = distance(uv, center);\n\n    if ( (dist <= (time + params.z)) && (dist >= (time - params.z)) )\n    {\n        float diff = (dist - time);\n        float powDiff = 1.0 - pow(abs(diff*params.x), params.y);\n\n        float diffTime = diff  * powDiff;\n        vec2 diffUV = normalize(uv - center);\n        texCoord = uv + (diffUV * diffTime);\n    }\n\n    gl_FragColor = texture2D(uSampler, texCoord);\n}\n", {
                    center: {
                        type: "v2",
                        value: {
                            x: .5,
                            y: .5
                        }
                    },
                    params: {
                        type: "v3",
                        value: {
                            x: 10,
                            y: .8,
                            z: .1
                        }
                    },
                    time: {
                        type: "1f",
                        value: 0
                    }
                })
            }
            (r.prototype = Object.create(n.AbstractFilter.prototype)).constructor = r,
            e.exports = r,
            Object.defineProperties(r.prototype, {
                center: {
                    get: function() {
                        return this.uniforms.center.value
                    },
                    set: function(t) {
                        this.uniforms.center.value = t
                    }
                },
                params: {
                    get: function() {
                        return this.uniforms.params.value
                    },
                    set: function(t) {
                        this.uniforms.params.value = t
                    }
                },
                time: {
                    get: function() {
                        return this.uniforms.time.value
                    },
                    set: function(t) {
                        this.uniforms.time.value = t
                    }
                }
            })
        }
        , {
            "../../core": 29
        }],
        110: [function(t, e, i) {
            var n = t("../../core");
            function r() {
                n.AbstractFilter.call(this, null, "precision mediump float;\n\nvarying vec2 vTextureCoord;\n\nuniform sampler2D uSampler;\nuniform float blur;\nuniform float gradientBlur;\nuniform vec2 start;\nuniform vec2 end;\nuniform vec2 delta;\nuniform vec2 texSize;\n\nfloat random(vec3 scale, float seed)\n{\n    return fract(sin(dot(gl_FragCoord.xyz + seed, scale)) * 43758.5453 + seed);\n}\n\nvoid main(void)\n{\n    vec4 color = vec4(0.0);\n    float total = 0.0;\n\n    float offset = random(vec3(12.9898, 78.233, 151.7182), 0.0);\n    vec2 normal = normalize(vec2(start.y - end.y, end.x - start.x));\n    float radius = smoothstep(0.0, 1.0, abs(dot(vTextureCoord * texSize - start, normal)) / gradientBlur) * blur;\n\n    for (float t = -30.0; t <= 30.0; t++)\n    {\n        float percent = (t + offset - 0.5) / 30.0;\n        float weight = 1.0 - abs(percent);\n        vec4 sample = texture2D(uSampler, vTextureCoord + delta / texSize * percent * radius);\n        sample.rgb *= sample.a;\n        color += sample * weight;\n        total += weight;\n    }\n\n    gl_FragColor = color / total;\n    gl_FragColor.rgb /= gl_FragColor.a + 0.00001;\n}\n", {
                    blur: {
                        type: "1f",
                        value: 100
                    },
                    gradientBlur: {
                        type: "1f",
                        value: 600
                    },
                    start: {
                        type: "v2",
                        value: {
                            x: 0,
                            y: window.innerHeight / 2
                        }
                    },
                    end: {
                        type: "v2",
                        value: {
                            x: 600,
                            y: window.innerHeight / 2
                        }
                    },
                    delta: {
                        type: "v2",
                        value: {
                            x: 30,
                            y: 30
                        }
                    },
                    texSize: {
                        type: "v2",
                        value: {
                            x: window.innerWidth,
                            y: window.innerHeight
                        }
                    }
                }),
                this.updateDelta()
            }
            (r.prototype = Object.create(n.AbstractFilter.prototype)).constructor = r,
            (e.exports = r).prototype.updateDelta = function() {
                this.uniforms.delta.value.x = 0,
                this.uniforms.delta.value.y = 0
            }
            ,
            Object.defineProperties(r.prototype, {
                blur: {
                    get: function() {
                        return this.uniforms.blur.value
                    },
                    set: function(t) {
                        this.uniforms.blur.value = t
                    }
                },
                gradientBlur: {
                    get: function() {
                        return this.uniforms.gradientBlur.value
                    },
                    set: function(t) {
                        this.uniforms.gradientBlur.value = t
                    }
                },
                start: {
                    get: function() {
                        return this.uniforms.start.value
                    },
                    set: function(t) {
                        this.uniforms.start.value = t,
                        this.updateDelta()
                    }
                },
                end: {
                    get: function() {
                        return this.uniforms.end.value
                    },
                    set: function(t) {
                        this.uniforms.end.value = t,
                        this.updateDelta()
                    }
                }
            })
        }
        , {
            "../../core": 29
        }],
        111: [function(t, e, i) {
            var n = t("../../core")
              , r = t("./TiltShiftXFilter")
              , o = t("./TiltShiftYFilter");
            function s() {
                n.AbstractFilter.call(this),
                this.tiltShiftXFilter = new r,
                this.tiltShiftYFilter = new o
            }
            (s.prototype = Object.create(n.AbstractFilter.prototype)).constructor = s,
            (e.exports = s).prototype.applyFilter = function(t, e, i) {
                var n = t.filterManager.getRenderTarget(!0);
                this.tiltShiftXFilter.applyFilter(t, e, n),
                this.tiltShiftYFilter.applyFilter(t, n, i),
                t.filterManager.returnRenderTarget(n)
            }
            ,
            Object.defineProperties(s.prototype, {
                blur: {
                    get: function() {
                        return this.tiltShiftXFilter.blur
                    },
                    set: function(t) {
                        this.tiltShiftXFilter.blur = this.tiltShiftYFilter.blur = t
                    }
                },
                gradientBlur: {
                    get: function() {
                        return this.tiltShiftXFilter.gradientBlur
                    },
                    set: function(t) {
                        this.tiltShiftXFilter.gradientBlur = this.tiltShiftYFilter.gradientBlur = t
                    }
                },
                start: {
                    get: function() {
                        return this.tiltShiftXFilter.start
                    },
                    set: function(t) {
                        this.tiltShiftXFilter.start = this.tiltShiftYFilter.start = t
                    }
                },
                end: {
                    get: function() {
                        return this.tiltShiftXFilter.end
                    },
                    set: function(t) {
                        this.tiltShiftXFilter.end = this.tiltShiftYFilter.end = t
                    }
                }
            })
        }
        , {
            "../../core": 29,
            "./TiltShiftXFilter": 112,
            "./TiltShiftYFilter": 113
        }],
        112: [function(t, e, i) {
            var n = t("./TiltShiftAxisFilter");
            function r() {
                n.call(this)
            }
            (r.prototype = Object.create(n.prototype)).constructor = r,
            (e.exports = r).prototype.updateDelta = function() {
                var t = this.uniforms.end.value.x - this.uniforms.start.value.x
                  , e = this.uniforms.end.value.y - this.uniforms.start.value.y
                  , i = Math.sqrt(t * t + e * e);
                this.uniforms.delta.value.x = t / i,
                this.uniforms.delta.value.y = e / i
            }
        }
        , {
            "./TiltShiftAxisFilter": 110
        }],
        113: [function(t, e, i) {
            var n = t("./TiltShiftAxisFilter");
            function r() {
                n.call(this)
            }
            (r.prototype = Object.create(n.prototype)).constructor = r,
            (e.exports = r).prototype.updateDelta = function() {
                var t = this.uniforms.end.value.x - this.uniforms.start.value.x
                  , e = this.uniforms.end.value.y - this.uniforms.start.value.y
                  , i = Math.sqrt(t * t + e * e);
                this.uniforms.delta.value.x = -e / i,
                this.uniforms.delta.value.y = t / i
            }
        }
        , {
            "./TiltShiftAxisFilter": 110
        }],
        114: [function(t, e, i) {
            var n = t("../../core");
            function r() {
                n.AbstractFilter.call(this, null, "precision mediump float;\n\nvarying vec2 vTextureCoord;\n\nuniform sampler2D uSampler;\nuniform float radius;\nuniform float angle;\nuniform vec2 offset;\n\nvoid main(void)\n{\n   vec2 coord = vTextureCoord - offset;\n   float dist = length(coord);\n\n   if (dist < radius)\n   {\n       float ratio = (radius - dist) / radius;\n       float angleMod = ratio * ratio * angle;\n       float s = sin(angleMod);\n       float c = cos(angleMod);\n       coord = vec2(coord.x * c - coord.y * s, coord.x * s + coord.y * c);\n   }\n\n   gl_FragColor = texture2D(uSampler, coord+offset);\n}\n", {
                    radius: {
                        type: "1f",
                        value: .5
                    },
                    angle: {
                        type: "1f",
                        value: 5
                    },
                    offset: {
                        type: "v2",
                        value: {
                            x: .5,
                            y: .5
                        }
                    }
                })
            }
            (r.prototype = Object.create(n.AbstractFilter.prototype)).constructor = r,
            e.exports = r,
            Object.defineProperties(r.prototype, {
                offset: {
                    get: function() {
                        return this.uniforms.offset.value
                    },
                    set: function(t) {
                        this.uniforms.offset.value = t
                    }
                },
                radius: {
                    get: function() {
                        return this.uniforms.radius.value
                    },
                    set: function(t) {
                        this.uniforms.radius.value = t
                    }
                },
                angle: {
                    get: function() {
                        return this.uniforms.angle.value
                    },
                    set: function(t) {
                        this.uniforms.angle.value = t
                    }
                }
            })
        }
        , {
            "../../core": 29
        }],
        115: [function(t, e, i) {
            var p = t("../core");
            function n() {
                this.global = new p.Point,
                this.target = null,
                this.originalEvent = null
            }
            n.prototype.constructor = n,
            (e.exports = n).prototype.getLocalPosition = function(t, e, i) {
                var n = t.worldTransform
                  , r = i || this.global
                  , o = n.a
                  , s = n.c
                  , a = n.tx
                  , h = n.b
                  , l = n.d
                  , u = n.ty
                  , c = 1 / (o * l + s * -h);
                return (e = e || new p.Point).x = l * c * r.x + -s * c * r.x + (u * s - a * l) * c,
                e.y = o * c * r.y + -h * c * r.y + (-u * o + a * h) * c,
                e
            }
        }
        , {
            "../core": 29
        }],
        116: [function(t, e, i) {
            var n = t("../core")
              , r = t("./InteractionData");
            function o(t, e) {
                e = e || {},
                this.renderer = t,
                this.autoPreventDefault = void 0 === e.autoPreventDefault || e.autoPreventDefault,
                this.interactionFrequency = e.interactionFrequency || 10,
                this.mouse = new r,
                this.eventData = {
                    stopped: !1,
                    target: null,
                    type: null,
                    data: this.mouse,
                    stopPropagation: function() {
                        this.stopped = !0
                    }
                },
                this.interactiveDataPool = [],
                this.interactionDOMElement = null,
                this.eventsAdded = !1,
                this.onMouseUp = this.onMouseUp.bind(this),
                this.processMouseUp = this.processMouseUp.bind(this),
                this.onMouseDown = this.onMouseDown.bind(this),
                this.processMouseDown = this.processMouseDown.bind(this),
                this.onMouseMove = this.onMouseMove.bind(this),
                this.processMouseMove = this.processMouseMove.bind(this),
                this.onMouseOut = this.onMouseOut.bind(this),
                this.processMouseOverOut = this.processMouseOverOut.bind(this),
                this.onTouchStart = this.onTouchStart.bind(this),
                this.processTouchStart = this.processTouchStart.bind(this),
                this.onTouchEnd = this.onTouchEnd.bind(this),
                this.processTouchEnd = this.processTouchEnd.bind(this),
                this.onTouchMove = this.onTouchMove.bind(this),
                this.processTouchMove = this.processTouchMove.bind(this),
                this.last = 0,
                this.currentCursorStyle = "inherit",
                this._tempPoint = new n.Point,
                this.resolution = 1,
                this.setTargetElement(this.renderer.view, this.renderer.resolution)
            }
            Object.assign(n.DisplayObject.prototype, t("./interactiveTarget")),
            o.prototype.constructor = o,
            (e.exports = o).prototype.setTargetElement = function(t, e) {
                this.removeEvents(),
                this.interactionDOMElement = t,
                this.resolution = e || 1,
                this.addEvents()
            }
            ,
            o.prototype.addEvents = function() {
                this.interactionDOMElement && (n.ticker.shared.add(this.update, this),
                window.navigator.msPointerEnabled && (this.interactionDOMElement.style["-ms-content-zooming"] = "none",
                this.interactionDOMElement.style["-ms-touch-action"] = "none"),
                window.document.addEventListener("mousemove", this.onMouseMove, !0),
                this.interactionDOMElement.addEventListener("mousedown", this.onMouseDown, !0),
                this.interactionDOMElement.addEventListener("mouseout", this.onMouseOut, !0),
                this.interactionDOMElement.addEventListener("touchstart", this.onTouchStart, !0),
                this.interactionDOMElement.addEventListener("touchend", this.onTouchEnd, !0),
                this.interactionDOMElement.addEventListener("touchmove", this.onTouchMove, !0),
                window.addEventListener("mouseup", this.onMouseUp, !0),
                this.eventsAdded = !0)
            }
            ,
            o.prototype.removeEvents = function() {
                this.interactionDOMElement && (n.ticker.shared.remove(this.update),
                window.navigator.msPointerEnabled && (this.interactionDOMElement.style["-ms-content-zooming"] = "",
                this.interactionDOMElement.style["-ms-touch-action"] = ""),
                window.document.removeEventListener("mousemove", this.onMouseMove, !0),
                this.interactionDOMElement.removeEventListener("mousedown", this.onMouseDown, !0),
                this.interactionDOMElement.removeEventListener("mouseout", this.onMouseOut, !0),
                this.interactionDOMElement.removeEventListener("touchstart", this.onTouchStart, !0),
                this.interactionDOMElement.removeEventListener("touchend", this.onTouchEnd, !0),
                this.interactionDOMElement.removeEventListener("touchmove", this.onTouchMove, !0),
                this.interactionDOMElement = null,
                window.removeEventListener("mouseup", this.onMouseUp, !0),
                this.eventsAdded = !1)
            }
            ,
            o.prototype.update = function(t) {
                this._deltaTime += t,
                this._deltaTime < this.interactionFrequency || (this._deltaTime = 0,
                this.interactionDOMElement && (this.didMove ? this.didMove = !1 : (this.cursor = "inherit",
                this.processInteractive(this.mouse.global, this.renderer._lastObjectRendered, this.processMouseOverOut, !0),
                this.currentCursorStyle !== this.cursor && (this.currentCursorStyle = this.cursor,
                this.interactionDOMElement.style.cursor = this.cursor))))
            }
            ,
            o.prototype.dispatchEvent = function(t, e, i) {
                i.stopped || (i.target = t,
                i.type = e,
                t.emit(e, i),
                t[e] && t[e](i))
            }
            ,
            o.prototype.mapPositionToPoint = function(t, e, i) {
                var n = this.interactionDOMElement.getBoundingClientRect();
                t.x = (e - n.left) * (this.interactionDOMElement.width / n.width) / this.resolution,
                t.y = (i - n.top) * (this.interactionDOMElement.height / n.height) / this.resolution
            }
            ,
            o.prototype.processInteractive = function(t, e, i, n, r) {
                if (!e.visible)
                    return !1;
                var o = e.children
                  , s = !1;
                if (r = r || e.interactive,
                e.interactiveChildren)
                    for (var a = o.length - 1; 0 <= a; a--)
                        !s && n ? s = this.processInteractive(t, o[a], i, !0, r) : this.processInteractive(t, o[a], i, !1, !1);
                return r && (n && (e.hitArea ? (e.worldTransform.applyInverse(t, this._tempPoint),
                s = e.hitArea.contains(this._tempPoint.x, this._tempPoint.y)) : e.containsPoint && (s = e.containsPoint(t))),
                e.interactive && i(e, s)),
                s
            }
            ,
            o.prototype.onMouseDown = function(t) {
                this.mouse.originalEvent = t,
                this.eventData.data = this.mouse,
                this.eventData.stopped = !1,
                this.mapPositionToPoint(this.mouse.global, t.clientX, t.clientY),
                this.autoPreventDefault && this.mouse.originalEvent.preventDefault(),
                this.processInteractive(this.mouse.global, this.renderer._lastObjectRendered, this.processMouseDown, !0)
            }
            ,
            o.prototype.processMouseDown = function(t, e) {
                var i = this.mouse.originalEvent
                  , n = 2 === i.button || 3 === i.which;
                e && (t[n ? "_isRightDown" : "_isLeftDown"] = !0,
                this.dispatchEvent(t, n ? "rightdown" : "mousedown", this.eventData))
            }
            ,
            o.prototype.onMouseUp = function(t) {
                this.mouse.originalEvent = t,
                this.eventData.data = this.mouse,
                this.eventData.stopped = !1,
                this.mapPositionToPoint(this.mouse.global, t.clientX, t.clientY),
                this.processInteractive(this.mouse.global, this.renderer._lastObjectRendered, this.processMouseUp, !0)
            }
            ,
            o.prototype.processMouseUp = function(t, e) {
                var i = this.mouse.originalEvent
                  , n = 2 === i.button || 3 === i.which
                  , r = n ? "_isRightDown" : "_isLeftDown";
                e ? (this.dispatchEvent(t, n ? "rightup" : "mouseup", this.eventData),
                t[r] && (t[r] = !1,
                this.dispatchEvent(t, n ? "rightclick" : "click", this.eventData))) : t[r] && (t[r] = !1,
                this.dispatchEvent(t, n ? "rightupoutside" : "mouseupoutside", this.eventData))
            }
            ,
            o.prototype.onMouseMove = function(t) {
                this.mouse.originalEvent = t,
                this.eventData.data = this.mouse,
                this.eventData.stopped = !1,
                this.mapPositionToPoint(this.mouse.global, t.clientX, t.clientY),
                this.didMove = !0,
                this.cursor = "inherit",
                this.processInteractive(this.mouse.global, this.renderer._lastObjectRendered, this.processMouseMove, !0),
                this.currentCursorStyle !== this.cursor && (this.currentCursorStyle = this.cursor,
                this.interactionDOMElement.style.cursor = this.cursor)
            }
            ,
            o.prototype.processMouseMove = function(t, e) {
                this.dispatchEvent(t, "mousemove", this.eventData),
                this.processMouseOverOut(t, e)
            }
            ,
            o.prototype.onMouseOut = function(t) {
                this.mouse.originalEvent = t,
                this.eventData.stopped = !1,
                this.mapPositionToPoint(this.mouse.global, t.clientX, t.clientY),
                this.interactionDOMElement.style.cursor = "inherit",
                this.mapPositionToPoint(this.mouse.global, t.clientX, t.clientY),
                this.processInteractive(this.mouse.global, this.renderer._lastObjectRendered, this.processMouseOverOut, !1)
            }
            ,
            o.prototype.processMouseOverOut = function(t, e) {
                e ? (t._over || (t._over = !0,
                this.dispatchEvent(t, "mouseover", this.eventData)),
                t.buttonMode && (this.cursor = t.defaultCursor)) : t._over && (t._over = !1,
                this.dispatchEvent(t, "mouseout", this.eventData))
            }
            ,
            o.prototype.onTouchStart = function(t) {
                this.autoPreventDefault && t.preventDefault();
                for (var e = t.changedTouches, i = e.length, n = 0; n < i; n++) {
                    var r = e[n]
                      , o = this.getTouchData(r);
                    o.originalEvent = t,
                    this.eventData.data = o,
                    this.eventData.stopped = !1,
                    this.processInteractive(o.global, this.renderer._lastObjectRendered, this.processTouchStart, !0),
                    this.returnTouchData(o)
                }
            }
            ,
            o.prototype.processTouchStart = function(t, e) {
                e && (t._touchDown = !0,
                this.dispatchEvent(t, "touchstart", this.eventData))
            }
            ,
            o.prototype.onTouchEnd = function(t) {
                this.autoPreventDefault && t.preventDefault();
                for (var e = t.changedTouches, i = e.length, n = 0; n < i; n++) {
                    var r = e[n]
                      , o = this.getTouchData(r);
                    o.originalEvent = t,
                    this.eventData.data = o,
                    this.eventData.stopped = !1,
                    this.processInteractive(o.global, this.renderer._lastObjectRendered, this.processTouchEnd, !0),
                    this.returnTouchData(o)
                }
            }
            ,
            o.prototype.processTouchEnd = function(t, e) {
                e ? (this.dispatchEvent(t, "touchend", this.eventData),
                t._touchDown && (t._touchDown = !1,
                this.dispatchEvent(t, "tap", this.eventData))) : t._touchDown && (t._touchDown = !1,
                this.dispatchEvent(t, "touchendoutside", this.eventData))
            }
            ,
            o.prototype.onTouchMove = function(t) {
                this.autoPreventDefault && t.preventDefault();
                for (var e = t.changedTouches, i = e.length, n = 0; n < i; n++) {
                    var r = e[n]
                      , o = this.getTouchData(r);
                    o.originalEvent = t,
                    this.eventData.data = o,
                    this.eventData.stopped = !1,
                    this.processInteractive(o.global, this.renderer._lastObjectRendered, this.processTouchMove, !1),
                    this.returnTouchData(o)
                }
            }
            ,
            o.prototype.processTouchMove = function(t, e) {
                e = e,
                this.dispatchEvent(t, "touchmove", this.eventData)
            }
            ,
            o.prototype.getTouchData = function(t) {
                var e = this.interactiveDataPool.pop();
                return e || (e = new r),
                e.identifier = t.identifier,
                this.mapPositionToPoint(e.global, t.clientX, t.clientY),
                navigator.isCocoonJS && (e.global.x = e.global.x / this.resolution,
                e.global.y = e.global.y / this.resolution),
                t.globalX = e.global.x,
                t.globalY = e.global.y,
                e
            }
            ,
            o.prototype.returnTouchData = function(t) {
                this.interactiveDataPool.push(t)
            }
            ,
            o.prototype.destroy = function() {
                this.removeEvents(),
                this.renderer = null,
                this.mouse = null,
                this.eventData = null,
                this.interactiveDataPool = null,
                this.interactionDOMElement = null,
                this.onMouseUp = null,
                this.processMouseUp = null,
                this.onMouseDown = null,
                this.processMouseDown = null,
                this.onMouseMove = null,
                this.processMouseMove = null,
                this.onMouseOut = null,
                this.processMouseOverOut = null,
                this.onTouchStart = null,
                this.processTouchStart = null,
                this.onTouchEnd = null,
                this.processTouchEnd = null,
                this.onTouchMove = null,
                this.processTouchMove = null,
                this._tempPoint = null
            }
        }
        , {
            "../core": 29,
            "./InteractionData": 115,
            "./interactiveTarget": 118
        }],
        117: [function(t, e, i) {
            e.exports = {
                InteractionData: t("./InteractionData"),
                InteractionManager: t("./InteractionManager"),
                interactiveTarget: t("./interactiveTarget")
            }
        }
        , {
            "./InteractionData": 115,
            "./InteractionManager": 116,
            "./interactiveTarget": 118
        }],
        118: [function(t, e, i) {
            e.exports = {
                interactive: !1,
                buttonMode: !1,
                interactiveChildren: !0,
                defaultCursor: "pointer",
                _over: !1,
                _touchDown: !1
            }
        }
        , {}],
        119: [function(t, e, i) {
            var o = t("resource-loader").Resource
              , d = t("../core")
              , f = t("../extras")
              , s = t("path");
            function a(t, e) {
                var i = {}
                  , n = t.data.getElementsByTagName("info")[0]
                  , r = t.data.getElementsByTagName("common")[0];
                i.font = n.getAttribute("face"),
                i.size = parseInt(n.getAttribute("size"), 10),
                i.lineHeight = parseInt(r.getAttribute("lineHeight"), 10),
                i.chars = {};
                for (var o = t.data.getElementsByTagName("char"), s = 0; s < o.length; s++) {
                    var a = parseInt(o[s].getAttribute("id"), 10)
                      , h = new d.Rectangle(parseInt(o[s].getAttribute("x"), 10) + e.frame.x,parseInt(o[s].getAttribute("y"), 10) + e.frame.y,parseInt(o[s].getAttribute("width"), 10),parseInt(o[s].getAttribute("height"), 10));
                    i.chars[a] = {
                        xOffset: parseInt(o[s].getAttribute("xoffset"), 10),
                        yOffset: parseInt(o[s].getAttribute("yoffset"), 10),
                        xAdvance: parseInt(o[s].getAttribute("xadvance"), 10),
                        kerning: {},
                        texture: new d.Texture(e.baseTexture,h)
                    }
                }
                var l = t.data.getElementsByTagName("kerning");
                for (s = 0; s < l.length; s++) {
                    var u = parseInt(l[s].getAttribute("first"), 10)
                      , c = parseInt(l[s].getAttribute("second"), 10)
                      , p = parseInt(l[s].getAttribute("amount"), 10);
                    i.chars[c].kerning[u] = p
                }
                t.bitmapFont = i,
                f.BitmapText.fonts[i.font] = i
            }
            e.exports = function() {
                return function(e, i) {
                    if (!e.data || !e.isXml)
                        return i();
                    if (0 === e.data.getElementsByTagName("page").length || 0 === e.data.getElementsByTagName("info").length || null === e.data.getElementsByTagName("info")[0].getAttribute("face"))
                        return i();
                    var t = s.dirname(e.url);
                    "." === t && (t = ""),
                    this.baseUrl && t && ("/" === this.baseUrl.charAt(this.baseUrl.length - 1) && (t += "/"),
                    t = t.replace(this.baseUrl, "")),
                    t && "/" !== t.charAt(t.length - 1) && (t += "/");
                    var n = t + e.data.getElementsByTagName("page")[0].getAttribute("file");
                    if (d.utils.TextureCache[n])
                        a(e, d.utils.TextureCache[n]),
                        i();
                    else {
                        var r = {
                            crossOrigin: e.crossOrigin,
                            loadType: o.LOAD_TYPE.IMAGE
                        };
                        this.add(e.name + "_image", n, r, function(t) {
                            a(e, t.texture),
                            i()
                        })
                    }
                }
            }
        }
        , {
            "../core": 29,
            "../extras": 85,
            path: 3,
            "resource-loader": 18
        }],
        120: [function(t, e, i) {
            e.exports = {
                Loader: t("./loader"),
                bitmapFontParser: t("./bitmapFontParser"),
                spritesheetParser: t("./spritesheetParser"),
                textureParser: t("./textureParser"),
                Resource: t("resource-loader").Resource
            }
        }
        , {
            "./bitmapFontParser": 119,
            "./loader": 121,
            "./spritesheetParser": 122,
            "./textureParser": 123,
            "resource-loader": 18
        }],
        121: [function(t, e, i) {
            var n = t("resource-loader")
              , r = t("./textureParser")
              , o = t("./spritesheetParser")
              , s = t("./bitmapFontParser");
            function a(t, e) {
                n.call(this, t, e);
                for (var i = 0; i < a._pixiMiddleware.length; ++i)
                    this.use(a._pixiMiddleware[i]())
            }
            (a.prototype = Object.create(n.prototype)).constructor = a,
            (e.exports = a)._pixiMiddleware = [n.middleware.parsing.blob, r, o, s],
            a.addPixiMiddleware = function(t) {
                a._pixiMiddleware.push(t)
            }
            ;
            var h = n.Resource;
            h.setExtensionXhrType("fnt", h.XHR_RESPONSE_TYPE.DOCUMENT)
        }
        , {
            "./bitmapFontParser": 119,
            "./spritesheetParser": 122,
            "./textureParser": 123,
            "resource-loader": 18
        }],
        122: [function(t, e, i) {
            var n = t("resource-loader").Resource
              , r = t("path")
              , u = t("../core");
            e.exports = function() {
                return function(a, h) {
                    if (!a.data || !a.isJson || !a.data.frames)
                        return h();
                    var t = {
                        crossOrigin: a.crossOrigin,
                        loadType: n.LOAD_TYPE.IMAGE
                    }
                      , e = r.dirname(a.url.replace(this.baseUrl, ""))
                      , l = u.utils.getResolutionOfUrl(a.url);
                    this.add(a.name + "_image", e + "/" + a.data.meta.image, t, function(t) {
                        a.textures = {};
                        var e = a.data.frames;
                        for (var i in e) {
                            var n = e[i].frame;
                            if (n) {
                                var r = null
                                  , o = null;
                                if (r = e[i].rotated ? new u.Rectangle(n.x,n.y,n.h,n.w) : new u.Rectangle(n.x,n.y,n.w,n.h),
                                e[i].trimmed && (o = new u.Rectangle(e[i].spriteSourceSize.x / l,e[i].spriteSourceSize.y / l,e[i].sourceSize.w / l,e[i].sourceSize.h / l)),
                                e[i].rotated) {
                                    var s = r.width;
                                    r.width = r.height,
                                    r.height = s
                                }
                                r.x /= l,
                                r.y /= l,
                                r.width /= l,
                                r.height /= l,
                                a.textures[i] = new u.Texture(t.texture.baseTexture,r,r.clone(),o,e[i].rotated),
                                u.utils.TextureCache[i] = a.textures[i]
                            }
                        }
                        h()
                    })
                }
            }
        }
        , {
            "../core": 29,
            path: 3,
            "resource-loader": 18
        }],
        123: [function(t, e, i) {
            var n = t("../core");
            e.exports = function() {
                return function(t, e) {
                    t.data && t.isImage && (t.texture = new n.Texture(new n.BaseTexture(t.data,null,n.utils.getResolutionOfUrl(t.url))),
                    n.utils.TextureCache[t.url] = t.texture),
                    e()
                }
            }
        }
        , {
            "../core": 29
        }],
        124: [function(t, e, i) {
            var x = t("../core")
              , l = new x.Point
              , u = new x.Polygon;
            function c(t, e, i, n, r) {
                x.Container.call(this),
                this._texture = null,
                this.uvs = i || new Float32Array([0, 1, 1, 1, 1, 0, 0, 1]),
                this.vertices = e || new Float32Array([0, 0, 100, 0, 100, 100, 0, 100]),
                this.indices = n || new Uint16Array([0, 1, 2, 3]),
                this.dirty = !0,
                this.blendMode = x.BLEND_MODES.NORMAL,
                this.canvasPadding = 0,
                this.drawMode = r || c.DRAW_MODES.TRIANGLE_MESH,
                this.texture = t
            }
            (c.prototype = Object.create(x.Container.prototype)).constructor = c,
            e.exports = c,
            Object.defineProperties(c.prototype, {
                texture: {
                    get: function() {
                        return this._texture
                    },
                    set: function(t) {
                        this._texture !== t && (this._texture = t) && (t.baseTexture.hasLoaded ? this._onTextureUpdate() : t.once("update", this._onTextureUpdate, this))
                    }
                }
            }),
            c.prototype._renderWebGL = function(t) {
                t.setObjectRenderer(t.plugins.mesh),
                t.plugins.mesh.render(this)
            }
            ,
            c.prototype._renderCanvas = function(t) {
                var e = t.context
                  , i = this.worldTransform;
                t.roundPixels ? e.setTransform(i.a, i.b, i.c, i.d, 0 | i.tx, 0 | i.ty) : e.setTransform(i.a, i.b, i.c, i.d, i.tx, i.ty),
                this.drawMode === c.DRAW_MODES.TRIANGLE_MESH ? this._renderCanvasTriangleMesh(e) : this._renderCanvasTriangles(e)
            }
            ,
            c.prototype._renderCanvasTriangleMesh = function(t) {
                for (var e = this.vertices, i = this.uvs, n = e.length / 2, r = 0; r < n - 2; r++) {
                    var o = 2 * r;
                    this._renderCanvasDrawTriangle(t, e, i, o, o + 2, o + 4)
                }
            }
            ,
            c.prototype._renderCanvasTriangles = function(t) {
                for (var e = this.vertices, i = this.uvs, n = this.indices, r = n.length, o = 0; o < r; o += 3) {
                    var s = 2 * n[o]
                      , a = 2 * n[o + 1]
                      , h = 2 * n[o + 2];
                    this._renderCanvasDrawTriangle(t, e, i, s, a, h)
                }
            }
            ,
            c.prototype._renderCanvasDrawTriangle = function(t, e, i, n, r, o) {
                var s = this._texture.baseTexture.source
                  , a = this._texture.baseTexture.width
                  , h = this._texture.baseTexture.height
                  , l = e[n]
                  , u = e[r]
                  , c = e[o]
                  , p = e[n + 1]
                  , d = e[r + 1]
                  , f = e[o + 1]
                  , g = i[n] * a
                  , y = i[r] * a
                  , m = i[o] * a
                  , v = i[n + 1] * h
                  , S = i[r + 1] * h
                  , x = i[o + 1] * h;
                if (0 < this.canvasPadding) {
                    var b = this.canvasPadding / this.worldTransform.a
                      , T = this.canvasPadding / this.worldTransform.d
                      , _ = (l + u + c) / 3
                      , w = (p + d + f) / 3
                      , C = l - _
                      , E = p - w
                      , I = Math.sqrt(C * C + E * E);
                    l = _ + C / I * (I + b),
                    p = w + E / I * (I + T),
                    E = d - w,
                    u = _ + (C = u - _) / (I = Math.sqrt(C * C + E * E)) * (I + b),
                    d = w + E / I * (I + T),
                    E = f - w,
                    c = _ + (C = c - _) / (I = Math.sqrt(C * C + E * E)) * (I + b),
                    f = w + E / I * (I + T)
                }
                t.save(),
                t.beginPath(),
                t.moveTo(l, p),
                t.lineTo(u, d),
                t.lineTo(c, f),
                t.closePath(),
                t.clip();
                var D = g * S + v * m + y * x - S * m - v * y - g * x
                  , A = l * S + v * c + u * x - S * c - v * u - l * x
                  , M = g * u + l * m + y * c - u * m - l * y - g * c
                  , P = g * S * c + v * u * m + l * y * x - l * S * m - v * y * c - g * u * x
                  , R = p * S + v * f + d * x - S * f - v * d - p * x
                  , L = g * d + p * m + y * f - d * m - p * y - g * f
                  , O = g * S * f + v * d * m + p * y * x - p * S * m - v * y * f - g * d * x;
                t.transform(A / D, R / D, M / D, L / D, P / D, O / D),
                t.drawImage(s, 0, 0),
                t.restore()
            }
            ,
            c.prototype.renderMeshFlat = function(t) {
                var e = this.context
                  , i = t.vertices
                  , n = i.length / 2;
                e.beginPath();
                for (var r = 1; r < n - 2; r++) {
                    var o = 2 * r
                      , s = i[o]
                      , a = i[o + 2]
                      , h = i[o + 4]
                      , l = i[o + 1]
                      , u = i[o + 3]
                      , c = i[o + 5];
                    e.moveTo(s, l),
                    e.lineTo(a, u),
                    e.lineTo(h, c)
                }
                e.fillStyle = "#FF0000",
                e.fill(),
                e.closePath()
            }
            ,
            c.prototype._onTextureUpdate = function() {
                this.updateFrame = !0
            }
            ,
            c.prototype.getBounds = function(t) {
                if (!this._currentBounds) {
                    for (var e = t || this.worldTransform, i = e.a, n = e.b, r = e.c, o = e.d, s = e.tx, a = e.ty, h = -1 / 0, l = -1 / 0, u = 1 / 0, c = 1 / 0, p = this.vertices, d = 0, f = p.length; d < f; d += 2) {
                        var g = p[d]
                          , y = p[d + 1]
                          , m = i * g + r * y + s
                          , v = o * y + n * g + a;
                        u = m < u ? m : u,
                        c = v < c ? v : c,
                        h = h < m ? m : h,
                        l = l < v ? v : l
                    }
                    if (u === -1 / 0 || l === 1 / 0)
                        return x.Rectangle.EMPTY;
                    var S = this._bounds;
                    S.x = u,
                    S.width = h - u,
                    S.y = c,
                    S.height = l - c,
                    this._currentBounds = S
                }
                return this._currentBounds
            }
            ,
            c.prototype.containsPoint = function(t) {
                if (!this.getBounds().contains(t.x, t.y))
                    return !1;
                this.worldTransform.applyInverse(t, l);
                var e, i, n = this.vertices, r = u.points;
                if (this.drawMode === c.DRAW_MODES.TRIANGLES) {
                    var o = this.indices;
                    for (i = this.indices.length,
                    e = 0; e < i; e += 3) {
                        var s = 2 * o[e]
                          , a = 2 * o[e + 1]
                          , h = 2 * o[e + 2];
                        if (r[0] = n[s],
                        r[1] = n[s + 1],
                        r[2] = n[a],
                        r[3] = n[a + 1],
                        r[4] = n[h],
                        r[5] = n[h + 1],
                        u.contains(l.x, l.y))
                            return !0
                    }
                } else
                    for (i = n.length,
                    e = 0; e < i; e += 6)
                        if (r[0] = n[e],
                        r[1] = n[e + 1],
                        r[2] = n[e + 2],
                        r[3] = n[e + 3],
                        r[4] = n[e + 4],
                        r[5] = n[e + 5],
                        u.contains(l.x, l.y))
                            return !0;
                return !1
            }
            ,
            c.DRAW_MODES = {
                TRIANGLE_MESH: 0,
                TRIANGLES: 1
            }
        }
        , {
            "../core": 29
        }],
        125: [function(t, e, i) {
            var n = t("./Mesh")
              , c = t("../core");
            function r(t, e) {
                n.call(this, t),
                this.points = e,
                this.vertices = new Float32Array(4 * e.length),
                this.uvs = new Float32Array(4 * e.length),
                this.colors = new Float32Array(2 * e.length),
                this.indices = new Uint16Array(2 * e.length),
                this._ready = !0,
                this.refresh()
            }
            (r.prototype = Object.create(n.prototype)).constructor = r,
            (e.exports = r).prototype.refresh = function() {
                var t = this.points;
                if (!(t.length < 1) && this._texture._uvs) {
                    var e = this.uvs
                      , i = this.indices
                      , n = this.colors
                      , r = this._texture._uvs
                      , o = new c.Point(r.x0,r.y0)
                      , s = new c.Point(r.x2 - r.x0,r.y2 - r.y0);
                    e[0] = 0 + o.x,
                    e[1] = 0 + o.y,
                    e[2] = 0 + o.x,
                    e[3] = 1 * s.y + o.y,
                    n[0] = 1,
                    n[1] = 1,
                    i[0] = 0,
                    i[1] = 1;
                    for (var a, h, l = t.length, u = 1; u < l; u++)
                        t[u],
                        h = u / (l - 1),
                        e[a = 4 * u] = h * s.x + o.x,
                        e[a + 1] = 0 + o.y,
                        e[a + 2] = h * s.x + o.x,
                        e[a + 3] = 1 * s.y + o.y,
                        n[a = 2 * u] = 1,
                        n[a + 1] = 1,
                        i[a = 2 * u] = a,
                        i[a + 1] = a + 1;
                    this.dirty = !0
                }
            }
            ,
            r.prototype._onTextureUpdate = function() {
                n.prototype._onTextureUpdate.call(this),
                this._ready && this.refresh()
            }
            ,
            r.prototype.updateTransform = function() {
                var t = this.points;
                if (!(t.length < 1)) {
                    for (var e, i, n, r, o, s = t[0], a = 0, h = 0, l = this.vertices, u = t.length, c = 0; c < u; c++)
                        i = t[c],
                        n = 4 * c,
                        h = -((e = c < t.length - 1 ? t[c + 1] : i).x - s.x),
                        a = e.y - s.y,
                        1 < 10 * (1 - c / (u - 1)) && 1,
                        a /= r = Math.sqrt(a * a + h * h),
                        h /= r,
                        a *= o = this._texture.height / 2,
                        h *= o,
                        l[n] = i.x + a,
                        l[n + 1] = i.y + h,
                        l[n + 2] = i.x - a,
                        l[n + 3] = i.y - h,
                        s = i;
                    this.containerUpdateTransform()
                }
            }
        }
        , {
            "../core": 29,
            "./Mesh": 124
        }],
        126: [function(t, e, i) {
            e.exports = {
                Mesh: t("./Mesh"),
                Rope: t("./Rope"),
                MeshRenderer: t("./webgl/MeshRenderer"),
                MeshShader: t("./webgl/MeshShader")
            }
        }
        , {
            "./Mesh": 124,
            "./Rope": 125,
            "./webgl/MeshRenderer": 127,
            "./webgl/MeshShader": 128
        }],
        127: [function(t, e, i) {
            var n = t("../../core")
              , s = t("../Mesh");
            function r(t) {
                n.ObjectRenderer.call(this, t),
                this.indices = new Uint16Array(15e3);
                for (var e = 0, i = 0; e < 15e3; e += 6,
                i += 4)
                    this.indices[e + 0] = i + 0,
                    this.indices[e + 1] = i + 1,
                    this.indices[e + 2] = i + 2,
                    this.indices[e + 3] = i + 0,
                    this.indices[e + 4] = i + 2,
                    this.indices[e + 5] = i + 3
            }
            (r.prototype = Object.create(n.ObjectRenderer.prototype)).constructor = r,
            e.exports = r,
            n.WebGLRenderer.registerPlugin("mesh", r),
            r.prototype.onContextChange = function() {}
            ,
            r.prototype.render = function(t) {
                t._vertexBuffer || this._initWebGL(t);
                var e = this.renderer
                  , i = e.gl
                  , n = t._texture.baseTexture
                  , r = e.shaderManager.plugins.meshShader
                  , o = t.drawMode === s.DRAW_MODES.TRIANGLE_MESH ? i.TRIANGLE_STRIP : i.TRIANGLES;
                e.blendModeManager.setBlendMode(t.blendMode),
                i.uniformMatrix3fv(r.uniforms.translationMatrix._location, !1, t.worldTransform.toArray(!0)),
                i.uniformMatrix3fv(r.uniforms.projectionMatrix._location, !1, e.currentRenderTarget.projectionMatrix.toArray(!0)),
                i.uniform1f(r.uniforms.alpha._location, t.worldAlpha),
                t.dirty ? (t.dirty = !1,
                i.bindBuffer(i.ARRAY_BUFFER, t._vertexBuffer),
                i.bufferData(i.ARRAY_BUFFER, t.vertices, i.STATIC_DRAW),
                i.vertexAttribPointer(r.attributes.aVertexPosition, 2, i.FLOAT, !1, 0, 0),
                i.bindBuffer(i.ARRAY_BUFFER, t._uvBuffer),
                i.bufferData(i.ARRAY_BUFFER, t.uvs, i.STATIC_DRAW),
                i.vertexAttribPointer(r.attributes.aTextureCoord, 2, i.FLOAT, !1, 0, 0),
                i.activeTexture(i.TEXTURE0),
                n._glTextures[i.id] ? i.bindTexture(i.TEXTURE_2D, n._glTextures[i.id]) : this.renderer.updateTexture(n),
                i.bindBuffer(i.ELEMENT_ARRAY_BUFFER, t._indexBuffer),
                i.bufferData(i.ELEMENT_ARRAY_BUFFER, t.indices, i.STATIC_DRAW)) : (i.bindBuffer(i.ARRAY_BUFFER, t._vertexBuffer),
                i.bufferSubData(i.ARRAY_BUFFER, 0, t.vertices),
                i.vertexAttribPointer(r.attributes.aVertexPosition, 2, i.FLOAT, !1, 0, 0),
                i.bindBuffer(i.ARRAY_BUFFER, t._uvBuffer),
                i.vertexAttribPointer(r.attributes.aTextureCoord, 2, i.FLOAT, !1, 0, 0),
                i.activeTexture(i.TEXTURE0),
                n._glTextures[i.id] ? i.bindTexture(i.TEXTURE_2D, n._glTextures[i.id]) : this.renderer.updateTexture(n),
                i.bindBuffer(i.ELEMENT_ARRAY_BUFFER, t._indexBuffer),
                i.bufferSubData(i.ELEMENT_ARRAY_BUFFER, 0, t.indices)),
                i.drawElements(o, t.indices.length, i.UNSIGNED_SHORT, 0)
            }
            ,
            r.prototype._initWebGL = function(t) {
                var e = this.renderer.gl;
                t._vertexBuffer = e.createBuffer(),
                t._indexBuffer = e.createBuffer(),
                t._uvBuffer = e.createBuffer(),
                e.bindBuffer(e.ARRAY_BUFFER, t._vertexBuffer),
                e.bufferData(e.ARRAY_BUFFER, t.vertices, e.DYNAMIC_DRAW),
                e.bindBuffer(e.ARRAY_BUFFER, t._uvBuffer),
                e.bufferData(e.ARRAY_BUFFER, t.uvs, e.STATIC_DRAW),
                t.colors && (t._colorBuffer = e.createBuffer(),
                e.bindBuffer(e.ARRAY_BUFFER, t._colorBuffer),
                e.bufferData(e.ARRAY_BUFFER, t.colors, e.STATIC_DRAW)),
                e.bindBuffer(e.ELEMENT_ARRAY_BUFFER, t._indexBuffer),
                e.bufferData(e.ELEMENT_ARRAY_BUFFER, t.indices, e.STATIC_DRAW)
            }
            ,
            r.prototype.flush = function() {}
            ,
            r.prototype.start = function() {
                var t = this.renderer.shaderManager.plugins.meshShader;
                this.renderer.shaderManager.setShader(t)
            }
            ,
            r.prototype.destroy = function() {}
        }
        , {
            "../../core": 29,
            "../Mesh": 124
        }],
        128: [function(t, e, i) {
            var n = t("../../core");
            function r(t) {
                n.Shader.call(this, t, ["precision lowp float;", "attribute vec2 aVertexPosition;", "attribute vec2 aTextureCoord;", "uniform mat3 translationMatrix;", "uniform mat3 projectionMatrix;", "varying vec2 vTextureCoord;", "void main(void){", "   gl_Position = vec4((projectionMatrix * translationMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);", "   vTextureCoord = aTextureCoord;", "}"].join("\n"), ["precision lowp float;", "varying vec2 vTextureCoord;", "uniform float alpha;", "uniform sampler2D uSampler;", "void main(void){", "   gl_FragColor = texture2D(uSampler, vTextureCoord) * alpha ;", "}"].join("\n"), {
                    alpha: {
                        type: "1f",
                        value: 0
                    },
                    translationMatrix: {
                        type: "mat3",
                        value: new Float32Array(9)
                    },
                    projectionMatrix: {
                        type: "mat3",
                        value: new Float32Array(9)
                    }
                }, {
                    aVertexPosition: 0,
                    aTextureCoord: 0
                })
            }
            (r.prototype = Object.create(n.Shader.prototype)).constructor = r,
            e.exports = r,
            n.ShaderManager.registerPlugin("meshShader", r)
        }
        , {
            "../../core": 29
        }],
        129: [function(t, e, i) {
            Object.assign || (Object.assign = t("object-assign"))
        }
        , {
            "object-assign": 12
        }],
        130: [function(t, e, i) {
            t("./Object.assign"),
            t("./requestAnimationFrame")
        }
        , {
            "./Object.assign": 129,
            "./requestAnimationFrame": 131
        }],
        131: [function(t, e, i) {
            (function(t) {
                if (Date.now && Date.prototype.getTime || (Date.now = function() {
                    return (new Date).getTime()
                }
                ),
                !t.performance || !t.performance.now) {
                    var e = Date.now();
                    t.performance || (t.performance = {}),
                    t.performance.now = function() {
                        return Date.now() - e
                    }
                }
                for (var n = Date.now(), i = ["ms", "moz", "webkit", "o"], r = 0; r < i.length && !t.requestAnimationFrame; ++r)
                    t.requestAnimationFrame = t[i[r] + "RequestAnimationFrame"],
                    t.cancelAnimationFrame = t[i[r] + "CancelAnimationFrame"] || t[i[r] + "CancelRequestAnimationFrame"];
                t.requestAnimationFrame || (t.requestAnimationFrame = function(t) {
                    if ("function" != typeof t)
                        throw new TypeError(t + "is not a function");
                    var e = Date.now()
                      , i = 16 + n - e;
                    return i < 0 && (i = 0),
                    n = e,
                    setTimeout(function() {
                        n = Date.now(),
                        t(performance.now())
                    }, i)
                }
                ),
                t.cancelAnimationFrame || (t.cancelAnimationFrame = function(t) {
                    clearTimeout(t)
                }
                )
            }
            ).call(this, "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {})
        }
        , {}]
    }, {}, [1])(1)
}),
function(t) {
    if ("object" == typeof exports && "undefined" != typeof module)
        module.exports = t();
    else if ("function" == typeof define && define.amd)
        define([], t);
    else {
        ("undefined" != typeof window ? window : "undefined" != typeof global ? global : "undefined" != typeof self ? self : this).BezierEasing = t()
    }
}(function() {
    return function o(s, a, h) {
        function l(i, t) {
            if (!a[i]) {
                if (!s[i]) {
                    var e = "function" == typeof require && require;
                    if (!t && e)
                        return e(i, !0);
                    if (u)
                        return u(i, !0);
                    var n = new Error("Cannot find module '" + i + "'");
                    throw n.code = "MODULE_NOT_FOUND",
                    n
                }
                var r = a[i] = {
                    exports: {}
                };
                s[i][0].call(r.exports, function(t) {
                    var e = s[i][1][t];
                    return l(e || t)
                }, r, r.exports, o, s, a, h)
            }
            return a[i].exports
        }
        for (var u = "function" == typeof require && require, t = 0; t < h.length; t++)
            l(h[t]);
        return l
    }({
        1: [function(t, e, i) {
            function n(t, e) {
                return 1 - 3 * e + 3 * t
            }
            function r(t, e) {
                return 3 * e - 6 * t
            }
            function o(t) {
                return 3 * t
            }
            function h(t, e, i) {
                return ((n(e, i) * t + r(e, i)) * t + o(e)) * t
            }
            function l(t, e, i) {
                return 3 * n(e, i) * t * t + 2 * r(e, i) * t + o(e)
            }
            function s(t) {
                if (!t || 4 !== t.length)
                    throw new Error("BezierEasing: points must contains 4 values");
                for (var e = 0; e < 4; ++e)
                    if ("number" != typeof t[e] || isNaN(t[e]) || !isFinite(t[e]))
                        throw new Error("BezierEasing: points should be integers.");
                if (t[0] < 0 || 1 < t[0] || t[2] < 0 || 1 < t[2])
                    throw new Error("BezierEasing x values must be in [0, 1] range.");
                this._str = "BezierEasing(" + t + ")",
                this._css = "cubic-bezier(" + t + ")",
                this._p = t,
                this._mSampleValues = a ? new Float32Array(11) : new Array(11),
                this._precomputed = !1
            }
            var a = "function" == typeof Float32Array;
            s.prototype = {
                find: function(t) {
                    var e = this._p[0]
                      , i = this._p[1]
                      , n = this._p[2]
                      , r = this._p[3];
                    return this._precomputed || this._precompute(),
                    e === i && n === r ? t : 0 === t ? 0 : 1 === t ? 1 : h(this._getTForX(t), i, r)
                },
                getPoints: function() {
                    return this._p
                },
                toString: function() {
                    return this._str
                },
                toCSS: function() {
                    return this._css
                },
                _precompute: function() {
                    var t = this._p[0]
                      , e = this._p[1]
                      , i = this._p[2]
                      , n = this._p[3];
                    this._precomputed = !0,
                    (t !== e || i !== n) && this._calcSampleValues()
                },
                _calcSampleValues: function() {
                    for (var t = this._p[0], e = this._p[2], i = 0; i < 11; ++i)
                        this._mSampleValues[i] = h(.1 * i, t, e)
                },
                _getTForX: function(t) {
                    for (var e = this._p[0], i = this._p[2], n = this._mSampleValues, r = 0, o = 1; 10 !== o && n[o] <= t; ++o)
                        r += .1;
                    var s = r + .1 * ((t - n[--o]) / (n[o + 1] - n[o]))
                      , a = l(s, e, i);
                    return .001 <= a ? function(t, e, i, n) {
                        for (var r = 0; r < 4; ++r) {
                            var o = l(e, i, n);
                            if (0 === o)
                                return e;
                            e -= (h(e, i, n) - t) / o
                        }
                        return e
                    }(t, s, e, i) : 0 === a ? s : function(t, e, i, n, r) {
                        for (var o, s, a = 0; 0 < (o = h(s = e + (i - e) / 2, n, r) - t) ? i = s : e = s,
                        1e-7 < Math.abs(o) && ++a < 10; )
                            ;
                        return s
                    }(t, r, r + .1, e, i)
                }
            },
            e.exports = s
        }
        , {}]
    }, {}, [1])(1)
});
var exports, define, DUST, gs, __extends = this && this.__extends || function() {
    var n = Object.setPrototypeOf || {
        __proto__: []
    }instanceof Array && function(t, e) {
        t.__proto__ = e
    }
    || function(t, e) {
        for (var i in e)
            e.hasOwnProperty(i) && (t[i] = e[i])
    }
    ;
    return function(t, e) {
        function i() {
            this.constructor = t
        }
        n(t, e),
        t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype,
        new i)
    }
}();
function JL(t) {
    if (!t)
        return JL.__;
    Array.prototype.reduce || (Array.prototype.reduce = function(t, e) {
        for (var i = e, n = 0; n < this.length; n++)
            i = t(i, this[n], n, this);
        return i
    }
    );
    var o = "";
    return ("." + t).split(".").reduce(function(t, e, i, n) {
        o ? o += "." + e : o = e;
        var r = t["__" + o];
        return void 0 === r && (JL.Logger.prototype = t,
        r = new JL.Logger(o),
        t["__" + o] = r),
        r
    }, JL.__)
}
!function(e) {
    var i, t, n, r, o, s, a, h, l = function() {
        function r(t) {
            if (this.available = !1,
            this.filtered = !1,
            this.availableHandler = new e.HandlerCollection,
            this.lastActivity = Date.now(),
            this.dimensions = new e.HashMap,
            null != r.INSTANCE)
                throw new Error("Analytics already initialized");
            (r.INSTANCE = this).logger = JL("Analytics"),
            this.analyticsGameId = t,
            "undefined" == typeof ga ? this.logger.warn("Analytics unavailable") : (this.addDimension("dimension1", t),
            this.available = !0,
            this.availableHandler.fire())
        }
        return r.get = function() {
            return r.INSTANCE
        }
        ,
        r.prototype.addDimension = function(t, e) {
            "undefined" == typeof ga ? this.availableHandler.once(function() {
                ga("set", t, e)
            }) : ga("set", t, e),
            this.dimensions.put(t, e)
        }
        ,
        r.prototype._addDimensionsToEvent = function(i) {
            this.dimensions.forEach(function(t, e) {
                i[t] = e
            }, this)
        }
        ,
        r.prototype._send0 = function(e) {
            try {
                ga("send", e)
            } catch (t) {
                this.logger.error("Failed to send event : " + JSON.stringify(e), t)
            }
        }
        ,
        r.prototype.sendEvent = function(t, e, i, n) {
            var r = {
                hitType: "event",
                eventCategory: t,
                eventAction: e
            };
            this._addDimensionsToEvent(r),
            null != i && (r.eventLabel = i),
            null != n && (r.eventValue = n),
            this._send0(r)
        }
        ,
        r.prototype.sendDebugLoadingEvent = function(t, e, i, n) {
            var r = this
              , o = "### DEBUG LOADING ANALYTICS ### step:" + t + " action:" + e;
            null != i && (o = o + " label:" + i),
            null != n && (o = o + " value:" + n),
            this.logger.debug(o);
            var s = "debug-loading";
            this.available ? this.sendEvent(s, t + " - " + e, i, n) : this.availableHandler.once(function() {
                r.sendEvent(s, t + " - " + e, i, n)
            }, this)
        }
        ,
        r.prototype.sendLevelComplete0 = function(t, e) {
            var i = {
                hitType: "event",
                eventCategory: "level",
                eventAction: "complete",
                eventLabel: "level-" + this.pad4(t),
                eventValue: e
            };
            this._addDimensionsToEvent(i),
            this._send0(i)
        }
        ,
        r.prototype.sendLevelComplete02 = function(t, e) {
            var i = {
                hitType: "event",
                eventCategory: "level",
                eventAction: "complete",
                eventLabel: t,
                eventValue: e
            };
            this._addDimensionsToEvent(i),
            this._send0(i)
        }
        ,
        r.prototype.sendLevelFail0 = function(t, e) {
            var i = {
                hitType: "event",
                eventCategory: "level",
                eventAction: "fail",
                eventLabel: "level-" + this.pad4(t),
                eventValue: e
            };
            this._addDimensionsToEvent(i),
            this._send0(i)
        }
        ,
        r.prototype.sendAchievementComplete0 = function(t) {
            var e = {
                hitType: "event",
                eventCategory: "achievement",
                eventAction: "complete",
                eventLabel: t
            };
            this._addDimensionsToEvent(e),
            this._send0(e)
        }
        ,
        r.prototype.sendTiming0 = function(t, e) {
            var i = {
                hitType: "timing",
                timingCategory: "loading",
                timingVar: this.getTimingType2Str(t),
                timingValue: e
            };
            this._addDimensionsToEvent(i),
            this._send0(i)
        }
        ,
        r.prototype.sendGameEvent0 = function(t, e) {
            var i = {
                hitType: "event",
                eventCategory: "game",
                eventAction: this.getGameEventType2Str(t),
                eventLabel: e
            };
            this._addDimensionsToEvent(i),
            this._send0(i)
        }
        ,
        r.prototype.sendIAPEvent0 = function(t, e, i) {
            var n = {
                hitType: "event",
                eventCategory: "iap",
                eventAction: this.getIAPEventType2Str(t)
            };
            e && (n.eventLabel = e),
            i && (n.eventValue = i),
            this._addDimensionsToEvent(n),
            this._send0(n)
        }
        ,
        r.prototype.sendGlobalWorkflowEvent0 = function(t, e, i) {
            var n = {
                hitType: "event",
                eventCategory: "global-workflow",
                eventAction: this.getGlobalWorkflowType2Str(t)
            };
            e && (n.eventLabel = e),
            i && (n.eventValue = i),
            this._addDimensionsToEvent(n),
            this._send0(n)
        }
        ,
        r.prototype.setSessionCount = function(t) {
            r.SAMPLE_RATE <= 1 || (t % r.SAMPLE_RATE == 0 ? this.logger.debug("Event tracking enabled (" + t + ")") : (this.filtered = !0,
            this.logger.debug("Event tracking filtered out (" + t + ")")))
        }
        ,
        r.prototype.updateActivity = function() {
            3e5 < Date.now() - this.lastActivity && (this.sendEvent("activity", "ping", null, null),
            this.lastActivity = Date.now())
        }
        ,
        r.ready = function() {
            return null != r.INSTANCE && 1 == r.INSTANCE.available
        }
        ,
        r.filtered = function() {
            return null != r.INSTANCE && 1 == r.INSTANCE.filtered && (r.INSTANCE.updateActivity(),
            !0)
        }
        ,
        r.sendLevelComplete = function(t, e) {
            r.ready() && (r.filtered() || r.INSTANCE.sendLevelComplete0(t, e))
        }
        ,
        r.sendLevelComplete2 = function(t, e) {
            r.ready() && (r.filtered() || r.INSTANCE.sendLevelComplete02(t, e))
        }
        ,
        r.sendLevelFail = function(t, e) {
            r.ready() && (r.filtered() || r.INSTANCE.sendLevelFail0(t, e))
        }
        ,
        r.sendAchievementDone = function(t) {
            r.ready() && (r.filtered() || r.INSTANCE.sendAchievementComplete0(t))
        }
        ,
        r.sendTiming = function(t, e) {
            r.ready() && (r.filtered() || r.INSTANCE.sendTiming0(t, e))
        }
        ,
        r.sendGameEvent = function(t) {
            r.ready() && (r.filtered() || r.INSTANCE.sendGameEvent0(t))
        }
        ,
        r.sendGameStarted = function(t) {
            r.ready() && (r.filtered() || r.INSTANCE.sendGameEvent0(n.STARTED, t))
        }
        ,
        r.sendIAPEvent = function(t, e, i) {
            r.ready() && (r.filtered() || r.INSTANCE.sendIAPEvent0(t, e, i))
        }
        ,
        r.sendGlobalWorkflowEvent = function(t, e, i) {
            r.ready() && (r.filtered() || r.INSTANCE.sendGlobalWorkflowEvent0(t, e, i))
        }
        ,
        r.sendMoreGamesEvent = function() {
            r.sendGlobalWorkflowEvent(a.MOREGAMES)
        }
        ,
        r.sendShowTutorialEvent = function() {
            r.sendGlobalWorkflowEvent(a.TUTORIAL)
        }
        ,
        r.sendInviteFriendEvent = function(t) {
            void 0 === t && (t = 1),
            r.sendGlobalWorkflowEvent(a.INVITE, null, t)
        }
        ,
        r.sendShareGameEvent = function(t) {
            void 0 === t && (t = 1),
            r.sendGlobalWorkflowEvent(a.SHARE, null, t)
        }
        ,
        r.sendShareSnapcardGameEvent = function(t) {
            void 0 === t && (t = 1),
            r.sendGlobalWorkflowEvent(a.SHARESNAPCARD, null, t)
        }
        ,
        r.sendEvent = function(t, e, i, n) {
            r.ready() && (r.filtered() || r.INSTANCE.sendEvent(t, e, i, n))
        }
        ,
        r.sendDebugLoadingEvent = function(t, e, i, n) {
            1 == r.SEND_DEBUG_LOADING && r.INSTANCE.sendDebugLoadingEvent(t, e, i, n)
        }
        ,
        r.setSessionCount = function(t) {
            r.ready() && r.INSTANCE.setSessionCount(t)
        }
        ,
        r.prototype.pad4 = function(t) {
            return t < 0 ? t.toString() : t < 10 ? "000" + t : t < 100 ? "00" + t : t < 1e3 ? "0" + t : t.toString()
        }
        ,
        r.prototype.getTimingType2Str = function(t) {
            return t == i.BOOT ? "boot" : t == i.ASSETS ? "assets" : "n/a"
        }
        ,
        r.prototype.getGameEventType2Str = function(t) {
            return t == n.STARTED ? "started" : t == n.LOADED ? "loaded" : "n/a"
        }
        ,
        r.prototype.getIAPEventType2Str = function(t) {
            return t == o.TAKEDAILYFREE ? "TakeDailyFree" : t == o.BUYITEM ? "BuyItem" : t == o.BUYITEMERROR ? "BuyItemError" : t == o.BUYCOINS ? "BuyCoins" : t == o.BUYCOINSERROR ? "BuyCoinsError" : t == o.CONSUMEITEM ? "ConsumeItem" : t == o.REWARDITEM ? "RewardItem" : t == o.REWARDCOINS ? "RewardCoins" : "n/a"
        }
        ,
        r.prototype.getGlobalWorkflowType2Str = function(t) {
            return t == a.FULLSCREEN ? "Fullscreen" : t == a.MUSICS ? "Musics" : t == a.SOUNDS ? "Sounds" : t == a.MOREGAMES ? "MoreGames" : t == a.TUTORIAL ? "Tutorial" : t == a.INVITE ? "Invite" : t == a.SHARE ? "Share" : t == a.SHARESNAPCARD ? "ShareSnapcard" : t == a.CUSTOM ? "Custom" : "n/a"
        }
        ,
        r.SEND_DEBUG_LOADING = !1,
        r.SAMPLE_RATE = 1,
        r
    }();
    e.Analytics = l,
    (t = i = e.AnalyticsTiming || (e.AnalyticsTiming = {}))[t.BOOT = 0] = "BOOT",
    t[t.ASSETS = 1] = "ASSETS",
    (r = n = e.AnalyticsGameEvent || (e.AnalyticsGameEvent = {}))[r.LOADED = 0] = "LOADED",
    r[r.STARTED = 1] = "STARTED",
    (s = o = e.AnalyticsIAPEvent || (e.AnalyticsIAPEvent = {}))[s.TAKEDAILYFREE = 0] = "TAKEDAILYFREE",
    s[s.BUYITEM = 1] = "BUYITEM",
    s[s.BUYITEMERROR = 2] = "BUYITEMERROR",
    s[s.BUYCOINS = 3] = "BUYCOINS",
    s[s.BUYCOINSERROR = 4] = "BUYCOINSERROR",
    s[s.CONSUMEITEM = 5] = "CONSUMEITEM",
    s[s.REWARDITEM = 6] = "REWARDITEM",
    s[s.REWARDCOINS = 7] = "REWARDCOINS",
    s[s.CONSUMECOINS = 8] = "CONSUMECOINS",
    (h = a = e.AnalyticsGlobalWorkflowEvent || (e.AnalyticsGlobalWorkflowEvent = {}))[h.FULLSCREEN = 0] = "FULLSCREEN",
    h[h.MUSICS = 1] = "MUSICS",
    h[h.SOUNDS = 2] = "SOUNDS",
    h[h.MOREGAMES = 3] = "MOREGAMES",
    h[h.TUTORIAL = 4] = "TUTORIAL",
    h[h.INVITE = 5] = "INVITE",
    h[h.SHARE = 6] = "SHARE",
    h[h.SHARESNAPCARD = 7] = "SHARESNAPCARD",
    h[h.CUSTOM = 8] = "CUSTOM"
}(DUST || (DUST = {})),
function(t) {
    var e = function() {
        function t(t) {
            this.logger = JL("AbstractSound"),
            this.onEndListeners = {},
            this.onEnd = function() {}
            ,
            this.muted = !1,
            this.howl = t,
            this.howl.on("end", this.onSoundEnd.bind(this))
        }
        return t.prototype._play = function(t, e) {
            var i = this.howl.play(t);
            return e && this.howl.once("end", e, i),
            i
        }
        ,
        t.prototype.pause = function(t) {
            this.howl.pause(t)
        }
        ,
        t.prototype.stop = function(t) {
            this.howl.stop(t)
        }
        ,
        t.prototype.mute = function(t) {
            this.muted = !0,
            this.howl.mute(!0, t)
        }
        ,
        t.prototype.unmute = function(t) {
            this.muted = !1,
            this.howl.mute(!1, t)
        }
        ,
        t.prototype.fade = function(t, e, i, n) {
            this.howl.fade(t, e, i, n)
        }
        ,
        t.prototype.loop = function(t) {
            this.howl.loop(t)
        }
        ,
        t.prototype.setPosition = function(t, e) {
            this.howl.seek(t, e)
        }
        ,
        t.prototype.getPosition = function() {
            return this.howl.seek()
        }
        ,
        t.prototype.setVolume = function(t, e) {
            this.howl.volume(t, e)
        }
        ,
        t.prototype.getVolume = function() {
            return this.howl.volume()
        }
        ,
        t.prototype.onSoundEnd = function(e) {
            var t = this.onEndListeners[e];
            t && t.forEach(function(t) {
                t(e)
            })
        }
        ,
        t.prototype.addOnEnd = function(t, e) {
            var i = this.onEndListeners[t];
            i || (i = new Array,
            this.onEndListeners[t] = i),
            i.push(e)
        }
        ,
        t.prototype.removeOnEnd = function(t, e) {
            var i = this.onEndListeners[t];
            if (i) {
                var n = i.indexOf(e);
                -1 < n && i.splice(n, 1)
            }
        }
        ,
        t
    }();
    t.AbstractSound = e
}(DUST || (DUST = {})),
function(s) {
    var t = function() {
        function e(t) {
            this.visibilityManager = t,
            this.soundSprites = {},
            this.musics = {},
            this._enableMusics = !0,
            this._enableSoundsSprites = !0,
            this._musicWasEnable = !0,
            this._soundWasEnable = !0,
            this.musicStateChangeHandlers = new s.HandlerCollection,
            PIXI.loaders.Loader.addPixiMiddleware(this.audioSpriteMiddleware.bind(this)),
            (e.INSTANCE = this).log = JL("AudioManager"),
            this.visibilityManager.addVisibilityChangeHandler(this.onVisibilityChange.bind(this))
        }
        return e.prototype.audioSpriteMiddleware = function() {
            var o = this;
            return function(t, e) {
                if (!t.data || !t.isJson || !t.data.urls)
                    return e();
                t.data.onload = function() {
                    e()
                }
                ,
                t.data.onloaderror = function(t) {
                    o.log.warn("Sound sprite error: " + JSON.stringify(t)),
                    e()
                }
                ;
                var i = new Howl({
                    src: t.data.urls,
                    sprite: t.data.sprite
                })
                  , n = t.name.split("/")
                  , r = n[n.length - 1].split(".json")[0];
                o.getSpriteCount(t.data.sprite) <= 1 ? o.addMusic(r, new s.Music(i,t.data.sprite)) : o.addSoundSprite(r, new s.Sound(i)),
                i.on("load", function() {
                    e()
                })
            }
            .bind(this)
        }
        ,
        e.prototype.getSpriteCount = function(t) {
            if (null == t)
                return 0;
            var e = 0;
            for (var i in t)
                e++;
            return e
        }
        ,
        e.prototype.mute = function() {
            "undefined" != typeof Howler ? Howler.mute(!0) : this.log.warn("canno't mute Howler is not defined")
        }
        ,
        e.prototype.unmute = function() {
            "undefined" != typeof Howler ? Howler.mute(!1) : this.log.warn("canno't unmute Howler is not defined")
        }
        ,
        e.prototype.volume = function(t) {
            "undefined" != typeof Howler ? Howler.volume(t) : this.log.warn("canno't volume Howler is not defined")
        }
        ,
        e.prototype.addMusic = function(t, e) {
            this._enableMusics || e.mute(),
            this.musics[t] = e
        }
        ,
        e.prototype.getMusic = function(t) {
            var e = this.musics[t];
            return e || (this.log.warn("can't find music with name: " + t),
            null)
        }
        ,
        e.prototype.muteMusics = function() {
            for (var t in this.log.debug("muting musics "),
            this.musics)
                this.musics[t].mute();
            this._enableMusics = !1,
            this.musicStateChangeHandlers.fire(!1)
        }
        ,
        e.prototype.unmuteMusics = function() {
            for (var t in this.log.debug("unmuting musics "),
            this.musics)
                this.musics[t].unmute();
            this._enableMusics = !0,
            this.musicStateChangeHandlers.fire(!0)
        }
        ,
        e.prototype.volumeMusics = function(t) {
            for (var e in this.musics)
                this.musics[e].setVolume(t)
        }
        ,
        Object.defineProperty(e.prototype, "enableMusics", {
            get: function() {
                return this._enableMusics
            },
            set: function(t) {
                t ? this.unmuteMusics() : this.muteMusics()
            },
            enumerable: !0,
            configurable: !0
        }),
        e.prototype.addSoundSprite = function(t, e) {
            this.soundSprites[t] = e,
            this._enableSoundsSprites || e.mute()
        }
        ,
        e.prototype.getSoundSprite = function(t) {
            var e = this.soundSprites[t];
            return e || (this.log.warn("can't find sound sprite with name: " + t + " sprite may not be loaded yet or load failed"),
            null)
        }
        ,
        e.prototype.muteSoundSprites = function(t, e) {
            var i = this.soundSprites[t];
            null != i && (e ? i.mute() : i.unmute())
        }
        ,
        e.prototype.muteSoundsSprites = function() {
            for (var t in this.soundSprites)
                this.soundSprites[t].mute();
            this._enableSoundsSprites = !1
        }
        ,
        e.prototype.unmuteSoundsSprites = function() {
            for (var t in this.soundSprites)
                this.soundSprites[t].unmute();
            this._enableSoundsSprites = !0
        }
        ,
        e.prototype.volumeSoundsSprites = function(t) {
            for (var e in this.soundSprites)
                this.soundSprites[e].setVolume(t)
        }
        ,
        Object.defineProperty(e.prototype, "enableSoundsSprites", {
            get: function() {
                return this._enableSoundsSprites
            },
            set: function(t) {
                t ? this.unmuteSoundsSprites() : this.muteSoundsSprites()
            },
            enumerable: !0,
            configurable: !0
        }),
        e.prototype.onVisibilityChange = function(t) {
            t ? (this.enableMusics = this._musicWasEnable,
            this.enableSoundsSprites = this._soundWasEnable) : (this._musicWasEnable = this._enableMusics,
            this._soundWasEnable = this._enableSoundsSprites,
            this.muteMusics(),
            this.muteSoundsSprites())
        }
        ,
        e.getInstance = function() {
            return e.INSTANCE
        }
        ,
        e
    }();
    s.AudioManager = t
}(DUST || (DUST = {})),
function(t) {
    var e = function(r) {
        function t(t, e) {
            var i = r.call(this, t) || this;
            if (i.spriteName = void 0,
            null != e)
                for (var n in e) {
                    i.spriteName = n;
                    break
                }
            return i
        }
        return __extends(t, r),
        t.prototype.play = function(t, e) {
            var i = r.prototype._play.call(this, this.spriteName, e);
            return t && t(i),
            i
        }
        ,
        t
    }(t.AbstractSound);
    t.Music = e
}(DUST || (DUST = {})),
function(t) {
    var e = function(r) {
        function t(t) {
            return r.call(this, t) || this
        }
        return __extends(t, r),
        t.prototype.play = function(t, e, i) {
            var n = r.prototype._play.call(this, t, i);
            return e && e(n),
            n
        }
        ,
        t
    }(t.AbstractSound);
    t.Sound = e
}(DUST || (DUST = {})),
function(e) {
    var t = function() {
        function i() {}
        return i.InitTickcount = function() {
            if (!i.updatable) {
                i.tickcount = 0,
                i.updatable = !0;
                var t = new i;
                e.Game.get().addUpdatable(t)
            }
        }
        ,
        i.everyXTick = function(t) {
            return t = Math.max(1, t),
            Math.floor(i.tickcount / t) == i.tickcount / t
        }
        ,
        i.mod = function(t, e) {
            if (0 < e)
                for (; e <= t; )
                    t -= e;
            return t
        }
        ,
        i.limited = function(t, e, i) {
            return Math.max(t, Math.min(e, i))
        }
        ,
        i.angle = function(t, e, i, n) {
            return Math.atan2(n - e, i - t)
        }
        ,
        i.degToRad = function(t) {
            return t < 0 && (t = 360 - Math.abs(t) % 360),
            360 < t && (t %= 360),
            t * Math.PI / 180
        }
        ,
        i.radToDeg = function(t) {
            return 180 * t / Math.PI
        }
        ,
        i.choose = function(t) {
            return t[Math.min(t.length - 1, Math.floor(Math.random() * t.length))]
        }
        ,
        i.distance = function(t, e, i, n) {
            var r = i - t
              , o = n - e;
            return Math.sqrt(r * r + o * o)
        }
        ,
        i.rgb = function(t, e, i, n) {
            var r = 0;
            return n || (n = 0),
            r += Math.max(0, Math.min(255, n + Math.floor(i))),
            r += 16 * Math.max(0, Math.min(255, n + Math.floor(e))) * 16,
            r += 16 * Math.max(0, Math.min(255, n + Math.floor(t))) * 16 * 16 * 16
        }
        ,
        i.colorStringToTint = function(t) {
            var e = 0;
            return "red" == t && (e = i.rgb(255, 0, 0)),
            "blue" == t && (e = i.rgb(0, 0, 255)),
            "green" == t && (e = i.rgb(0, 255, 0)),
            "yellow" == t && (e = i.rgb(255, 255, 0)),
            "white" == t && (e = i.rgb(255, 255, 255)),
            "brown" == t && (e = i.rgb(139, 69, 19)),
            e
        }
        ,
        i.prototype.update = function(t) {
            i.tickcount++,
            i.dt = t / 1e3
        }
        ,
        i
    }();
    e.CFunction = t
}(DUST || (DUST = {})),
function(o) {
    var t = function() {
        function t() {
            this.max = 1,
            this.min = -1,
            this.initValue = 0,
            this.value = 0,
            this.signe = 1,
            this.speed = 1,
            o.Game.get().addUpdatable(this)
        }
        return t.newSine = function(t, e, i, n) {
            var r = new o.CSine;
            return r.initValue = t,
            r.max = Math.max(i, e),
            r.min = Math.min(i, e),
            r.speed = (i - e) / 2,
            (n || 0 == n) && (r.speed = n),
            r
        }
        ,
        t.prototype.update = function(t) {
            t /= 1e3,
            this.value = o.CFunction.limited(this.min, this.value + this.speed * this.signe * t, this.max),
            this.value == this.min && (this.signe = 1),
            this.value == this.max && (this.signe = -1)
        }
        ,
        t
    }();
    o.CSine = t
}(DUST || (DUST = {})),
function(s) {
    var t = function() {
        function o() {
            this.showCursor = !0,
            this._interactive = !1,
            this._hasInteractiveChild = !1,
            o._idCount++,
            this._id = o._idCount,
            this._debugId = "DisplayObject-" + this._id
        }
        return o.prototype.setPosition = function(t) {
            this._wrapped.position = this.toPixiPoint(t)
        }
        ,
        o.prototype.getPosition = function() {
            return this.fromPixiPoint(this._wrapped.position)
        }
        ,
        o.prototype.setPivot = function(t) {
            this._wrapped.pivot = this.toPixiPoint(t)
        }
        ,
        o.prototype.setScale = function(t) {
            this._wrapped.scale = this.toPixiPoint(t),
            this._clearWidthHeightCache()
        }
        ,
        o.prototype.updateTransform = function() {
            this._wrapped.updateTransform()
        }
        ,
        o.prototype.generateTexture = function(t, e, i) {
            var n = new s.Texture;
            return n._texture = this._wrapped.generateTexture(t, i, e),
            n
        }
        ,
        o.prototype.generateTextureWithId = function(t, e, i, n) {
            var r = new s.Texture;
            return r._texture = this._wrapped.generateTexture(e, n, i),
            o.addTextureGenerated(r, t),
            r
        }
        ,
        o.addTextureGenerated = function(t, e) {
            null == o.textureGenerated && (o.textureGenerated = {}),
            o.textureGenerated[e] ? o.textureGenerated[e].push(t) : o.textureGenerated[e] = [t]
        }
        ,
        o.destroyTextureGenerated = function(t) {
            for (var e = o.textureGenerated ? o.textureGenerated[t] : null, i = e ? e.length : 0, n = 0; n < i; n++) {
                var r = e[n];
                r && null != r._texture && (r._texture.destroy(!0),
                r._texture = null)
            }
            e && delete o.textureGenerated[t]
        }
        ,
        o.prototype.onDetach = function() {
            null != this._detachListener && this._detachListener.fire()
        }
        ,
        o.prototype.onAttach = function() {
            null != this._attachListener && this._attachListener.fire()
        }
        ,
        o.prototype.removeSelf = function() {
            return null != this._parent && null != this._parent.removeChild(this)
        }
        ,
        o.prototype.getDebugId = function() {
            return this._debugId
        }
        ,
        o.prototype.setDebugId = function(t, e) {
            void 0 === e && (e = !1),
            this._debugId = t,
            e && (this._debugId += this._id)
        }
        ,
        o.prototype.isOrphan = function(t) {
            return void 0 === t && (t = !1),
            null == this.parent || !!t && this.parent.isOrphan(!0)
        }
        ,
        Object.defineProperty(o.prototype, "buttonMode", {
            get: function() {
                return this._wrapped.buttonMode
            },
            set: function(t) {
                this._wrapped.buttonMode = t
            },
            enumerable: !0,
            configurable: !0
        }),
        o.prototype.hitPoint = function(t) {
            if (null == this._hitArea)
                return this.containsLocalPoint(t);
            var e = this._hitArea.copy();
            return e.x += this.x - this.pivotX,
            e.y += this.y - this.pivotY,
            e.containsPoint(t)
        }
        ,
        o.prototype.containsLocalPoint = function(t) {
            return !1
        }
        ,
        o.prototype.toGlobal = function(t, e) {
            void 0 === t && (t = 0),
            void 0 === e && (e = 0);
            var i = new PIXI.Point(t,e)
              , n = this._wrapped.toGlobal(i);
            return this.fromPixiPoint(n)
        }
        ,
        o.prototype.toGlobalPt = function(t) {
            return this.toGlobal(t.x, t.y)
        }
        ,
        o.prototype.toLocal = function(t, e) {
            void 0 === t && (t = 0),
            void 0 === e && (e = 0);
            var i = new PIXI.Point(t,e)
              , n = this._wrapped.toLocal(i);
            return this.fromPixiPoint(n)
        }
        ,
        o.prototype.toLocalPt = function(t) {
            return this.toLocal(t.x, t.y)
        }
        ,
        o.prototype.getWorldTransformScaleX = function() {
            return this._wrapped.worldTransform.a
        }
        ,
        o.prototype.getWorldTransformScaleY = function() {
            return this._wrapped.worldTransform.d
        }
        ,
        Object.defineProperty(o.prototype, "interactive", {
            get: function() {
                return this._interactive
            },
            set: function(t) {
                o.interactiveDirty = !0,
                this._interactive = t
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(o.prototype, "hitArea", {
            get: function() {
                return this._hitArea
            },
            set: function(t) {
                this._hitArea = t
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(o.prototype, "hasInteractiveChild", {
            get: function() {
                return this._hasInteractiveChild
            },
            set: function(t) {
                this._hasInteractiveChild = t
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(o, "interactiveDirty", {
            get: function() {
                return this._interactiveDirty
            },
            set: function(t) {
                this._interactiveDirty = t
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(o.prototype, "visible", {
            get: function() {
                return this._wrapped.visible
            },
            set: function(t) {
                this._wrapped.visible = t,
                this._clearWidthHeightCache()
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(o.prototype, "mask", {
            set: function(t) {
                this._wrapped.mask = null == t ? null : t._wrapped
            },
            enumerable: !0,
            configurable: !0
        }),
        o.prototype.setFilter = function(t) {
            var e = [];
            e.push(t._filter),
            this._wrapped.filters = e
        }
        ,
        o.prototype.setFilters = function(t) {
            var e = [];
            t.forEach(function(t) {
                e.push(t._filter)
            }),
            this._wrapped.filters = e
        }
        ,
        o.prototype.onClick = function(t, e) {
            this.interactive = !0,
            this.clickHandler.clear(),
            null != t && this.clickHandler.add(t, e)
        }
        ,
        o.prototype.onImmediateClick = function(t, e) {
            return this.interactive = !0,
            this.immediateClickHandler.clear(),
            this.immediateClickHandler.add(t, e)
        }
        ,
        o.prototype.hasDownHandler = function() {
            return null != this._downHandler && 0 < this._downHandler.length
        }
        ,
        o.prototype.hasUpHandler = function() {
            return null != this._upHandler && 0 < this._upHandler.length
        }
        ,
        o.prototype.hasOverHandler = function() {
            return null != this._overHandler && 0 < this._overHandler.length
        }
        ,
        o.prototype.hasOutHandler = function() {
            return null != this._outHandler && 0 < this._outHandler.length
        }
        ,
        o.prototype.hasClickHandler = function() {
            return null != this._clickHandler && 0 < this._clickHandler.length
        }
        ,
        o.prototype.hasImmediateClickHandler = function() {
            return null != this._immediateClickHandler && 0 < this._immediateClickHandler.length
        }
        ,
        Object.defineProperty(o.prototype, "downHandler", {
            get: function() {
                return null == this._downHandler && (this._downHandler = new s.HandlerCollection),
                this._downHandler
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(o.prototype, "upHandler", {
            get: function() {
                return null == this._upHandler && (this._upHandler = new s.HandlerCollection),
                this._upHandler
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(o.prototype, "overHandler", {
            get: function() {
                return null == this._overHandler && (this._overHandler = new s.HandlerCollection),
                this._overHandler
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(o.prototype, "outHandler", {
            get: function() {
                return null == this._outHandler && (this._outHandler = new s.HandlerCollection),
                this._outHandler
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(o.prototype, "clickHandler", {
            get: function() {
                return null == this._clickHandler && (this._clickHandler = new s.HandlerCollection),
                this._clickHandler
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(o.prototype, "immediateClickHandler", {
            get: function() {
                return null == this._immediateClickHandler && (this._immediateClickHandler = new s.HandlerCollection),
                this._immediateClickHandler
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(o.prototype, "detachListener", {
            get: function() {
                return null == this._detachListener && (this._detachListener = new s.HandlerCollection),
                this._detachListener
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(o.prototype, "attachListener", {
            get: function() {
                return null == this._attachListener && (this._attachListener = new s.HandlerCollection),
                this._attachListener
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(o.prototype, "x", {
            get: function() {
                return this._wrapped.x
            },
            set: function(t) {
                this._wrapped.x = t
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(o.prototype, "y", {
            get: function() {
                return this._wrapped.y
            },
            set: function(t) {
                this._wrapped.y = t
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(o.prototype, "alpha", {
            get: function() {
                return this._wrapped.alpha
            },
            set: function(t) {
                this._wrapped.alpha = t
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(o.prototype, "scaleX", {
            get: function() {
                return this._wrapped.scale.x
            },
            set: function(t) {
                this._wrapped.scale.x = t,
                this._clearWidthHeightCache()
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(o.prototype, "scaleY", {
            get: function() {
                return this._wrapped.scale.y
            },
            set: function(t) {
                this._wrapped.scale.y = t,
                this._clearWidthHeightCache()
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(o.prototype, "scaleXY", {
            get: function() {
                return this.scaleX
            },
            set: function(t) {
                t != this._wrapped.scale.x && (this._wrapped.scale.x = t,
                this._wrapped.scale.y = t,
                this._clearWidthHeightCache())
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(o.prototype, "pivotX", {
            get: function() {
                return this._wrapped.pivot.x
            },
            set: function(t) {
                this._wrapped.pivot.x = t
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(o.prototype, "pivotY", {
            get: function() {
                return this._wrapped.pivot.y
            },
            set: function(t) {
                this._wrapped.pivot.y = t
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(o.prototype, "positionX", {
            get: function() {
                return this._wrapped.position.x
            },
            set: function(t) {
                this._wrapped.position.x = t
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(o.prototype, "positionY", {
            get: function() {
                return this._wrapped.position.y
            },
            set: function(t) {
                this._wrapped.position.y = t
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(o.prototype, "parent", {
            get: function() {
                return this._parent
            },
            set: function(t) {
                throw new Error("parent is readonly")
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(o.prototype, "cacheAsBitmap", {
            get: function() {
                return this._wrapped.cacheAsBitmap
            },
            set: function(t) {
                this._wrapped.cacheAsBitmap = t
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(o.prototype, "rotation", {
            get: function() {
                return this._wrapped.rotation
            },
            set: function(t) {
                this._wrapped.rotation != t && (this._wrapped.rotation = t,
                this._clearWidthHeightCache())
            },
            enumerable: !0,
            configurable: !0
        }),
        o.prototype.toPixiPoint = function(t) {
            return new PIXI.Point(t.x,t.y)
        }
        ,
        o.prototype.toPixiRectangle = function(t) {
            return new PIXI.Rectangle(t.x,t.y,t.width,t.height)
        }
        ,
        o.prototype.fromPixiRectangle = function(t) {
            return new s.Rectangle(t.x,t.y,t.width,t.height)
        }
        ,
        o.prototype.fromPixiPoint = function(t) {
            return new s.Point(t.x,t.y)
        }
        ,
        o.prototype._clearWidthHeightCache = function() {}
        ,
        o.prototype.destroy = function() {
            this._wrapped.destroy()
        }
        ,
        o._interactiveDirty = !1,
        o.textureGenerated = null,
        o._idCount = 0,
        o
    }();
    s.DisplayObject = t
}(DUST || (DUST = {})),
function(r) {
    var t = function(n) {
        function o(t, e) {
            var i = n.call(this) || this;
            return i._isRoot = !1,
            i.children = [],
            i._cWidth = null,
            i._cHeight = null,
            i._wrapped = new PIXI.Container,
            i._debugId = "Container-" + i._id,
            t && e ? i.addChild(new r.BlankSprite(t,e)) : t ? i.addChild(new r.BlankSprite(t,1)) : e && i.addChild(new r.BlankSprite(1,e)),
            i
        }
        return __extends(o, n),
        o.prototype.cast = function() {
            return this._wrapped
        }
        ,
        o.prototype.updateTransform = function() {
            this._isRoot || n.prototype.updateTransform.call(this)
        }
        ,
        o.prototype.addChild = function(t) {
            return this.addChildAt(t, this.children.length)
        }
        ,
        o.prototype.addChildAt = function(t, e) {
            if (t._parent) {
                if (t._parent == this)
                    throw new Error("Child already in container. Use setChildIndex.");
                t._parent.removeChild(t)
            }
            return this.children.splice(e, 0, t),
            (t._parent = this).cast().addChildAt(t._wrapped, e),
            t.onAttach(),
            this._clearWidthHeightCache(),
            t
        }
        ,
        o.prototype.removeChild = function(t) {
            var e = this.children.indexOf(t);
            if (-1 !== e)
                return this.removeChildAt(e)
        }
        ,
        o.prototype.removeChildAt = function(t) {
            var e = this.getChildAt(t);
            return e._parent = null,
            e.onDetach(),
            this.children.splice(t, 1),
            this.cast().removeChildAt(t),
            this._clearWidthHeightCache(),
            e
        }
        ,
        o.prototype.removeChildren = function(t, e) {
            var i = null == t ? 0 : t
              , n = (null == e ? this.children.length : e) - i;
            if (n <= 0)
                return [];
            for (var r = this.children.splice(i, n), o = 0; o < r.length; o++) {
                var s = r[o];
                s._parent = null,
                s.onDetach()
            }
            return this.cast().removeChildren(t, e),
            this._clearWidthHeightCache(),
            r
        }
        ,
        o.prototype.getChildIndex = function(t) {
            return this.children.indexOf(t)
        }
        ,
        o.prototype.setChildIndex = function(t, e) {
            var i = this.getChildIndex(t);
            i != e && (this.children.splice(i, 1),
            this.children.splice(e, 0, t),
            this.cast().setChildIndex(t._wrapped, e))
        }
        ,
        o.prototype.setRoot = function(t) {
            this._isRoot = t
        }
        ,
        o.prototype.isRoot = function() {
            return this._isRoot
        }
        ,
        o.prototype.isOrphan = function(t) {
            return void 0 === t && (t = !1),
            !this._isRoot && n.prototype.isOrphan.call(this, t)
        }
        ,
        o.prototype.onDetach = function() {
            n.prototype.onDetach.call(this);
            for (var t = this.children.length, e = 0; e < t; e++)
                this.children[e].onDetach()
        }
        ,
        o.prototype.getChildAt = function(t) {
            return this.children[t]
        }
        ,
        o.prototype.getChildrenCount = function() {
            return this.children.length
        }
        ,
        o.prototype.getCenter = function() {
            var t = this.getBounds();
            return new r.Point(t.x + Math.round(t.width / 2),t.y + Math.round(t.height / 2))
        }
        ,
        o.prototype.getLocalCenter = function() {
            var t = this.getLocalBounds();
            return new r.Point(t.x + Math.round(t.width / 2),t.y + Math.round(t.height / 2))
        }
        ,
        o.prototype.getBounds = function() {
            var t = this.cast().getBounds();
            return this.fromPixiRectangle(t)
        }
        ,
        o.prototype.getBoundsFromOriginPoint = function(t) {
            var e = this.cast().getBounds()
              , i = this.fromPixiRectangle(e);
            return i.x = i.x - t.x,
            i.y = i.y - t.y,
            i
        }
        ,
        o.prototype.getLocalBounds = function() {
            var t = this.cast().getLocalBounds();
            return this.fromPixiRectangle(t)
        }
        ,
        o.prototype.containsLocalPoint = function(t) {
            var e = this.x - this.pivotX * this.scaleX
              , i = this.y - this.pivotY * this.scaleY;
            return t.x >= e && t.x <= e + this.width && (t.y >= i && t.y <= i + this.height)
        }
        ,
        o.prototype.centerIn = function(t, e) {
            void 0 === e && (e = !1);
            var i = Math.round((t.width - this.width) / 2)
              , n = Math.round((t.height - this.height) / 2);
            this.x = t.x + i,
            this.y = t.y + n,
            e && (this.x = this.x - this.getLocalBounds().x,
            this.y = this.y - this.getLocalBounds().y)
        }
        ,
        o.prototype.centerInOnX = function(t) {
            var e = Math.round((t.width - this.width) / 2);
            this.x = e
        }
        ,
        o.prototype.centerInOnY = function(t) {
            var e = Math.round((t.height - this.height) / 2);
            this.y = e
        }
        ,
        o.prototype.centerOnXObject = function(t, e) {
            void 0 === e && (e = !0);
            var i = Math.round((t.width - this.width) / 2);
            this.x = e ? t.x + i : i
        }
        ,
        o.prototype.centerOnYObject = function(t, e) {
            void 0 === e && (e = !0);
            var i = Math.round((t.height - this.height) / 2);
            this.y = e ? t.y + i : i
        }
        ,
        o.prototype.centerAt = function(t, e) {
            void 0 === e && (e = !1),
            this.x = t.x - Math.round(this.width / 2),
            this.y = t.y - Math.round(this.height / 2),
            e && (this.x = this.x - this.getLocalBounds().x,
            this.y = this.y - this.getLocalBounds().y)
        }
        ,
        o.prototype.setPivotToCenter = function(t) {
            void 0 === t && (t = !1);
            var e = this.getLocalBounds();
            this.pivotX = e.width / 2,
            this.pivotY = e.height / 2,
            t && (this.x = this.x + this.width / 2,
            this.y = this.y + this.height / 2)
        }
        ,
        Object.defineProperty(o.prototype, "width", {
            get: function() {
                return null == this._cWidth && (this._cWidth = this.cast().width),
                this._cWidth
            },
            set: function(t) {
                this._clearWidthHeightCache(),
                this.cast().width = t
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(o.prototype, "height", {
            get: function() {
                return null == this._cHeight && (this._cHeight = this.cast().height),
                this._cHeight
            },
            set: function(t) {
                this._clearWidthHeightCache(),
                this.cast().height = t
            },
            enumerable: !0,
            configurable: !0
        }),
        o.prototype._clearWidthHeightCache = function() {
            this._cWidth = null,
            (this._cHeight = null) != this._parent && this._parent._clearWidthHeightCache()
        }
        ,
        o.prototype._addDebugBorder = function() {
            var t = new r.Graphics;
            t.lineStyle(1, 16711867, 1),
            t.moveTo(0, 0),
            t.lineTo(this.width, 0),
            t.lineTo(this.width, this.height),
            t.lineTo(0, this.height),
            t.lineTo(0, 0),
            this.addChild(t)
        }
        ,
        o.prototype._outputToConsole = function(t, e) {
            void 0 === e && (e = []);
            for (var i = "", n = 0; n < t; n++)
                i += "  ";
            for (n = 0; n < this.children.length; n++) {
                var r = this.children[n];
                console.log(i + this.getDebugPropertyString(r, e)),
                r instanceof o && r._outputToConsole(t++, e)
            }
        }
        ,
        o.prototype._countElements = function() {
            for (var t = 1, e = 0; e < this.children.length; e++) {
                var i = this.children[e];
                t += i instanceof o ? i._countElements() : 1
            }
            return t
        }
        ,
        o.prototype.getDebugPropertyString = function(e, t) {
            var i = e.getDebugId() + " ";
            return t.forEach(function(t) {
                i += t + "=" + e[t] + " "
            }),
            i
        }
        ,
        o.prototype.addDebugBorder = function(t) {
            void 0 === t && (t = 65467);
            var e = new r.Graphics;
            e.lineStyle(5, t, 1);
            var i = this.getLocalBounds();
            e.drawRect(i.x, i.y, i.width, i.height),
            e.endFill(),
            this.addChild(e)
        }
        ,
        o
    }(r.DisplayObject);
    r.Container = t
}(DUST || (DUST = {})),
function(s) {
    var t = function(n) {
        function o(t) {
            var e = n.call(this) || this;
            return null != t && (e._texture = t,
            e._wrapped = new PIXI.Sprite(t._texture),
            e._resetWidthHeightOnTextureLoaded()),
            e._debugId = "Sprite-" + e._id,
            e
        }
        return __extends(o, n),
        o.fromFrame = function(t, e) {
            void 0 === e && (e = 1);
            var i = new o
              , n = PIXI.Sprite.fromFrame(t);
            return i._wrapped = n,
            i._texture = new s.Texture,
            i._texture._texture = n.texture,
            i._resetWidthHeightOnTextureLoaded(),
            1 != e && (i.scaleXY = e),
            i
        }
        ,
        o.prototype.setBlendMode = function(t) {
            this.cast().blendMode = t
        }
        ,
        o.fromImage = function(t, e, i) {
            var n = new o
              , r = PIXI.Sprite.fromImage(t, e, i);
            return n._wrapped = r,
            n._texture = new s.Texture,
            n._texture._texture = r.texture,
            n._resetWidthHeightOnTextureLoaded(),
            n
        }
        ,
        o.fromTexture = function(t) {
            return new o(t)
        }
        ,
        o.prototype.cast = function() {
            return this._wrapped
        }
        ,
        o.prototype._resetWidthHeightOnTextureLoaded = function() {
            if (null != this.cast().texture && null != this.cast().texture.baseTexture) {
                var t = this.cast().texture.baseTexture;
                t.hasLoaded ? this._clearWidthHeightCache() : t.once("loaded", function() {
                    this._clearWidthHeightCache()
                }, this)
            }
        }
        ,
        o.prototype.setAnchorToCenter = function() {
            this.anchorX = .5,
            this.anchorY = .5
        }
        ,
        o.prototype.setAnchor = function(t) {
            this.cast().anchor = new PIXI.Point(t.x,t.y)
        }
        ,
        o.prototype.setTexture = function(t) {
            this.cast().texture = t._texture,
            this._clearWidthHeightCache()
        }
        ,
        o.prototype.setFrame = function(t) {
            this.cast().texture = PIXI.Texture.fromFrame(t),
            this._clearWidthHeightCache()
        }
        ,
        o.prototype.containsLocalPoint = function(t) {
            if (!this.texture)
                return !1;
            if (!this.texture || 0 == this.anchorX && 0 == this.anchorY)
                return n.prototype.containsLocalPoint.call(this, t);
            var e = this.x - this.width * this.anchorX;
            if (t.x >= e && t.x <= e + this.width) {
                var i = this.y - this.height * this.anchorY;
                return t.y >= i && t.y <= i + this.height
            }
            return !1
        }
        ,
        o.prototype.onLoaded = function(t, e) {
            this.cast().texture.baseTexture.hasLoaded ? t.apply(e) : this.onBaseTexture("loaded", t, e)
        }
        ,
        o.prototype.onTexture = function(t, e, i) {
            this.cast().texture.on(t, e, i)
        }
        ,
        o.prototype.onBaseTexture = function(t, e, i) {
            this.cast().texture.baseTexture.on(t, e, i)
        }
        ,
        Object.defineProperty(o.prototype, "texture", {
            get: function() {
                return this._texture
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(o.prototype, "tint", {
            get: function() {
                return this.cast().tint
            },
            set: function(t) {
                this.cast().tint = t
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(o.prototype, "anchorX", {
            get: function() {
                return this.cast().anchor.x
            },
            set: function(t) {
                this.cast().anchor.x = t
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(o.prototype, "anchorY", {
            get: function() {
                return this.cast().anchor.y
            },
            set: function(t) {
                this.cast().anchor.y = t
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(o.prototype, "rotation", {
            get: function() {
                return this.cast().rotation
            },
            set: function(t) {
                this.cast().rotation = t,
                this._clearWidthHeightCache()
            },
            enumerable: !0,
            configurable: !0
        }),
        o.prototype.getBase64 = function() {
            var t = new s.RenderTexture(s.Game.get().renderer,this.width,this.height);
            return t.render(this),
            t.getBase64()
        }
        ,
        o.prototype.destroy = function(t, e) {
            t && this.texture.destroy(e),
            this.cast().destroy(t, e)
        }
        ,
        o
    }(s.Container);
    s.Sprite = t
}(DUST || (DUST = {})),
function(t) {
    var e = function(i) {
        function r(t) {
            var e = i.call(this, t) || this;
            return e.InstantData = {},
            r.spriteList.push(e),
            e.sineList = [],
            e
        }
        return __extends(r, i),
        r.pickAll = function() {
            for (var t = [], e = 0; e < r.spriteList.length; e++)
                t.push(r.spriteList[e]);
            return t
        }
        ,
        r.newFilter = function(t) {
            for (var e = [], i = 0; i < r.spriteList.length; i++) {
                var n = r.spriteList[i];
                1 == t(n) && e.push(n)
            }
            return e
        }
        ,
        r.reduce = function(t, e) {
            for (var i = 0; e[i]; i++) {
                1 != t(e[i]) && (e.splice(i, 1),
                i--)
            }
        }
        ,
        r.apply = function(t, e, i) {
            if (e)
                for (var n = 0; n < e.length; n++)
                    e[n] && (i ? 1 == i(e[n]) && t(e[n]) : t(e[n]))
        }
        ,
        r.prototype.destroy = function() {
            for (var t = 0; r.spriteList[t]; t++)
                if (r.spriteList[t]._id == this._id) {
                    r.spriteList.splice(t, 1),
                    this.removeSelf();
                    break
                }
        }
        ,
        Object.defineProperty(r.prototype, "middelX", {
            get: function() {
                return this.x + this.width / 2
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(r.prototype, "middelY", {
            get: function() {
                return this.y + this.height / 2
            },
            enumerable: !0,
            configurable: !0
        }),
        r.spriteList = [],
        r
    }(t.Sprite);
    t.CSprite = e
}(DUST || (DUST = {})),
function(e) {
    var t = function() {
        function t() {
            this._childs = new e.HashMap,
            this._dirty = !1,
            this._root = new e.Container
        }
        return t.prototype.destroy = function() {
            this._childs.clear()
        }
        ,
        t.prototype.update = function() {
            this._dirty && (this.sortLayers(),
            this._dirty = !1)
        }
        ,
        t.prototype.getChild = function(t) {
            return this.ensureLayer(t).container
        }
        ,
        t.prototype.addChild = function(t, e) {
            void 0 === e && (e = 1);
            var i = this.ensureLayer(t);
            return i.zindex = e,
            i.container
        }
        ,
        t.prototype.removeChild = function(t) {
            var e = this._childs.remove(t);
            return null != e && this._root.removeChild(e.container),
            e.container
        }
        ,
        t.prototype.setChildIndex = function(t, e) {
            this.ensureLayer(t).zindex = e,
            this._dirty = !0
        }
        ,
        t.prototype.sortLayers = function() {
            for (var t = this._childs.values().sort(function(t, e) {
                return t.zindex - e.zindex
            }), e = 0; e < t.length; e++) {
                var i = t[e];
                this._root.setChildIndex(i.container, e)
            }
        }
        ,
        t.prototype.ensureLayer = function(t) {
            var e = this._childs.get(t);
            return null == e && (e = new i(t),
            this._root.addChild(e.container),
            this._childs.put(t, e),
            this._dirty = !0),
            e
        }
        ,
        Object.defineProperty(t.prototype, "root", {
            get: function() {
                return this._root
            },
            set: function(t) {
                throw new Error("root is read-only")
            },
            enumerable: !0,
            configurable: !0
        }),
        t
    }();
    e.ContainerGroup = t;
    var i = function(t) {
        this.container = new e.Container,
        this.container.setDebugId(t),
        this.zindex = 1,
        this.name = t
    }
}(DUST || (DUST = {})),
function(i) {
    var t = function(t) {
        function e() {
            return null !== t && t.apply(this, arguments) || this
        }
        return __extends(e, t),
        Object.defineProperty(e.prototype, "background", {
            get: function() {
                return null == this._background && (this._background = this.addChild("background", 1),
                this._background.hitArea = i.Game.get().bounds),
                this._background
            },
            set: function(t) {
                throw new Error("background is read-only")
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(e.prototype, "scene", {
            get: function() {
                return null == this._scene && (this._scene = this.addChild("scene", 100),
                this._scene.hitArea = i.Game.get().bounds),
                this._scene
            },
            set: function(t) {
                throw new Error("scene is read-only")
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(e.prototype, "gameplayHUD", {
            get: function() {
                return null == this._gameplayHUD && (this._gameplayHUD = this.addChild("gameplayHUD", 150),
                this._gameplayHUD.hitArea = i.Game.get().bounds),
                this._gameplayHUD
            },
            set: function(t) {
                throw new Error("gameplayHUD is read-only")
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(e.prototype, "sceneHUD", {
            get: function() {
                return null == this._gameplayHUD && (this._gameplayHUD = this.addChild("sceneHUD", 180),
                this._gameplayHUD.hitArea = i.Game.get().bounds),
                this._gameplayHUD
            },
            set: function(t) {
                throw new Error("sceneHUD is read-only")
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(e.prototype, "navBarLayer", {
            get: function() {
                return null == this._navBarLayer && (this._navBarLayer = this.addChild("navBarLayer", 190),
                this._navBarLayer.hitArea = i.Game.get().bounds),
                this._navBarLayer
            },
            set: function(t) {
                throw new Error("navBarLayer is read-only")
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(e.prototype, "popup", {
            get: function() {
                return null == this._popup && (this._popup = this.addChild("popup", 200),
                this._popup.hitArea = i.Game.get().bounds),
                this._popup
            },
            set: function(t) {
                throw new Error("popup is read-only")
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(e.prototype, "top", {
            get: function() {
                return null == this._top && (this._top = this.addChild("top", 300),
                this._top.hitArea = i.Game.get().bounds),
                this._top
            },
            set: function(t) {
                throw new Error("top is read-only")
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(e.prototype, "technical", {
            get: function() {
                return null == this._technical && (this._technical = this.addChild("technical", 400)),
                this._technical
            },
            set: function(t) {
                throw new Error("technical is read-only")
            },
            enumerable: !0,
            configurable: !0
        }),
        e
    }(i.ContainerGroup);
    i.GameContainerGroup = t
}(DUST || (DUST = {})),
function(s) {
    var a, t;
    (t = a = s.Orientation || (s.Orientation = {}))[t.PORTRAIT = 0] = "PORTRAIT",
    t[t.LANDSCAPE = 1] = "LANDSCAPE";
    var e = function() {
        function o(t, e, i, n) {
            void 0 === n && (n = new s.GameOption);
            var r = this;
            this._updatables = [],
            this._renderables = [],
            this.begin = function(t, e) {
                s.Time._refresh(t),
                r.onBegin(t, e)
            }
            ,
            this.update = function(t) {
                try {
                    s.Time._update(t),
                    r.inputManager.update(t),
                    r.timeManager.update(t),
                    r.physics.update(t),
                    r.tweenManager.update(t),
                    r.layers.update(),
                    r.scene && r.scene.update(t);
                    for (var e = 0; e < r._updatables.length; e++)
                        r._updatables[e].update(t)
                } catch (t) {
                    r.logger.error("Error occured in game update:" + t.message, t)
                }
            }
            ,
            this.render = function(t) {
                try {
                    r.tweenManager.render(t),
                    r.scene && r.scene.render(t);
                    for (var e = 0; e < r._renderables.length; e++)
                        r._renderables[e].render(t);
                    r.renderer.render(r.rootContainer._wrapped)
                } catch (t) {
                    r.logger.error("Error occured in game render: ", t)
                }
            }
            ,
            this.spiraling = -5,
            this.lastCatchupCount = 1,
            this.lastDecreaseCheck = 0,
            this.end = function(t, e, i) {
                if (i) {
                    var n = MainLoop.resetFrameDelta();
                    r.logger.debug("Panic. Previous frame delta of " + n + " reseted.")
                }
                r.lastCatchupCount = e
            }
            ,
            (o.GAME_INSTANCE = this).analytics = new s.Analytics(t),
            s.Analytics.sendDebugLoadingEvent("1", "create game"),
            this.logger = JL("Game"),
            this.options = n,
            this._bounds = new s.Rectangle(0,0,e,i),
            this.orientation = this.width > this.height ? a.LANDSCAPE : a.PORTRAIT,
            this.viewport = new s.ViewPort(e,i,this.orientation),
            this.timeManager = s.TimeManager.get(),
            this.deviceManager = new s.System.DeviceManager,
            this.audioManager = new s.AudioManager(this.deviceManager.visibilityManager),
            this.loader = new s.LOADER.PixiAssetLoader,
            this.tweenManager = new s.TweenManager(this),
            this.physics = new s.PhysicsManager(this),
            this.layers = new s.GameContainerGroup,
            this.rootContainer = this.layers.root,
            this.rootContainer.setDebugId("Root"),
            this.rootContainer.setRoot(!0),
            this.rootContainer.hitArea = this.bounds
        }
        return o.prototype.start = function() {
            var e = this;
            this.deviceManager.whenReady(function() {
                try {
                    s.Analytics.sendDebugLoadingEvent("2", "start game"),
                    e.start0()
                } catch (t) {
                    e.logger.error("Error occured while starting game", t)
                }
            })
        }
        ,
        o.get = function() {
            return o.GAME_INSTANCE
        }
        ,
        o.prototype.start0 = function() {
            var t = window.devicePixelRatio || 1
              , e = {
                antialiasing: !1,
                forceFXAA: !1,
                transparent: this.options.renderer.transparent,
                resolution: t,
                clearBeforeRender: !0
            };
            switch (this.options.renderer.rendererType) {
            case s.RendererType.Webgl:
                this.renderer = new PIXI.WebGLRenderer(this.viewport.width,this.viewport.height,e);
                break;
            case s.RendererType.Canvas:
                this.renderer = new PIXI.CanvasRenderer(this.viewport.width,this.viewport.height,e);
                break;
            default:
                var i = navigator.userAgent
                  , n = parseFloat(i.slice(i.indexOf("Android") + 8));
                if (!(4.2 <= n && n < 4.4)) {
                    this.renderer = PIXI.autoDetectRenderer(this.viewport.width, this.viewport.height, e);
                    break
                }
                this.renderer = new PIXI.CanvasRenderer(this.viewport.width,this.viewport.height,e)
            }
            this.scaleManager = new s.ScaleManager(this),
            document.body.appendChild(this.renderer.view),
            this.inputManager = new s.InputManager(this),
            MainLoop.setBegin(this.begin).setUpdate(this.update).setDraw(this.render).setEnd(this.end).start(),
            this.desiredSimulationTimeStep = MainLoop.getSimulationTimestep(),
            this.onCreate();
            var r = this;
            window.addEventListener("load", function() {
                r.scaleManager.resize()
            }),
            window.parent && document.addEventListener("click", function() {
                document.hasFocus() || window.focus()
            }, !1)
        }
        ,
        o.prototype.onCreate = function() {}
        ,
        o.prototype.onBegin = function(t, e) {}
        ,
        o.prototype.switchScene = function(t, e, i) {
            var n = this;
            void 0 === e && (e = !0),
            void 0 === i && (i = !0),
            this.scene ? (this._currentOrPendingScene = t,
            this.scene.hide(function() {
                n.layers.scene.removeChild(n.scene.container),
                n.pushScene(t, i)
            }, e)) : (this._currentOrPendingScene = t,
            this.pushScene(t, i))
        }
        ,
        o.prototype.pushScene = function(t, e) {
            this.logger.debug("Change scene"),
            this.scene = t,
            this.scene && (this.layers.scene.addChild(this.scene.container),
            this.scene.show(e))
        }
        ,
        o.prototype.addRenderable = function(t) {
            this._renderables.push(t)
        }
        ,
        o.prototype.removeRenderable = function(t) {
            var e = this._renderables.indexOf(t);
            -1 != e && this._renderables.splice(e, 1)
        }
        ,
        o.prototype.addUpdatable = function(t) {
            this._updatables.push(t)
        }
        ,
        o.prototype.removeUpdatable = function(t) {
            var e = this._updatables.indexOf(t);
            -1 != e && this._updatables.splice(e, 1)
        }
        ,
        o.prototype.getCurrentOrPendingScene = function() {
            return this._currentOrPendingScene
        }
        ,
        Object.defineProperty(o.prototype, "width", {
            get: function() {
                return this._bounds.width
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(o.prototype, "height", {
            get: function() {
                return this._bounds.height
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(o.prototype, "bounds", {
            get: function() {
                return this._bounds
            },
            enumerable: !0,
            configurable: !0
        }),
        o.prototype.addDebugBorder = function(t, e) {
            void 0 === t && (t = 65467),
            void 0 === e && (e = !1);
            var i = new s.Graphics;
            i.lineStyle(5, t, 1),
            i.drawRect(0, 0, this.width, this.height),
            i.endFill(),
            e && (i.moveTo(0, this.height / 2),
            i.lineTo(this.width, this.height / 2),
            i.moveTo(this.width / 2, 0),
            i.lineTo(this.width / 2, this.height)),
            this.rootContainer.addChild(i)
        }
        ,
        o
    }();
    s.Game = e
}(DUST || (DUST = {})),
function(t) {
    var e, i;
    (i = e = t.RendererType || (t.RendererType = {}))[i.Autodetect = 0] = "Autodetect",
    i[i.Canvas = 1] = "Canvas",
    i[i.Webgl = 2] = "Webgl";
    var n = function() {
        this.rendererType = e.Autodetect,
        this.transparent = !0
    };
    t.RendererOption = n;
    var r = function() {
        this.maxTouchPointer = 1
    };
    t.InputOption = r;
    var o = function() {
        this.renderer = new n,
        this.input = new r
    };
    t.GameOption = o
}(DUST || (DUST = {})),
function(d) {
    var t = function() {
        function t(t) {
            var e = this;
            this.enable = !0,
            this.pendingResize = !1,
            this.game = t,
            this.log = JL("DUST.ScaleManager"),
            window.addEventListener("resize", function() {
                e.pendingResize || (e.pendingResize = !0,
                window.setTimeout(function() {
                    e.resize()
                }, 250))
            }),
            window.addEventListener("deviceOrientation", function() {
                e.pendingResize || (e.pendingResize = !0,
                window.setTimeout(function() {
                    e.resize()
                }, 250))
            }),
            this.resizeHandler = new d.HandlerCollection,
            this.resize()
        }
        return t.prototype.resize = function() {
            if (this.pendingResize = !1,
            this.enable) {
                var t = window.innerWidth
                  , e = window.innerHeight;
                if (null != this.windowSizeProvider) {
                    var i = this.windowSizeProvider();
                    t = i.width,
                    e = i.height
                }
                this.log.debug("Resizing to w:" + t + " h:" + e);
                var n = this.game.renderer;
                n.view.width = t * window.devicePixelRatio,
                n.view.height = e * window.devicePixelRatio,
                n.view.style.width = t + "px",
                n.view.style.height = e + "px",
                n.resize(t, e);
                var r = this.game.viewport
                  , o = t / r.width
                  , s = e / r.height
                  , a = Math.min(o, s)
                  , h = this.game.layers.root;
                h.scaleY = h.scaleX = a;
                var l = r.width * a
                  , u = r.height * a;
                this.scale = a,
                this.offsetX = (t - l) / 2,
                this.offsetY = (e - u) / 2,
                h.x = this.offsetX,
                h.y = this.offsetY,
                this.game.screenPosition = new d.Point(this.offsetX,this.offsetY),
                window.scrollTo && window.scrollTo(0, 0);
                var c = h.x / a;
                0 == c ? (this.leftBorder = null,
                this.rightBorder = null) : (this.leftBorder = new d.Rectangle(-c,0,c,r.height),
                this.rightBorder = new d.Rectangle(r.width,0,c,r.height));
                var p = h.y / a;
                0 == h.y ? (this.topBorder = null,
                this.bottomBorder = null) : (this.topBorder = new d.Rectangle(0,-p,r.width,p),
                this.bottomBorder = new d.Rectangle(0,r.height,r.width,p)),
                this.resizeHandler.fire()
            }
        }
        ,
        t.prototype.setWindowSizeProvider = function(t) {
            this.windowSizeProvider = t
        }
        ,
        t.prototype.getAbsoluteGameSize = function() {
            var t = d.Game.get();
            return {
                width: t.width * this.scale,
                height: t.height * this.scale,
                marginX: this.offsetX,
                marginY: this.offsetY
            }
        }
        ,
        t
    }();
    d.ScaleManager = t
}(DUST || (DUST = {})),
function(t) {
    var e = function() {
        function t() {
            this._data = {},
            this._size = 0
        }
        return t.prototype.isEmpty = function() {
            return 0 == this._size
        }
        ,
        t.prototype.size = function() {
            return this._size
        }
        ,
        t.prototype.clear = function() {
            this._data = {},
            this._size = 0
        }
        ,
        t.prototype.containsKey = function(t) {
            return null != this._data[t]
        }
        ,
        t.prototype.get = function(t) {
            return this._data[t]
        }
        ,
        t.prototype.put = function(t, e) {
            var i = this._data[t];
            return this._data[t] = e,
            null == i && this._size++,
            i
        }
        ,
        t.prototype.remove = function(t) {
            var e = this._data[t];
            return null != e && (delete this._data[t],
            this._size--),
            e
        }
        ,
        t.prototype.removeValues = function(t) {
            var e = [];
            for (var i in this._data) {
                var n = this._data[i];
                null != n && n == t && e.push(i)
            }
            for (var r = 0; r < e.length; r++)
                this.remove(e[r])
        }
        ,
        t.prototype.keys = function() {
            var t = [];
            for (var e in this._data)
                t.push(e);
            return t
        }
        ,
        t.prototype.values = function() {
            var t = [];
            for (var e in this._data) {
                var i = this._data[e];
                null != i && t.push(i)
            }
            return t
        }
        ,
        t.prototype.forEach = function(t, e) {
            for (var i in this._data) {
                var n = this._data[i];
                if (null != n)
                    if (!1 === t.call(e, i, n))
                        break
            }
        }
        ,
        t.prototype.computeIfAbsent = function(t, e) {
            var i = this.get(t);
            if (null != i)
                return i;
            var n = e(t);
            return this.put(t, n),
            n
        }
        ,
        t
    }();
    t.HashMap = e
}(DUST || (DUST = {})),
function(o) {
    var t = function() {
        function t() {}
        return t.deserializeQuery = function(t) {
            var e = {};
            if (null == t || 0 == t.length)
                return e;
            for (var i = t.split("&"), n = 0; n < i.length; n++) {
                var r = i[n].split("=");
                if (2 == r.length) {
                    var o = decodeURIComponent(r[0])
                      , s = decodeURIComponent(r[1]);
                    e[o] = s
                }
            }
            return e
        }
        ,
        t.getParameterByName = function(t, e) {
            e || (e = window.location.href),
            t = t.replace(/[\[\]]/g, "\\$&");
            var i = new RegExp("[?&]" + t + "(=([^&#]*)|&|#|$)").exec(e);
            return i ? i[2] ? decodeURIComponent(i[2].replace(/\+/g, " ")) : "" : null
        }
        ,
        t.urlParametersToHashMap = function(t) {
            for (var e = new o.HashMap, i = t.substring(t.indexOf("?") + 1).split("&"), n = 0; n < i.length; n++)
                if (i[n]) {
                    var r = i[n].split("=");
                    e.put(decodeURIComponent(r[0]), decodeURIComponent(r[1]))
                }
            return e
        }
        ,
        t.getRequestParameters = function(t) {
            var e = {}
              , i = t || window.location.search;
            if (i)
                for (var n = (i = i.substr(1)).split("&"), r = 0; r < n.length; r++) {
                    var o = n[r].split("=")
                      , s = o[0]
                      , a = o[1];
                    a = decodeURIComponent(a.replace(/\+/g, " ")),
                    e[s] = a
                }
            return e
        }
        ,
        t
    }();
    o.Url = t
}(DUST || (DUST = {})),
function(t) {
    var e = function() {
        function i() {}
        return i.add = function(t, e) {
            i.params.put(t, e)
        }
        ,
        i.remove = function(t) {
            i.params.remove(t)
        }
        ,
        i.get = function(t) {
            return i.params.get(t)
        }
        ,
        i.has = function(t) {
            return i.params.containsKey(t)
        }
        ,
        i.params = t.Url.urlParametersToHashMap(document.location.href),
        i
    }();
    t.StartupParams = e
}(DUST || (DUST = {})),
function(t) {
    var e = function(t, e, i) {
        this.width = t,
        this.height = e,
        this.orientation = i
    };
    (DUST || (DUST = {})).ViewPort = e
}(),
function(e) {
    var t = function() {
        function t(t) {
            this.physicsEnabled = !1,
            this.world = t,
            this.world.addEntity(this)
        }
        return t.prototype.init = function() {}
        ,
        t.prototype.update = function(t) {}
        ,
        t.prototype.render = function(t) {
            if (this.world.debugPhysics && this.physicsEnabled && 0 != this.body.mass) {
                var e = this.body.shapes[0];
                this.renderDebugShape(e)
            }
        }
        ,
        t.prototype.renderDebugShape = function(t) {
            if (this.debugShape.clear(),
            this.debugShape.lineStyle(1, 16777215),
            t instanceof p2.Circle)
                this.debugShape.x = this.body.position[0],
                this.debugShape.y = this.body.position[1],
                this.debugShape.drawCircle(0, 0, t.radius);
            else if (t instanceof p2.Rectangle) {
                var e = t;
                this.debugShape.x = this.body.position[0] - e.width / 2,
                this.debugShape.y = this.body.position[1] - e.height / 2,
                this.debugShape.drawRect(0, 0, e.width, e.height)
            }
        }
        ,
        t.prototype.attach = function(t, e) {
            void 0 === e && (e = "default"),
            this.displayObject = t,
            this.world.getLayer(e).addChild(t)
        }
        ,
        t.prototype.detach = function(t, e) {
            void 0 === e && (e = "default"),
            this.physicsEnabled = !1,
            this.displayObject = null,
            this.world.getLayer(e).removeChild(t)
        }
        ,
        t.prototype.enablePhysics = function() {
            if (this.world.physics.addBody(this.body),
            this.world.addToPhysics(this),
            this.world.debugPhysics && this.body) {
                var t = this.body.shapes[0];
                this.debugShape = new e.Graphics,
                this.world.getLayer().addChild(this.debugShape),
                this.renderDebugShape(t)
            }
            this.physicsEnabled = !0
        }
        ,
        t.prototype.disablePhysics = function() {
            this.world.debugPhysics && this.body && this.debugShape && this.world.getLayer().removeChild(this.debugShape),
            this.world.physics.removeBody(this.body),
            this.physicsEnabled = !1,
            this.world.removeFromPhysics(this)
        }
        ,
        t
    }();
    e.Entity = t
}(DUST || (DUST = {})),
function(e) {
    var t = function() {
        function t(t) {
            this._entities = [],
            this.physicsEnabled = !1,
            this.physicsSubSteps = 10,
            this.debugPhysics = !1,
            this.game = t,
            this._limitLeft = 0,
            this._limitTop = 0,
            this._limitRight = t.width,
            this._limitBottom = t.height,
            this._bounds = new e.Rectangle(0,0,t.width,t.height),
            this._layers = new e.ContainerGroup,
            this._layers.getChild("default"),
            this._container = this._layers.root,
            this._camera = new e.Camera(this._container,0,0,t.width,t.height),
            this._camera.setLimits(this._limitRight, this._limitTop, this._limitRight, this._limitBottom)
        }
        return t.prototype.update = function(t) {
            if (this.physicsEnabled)
                for (var e = t / 1e3, i = 0; i < this.physicsSubSteps; i++)
                    this.physics.step(e / this.physicsSubSteps);
            var n = this._entities.length;
            for (i = 0; i < n; i++)
                this._entities[i].update(t);
            this._camera.update(t),
            this._layers.update()
        }
        ,
        t.prototype.render = function(t) {
            for (var e = this._entities.length, i = 0; i < e; i++)
                this._entities[i].render(t)
        }
        ,
        t.prototype.addEntity = function(t) {
            this._entities.push(t)
        }
        ,
        t.prototype.getLayer = function(t) {
            return void 0 === t && (t = "default"),
            this._layers.getChild(t)
        }
        ,
        t.prototype.removeLayer = function(t) {
            return this._layers.removeChild(t)
        }
        ,
        t.prototype.setLayerZIndex = function(t, e) {
            this._layers.setChildIndex(t, e)
        }
        ,
        t.prototype.getBounds = function() {
            return this._bounds
        }
        ,
        Object.defineProperty(t.prototype, "limitLeft", {
            get: function() {
                return this._limitLeft
            },
            set: function(t) {
                this._limitLeft = t,
                this._camera.limitLeft = this._limitLeft
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "limitRight", {
            get: function() {
                return this._limitRight
            },
            set: function(t) {
                this._limitRight = t,
                this._camera.limitRight = this._limitRight
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "limitTop", {
            get: function() {
                return this._limitTop
            },
            set: function(t) {
                this._limitTop = t,
                this._camera.limitTop = this._limitTop
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "limitBottom", {
            get: function() {
                return this._limitBottom
            },
            set: function(t) {
                this._limitBottom = t,
                this._camera.limitBottom = this._limitBottom
            },
            enumerable: !0,
            configurable: !0
        }),
        t.prototype.setLimits = function(t, e, i, n) {
            this.limitLeft = t,
            this.limitRight = i,
            this.limitTop = e,
            this.limitBottom = n
        }
        ,
        Object.defineProperty(t.prototype, "container", {
            get: function() {
                return this._container
            },
            set: function(t) {
                throw new Error("container is read-only")
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "camera", {
            get: function() {
                return this._camera
            },
            set: function(t) {
                throw new Error("camera is read-only")
            },
            enumerable: !0,
            configurable: !0
        }),
        t.prototype.enablePhysics = function(t) {
            this.physics = new p2.World(t),
            this.entitiesByBody = new e.HashMap
        }
        ,
        t.prototype.addToPhysics = function(t) {
            this.entitiesByBody.put(t.body.id.toString(), t)
        }
        ,
        t.prototype.removeFromPhysics = function(t) {
            this.entitiesByBody.remove(t.body.id.toString())
        }
        ,
        t.prototype.getEntityForBody = function(t) {
            return this.entitiesByBody.get(t.id.toString())
        }
        ,
        t
    }();
    e.World = t
}(DUST || (DUST = {})),
function(r) {
    var t = function(n) {
        function i(t, e) {
            void 0 === e && (e = "");
            var i = n.call(this, t[0]) || this;
            return i.id = e,
            i.fps = 1e3 / 60,
            i.curIndex = 0,
            i.textures = [],
            i.playing = !1,
            i.startTime = 0,
            i.startFrame = 0,
            i.transitions = 0,
            i.forward = !0,
            i.animationSpeed = 1,
            i.from = 0,
            i.to = 0,
            i.repeats = 0,
            t.forEach(function(t) {
                this.textures.push(t)
            }, i),
            i.detachListener.once(i.stop, i),
            i
        }
        return __extends(i, n),
        i.fromFrames = function(t, e) {
            return new i(r.Texture.fromFrames(t),e)
        }
        ,
        i.fromTextures = function(t, e) {
            return new i(t,e)
        }
        ,
        i.prototype.destroy = function(t, e) {
            this.stop(),
            t && this.textures.forEach(function(t) {
                t.destroy(e)
            }),
            n.prototype.destroy.call(this, t, e),
            this.textures = null,
            this.onEnd = null
        }
        ,
        i.prototype.setTextures = function(t) {
            this.setTextures2(r.Texture.fromFrames(t))
        }
        ,
        i.prototype.setTextures2 = function(t) {
            var e = this.isPlaying();
            1 == e && this.stop(),
            this.textures = t,
            this.gotoAndStop(0),
            1 == e && this.play()
        }
        ,
        i.prototype.setFrameIndex = function(t) {
            var e = this.textures[t];
            this.setTexture(e),
            0 == this.playing && (this.playing = !0)
        }
        ,
        i.prototype.setActiveFrame = function(t) {
            if (!(null == t || t < 0)) {
                var e = t % this.totalFrames;
                if (e != this.curIndex) {
                    this.curIndex = e,
                    this.transitions--;
                    var i = this.from + this.curIndex % this.totalFrames;
                    this.setFrameIndex(i)
                }
            }
        }
        ,
        i.prototype.gotoAndStop = function(t) {
            this.setFrameIndex(t),
            this.playing = !1
        }
        ,
        i.prototype.gotoAndPlay = function(t) {
            this.setFrameIndex(t)
        }
        ,
        i.prototype.autoUpdade = function(t) {
            console.log("DEPRECATED  play already auto-update")
        }
        ,
        i.prototype.start = function() {
            console.log("DEPRECATED use play"),
            this.play()
        }
        ,
        i.prototype.update = function(t) {
            if (this.playing) {
                var e = Math.floor((r.Time.now() - this.startTime) / this.fps);
                e = Math.floor(e * this.animationSpeed);
                var i = this.startFrame;
                this.forward ? i += e : i -= e,
                this.setActiveFrame(i),
                0 == this.transitions && (0 == this.repeats ? (this.playing = !1,
                this.onEnd && this.onEnd()) : (this.curIndex = this.from,
                this.transitions = this.totalFrames,
                -1 != this.repeats && this.repeats--))
            }
        }
        ,
        i.prototype.getTotalFrames = function() {
            return this.totalFrames
        }
        ,
        i.prototype.getCurrentFrame = function() {
            return this.curIndex
        }
        ,
        i.prototype.play0 = function() {
            this.playing = !0,
            this.startTime = r.Time.now(),
            this.startFrame = this.curIndex
        }
        ,
        i.prototype.play = function(t, e) {
            void 0 === t && (t = 0),
            void 0 === e && (e = 0),
            this.from = t,
            this.to = 0 < e ? e : this.textures.length - 1,
            this.transitions = this.to - this.from,
            this.totalFrames = this.transitions + 1,
            this.curIndex = t,
            this.setFrameIndex(t),
            this.play0(),
            r.Game.get().addUpdatable(this)
        }
        ,
        i.prototype.repeat = function(t, e, i) {
            void 0 === t && (t = 0),
            void 0 === e && (e = 0),
            void 0 === i && (i = 0),
            this.repeats = t
        }
        ,
        i.prototype.isPlaying = function() {
            return this.playing
        }
        ,
        i.prototype.stop = function() {
            this.playing = !1,
            r.Game.get().removeUpdatable(this)
        }
        ,
        i
    }(r.Sprite);
    r.Animation = t
}(DUST || (DUST = {})),
function(o) {
    var i, t;
    (t = i = o.DeadZone || (o.DeadZone = {}))[t.Lock = 0] = "Lock",
    t[t.TopDown = 1] = "TopDown",
    t[t.TopDownTight = 2] = "TopDownTight";
    var e = function() {
        function t(t, e, i, n, r) {
            this.targetOffsetX = 0,
            this.targetOffsetY = 0,
            this._container = t,
            this._view = new o.Rectangle(e,i,n,r)
        }
        return t.prototype.moveBy = function(t, e) {
            this._view.left += t,
            this._view.top += e
        }
        ,
        t.prototype.update = function(t) {
            this.followTarget(),
            this.checkBounds(),
            this._container.x = -this.x,
            this._container.y = -this.y
        }
        ,
        t.prototype.setLimits = function(t, e, i, n) {}
        ,
        t.prototype.follow = function(t) {
            this._target = t
        }
        ,
        t.prototype.setDeadZone = function(t) {
            this._deadzone = t
        }
        ,
        t.prototype.setDeadZonePreset = function(t) {
            switch (t) {
            case i.Lock:
                this._deadzone = null;
                break;
            case i.TopDown:
                var e = Math.max(this._view.width, this._view.height) / 4;
                this._deadzone = new o.Rectangle((this._view.width - e) / 2,(this._view.height - e) / 2,e,e);
                break;
            case i.TopDownTight:
                e = Math.max(this._view.width, this._view.height) / 8;
                this._deadzone = new o.Rectangle((this._view.width - e) / 2,(this._view.height - e) / 2,e,e)
            }
        }
        ,
        t.prototype.followTarget = function() {
            if (null != this._target) {
                var t = this._view.width / 2
                  , e = this._view.height / 2
                  , i = this._target.x
                  , n = this._target.y;
                if (null != this.targetOffsetX && (i -= this.targetOffsetX),
                null != this.targetOffsetY && (n -= this.targetOffsetY),
                null != this._deadzone) {
                    var r = i - this._view.x
                      , o = n - this._view.y;
                    r < this._deadzone.left ? this._view.x = i - this._deadzone.left : r > this._deadzone.right && (this._view.x = i - this._deadzone.right),
                    o < this._deadzone.top ? this._view.y = n - this._deadzone.top : o > this._deadzone.bottom && (this._view.y = n - this._deadzone.bottom)
                } else
                    this._view.x = i - t,
                    this._view.y = n - e
            }
        }
        ,
        t.prototype.checkBounds = function() {
            null != this.limitLeft && this._view.left <= this.limitLeft && (this._view.left = this.limitLeft),
            null != this.limitRight && this._view.right >= this.limitRight && (this._view.right = this.limitRight),
            null != this.limitTop && this._view.top <= this.limitTop && (this._view.top = this.limitTop),
            null != this.limitBottom && this._view.bottom >= this.limitBottom && (this._view.bottom = this.limitBottom)
        }
        ,
        Object.defineProperty(t.prototype, "x", {
            get: function() {
                return this._view.x
            },
            set: function(t) {
                this._view.x = t
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "y", {
            get: function() {
                return this._view.y
            },
            set: function(t) {
                this._view.y = t
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "zoom", {
            get: function() {
                return this._container.scaleX
            },
            set: function(t) {
                this._container.scaleX = this._container.scaleY = t
            },
            enumerable: !0,
            configurable: !0
        }),
        t
    }();
    o.Camera = e
}(DUST || (DUST = {})),
function(t) {
    var e = function(r) {
        function t(t, e, i) {
            var n = r.call(this) || this;
            return n.game = t,
            n.text = e,
            n.startAt = i,
            n.text.text = "0",
            n.addChild(n.text),
            n.setPivotToCenter(),
            n._width = n.width,
            n.text.updateTransform(),
            n.text.centerX = n._width / 2,
            n.text.centerY = n.height / 2,
            n.text.text = "" + i,
            n.text.centerX = n._width / 2,
            n
        }
        return __extends(t, r),
        t.prototype.start = function() {
            var t = this.startAt
              , e = this;
            this.animateCountDown(t),
            t -= 1,
            this.timer = this.game.timeManager.createTimer(1e3, function() {
                e.timer._enabled && (e.animateCountDown(t),
                t -= 1)
            }, this),
            this.timer.setRepeat(this.startAt + 1),
            this.timer.start(),
            this.visible = !0
        }
        ,
        t.prototype.restart = function(t) {
            this.timer && this.timer.cancel(),
            null != t && (this.startAt = t),
            this.start()
        }
        ,
        t.prototype.stop = function() {
            this.timer && this.timer.cancel()
        }
        ,
        t.prototype.pause = function() {
            this.timer && this.timer.pause()
        }
        ,
        t.prototype.resume = function() {
            this.timer && this.timer.resume()
        }
        ,
        t.prototype.animateCountDown = function(t) {
            if (0 == t)
                return this.visible = !1,
                void (null != this.onComplete && this.onComplete());
            this.text.text = t.toString(),
            this.text.centerX = this._width / 2
        }
        ,
        t
    }(t.Container);
    t.BasicCountDownText = e
}(DUST || (DUST = {})),
function(s) {
    var t = function(o) {
        function t(t, e, i) {
            void 0 === i && (i = !0);
            var n = o.call(this) || this;
            n.background = t,
            n.check = e,
            n.checked = i,
            n.changeHandlers = new s.HandlerCollection,
            n.addChild(t),
            n.addChild(e),
            n.setChecked(i);
            var r = n;
            return n.onClick(function() {
                r.setChecked(!r.checked),
                r.changeHandlers.fire()
            }),
            n
        }
        return __extends(t, o),
        t.prototype.getBackground = function() {
            return this.background
        }
        ,
        t.prototype.getCheck = function() {
            return this.check
        }
        ,
        t.prototype.isChecked = function() {
            return this.checked
        }
        ,
        t.prototype.setChecked = function(t) {
            this.checked = t,
            this.refreshUI()
        }
        ,
        t.prototype.refreshUI = function() {
            this.checked ? this.check.visible = !0 : this.check.visible = !1
        }
        ,
        t
    }(s.Container);
    s.CheckBox = t
}(DUST || (DUST = {})),
function(n) {
    var t = function(r) {
        function t(t, e, i) {
            var n = r.call(this, t, e, i) || this;
            return n.startAt = i,
            n.scaleStart = .2,
            n.scaleMid1 = 1,
            n.scaleMid2 = 1.1,
            n.scaleEnd = 20,
            n.alpha = 0,
            n
        }
        return __extends(t, r),
        t.prototype.setScaleStep = function(t, e, i, n) {
            this.scaleStart = t,
            this.scaleMid1 = e,
            this.scaleMid2 = i,
            this.scaleEnd = n
        }
        ,
        t.prototype.animateCountDown = function(t) {
            r.prototype.animateCountDown.call(this, t),
            this.scaleXY = this.scaleStart,
            this.alpha = 0;
            var e = this.game.tweenManager.create(this);
            e.to({
                scaleXY: this.scaleMid1
            }, 350, n.Easing.EaseOut),
            e.to({
                scaleXY: this.scaleMid2
            }, 450, n.Easing.Linear),
            e.to({
                scaleXY: this.scaleEnd
            }, 350, n.Easing.EaseIn),
            e.start();
            var i = this.game.tweenManager.create(this);
            i.to({
                alpha: 1
            }, 350),
            i.to({
                alpha: 1
            }, 450),
            i.to({
                alpha: 0
            }, 350),
            i.start()
        }
        ,
        t
    }(n.BasicCountDownText);
    n.CountDownText = t
}(DUST || (DUST = {})),
function(u) {
    var t = function(l) {
        function t(t, e, i, n, r) {
            var o = l.call(this) || this;
            o.game = t,
            o.items = [],
            o.prevTopIndex = 0,
            o.topIndex = 0,
            o.animateMove = !0,
            o.autoScroll = !0,
            o.scrollSpeed = 80,
            o.downOrRightPressed = !1,
            o.upOrLeftPressed = !1,
            o.scrollStep = 0;
            var s = o;
            o.itemContainer = new u.Container,
            o.addChild(o.itemContainer),
            o.tweenManager = t.tweenManager,
            o.itemWidth = e,
            o.itemHeight = i,
            o.visibleItems = n;
            var a = e
              , h = i;
            return (o.vertical = r) ? (o.itemSize = i,
            o.visibleSize = i * n,
            o.pivotX = e / 2,
            o.pivotY = o.visibleSize / 2,
            h = o.visibleSize) : (o.itemSize = e,
            o.visibleSize = e * n,
            o.pivotX = o.visibleSize / 2,
            o.pivotY = i / 2,
            a = o.visibleSize),
            o.containerMask = new u.Graphics,
            o.containerMask.beginFill(9160191, .4),
            o.containerMask.drawRect(0, 0, a, h),
            o.containerMask.endFill(),
            o.addChild(o.containerMask),
            o.mask = o.containerMask,
            t.addUpdatable(s),
            o.detachListener.once(function() {
                t.removeUpdatable(s)
            }),
            o
        }
        return __extends(t, l),
        t.prototype.addItem = function(t, e) {
            var i = this.items.length;
            null != e ? this.itemContainer.addChildAt(t, 0) : this.itemContainer.addChild(t),
            this.items.push(t),
            this.vertical ? (t.x = 0,
            t.y = i * this.itemHeight) : (t.x = i * this.itemWidth,
            t.y = 0),
            i >= this.visibleItems && (t.visible = !1),
            this.checkButtonEnability(),
            this.updateVisibleItems()
        }
        ,
        t.prototype.removeLast = function() {
            var t = this.itemContainer.getChildrenCount();
            this.itemContainer.removeChildAt(t - 1),
            this.items.splice(this.items.length - 1, 1),
            this.checkButtonEnability(),
            this.updateVisibleItems()
        }
        ,
        t.prototype.clear = function() {
            this.itemContainer.removeChildren(),
            this.items = [],
            this.prevTopIndex = 0,
            this.topIndex = 0,
            this.itemContainer.x = 0,
            this.itemContainer.y = 0,
            this.checkButtonEnability(),
            this.updateVisibleItems()
        }
        ,
        t.prototype.setControlButton = function(t, e) {
            var i = this;
            this.upOrLeft = t,
            this.downOrRight = e,
            this.downOrRight.isDown,
            this.upOrLeft.onClick(function() {
                i.moveUpOrLeft(),
                i.upOrLeftPressed = !1
            }),
            this.upOrLeft.downHandler.add(function(t) {
                i.upOrLeftPressed = !0
            }),
            this.downOrRight.onClick(function() {
                i.moveDownOrRight(),
                i.downOrRightPressed = !1
            }),
            this.downOrRight.downHandler.add(function(t) {
                i.downOrRightPressed = !0
            }),
            this.checkButtonEnability()
        }
        ,
        t.prototype.setLimitButton = function(t, e) {
            null != t && (this.upOrLeftLimit = t),
            null != e && (this.downOrRightLimit = e),
            this.checkButtonEnability()
        }
        ,
        t.prototype.moveUpOrLeft = function() {
            this.vertical ? this.moveUp() : this.moveLeft()
        }
        ,
        t.prototype.moveDownOrRight = function() {
            this.vertical ? this.moveDown() : this.moveRight()
        }
        ,
        t.prototype.moveUp = function() {
            this.vertical && this.moveUp0()
        }
        ,
        t.prototype.moveDown = function() {
            this.vertical && this.moveDown0()
        }
        ,
        t.prototype.moveLeft = function() {
            this.vertical || this.moveUp0()
        }
        ,
        t.prototype.moveRight = function() {
            this.vertical || this.moveDown0()
        }
        ,
        t.prototype.setTopVisibleItem = function(t, e) {
            void 0 === e && (e = !0);
            var i = this.animateMove;
            if (this.animateMove = e,
            t > this.items.length - this.visibleItems && (t = this.items.length - this.visibleItems),
            0 <= t) {
                if (this.topIndex == t)
                    return void (this.animateMove = i);
                this.prevTopIndex = this.topIndex,
                this.topIndex = t,
                this.moveToNewIndex()
            }
            this.animateMove = i
        }
        ,
        t.prototype.getTopVisibleItem = function() {
            return this.topIndex
        }
        ,
        t.prototype.getItems = function() {
            return this.items
        }
        ,
        t.prototype.getItemContainer = function() {
            return this.itemContainer
        }
        ,
        t.prototype.moveUp0 = function() {
            0 < this.topIndex && (this.prevTopIndex = this.topIndex,
            this.topIndex--,
            this.moveToNewIndex())
        }
        ,
        t.prototype.moveDown0 = function() {
            this.topIndex < this.items.length - this.visibleItems && (this.prevTopIndex = this.topIndex,
            this.topIndex++,
            this.moveToNewIndex())
        }
        ,
        t.prototype.moveToNewIndex = function() {
            var t = this
              , e = this.prevTopIndex - this.topIndex
              , i = Math.abs(e)
              , n = -this.topIndex * this.itemSize;
            this.animateMove ? (this.showInvisibleItems(e),
            null != this.moveTween && (this.moveTween.onComplete = null,
            this.moveTween.stop()),
            this.moveTween = this.tweenManager.create(this.itemContainer),
            this.vertical ? this.moveTween.to({
                y: n
            }, Math.min(200 * i, 1e3)) : this.moveTween.to({
                x: n
            }, Math.min(200 * i, 1e3)),
            this.moveTween.onComplete = function() {
                t.updateVisibleItems()
            }
            ,
            this.moveTween.start()) : (this.updateVisibleItems(),
            this.vertical ? this.itemContainer.y = n : this.itemContainer.x = n),
            this.checkButtonEnability()
        }
        ,
        t.prototype.updateVisibleItems = function() {
            for (var t = 0; t < this.items.length; t++) {
                var e = this.items[t];
                t < this.topIndex ? e.visible = !1 : t >= this.topIndex + this.visibleItems ? e.visible = !1 : e.visible = !0
            }
        }
        ,
        t.prototype.showInvisibleItems = function(t) {
            for (var e = 0; e < Math.abs(t); e++) {
                var i = null;
                this.prevTopIndex;
                (i = t < 0 ? e + this.prevTopIndex + this.visibleItems : e + this.topIndex) < this.items.length && (this.items[i].visible = !0)
            }
        }
        ,
        t.prototype.checkButtonEnability = function() {
            null != this.upOrLeft && (this.topIndex <= 0 ? this.setUpOrLeftEnable(!1) : this.setUpOrLeftEnable(!0)),
            null != this.downOrRight && (this.topIndex >= this.items.length - this.visibleItems ? this.setDownOrRightEnable(!1) : this.setDownOrRightEnable(!0))
        }
        ,
        t.prototype.setUpOrLeftEnable = function(t) {
            t ? this.upOrLeft.enable() : this.upOrLeft.disable(),
            null != this.upOrLeftLimit && (t ? (this.upOrLeft.visible = !0,
            this.upOrLeftLimit.visible = !1) : (this.upOrLeft.visible = !1,
            this.upOrLeftLimit.visible = !0))
        }
        ,
        t.prototype.setDownOrRightEnable = function(t) {
            t ? this.downOrRight.enable() : this.downOrRight.disable(),
            null != this.downOrRightLimit && (t ? (this.downOrRight.visible = !0,
            this.downOrRightLimit.visible = !1) : (this.downOrRight.visible = !1,
            this.downOrRightLimit.visible = !0))
        }
        ,
        t.prototype.isAutoScroll = function() {
            return this.autoScroll
        }
        ,
        t.prototype.setAutoScroll = function(t) {
            this.autoScroll = t
        }
        ,
        t.prototype.getScrollSpeed = function() {
            return this.scrollSpeed
        }
        ,
        t.prototype.setScrollSpeed = function(t) {
            this.scrollSpeed = t
        }
        ,
        t.prototype.update = function(t) {
            this.doAutoScroll(t)
        }
        ,
        t.prototype.doAutoScroll = function(t) {
            if (this.autoScroll && (this.downOrRightPressed || this.upOrLeftPressed) && (this.scrollStep += t,
            this.scrollStep > this.scrollSpeed)) {
                if (this.checkButtonEnability(),
                this.downOrRightPressed)
                    return this.scrollStep = 0,
                    void (this.downOrRight.isEnabled ? this.moveDownOrRight() : this.downOrRightPressed = !1);
                this.upOrLeftPressed && (this.scrollStep = 0,
                this.upOrLeft.isEnabled ? this.moveUpOrLeft() : this.upOrLeftPressed = !1)
            }
        }
        ,
        t
    }(u.Container);
    u.ItemList = t
}(DUST || (DUST = {})),
function(o) {
    var s, t;
    (t = s = o.ProgressBarWay || (o.ProgressBarWay = {}))[t.LeftToRight = 0] = "LeftToRight",
    t[t.TopToBottom = 1] = "TopToBottom",
    t[t.BottomToTop = 2] = "BottomToTop";
    var e = function(r) {
        function n(t, e, i) {
            void 0 === i && (i = s.LeftToRight);
            var n = r.call(this) || this;
            return n._progress = 0,
            n._background = t,
            n._fill = e,
            n._way = i,
            n._mask = new o.Rectangle(0,0,0,0),
            n._timeFillMask = new o.Graphics,
            n._fill.mask = n._timeFillMask,
            n._fill.addChild(n._timeFillMask),
            null != n._background && n.addChild(n._background),
            n.addChild(n._fill),
            n
        }
        return __extends(n, r),
        n.fromFrames = function(t, e, i) {
            return void 0 === i && (i = s.LeftToRight),
            new n(o.Sprite.fromFrame(t),o.Sprite.fromFrame(e),i)
        }
        ,
        n.prototype.linkToTimer = function(t) {
            this._timer = t
        }
        ,
        n.prototype.updateProgress = function(t) {
            switch (t < 0 ? t = 0 : 1 < t && (t = 1),
            this._progress = t,
            this._way) {
            case s.LeftToRight:
                this._mask.x = 0,
                this._mask.y = 0,
                this._mask.width = this._fill.width * t,
                this._mask.height = this._fill.height;
                break;
            case s.TopToBottom:
                this._mask.x = 0,
                this._mask.y = 0,
                this._mask.width = this._fill.width,
                this._mask.height = this._fill.height * t;
                break;
            case s.BottomToTop:
                this._mask.width = this._fill.width,
                this._mask.height = this._fill.height * t,
                this._mask.x = 0,
                this._mask.y = this._fill.height - this._mask.height
            }
        }
        ,
        n.prototype.update = function(t) {
            if (null != this._timer) {
                var e = this._timer.getProgress();
                this.updateProgress(e)
            }
        }
        ,
        n.prototype.render = function(t) {
            this._timeFillMask.clear(),
            this._timeFillMask.beginFill(16777215, 1),
            this._timeFillMask.drawRect(this._mask.x, this._mask.y, this._mask.width, this._mask.height)
        }
        ,
        n.prototype.getCurrentProgress = function() {
            return this._progress
        }
        ,
        n
    }(o.Container);
    o.ProgressBar = e
}(DUST || (DUST = {})),
function(r) {
    var t = function(e) {
        function n(t) {
            return e.call(this, t) || this
        }
        return __extends(n, e),
        n.withDefault = function(t, e) {
            var i = new n(r.Texture.fromFrame(t));
            return null != e && i.setRemoteImage(e),
            i
        }
        ,
        n.prototype.setLocalSprite = function(t) {
            this.onRemoteLoaded(t)
        }
        ,
        n.prototype.setRemoteImage = function(t, e) {
            if (void 0 === e && (e = null),
            null != t) {
                var i = this
                  , n = r.Sprite.fromImage(t);
                n.width <= 1 ? n.onLoaded(function() {
                    i.onRemoteLoaded(n, e)
                }) : i.onRemoteLoaded(n, e)
            }
        }
        ,
        n.prototype.onRemoteLoaded = function(t, e) {
            void 0 === e && (e = null);
            var i = this.texture.width
              , n = this.texture.height;
            this.setTexture(t.texture),
            this.width = i,
            this.height = n,
            null != e && e()
        }
        ,
        n
    }(r.Sprite);
    r.RemoteSprite = t
}(DUST || (DUST = {})),
function(n) {
    var t = function(i) {
        function t(t) {
            var e = i.call(this) || this;
            return e._start = -Math.PI / 2,
            e._progress = 0,
            e._inverted = !1,
            e._background = t,
            e._mask = new n.Graphics,
            e._radius = e._background.width / 2,
            e.addChild(e._background),
            e.addChild(e._mask),
            e._background.mask = e._mask,
            e
        }
        return __extends(t, i),
        t.prototype.linkToTimer = function(t) {
            this._timer = t
        }
        ,
        t.prototype.setInverted = function(t) {
            this._inverted = t
        }
        ,
        t.prototype.updateProgress = function(t) {
            t < 0 ? t = 0 : 1 < t && (t = 1),
            this._progress = t
        }
        ,
        t.prototype.update = function(t) {
            if (null != this._timer) {
                var e = this._timer.getProgress();
                this.updateProgress(e)
            }
        }
        ,
        t.prototype.render = function(t) {
            if (this._mask.clear(),
            0 < this._progress)
                if (this._background.visible = !0,
                this._inverted) {
                    e = 2 * this._progress * Math.PI;
                    this._mask.beginFill(16777215, 1),
                    this._mask.moveTo(this._radius, this._radius),
                    this._mask.lineTo(this._radius + this._radius * Math.cos(this._start + e), this._radius + this._radius * Math.sin(this._start + e)),
                    this._mask.arc(this._radius, this._radius, this._radius, this._start + e, 3 * Math.PI / 2),
                    this._mask.lineTo(this._radius, this._radius),
                    this._mask.endFill()
                } else {
                    var e = 2 * this._progress * Math.PI;
                    this._mask.beginFill(16777215, 1),
                    this._mask.moveTo(this._radius, this._radius),
                    this._mask.lineTo(this._radius, 0),
                    this._mask.arc(this._radius, this._radius, this._radius, this._start, this._start + e),
                    this._mask.lineTo(this._radius, this._radius),
                    this._mask.endFill()
                }
            else
                this._background.visible = !1
        }
        ,
        t.prototype.getCurrentProgress = function() {
            return this._progress
        }
        ,
        t.prototype.autoUpdate = function() {
            var t = this
              , e = n.Game.get();
            e.addRenderable(this),
            e.addUpdatable(this),
            this.detachListener.once(function() {
                e.removeRenderable(t),
                e.removeUpdatable(t)
            })
        }
        ,
        t
    }(n.Container);
    n.RoundProgressBar = t
}(DUST || (DUST = {})),
function(h) {
    var t = function(a) {
        function t(t, e, i, n) {
            var r = a.call(this) || this;
            r.itemWidth = t,
            r.itemHeight = e,
            r.visibleItems = i,
            r.vertical = n,
            r.items = [];
            r.scrollableContainer = new h.ScrollableContainer,
            r.addChild(r.scrollableContainer);
            var o = t
              , s = e;
            return n ? (s = (r.itemSize = e) * i,
            r.scrollableContainer.scrollEnableOnX = !1) : (o = (r.itemSize = t) * i,
            r.scrollableContainer.scrollEnableOnY = !1),
            r.scrollableContainer.setSize(o, s),
            r.scrollableContainer.addScrollHandler(r.onScroll, r),
            r.scrollableContainer.wheelOnY = r.vertical,
            r.contentBounds = new h.Rectangle(0,0,o,s),
            r.blankSprite = new h.BlankSprite(t,e),
            r.scrollableContainer.addDisplayObject(r.blankSprite),
            r.updateVisibleItems(0),
            r
        }
        return __extends(t, a),
        t.prototype.getContentBounds = function() {
            return this.contentBounds
        }
        ,
        t.prototype.addItem = function(t) {
            var e = this.items.length;
            this.scrollableContainer.addDisplayObject(t),
            this.items.push(t),
            this.vertical ? (t.x = 0,
            t.y = e * this.itemHeight) : (t.x = e * this.itemWidth,
            t.y = 0),
            this.blankSprite.width = this.vertical ? this.itemWidth : (this.items.length + 1) * this.itemWidth,
            this.blankSprite.height = this.vertical ? (this.items.length + 1) * this.itemHeight : this.itemHeight,
            this.updateVisibleItems()
        }
        ,
        t.prototype.clear = function() {
            this.scrollableContainer.clear(),
            this.items = [],
            this.updateVisibleItems(0)
        }
        ,
        t.prototype.setControlButton = function(t, e) {
            var i = this;
            this.upOrLeft = t,
            this.downOrRight = e,
            this.downOrRight.isDown,
            this.upOrLeft.onClick(function() {
                i.moveUpOrLeft()
            }),
            this.downOrRight.onClick(function() {
                i.moveDownOrRight()
            })
        }
        ,
        t.prototype.moveUpOrLeft = function() {
            this.vertical ? this.moveUp() : this.moveLeft()
        }
        ,
        t.prototype.moveDownOrRight = function() {
            this.vertical ? this.moveDown() : this.moveRight()
        }
        ,
        t.prototype.moveUp = function() {
            this.vertical && this.moveUp0()
        }
        ,
        t.prototype.moveDown = function() {
            this.vertical && this.moveDown0()
        }
        ,
        t.prototype.moveLeft = function() {
            this.vertical || this.moveUp0()
        }
        ,
        t.prototype.moveRight = function() {
            this.vertical || this.moveDown0()
        }
        ,
        t.prototype.scrollToItem = function(t) {
            t > this.items.length - this.visibleItems && (t = this.items.length - this.visibleItems),
            0 <= t && this.moveTo(t)
        }
        ,
        t.prototype.getItems = function() {
            return this.items
        }
        ,
        t.prototype.onScroll = function(t, e, i, n) {
            this.updateVisibleItems()
        }
        ,
        t.prototype.moveUp0 = function() {
            var t = this.getMoveByCount();
            this.moveBy(-t)
        }
        ,
        t.prototype.moveDown0 = function() {
            var t = this.getMoveByCount();
            this.moveBy(t)
        }
        ,
        t.prototype.getMoveByCount = function() {
            return 3 < this.visibleItems ? this.visibleItems - 2 : 1
        }
        ,
        t.prototype.moveBy = function(t) {
            var e = t * this.itemSize;
            this.vertical ? this.scrollableContainer.moveByAbout(null, e) : this.scrollableContainer.moveByAbout(e, null),
            this.updateVisibleItems()
        }
        ,
        t.prototype.moveTo = function(t) {
            var e = t * this.itemSize;
            this.vertical ? this.scrollableContainer.moveTo(null, e) : this.scrollableContainer.moveTo(e, null),
            this.updateVisibleItems()
        }
        ,
        t.prototype.updateVisibleItems = function(t) {
            if (void 0 === t && (t = null),
            null == t) {
                var e = this.scrollableContainer.getContentBound();
                t = this.vertical ? e.y : e.x
            }
            null != this.topItemOverlay && (this.topItemOverlay.visible = !1),
            null != this.bottomItemOverlay && (this.bottomItemOverlay.visible = !1);
            for (var i = t + this.visibleItems * this.itemSize, n = 0; n < this.items.length; n++) {
                var r = this.items[n]
                  , o = this.vertical ? r.y : r.x
                  , s = this.vertical ? r.y + this.itemSize : r.x + this.itemSize;
                t <= o && s <= i ? r.visible = !0 : i <= o || s <= t ? r.visible = !1 : (r.visible = !0,
                o + this.itemSize / 2 < t ? this.addTopItemOverlay(r) : s - this.itemSize / 2 > i && this.addBottomItemOverlay(r))
            }
        }
        ,
        t.prototype.addTopItemOverlay = function(t) {
            null == this.topItemOverlay && (this.topItemOverlay = this.buildItemOverlay(t),
            this.scrollableContainer.addDisplayObject(this.topItemOverlay)),
            this.topItemOverlay.visible = !0,
            this.topItemOverlay.x = t.x,
            this.topItemOverlay.y = t.y
        }
        ,
        t.prototype.addBottomItemOverlay = function(t) {
            null == this.bottomItemOverlay && (this.bottomItemOverlay = this.buildItemOverlay(t),
            this.scrollableContainer.addDisplayObject(this.bottomItemOverlay)),
            this.bottomItemOverlay.visible = !0,
            this.bottomItemOverlay.x = t.x,
            this.bottomItemOverlay.y = t.y
        }
        ,
        t.prototype.buildItemOverlay = function(t) {
            var e = this.itemWidth
              , i = this.itemWidth;
            t instanceof h.Container && (e = Math.min(this.itemWidth, t.width),
            i = Math.min(this.itemHeight, t.height));
            var n = new h.Graphics;
            return n.beginFill(0, .2),
            n.drawRect(0, 0, e, i),
            n.endFill(),
            n.interactive = !0,
            n.showCursor = !1,
            n.cacheAsBitmap = !0,
            n
        }
        ,
        t
    }(h.Container);
    h.ScrollableList = t
}(DUST || (DUST = {})),
function(n) {
    var t = function(i) {
        function t() {
            var t = i.call(this) || this;
            t.isEnabled = !0,
            t.interactive = !0,
            t.logger = JL("DUST.Button"),
            t.downHandler.add(t.onStateDown, t),
            t.upHandler.add(t.onStateUp, t),
            t.overHandler.add(t.onStateOver, t),
            t.outHandler.add(t.onStateOut, t),
            t.enable();
            var e = n.AudioManager.getInstance();
            return null != e && null != e.playButtonSound && t.clickHandler.add(t.playClickedSound, t),
            t
        }
        return __extends(t, i),
        t.prototype.playClickedSound = function() {
            var t = n.AudioManager.getInstance();
            null != t.playButtonSound && t.playButtonSound()
        }
        ,
        t.prototype.addDebugBorder = function() {
            this.border = new n.Graphics,
            this.border.lineStyle(2, 16711867, 1),
            this.border.drawRect(this.x, this.y, this.width, this.height),
            this.addChild(this.border)
        }
        ,
        t.prototype.addDebugHitAreaBorder = function() {
            var t = new n.Graphics;
            t.lineStyle(2, 58995, 1),
            t.drawRect(this.hitArea.x, this.hitArea.y, this.hitArea.width, this.hitArea.height),
            this.addChild(t)
        }
        ,
        t.prototype.enable = function() {
            this.buttonMode = !0,
            this.isEnabled = !0,
            this.interactive = !0,
            this.alpha = 1
        }
        ,
        t.prototype.disable = function() {
            this.buttonMode = !1,
            this.isEnabled = !1,
            this.interactive = !1,
            this.alpha = .5
        }
        ,
        t.prototype.onStateDown = function() {
            this.isDown = !0
        }
        ,
        t.prototype.onStateUp = function() {
            this.isOver = !1,
            this.isDown = !1
        }
        ,
        t.prototype.onStateOver = function() {
            this.isOver = !0
        }
        ,
        t.prototype.onStateOut = function() {
            this.isOver = !1,
            this.isDown = !1
        }
        ,
        t
    }(n.Container);
    n.Button = t
}(DUST || (DUST = {})),
function(a) {
    var n = function() {
        function s(t, e, i) {
            this.stateUp = t,
            this.stateDown = e,
            this.stateOver = i
        }
        return s.fromFrames = function(t, e, i) {
            var n = a.Texture.fromFrame(t)
              , r = null
              , o = null;
            return null != e && (r = a.Texture.fromFrame(e)),
            null != i && (o = a.Texture.fromFrame(i)),
            new s(n,r,o)
        }
        ,
        s.fromTextures = function(t, e, i) {
            var n = null
              , r = null;
            return null != e && (n = e),
            null != i && (r = i),
            new s(t,n,r)
        }
        ,
        s
    }();
    a.ImageButtonStyle = n;
    var t = function(i) {
        function o(t) {
            var e = i.call(this) || this;
            return e.text = null,
            e.icon = null,
            e.iconContainer = null,
            e.style = t,
            e.sprite = new a.Sprite(e.style.stateUp),
            e.addChild(e.sprite),
            e
        }
        return __extends(o, i),
        o.fromFramesArray = function(t) {
            var e = t.length;
            if (e < 1 || 3 < e)
                throw new Error("Invalid states array size");
            var i = t[0]
              , n = null
              , r = null;
            return 1 < e && (n = t[1]),
            2 < e && (r = t[2]),
            o.fromFrames(i, n, r)
        }
        ,
        o.fromFrames = function(t, e, i) {
            return new o(n.fromFrames(t, e, i))
        }
        ,
        o.fromTextures = function(t, e, i) {
            return new o(n.fromTextures(t, e, i))
        }
        ,
        o.prototype.setContent = function(t) {
            this.addChild(t),
            t.centerOnXObject(this),
            t.centerOnYObject(this)
        }
        ,
        o.prototype.setText = function(t) {
            null != this.text && this.text.removeSelf(),
            this.text = t;
            var e = this.getLocalBounds();
            this.addChild(t),
            t.centerIn(e)
        }
        ,
        o.prototype.setIcon = function(t, e) {
            null == this.icon ? (this.icon = new a.Sprite(t.texture),
            this.icon.anchorX = .5,
            this.icon.anchorY = .5,
            this.icon.setPosition(this.getLocalCenter()),
            this.addChild(this.icon)) : this.icon.setTexture(t.texture),
            null != e && (this.icon.scaleXY = e)
        }
        ,
        o.prototype.setStateTexture = function() {
            this.isDown ? this.style.stateDown && this.sprite.setTexture(this.style.stateDown) : this.isOver ? this.style.stateOver && this.sprite.setTexture(this.style.stateOver) : this.style.stateUp && this.sprite.setTexture(this.style.stateUp)
        }
        ,
        o.prototype.onStateDown = function() {
            i.prototype.onStateDown.call(this),
            this.setStateTexture()
        }
        ,
        o.prototype.onStateUp = function() {
            i.prototype.onStateUp.call(this),
            this.setStateTexture()
        }
        ,
        o.prototype.onStateOver = function() {
            i.prototype.onStateOver.call(this),
            this.setStateTexture()
        }
        ,
        o.prototype.onStateOut = function() {
            i.prototype.onStateOut.call(this),
            this.setStateTexture()
        }
        ,
        o
    }(a.Button);
    a.ImageButton = t
}(DUST || (DUST = {})),
function(i) {
    var t = function(n) {
        function r(t, e) {
            var i = n.call(this, t) || this;
            return i.game = e,
            i.clipAnimationSpeed = .4,
            i.numberInScreen = 3,
            r.count++,
            i
        }
        return __extends(r, n),
        r.prototype.setShineAnimationFrames = function(t) {
            var e = this;
            this.clip = i.MovieClip.fromFrames(t),
            this.addChild(this.clip),
            this.clip.visible = !1,
            this.clip.loop = !1,
            this.clip.animationSpeed = this.clipAnimationSpeed,
            this.clip.onComplete = function() {
                e.clip.visible = !1,
                e.isOrphan(!0) || e.play(5e3)
            }
        }
        ,
        r.prototype.startShine = function() {
            var t = r.count % this.numberInScreen;
            this.play(1800 * t + 300)
        }
        ,
        r.prototype.play = function(t) {
            var e = this;
            this.game.timeManager.createTimer(t, function() {
                e.clip.visible = !0,
                e.clip.gotoAndPlay(0)
            }).start()
        }
        ,
        r.count = 0,
        r
    }(i.ImageButton);
    i.ShinyButton = t
}(DUST || (DUST = {})),
function(i) {
    var t = function(n) {
        function t(t) {
            var e = n.call(this) || this;
            e.game = t,
            e.graphics = [],
            e.radius = 10,
            e.color = 16777215,
            e.scaleDuration = 500,
            e.shiftDuration = 250,
            e.tweens = [];
            var i = e;
            return e.detachListener.add(function() {
                i.tweens.forEach(function(t) {
                    t.stop()
                })
            }),
            e
        }
        return __extends(t, n),
        t.prototype.start = function() {
            var i = this;
            this.addCircle(),
            this.addCircle(),
            this.addCircle(),
            this.graphics.forEach(function(e, t) {
                i.game.timeManager.createAndStartTimer(t * i.shiftDuration, function() {
                    var t = i.game.tweenManager.create(e);
                    t.to({
                        scaleXY: 1
                    }, i.scaleDuration),
                    t.to({
                        scaleXY: 0
                    }, i.scaleDuration),
                    t.delay(i.graphics.length * i.shiftDuration),
                    t.repeat(-1),
                    t.start(),
                    i.tweens.push(t)
                })
            })
        }
        ,
        t.prototype.addCircle = function() {
            var t = new i.Graphics;
            t.beginFill(this.color, 1),
            t.drawCircle(0, 0, this.radius);
            var e = this.graphics.length;
            t.x = e * (2 * this.radius + 5),
            t.scaleXY = 0,
            this.graphics.push(t),
            this.addChild(t)
        }
        ,
        t
    }(i.Container);
    i.Spinner = t
}(DUST || (DUST = {})),
function(u) {
    var t = function() {
        function t(t) {
            this.config = t,
            this.endTime = t.endTime,
            this.text = t.text,
            null == this.config.showHour && (this.config.showHour = !0),
            null == this.config.showMinute && (this.config.showMinute = !0),
            null == this.config.toUpperCase && (this.config.toUpperCase = !1),
            null == this.config.padSeconds && (this.config.padSeconds = !0),
            this.refresh()
        }
        return t.prototype.refresh = function() {
            if (null != this.endTime) {
                var t = Math.floor((this.endTime - u.UTCDate.now()) / 1e3);
                t < 0 && (t = 0);
                var e = (t - t % 86400) / 86400
                  , i = ((t -= 86400 * e) - t % 3600) / 3600
                  , n = ((t -= 3600 * i) - t % 60) / 60
                  , r = (t -= 60 * n) % 60
                  , o = "";
                0 < e && (o = u.Strings.pad2(e) + ":");
                var s = u.Strings.pad2(i) + ":";
                this.config.showHour || (s = "");
                var a = u.Strings.pad2(n) + ":";
                this.config.showMinute || (a = "");
                var h, l = o + s + a + (this.config.padSeconds ? u.Strings.pad2(r) : r);
                h = null != this.config.i18nKey ? this.getFullText(l) : l,
                this.config.toUpperCase ? this.text.text = h.toUpperCase() : this.text.text = h
            }
        }
        ,
        t.prototype.getFullText = function(t) {
            return u.I18N.get(this.config.i18nKey, {
                time: t
            })
        }
        ,
        t.prototype.autoUpdate = function() {
            var t = this
              , e = u.Game.get().timeManager.createTimer(1e3, function() {
                t.refresh()
            });
            e.setRepeat(-1),
            e.id = "timeleft",
            e.start(),
            this.text.detachListener.once(function() {
                e.cancel()
            })
        }
        ,
        t
    }();
    u.TimeLeftComponent = t
}(DUST || (DUST = {})),
function(o) {
    var t = function() {
        function t(t) {
            this.text = t,
            this.game = o.Game.get(),
            this.duration = 2e3,
            this.x = null,
            this.y = null,
            this.adjustTextY = null
        }
        return t.prototype.show = function() {
            var t = this;
            null == this.x && (this.x = this.game.width / 2),
            null == this.y && (this.y = this.game.height - 50);
            this.ctn = new o.Container,
            this.ctn.addChild(this.text),
            this.text.updateTransform(),
            null == this.adjustTextY && (this.adjustTextY = 0);
            var e = this.text.textWidth + 40
              , i = this.text.textHeight + 20
              , n = new o.Graphics;
            n.beginFill(1710618, .8),
            n.drawRoundedRect(0, 0, e, i, 5),
            this.ctn.addChildAt(n, 0),
            this.text.centerX = n.width / 2,
            this.text.centerY = n.height / 2 - this.adjustTextY,
            this.ctn.x = this.x - this.ctn.width / 2,
            this.ctn.y = this.y - this.ctn.height / 2,
            this.game.layers.top.addChild(this.ctn);
            var r = this.game.tweenManager.create(this.ctn);
            r.delay(this.duration),
            r.to({
                alpha: 0
            }),
            r.start(),
            r.onComplete = function() {
                t.ctn.removeSelf()
            }
        }
        ,
        t
    }();
    o.Toast = t
}(DUST || (DUST = {})),
function(n) {
    var t = function() {
        function t(t, e) {
            this.ui = t;
            var i = n.Colors.getRgb(e);
            this._red = i[0],
            this._green = i[1],
            this._blue = i[2]
        }
        return t.prototype.refreshTint = function() {
            var t = n.Colors.fromRgb(this._red, this._green, this._blue);
            this.ui.tint = t
        }
        ,
        Object.defineProperty(t.prototype, "red", {
            get: function() {
                return this._red
            },
            set: function(t) {
                this._red = t,
                this.refreshTint()
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "green", {
            get: function() {
                return this._green
            },
            set: function(t) {
                this._green = t,
                this.refreshTint()
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "blue", {
            get: function() {
                return this._blue
            },
            set: function(t) {
                this._blue = t,
                this.refreshTint()
            },
            enumerable: !0,
            configurable: !0
        }),
        t
    }();
    n.TintDecorator = t
}(DUST || (DUST = {})),
function(g) {
    var t = function() {
        function s() {}
        return s.getOrCreateCloseButton = function(t, e, i) {
            void 0 === e && (e = "#ff2e63"),
            void 0 === i && (i = "white");
            var n = s.getOrCreateButtonTexture("", t, e, i, "#E25E55", "#B34946")
              , r = s.getOrCreateButtonTexture("hover", t, e, i, "#FF8E80", "#DF6663")
              , o = s.getOrCreateButtonTexture("pressed", t, e, i, "#B94E46", "#823533");
            return g.ImageButton.fromTextures(n, r, o)
        }
        ,
        s.getOrCreateButtonTexture = function(t, e, i, n, r, o) {
            void 0 === i && (i = "#ff2e63"),
            void 0 === n && (n = "white");
            var s = "hip/ui/close_button_" + e + "_" + t
              , a = null;
            if (PIXI.Texture.hasTextureInCache(s))
                a = g.Texture.fromImage(s);
            else {
                var h = document.createElement("canvas");
                h.width = h.height = 2 * e;
                var l = h.getContext("2d");
                l.arc(e, e, e, 0, 2 * Math.PI, !0);
                var u = l.createLinearGradient(0, 0, 2 * e, 2 * e);
                u.addColorStop(0, r),
                u.addColorStop(1, o),
                l.fillStyle = u,
                l.fill(),
                l.beginPath(),
                l.strokeStyle = n,
                l.lineWidth = .1 * e,
                l.arc(e, e, .8 * e, 0, 2 * Math.PI),
                l.stroke(),
                l.beginPath(),
                l.lineWidth = e / 5,
                l.strokeStyle = n,
                l.moveTo(e - e / 3, e - e / 3),
                l.lineTo(e + e / 3, e + e / 3),
                l.moveTo(e + e / 3, e - e / 3),
                l.lineTo(e - e / 3, e + e / 3),
                l.stroke(),
                a = g.Texture.fromCanvas(h),
                PIXI.Texture.addTextureToCache(a._texture, s)
            }
            return a
        }
        ,
        s.roundRect = function(t, e, i, n, r, o, s, a) {
            if (void 0 === a && (a = !0),
            void 0 === o && (o = 5),
            "number" == typeof o)
                o = {
                    tl: o,
                    tr: o,
                    br: o,
                    bl: o
                };
            else {
                var h = {
                    tl: 0,
                    tr: 0,
                    br: 0,
                    bl: 0
                };
                for (var l in h)
                    o[l] = o[l] || h[l]
            }
            t.beginPath(),
            t.moveTo(e + o.tl, i),
            t.lineTo(e + n - o.tr, i),
            t.quadraticCurveTo(e + n, i, e + n, i + o.tr),
            t.lineTo(e + n, i + r - o.br),
            t.quadraticCurveTo(e + n, i + r, e + n - o.br, i + r),
            t.lineTo(e + o.bl, i + r),
            t.quadraticCurveTo(e, i + r, e, i + r - o.bl),
            t.lineTo(e, i + o.tl),
            t.quadraticCurveTo(e, i, e + o.tl, i),
            t.closePath(),
            s && t.fill(),
            a && t.stroke()
        }
        ,
        s.newCircleButtonTexture2 = function(t, e, i, n, r, o) {
            var s = "circle_button_2" + t + "_" + e + "_" + i
              , a = null;
            if (PIXI.Texture.hasTextureInCache(s))
                a = g.Texture.fromImage(s);
            else {
                var h = document.createElement("canvas");
                h.width = h.height = 2 * t;
                var l = h.getContext("2d")
                  , u = .1 * t
                  , c = t - u;
                l.beginPath(),
                l.strokeStyle = e,
                l.lineWidth = u,
                l.arc(t, t, c, 0, 2 * Math.PI),
                l.closePath(),
                l.stroke();
                var p = .05 * t;
                if (c -= p,
                l.beginPath(),
                l.strokeStyle = "black",
                l.lineWidth = p,
                l.arc(t, t, c, 0, 2 * Math.PI),
                l.closePath(),
                l.stroke(),
                null != i) {
                    l.beginPath(),
                    l.arc(t, t, c, 0, 2 * Math.PI);
                    var d = l.createLinearGradient(0, 0, 2 * t, 2 * t);
                    d.addColorStop(0, i),
                    d.addColorStop(1, n),
                    l.fillStyle = d,
                    l.closePath(),
                    l.fill()
                }
                if (null != o) {
                    l.beginPath(),
                    l.arc(t, t, t / 2, 0, 2 * Math.PI);
                    var f = l.createLinearGradient(0, 0, t, t);
                    f.addColorStop(0, r),
                    f.addColorStop(1, o),
                    l.fillStyle = f,
                    l.closePath(),
                    l.fill()
                }
                a = g.Texture.fromCanvas(h),
                PIXI.Texture.addTextureToCache(a._texture, s)
            }
            return a
        }
        ,
        s
    }();
    g.Palette = t
}(DUST || (DUST = {})),
function(t) {
    var e = function() {
        function i() {}
        return i.loadAll = function(t) {
            for (var e = 0; e < t.length; e++)
                i.load(t[e])
        }
        ,
        i.load = function(t) {
            var e = PIXI.Texture.fromFrame(t.face + ".png")
              , i = e.frame.x
              , n = e.frame.y;
            e.trim && (i -= e.trim.x,
            n -= e.trim.y);
            var r = {};
            r.font = t.face,
            r.size = t.size,
            r.lineHeight = t.lineHeight,
            r.chars = {};
            for (var o = 0; o < t.chars.length; o++) {
                var s = t.chars[o]
                  , a = new PIXI.Rectangle(s.x + i,s.y + n,s.width,s.height)
                  , h = new PIXI.Texture(e,a)
                  , l = {};
                l.xOffset = s.xoffset,
                l.yOffset = s.yoffset,
                l.xAdvance = s.xadvance,
                l.kerning = {},
                l.texture = h,
                r.chars[s.id] = l
            }
            PIXI.extras.BitmapText.fonts[t.face] = r
        }
        ,
        i
    }();
    t.FontLoader = e
}(DUST || (DUST = {})),
function(o) {
    var t = function() {
        function t(t) {
            this.useRegularContainer = !1,
            this.spawnPointMoving = !1,
            this.startAlpha = 1,
            this.endAlpha = 1,
            this.randAlphaCoef = 1,
            this.startScale = 1,
            this.endScale = 1,
            this.randScaleCoef = 1,
            this.startSpeed = 0,
            this.endSpeed = 0,
            this.randSpeedCoef = 1,
            this.minRotationSpeed = 0,
            this.maxRotationSpeed = 0,
            this.minLifetime = 0,
            this.maxLifetime = 0,
            this.updateColor = !1,
            this.startColor = 0,
            this.endColor = 0,
            this.maxParticles = 1e3,
            this.lifetime = -1,
            this.loop = -1,
            this.frequency = 100,
            this.randFrequencyDelay = 0,
            this.batchSize = 1,
            this.minStartAngle = 0,
            this.maxStartAngle = 0,
            this.activeCount = 0,
            this.particles = [],
            this.pendingDestroy = !1,
            this.sprite = t,
            this.spawnPoint = new o.Point(0,0)
        }
        return t.prototype.buildContainer = function() {
            return this.particleContainerProperties = new o.ParticleContainerProperties,
            this.updateColor = this.startColor != this.endColor,
            this.particleContainerProperties.alpha = this.startAlpha != this.endAlpha,
            this.particleContainerProperties.scale = this.startScale != this.endScale,
            this.particleContainerProperties.position = this.spawnPointMoving || 0 < this.startSpeed + this.endSpeed,
            this.particleContainerProperties.rotation = 0 < this.minRotationSpeed + this.maxRotationSpeed,
            this.updateColor ? this.particleContainer = new o.Container : this.useRegularContainer ? this.particleContainer = new o.Container : this.particleContainer = new o.ParticleContainer(this.maxParticles,this.particleContainerProperties),
            this.particleContainer
        }
        ,
        t.prototype.start = function() {
            o.Game.get().addUpdatable(this),
            o.Game.get().addRenderable(this),
            this.startTime = o.Time.now(),
            this.nextFireTime = this.startTime
        }
        ,
        t.prototype.update = function(t) {
            var e = o.Time.now();
            if (0 < this.lifetime && e - this.startTime > this.lifetime && this.destroy(),
            0 == this.loop && this.destroy(),
            this.pendingDestroy)
                this.tryDestroy();
            else if (this.nextFireTime - e < 0 && this.activeCount < this.maxParticles) {
                for (var i = Math.min(this.batchSize, this.maxParticles - this.activeCount), n = 0; n < i; n++)
                    this.emit();
                this.nextFireTime = e + this.frequency,
                0 < this.randFrequencyDelay && (this.nextFireTime += o.Random.intInRange(0, this.randFrequencyDelay)),
                0 <= this.loop && this.loop--
            }
            for (n = this.activeCount = 0; n < this.particles.length; n++) {
                var r = this.particles[n];
                r.terminated || (r.update(t),
                this.activeCount++)
            }
        }
        ,
        t.prototype.findOrCreateParticule = function() {
            for (var t = null, e = 0; e < this.particles.length; e++) {
                var i = this.particles[e];
                i.terminated && (t = i)
            }
            return null == t ? ((t = new o.Particle(this,this.sprite.texture)).particleContainerProperties = this.particleContainerProperties,
            t.anchorX = .5,
            t.anchorY = .5,
            this.particles.push(t),
            this.particleContainer.addChild(t)) : t.reset(),
            t
        }
        ,
        t.prototype.emit = function() {
            var t = this.findOrCreateParticule();
            if (null != this.spawnCircle) {
                var e = o.Random.get() * Math.PI * 2;
                t.x = Math.cos(e) * this.spawnCircle.radius + this.spawnCircle.x,
                t.y = Math.sin(e) * this.spawnCircle.radius + this.spawnCircle.y
            } else
                null != this.spawnArea ? (t.x = o.Random.intInRange(this.spawnArea.left, this.spawnArea.right),
                t.y = o.Random.intInRange(this.spawnArea.top, this.spawnArea.bottom)) : (t.x = this.spawnPoint.x,
                t.y = this.spawnPoint.y);
            if (this.particleContainerProperties.alpha) {
                var i = 1;
                1 < this.randAlphaCoef && (i = o.Random.intInRange(1, this.randAlphaCoef)),
                t.startAlpha = this.startAlpha * i,
                t.endAlpha = this.endAlpha * i
            }
            if (this.particleContainerProperties.position) {
                i = 1;
                1 < this.randSpeedCoef && (i = o.Random.intInRange(1, this.randSpeedCoef)),
                t.startSpeed = this.startSpeed * i,
                t.endSpeed = this.endSpeed * i
            }
            if (this.particleContainerProperties.scale) {
                i = 1;
                1 < this.randScaleCoef && (i = o.Random.intInRange(1, this.randScaleCoef)),
                t.startScale = this.startScale * i,
                t.endScale = this.endScale * i
            }
            this.particleContainerProperties.rotation && (t.rotationSpeed = o.Random.intInRange(this.minRotationSpeed, this.maxRotationSpeed)),
            this.updateColor && (t.startColor = this.startColor,
            t.endColor = this.endColor),
            0 < this.minLifetime + this.maxLifetime ? t.lifetime = o.Random.intInRange(this.minLifetime, this.maxLifetime) : t.lifetime = -1,
            this.minStartAngle == this.maxStartAngle ? t.angle = this.minStartAngle : t.angle = o.Random.intInRange(this.minStartAngle, this.maxStartAngle),
            t.start()
        }
        ,
        t.prototype.destroy = function() {
            this.pendingDestroy = !0
        }
        ,
        t.prototype.tryDestroy = function() {
            for (var t = 0, e = 0; e < this.particles.length; e++) {
                (i = this.particles[e]).terminated || 0 < i.lifetime && t++
            }
            if (t <= 0) {
                for (e = 0; e < this.particles.length; e++) {
                    var i;
                    (i = this.particles[e]).destroy()
                }
                this.particleContainer.removeChildren(),
                this.particleContainer.parent && this.particleContainer.parent.removeChild(this.particleContainer),
                o.Game.get().removeUpdatable(this),
                o.Game.get().removeRenderable(this)
            }
        }
        ,
        t.prototype.render = function(t) {
            for (var e = 0; e < this.particles.length; e++) {
                this.particles[e].render(t)
            }
        }
        ,
        t
    }();
    o.Emitter = t
}(DUST || (DUST = {})),
function(n) {
    var t = function() {
        function t() {}
        return t.newExplosion = function(t, e) {
            var i = new n.Emitter(n.Sprite.fromFrame(t));
            return i.maxParticles = 100,
            i.startAlpha = .8,
            i.endAlpha = .1,
            i.startScale = 1,
            i.endScale = .5,
            i.randScaleCoef = 2,
            i.startSpeed = .04,
            i.endSpeed = .02,
            i.randSpeedCoef = 4,
            i.minStartAngle = 0,
            i.maxStartAngle = 360,
            i.startColor = 16453648,
            i.endColor = 16103472,
            i.minLifetime = 1e3,
            i.maxLifetime = 1e3,
            i.spawnCircle = new n.Circle(e.x,e.y,e.radius),
            i.frequency = 10,
            i.loop = 1,
            i.batchSize = 50,
            i
        }
        ,
        t
    }();
    n.EmitterPreset = t
}(DUST || (DUST = {})),
function(c) {
    var t = function(n) {
        function t(t, e) {
            var i = n.call(this, e) || this;
            return i.terminated = !1,
            i.angle = 0,
            i.startAlpha = 1,
            i.endAlpha = 1,
            i.startScale = 1,
            i.endScale = 1,
            i.startSpeed = 0,
            i.endSpeed = 0,
            i.rotationSpeed = 0,
            i.lifetime = -1,
            i.updateColor = !1,
            i.startColor = 0,
            i.endColor = 0,
            i.emitter = t,
            i
        }
        return __extends(t, n),
        t.prototype.start = function() {
            if (this.scaleX = this.startScale,
            this.scaleY = this.startScale,
            this.alpha = this.startAlpha,
            this.interpolator = new r(this),
            this.startTime = c.Time.now(),
            0 < this.lifetime && (this.endTime = c.Time.now() + this.lifetime),
            this.startColor != this.endColor) {
                this.updateColor = !0;
                var t = c.Colors.getRgb(this.startColor)
                  , e = c.Colors.getRgb(this.endColor);
                this._scR = t[0],
                this._scG = t[1],
                this._scB = t[2],
                this._ecR = e[0],
                this._ecG = e[1],
                this._ecB = e[2]
            }
            var i = this.angle * c.Maths.DEG_TO_RADIAN;
            this.angleCos = Math.cos(i),
            this.angleSin = Math.sin(i)
        }
        ,
        t.prototype.update = function(t) {
            if (!this.terminated) {
                var e = c.Time.now()
                  , i = 1;
                if (0 < this.lifetime) {
                    if (e > this.endTime)
                        return this.terminated = !0,
                        void (this.visible = !1);
                    var n = e - this.startTime;
                    i = Math.min(n, this.lifetime) / this.lifetime
                }
                if (this.particleContainerProperties.alpha) {
                    var r = this.startAlpha + (this.endAlpha - this.startAlpha) * i;
                    this.interpolator.alpha = r
                }
                if (this.particleContainerProperties.scale) {
                    r = this.startScale + (this.endScale - this.startScale) * i;
                    this.interpolator.scaleX = r,
                    this.interpolator.scaleY = r
                }
                if (this.particleContainerProperties.position) {
                    var o = this.startSpeed + (this.endSpeed - this.startSpeed) * i
                      , s = t * (o * this.angleCos)
                      , a = t * (o * this.angleSin);
                    this.interpolator.x += s,
                    this.interpolator.y += a
                }
                if (this.particleContainerProperties.rotation && (this.interpolator.rotation += this.rotationSpeed * t),
                this.updateColor) {
                    var h = this._scR + (this._ecR - this._scR) * i
                      , l = this._scG + (this._ecG - this._scG) * i
                      , u = this._scB + (this._ecB - this._scB) * i;
                    this.tint = c.Colors.fromRgb(h, l, u)
                }
            }
        }
        ,
        t.prototype.render = function(t) {
            this.terminated || this.interpolator.applyInterpolation(t)
        }
        ,
        t.prototype.reset = function() {
            this.terminated = !1,
            this.visible = !0
        }
        ,
        t.prototype.destroy = function() {
            this.visible = !1
        }
        ,
        t
    }(c.Sprite);
    c.Particle = t;
    var r = function() {
        function t(t) {
            this.sprite = t,
            this.init()
        }
        return t.prototype.init = function() {
            this.init0(),
            this.init0()
        }
        ,
        t.prototype.init0 = function() {
            this.alpha = this.sprite.alpha,
            this.scaleX = this.sprite.scaleX,
            this.scaleY = this.sprite.scaleY,
            this.x = this.sprite.x,
            this.y = this.sprite.y,
            this.rotation = this.sprite.rotation
        }
        ,
        Object.defineProperty(t.prototype, "alpha", {
            get: function() {
                return this._alpha
            },
            set: function(t) {
                this._alpha0 = this._alpha,
                this._alpha = t
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "scaleX", {
            get: function() {
                return this._scaleX
            },
            set: function(t) {
                this._scaleX0 = this._scaleX,
                this._scaleX = t
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "scaleY", {
            get: function() {
                return this._scaleY
            },
            set: function(t) {
                this._scaleY0 = this._scaleY,
                this._scaleY = t
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "x", {
            get: function() {
                return this._x
            },
            set: function(t) {
                this._x0 = this._x,
                this._x = t
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "y", {
            get: function() {
                return this._y
            },
            set: function(t) {
                this._y0 = this._y,
                this._y = t
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "rotation", {
            get: function() {
                return this._rotation
            },
            set: function(t) {
                this._rotation0 = this._rotation,
                this._rotation = t
            },
            enumerable: !0,
            configurable: !0
        }),
        t.prototype.applyInterpolation = function(t) {
            null != this._alpha0 && (this.sprite.alpha = this._alpha0 + (this._alpha - this._alpha0) * t),
            null != this._scaleX0 && (this.sprite.scaleX = this._scaleX0 + (this._scaleX - this._scaleX0) * t),
            null != this._scaleY0 && (this.sprite.scaleY = this._scaleY0 + (this._scaleY - this._scaleY0) * t),
            null != this._x0 && (this.sprite.x = this._x0 + (this._x - this._x0) * t),
            null != this._y0 && (this.sprite.y = this._y0 + (this._y - this._y0) * t),
            null != this._rotation0 && (this.sprite.rotation = this._rotation0 + (this._rotation - this._rotation0) * t)
        }
        ,
        t
    }();
    c.SpriteInterpolator = r
}(DUST || (DUST = {})),
function(t) {
    var e = function(n) {
        function t(t, e) {
            var i = n.call(this) || this;
            return i._wrapped = new PIXI.extras.BitmapText(t,e),
            i._debugId = "BitmapText-" + i._id,
            i
        }
        return __extends(t, n),
        t.prototype.cast = function() {
            return this._wrapped
        }
        ,
        t.prototype.centerIn = function(t) {
            var e = this.cast().textWidth * this.scaleX
              , i = this.cast().textHeight * this.scaleY
              , n = Math.round((t.width - e) / 2)
              , r = Math.round((t.height - i) / 2);
            this.x = t.x + n,
            this.y = t.y + r
        }
        ,
        t.prototype.centerAt = function(t) {
            var e = this.cast().textWidth
              , i = this.cast().textHeight;
            this.x = t.x - Math.round(e / 2),
            this.y = t.y - Math.round(i / 2)
        }
        ,
        t.prototype.fitInX = function(t, e) {
            void 0 === e && (e = !1);
            var i = e ? this.width : this.textWidth;
            if (i <= t)
                return 1;
            var n = t / i;
            return this.scaleXY = n
        }
        ,
        Object.defineProperty(t.prototype, "maxWidth", {
            get: function() {
                return this.cast().maxWidth
            },
            set: function(t) {
                this.cast().maxWidth = t
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "text", {
            get: function() {
                return this.cast().text
            },
            set: function(t) {
                this.cast().text = t,
                this._clearWidthHeightCache()
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "font", {
            get: function() {
                return this.cast().font
            },
            set: function(t) {
                this.cast().font = t
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "align", {
            get: function() {
                return this.cast().align
            },
            set: function(t) {
                this.cast().align = t
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "tint", {
            get: function() {
                return this.cast().tint
            },
            set: function(t) {
                this.cast().tint = t
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "centerX", {
            set: function(t) {
                var e = this.cast().textWidth;
                e *= this.scaleX,
                this.x = t - Math.round(e / 2)
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "centerY", {
            set: function(t) {
                var e = this.cast().textHeight;
                e *= this.scaleY,
                this.y = t - Math.round(e / 2)
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "textWidth", {
            get: function() {
                return this.cast().textWidth
            },
            set: function(t) {
                this.cast().textWidth = t
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "textHeight", {
            get: function() {
                return this.cast().textHeight
            },
            set: function(t) {
                this.cast().textHeight = t
            },
            enumerable: !0,
            configurable: !0
        }),
        t
    }(t.Container);
    t.BitmapText = e
}(DUST || (DUST = {})),
function(t) {
    var e = function() {
        function t() {}
        return t.ADD = PIXI.BLEND_MODES.ADD,
        t.COLOR = PIXI.BLEND_MODES.COLOR,
        t.COLOR_BURN = PIXI.BLEND_MODES.COLOR_BURN,
        t.COLOR_DUDGE = PIXI.BLEND_MODES.COLOR_DODGE,
        t.DARKEN = PIXI.BLEND_MODES.DARKEN,
        t.DIFFERENCE = PIXI.BLEND_MODES.DIFFERENCE,
        t.EXCLUSION = PIXI.BLEND_MODES.EXCLUSION,
        t.HARD_LIGHT = PIXI.BLEND_MODES.HARD_LIGHT,
        t.HUE = PIXI.BLEND_MODES.HUE,
        t.LIGHTEN = PIXI.BLEND_MODES.LIGHTEN,
        t.LUMINOSITY = PIXI.BLEND_MODES.LUMINOSITY,
        t.MULTIPLY = PIXI.BLEND_MODES.MULTIPLY,
        t.NORMAL = PIXI.BLEND_MODES.NORMAL,
        t.OVERLAY = PIXI.BLEND_MODES.OVERLAY,
        t.SATURATION = PIXI.BLEND_MODES.SATURATION,
        t.SCREEN = PIXI.BLEND_MODES.SCREEN,
        t.SOFT_LIGHT = PIXI.BLEND_MODES.SOFT_LIGHT,
        t
    }();
    t.BlendMode = e
}(DUST || (DUST = {})),
function(t) {
    var e = function() {};
    (DUST || (DUST = {})).AbstractFilter = e
}(),
function(t) {
    var e = function(i) {
        function t() {
            var t = i.call(this) || this
              , e = new PIXI.filters.ColorMatrixFilter;
            return t._filter = e,
            t
        }
        return __extends(t, i),
        t.prototype.brightness = function(t, e) {
            this._filter.brightness(t, e)
        }
        ,
        t.prototype.greyscale = function(t, e) {
            this._filter.greyscale(t, e)
        }
        ,
        t.prototype.blackAndWhite = function(t) {
            this._filter.blackAndWhite(t)
        }
        ,
        t.prototype.hue = function(t, e) {
            this._filter.hue(t, e)
        }
        ,
        t.prototype.contrast = function(t, e) {
            this._filter.contrast(t, e)
        }
        ,
        t.prototype.saturate = function(t, e) {
            this._filter.saturate(t, e)
        }
        ,
        t.prototype.desaturate = function(t) {
            this._filter.desaturate(t)
        }
        ,
        t.prototype.negative = function(t) {
            this._filter.negative(t)
        }
        ,
        t.prototype.sepia = function(t) {
            this._filter.sepia(t)
        }
        ,
        t.prototype.technicolor = function(t) {
            this._filter.technicolor(t)
        }
        ,
        t.prototype.polaroid = function(t) {
            this._filter.polaroid(t)
        }
        ,
        t.prototype.toBGR = function(t) {
            this._filter.toBGR(t)
        }
        ,
        t.prototype.kodachrome = function(t) {
            this._filter.kodachrome(t)
        }
        ,
        t.prototype.browni = function(t) {
            this._filter.browni(t)
        }
        ,
        t.prototype.vintage = function(t) {
            this._filter.vintage(t)
        }
        ,
        t.prototype.colorTone = function(t, e, i, n, r) {
            this._filter.colorTone(t, e, i, n, r)
        }
        ,
        t.prototype.night = function(t, e) {
            this._filter.night(t, e)
        }
        ,
        t.prototype.predator = function(t, e) {
            this._filter.predator(t, e)
        }
        ,
        t.prototype.lsd = function(t) {
            this._filter.lsd(t)
        }
        ,
        t.prototype.reset = function() {
            this._filter.reset()
        }
        ,
        t
    }(t.AbstractFilter);
    t.ColorMatrixFilter = e
}(DUST || (DUST = {})),
function(t) {
    var e = function(r) {
        function t(t, e) {
            void 0 === e && (e = 0);
            var i = r.call(this) || this;
            i._gray = t,
            i._padding = e;
            var n = new PIXI.filters.GrayFilter;
            return n.gray = t,
            i._filter = n,
            i
        }
        return __extends(t, r),
        t
    }(t.AbstractFilter);
    t.GrayFilter = e
}(DUST || (DUST = {})),
function(t) {
    var e = function(o) {
        function t(t, e, i) {
            void 0 === i && (i = 0);
            var n = o.call(this) || this;
            n._width = t,
            n._height = e,
            n._padding = i;
            var r = new PIXI.filters.PixelateFilter;
            return r.size = new PIXI.Point(t,e),
            r.padding = i,
            n._filter = r,
            n
        }
        return __extends(t, o),
        t
    }(t.AbstractFilter);
    t.PixelateFilter = e
}(DUST || (DUST = {})),
function(t) {
    var e = function(e) {
        function t() {
            var t = e.call(this) || this;
            return t._wrapped = new PIXI.Graphics,
            t._debugId = "Graphics-" + t._id,
            t
        }
        return __extends(t, e),
        t.prototype.cast = function() {
            return this._wrapped
        }
        ,
        t.prototype.lineStyle = function(t, e, i) {
            return this.cast().lineStyle(t, e, i),
            this
        }
        ,
        t.prototype.moveTo = function(t, e) {
            return this.cast().moveTo(t, e),
            this
        }
        ,
        t.prototype.lineTo = function(t, e) {
            return this.cast().lineTo(t, e),
            this
        }
        ,
        t.prototype.quadraticCurveTo = function(t, e, i, n) {
            return this.cast().quadraticCurveTo(t, e, i, n),
            this
        }
        ,
        t.prototype.bezierCurveTo = function(t, e, i, n, r, o) {
            return this.cast().bezierCurveTo(t, e, i, n, r, o),
            this
        }
        ,
        t.prototype.arcTo = function(t, e, i, n, r) {
            return this.cast().arcTo(t, e, i, n, r),
            this
        }
        ,
        t.prototype.arc = function(t, e, i, n, r, o) {
            return this.cast().arc(t, e, i, n, r, o),
            this
        }
        ,
        t.prototype.beginFill = function(t, e) {
            return this.cast().beginFill(t, e),
            this
        }
        ,
        t.prototype.endFill = function() {
            return this.cast().endFill(),
            this
        }
        ,
        t.prototype.drawRect = function(t, e, i, n) {
            return this.cast().drawRect(t, e, i, n),
            this
        }
        ,
        t.prototype.drawRoundedRect = function(t, e, i, n, r) {
            return this.cast().drawRoundedRect(t, e, i, n, r),
            this
        }
        ,
        t.prototype.drawCircle = function(t, e, i) {
            return this.cast().drawCircle(t, e, i),
            this
        }
        ,
        t.prototype.drawEllipse = function(t, e, i, n) {
            return this.cast().drawEllipse(t, e, i, n),
            this
        }
        ,
        t.prototype.drawPolygon = function(t) {
            for (var e = Array(), i = 0; i < t.length; i++)
                e.push(this.toPixiPoint(t[i]));
            return this.cast().drawPolygon(e),
            this
        }
        ,
        t.prototype.clear = function() {
            return this.cast().clear(),
            this
        }
        ,
        Object.defineProperty(t.prototype, "tint", {
            get: function() {
                return this.cast().tint
            },
            set: function(t) {
                this.cast().tint = t
            },
            enumerable: !0,
            configurable: !0
        }),
        t
    }(t.Container);
    t.Graphics = e
}(DUST || (DUST = {})),
function(n) {
    var t = function(t) {
        function i() {
            return null !== t && t.apply(this, arguments) || this
        }
        return __extends(i, t),
        i.fromTextures = function(t) {
            var e = new i;
            return e._wrapped = new PIXI.extras.MovieClip(t),
            e._texture = new n.Texture,
            e._texture._texture = e.cast().texture,
            e
        }
        ,
        i.fromFrames = function(t) {
            var e = [];
            return t.forEach(function(t) {
                e.push(PIXI.Texture.fromFrame(t))
            }),
            i.fromTextures(e)
        }
        ,
        i.prototype.cast = function() {
            return this._wrapped
        }
        ,
        i.prototype.stop = function() {
            this.cast().stop()
        }
        ,
        i.prototype.play = function() {
            this.cast().play()
        }
        ,
        i.prototype.gotoAndStop = function(t) {
            this.cast().gotoAndStop(t)
        }
        ,
        i.prototype.gotoAndPlay = function(t) {
            this.cast().gotoAndPlay(t)
        }
        ,
        i.prototype.destroy = function() {
            this.cast().destroy()
        }
        ,
        i.prototype.getDebugId = function() {
            return "MovieClip-" + this._id
        }
        ,
        i.prototype.setFrames = function(t) {
            var e = [];
            t.forEach(function(t) {
                e.push(PIXI.Texture.fromFrame(t))
            }),
            this.cast().textures = e
        }
        ,
        Object.defineProperty(i.prototype, "animationSpeed", {
            get: function() {
                return this.cast().animationSpeed
            },
            set: function(t) {
                this.cast().animationSpeed = t
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(i.prototype, "loop", {
            get: function() {
                return this.cast().loop
            },
            set: function(t) {
                this.cast().loop = t
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(i.prototype, "onComplete", {
            set: function(t) {
                this.cast().onComplete = t
            },
            enumerable: !0,
            configurable: !0
        }),
        i
    }(n.Sprite);
    n.MovieClip = t
}(DUST || (DUST = {})),
function(t) {
    var e = function() {
        this.scale = !1,
        this.position = !0,
        this.rotation = !1,
        this.uvs = !1,
        this.alpha = !1
    };
    t.ParticleContainerProperties = e;
    var i = function(n) {
        function t(t, e) {
            var i = n.call(this) || this;
            return i._wrapped = new PIXI.ParticleContainer(t,e),
            i._debugId = "ParticleContainer-" + i._id,
            i
        }
        return __extends(t, n),
        t.prototype.cast = function() {
            return this._wrapped
        }
        ,
        t.prototype.setProperties = function(t) {
            this.cast().setProperties(t)
        }
        ,
        t
    }(t.Container);
    t.ParticleContainer = i
}(DUST || (DUST = {})),
function(o) {
    var t = function() {
        function r(t, e, i, n, r) {
            t && (this._texture = new PIXI.Texture(t._texture.baseTexture,o.Rectangle.toPixiRectangle(e),o.Rectangle.toPixiRectangle(i),o.Rectangle.toPixiRectangle(n),r))
        }
        return r.fromImage = function(t, e, i) {
            var n = new r;
            return n._texture = PIXI.Texture.fromImage(t, e, i),
            n
        }
        ,
        r.fromFrame = function(t) {
            var e = new r;
            return e._texture = PIXI.Texture.fromFrame(t),
            e
        }
        ,
        r.fromCanvas = function(t, e) {
            var i = new r;
            return i._texture = PIXI.Texture.fromCanvas(t, e),
            i
        }
        ,
        Object.defineProperty(r.prototype, "width", {
            get: function() {
                return this._texture.width
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(r.prototype, "height", {
            get: function() {
                return this._texture.height
            },
            enumerable: !0,
            configurable: !0
        }),
        r.prototype.getPixels = function() {
            return this._texture.getPixels()
        }
        ,
        r.fromFrames = function(t) {
            var e = [];
            return t.forEach(function(t) {
                e.push(r.fromFrame(t))
            }),
            e
        }
        ,
        r.hasInCache = function(t) {
            return PIXI.Texture.hasTextureInCache(t)
        }
        ,
        r.prototype.destroy = function(t) {
            void 0 === t && (t = !1),
            this._texture.destroy(t),
            console.error("destroy texture base?: " + t)
        }
        ,
        r
    }();
    o.Texture = t
}(DUST || (DUST = {})),
function(t) {
    var e = function(s) {
        function t(t, e, i, n, r) {
            var o = s.call(this) || this;
            return o._texture = new PIXI.RenderTexture(t,e,i,n,r),
            o
        }
        return __extends(t, s),
        t.prototype.cast = function() {
            return this._texture
        }
        ,
        t.prototype.render = function(t, e, i, n) {
            this._texture.render(t._wrapped, e, i, n)
        }
        ,
        t.prototype.resize = function(t, e, i) {
            this.cast().resize(t, e, i)
        }
        ,
        t.prototype.clear = function() {
            this.cast().clear()
        }
        ,
        t.prototype.destroy = function() {
            this.cast().destroy()
        }
        ,
        t.prototype.getImage = function() {
            return this.cast().getImage()
        }
        ,
        t.prototype.getPixels = function() {
            return this.cast().getPixels()
        }
        ,
        t.prototype.getPixel = function(t, e) {
            return this.cast().getPixel(t, e)
        }
        ,
        t.prototype.getBase64 = function() {
            return this.cast().getBase64()
        }
        ,
        t.prototype.getCanvas = function() {
            return this.cast().getCanvas()
        }
        ,
        t
    }(t.Texture);
    t.RenderTexture = e
}(DUST || (DUST = {})),
function(t) {
    var e = function(n) {
        function t(t, e) {
            var i = n.call(this) || this;
            return i._wrapped = new PIXI.Text(t,e),
            i._debugId = "Text-" + i._id,
            i
        }
        return __extends(t, n),
        t.prototype.cast = function() {
            return this._wrapped
        }
        ,
        Object.defineProperty(t.prototype, "text", {
            get: function() {
                return this.cast().text
            },
            set: function(t) {
                this.cast().text = t
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "style", {
            get: function() {
                return this.cast().style
            },
            set: function(t) {
                this.cast().style = t
            },
            enumerable: !0,
            configurable: !0
        }),
        t
    }(t.Sprite);
    t.Text = e
}(DUST || (DUST = {})),
function(r) {
    var t = function(s) {
        function n(t, e, i) {
            void 0 === e && (e = null),
            void 0 === i && (i = null);
            var n = s.call(this) || this
              , r = null == e ? t.width : e
              , o = null == i ? t.height : i;
            return n._wrapped = new PIXI.extras.TilingSprite(t._texture,r,o),
            n._debugId = "TilingSprite-" + n._id,
            n
        }
        return __extends(n, s),
        n.fromFrame = function(t, e, i) {
            return new n(r.Texture.fromFrame(t),e,i)
        }
        ,
        n.prototype.cast = function() {
            return this._wrapped
        }
        ,
        Object.defineProperty(n.prototype, "tilePositionX", {
            get: function() {
                return this.cast().tilePosition.x
            },
            set: function(t) {
                this.cast().tilePosition.x = t
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(n.prototype, "tilePositionY", {
            get: function() {
                return this.cast().tilePosition.y
            },
            set: function(t) {
                this.cast().tilePosition.y = t
            },
            enumerable: !0,
            configurable: !0
        }),
        n
    }(r.Sprite);
    r.TilingSprite = t
}(DUST || (DUST = {})),
function(e) {
    var s = function() {
        function t() {
            this.position = new e.Point(0,0)
        }
        return Object.defineProperty(t.prototype, "positionX", {
            set: function(t) {
                var e = t - this.position.x;
                0 != e && (this.position.x = t,
                this.sprite.tilePositionX -= e * this.speedX)
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "positionY", {
            set: function(t) {
                var e = t - this.position.y;
                0 != e && (this.position.y = t,
                this.sprite.tilePositionY -= e * this.speedY)
            },
            enumerable: !0,
            configurable: !0
        }),
        t
    }()
      , t = function() {
        function t() {
            this.position = new e.Point(0,0),
            this.tilingSprites = [],
            this.updateX = !1,
            this.updateY = !1,
            this.container = new e.Container,
            this.container.setDebugId("parallax")
        }
        return t.prototype.addBackground = function(t, e, i) {
            this.container.addChild(t),
            null != e && (t.x = e),
            null != i && (t.y = i)
        }
        ,
        t.prototype.addTilingSprite = function(t, e, i, n, r) {
            var o = new s;
            o.sprite = t,
            o.speedX = e,
            o.speedY = i,
            this.tilingSprites.push(o),
            this.container.addChild(t),
            null != n && (t.x = n),
            null != r && (t.y = r),
            0 != e && (this.updateX = !0),
            0 != i && (this.updateY = !0)
        }
        ,
        t.prototype.follow = function(t) {
            this.target = t
        }
        ,
        t.prototype.followCamera = function(t) {
            this.camera = t
        }
        ,
        t.prototype.update = function() {
            null != this.target && this.updatePosition(this.target.x, this.target.y)
        }
        ,
        t.prototype.destroy = function() {
            this.container.removeSelf()
        }
        ,
        t.prototype.updatePosition = function(e, i) {
            this.position.x,
            this.position.y;
            this.position.x = e,
            this.position.y = i,
            this.tilingSprites.forEach(function(t) {
                this.updateX && (t.positionX = e),
                this.updateY && (t.positionY = i)
            }, this),
            null != this.camera && (this.updateX || (this.container.x = -this.camera.x),
            this.updateY || (this.container.y = -this.camera.y))
        }
        ,
        Object.defineProperty(t.prototype, "positionX", {
            get: function() {
                return this.position.x
            },
            set: function(t) {
                this.updatePosition(t, this.positionY)
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "positionY", {
            get: function() {
                return this.position.y
            },
            set: function(t) {
                this.updatePosition(this.positionX, t)
            },
            enumerable: !0,
            configurable: !0
        }),
        t
    }();
    e.ParallaxScroller = t
}(DUST || (DUST = {})),
function(o) {
    var t = function(n) {
        function t() {
            var t = n.call(this) || this;
            t.applyVelocity = !0,
            t.velocityTheshold = .2,
            t.dragDurationVelocityTheshold = 400,
            t.wheelOnY = !0,
            t.scrollEnableOnX = !0,
            t.scrollEnableOnY = !0,
            t.innerVelocity = new o.Vector,
            t.dragStartPosition = new o.Point,
            t.dragStartTime = 0,
            t.lastInnerPosition = new o.Point,
            t.scrollHandler = new o.HandlerCollection;
            var e = t
              , i = o.Game.get().bounds;
            return t.game = o.Game.get(),
            t.game.addUpdatable(t),
            t.inner = new o.Container,
            t.addChild(t.inner),
            t.dragManager = new o.DragManager(t),
            t.dragManager.setStartDragController(function(t) {
                return e.canStartDrag(t)
            }),
            t.game.inputManager.mouse.mouseWheelHandlers.add(t.onMouseWheel, t),
            t.detachListener.once(function() {
                e.destroy()
            }),
            t.setSize(i.width, i.height),
            t
        }
        return __extends(t, n),
        t.prototype.setSize = function(t, e) {
            null != this.contentMask && this.contentMask.removeSelf(),
            this.contentBounds = new o.Rectangle(0,0,t,e),
            this.contentMask = new o.Graphics,
            this.contentMask.beginFill(0, 1),
            this.contentMask.drawRect(0, 0, t, e),
            this.contentMask.endFill(),
            this.contentMask.cacheAsBitmap = !0,
            this.addChild(this.contentMask),
            this.mask = this.contentMask
        }
        ,
        t.prototype.onDragBegin = function(t) {
            this.dragStartPosition = t.copy(),
            this.dragStartTime = Date.now(),
            this.innerVelocity.x = 0,
            this.innerVelocity.y = 0
        }
        ,
        t.prototype.onDragMove = function(t, e, i) {
            this.scrollEnableOnX && (this.inner.x += t),
            this.scrollEnableOnY && (this.inner.y += e),
            this.checkBoundLimit()
        }
        ,
        t.prototype.onDragEnd = function(t) {
            var e = t.x - this.dragStartPosition.x
              , i = t.y - this.dragStartPosition.y
              , n = Date.now() - this.dragStartTime;
            this.scrollEnableOnX || (e = 0),
            this.scrollEnableOnY || (i = 0),
            this.applyVelocity && n < this.dragDurationVelocityTheshold && (this.innerVelocity.x = e / n,
            this.innerVelocity.y = i / n)
        }
        ,
        t.prototype.onMouseWheel = function(t) {
            var e = o.Game.get().inputManager.mouse.position;
            if (this.canStartDrag(e)) {
                var i = 0
                  , n = 0
                  , r = 50 * -t;
                this.wheelOnY ? n = r : i = r,
                this.doFakeDrag(i, n, 1e3)
            }
        }
        ,
        t.prototype.addDisplayObject = function(t, e) {
            var i;
            return i = null != e ? this.inner.addChildAt(t, e) : this.inner.addChild(t),
            this.computeInnerMinMax(),
            i
        }
        ,
        t.prototype.clear = function() {
            this.inner.removeChildren()
        }
        ,
        t.prototype.moveTo = function(t, e) {
            void 0 === t && (t = null),
            void 0 === e && (e = null),
            null != t && (this.inner.x = -t),
            null != e && (this.inner.y = -e),
            this.checkBoundLimit()
        }
        ,
        t.prototype.moveBy = function(t, e) {
            void 0 === t && (t = null),
            void 0 === e && (e = null),
            null != t && (this.inner.x -= t),
            null != e && (this.inner.y -= e),
            this.checkBoundLimit()
        }
        ,
        t.prototype.moveByAbout = function(t, e) {
            void 0 === t && (t = null),
            void 0 === e && (e = null),
            this.canMove() && (null == t && (t = 0),
            null == e && (e = 0),
            this.inner.x += t,
            this.inner.y += e,
            this.doFakeDrag(-t, -e, 300))
        }
        ,
        t.prototype.update = function(t) {
            0 == this.innerVelocity.x && 0 == this.innerVelocity.y || (this.innerVelocity.x *= .95,
            this.innerVelocity.y *= .95,
            Math.abs(this.innerVelocity.x) < this.velocityTheshold && (this.innerVelocity.x = 0),
            Math.abs(this.innerVelocity.y) < this.velocityTheshold && (this.innerVelocity.y = 0),
            this.inner.x = this.inner.x + t * this.innerVelocity.x,
            this.inner.y = this.inner.y + t * this.innerVelocity.y,
            this.checkBoundLimit())
        }
        ,
        t.prototype.getContentBound = function() {
            return this.contentBounds.x = -this.inner.x,
            this.contentBounds.y = -this.inner.y,
            this.contentBounds
        }
        ,
        t.prototype.doFakeDrag = function(t, e, i) {
            var n = new o.Point(this.inner.x,this.inner.y)
              , r = n.copy();
            r.x = r.x + t,
            r.y = r.y + e,
            this.onDragBegin(n),
            this.dragStartTime = Date.now() - i,
            this.onDragMove(t, e, r),
            this.onDragEnd(r)
        }
        ,
        t.prototype.computeInnerMinMax = function() {
            var t = this.inner.width
              , e = this.inner.height;
            this.innerMin = new o.Point(-t + this.contentBounds.width,-e + this.contentBounds.height),
            this.innerMax = new o.Point(0,0)
        }
        ,
        t.prototype.canMove = function() {
            return !(this.inner.width <= this.contentBounds.width && this.inner.height <= this.contentBounds.height)
        }
        ,
        t.prototype.canStartDrag = function(t) {
            return !!this.canMove() && o.InputHelper.containsPoint(t, this, this.contentBounds.width, this.contentBounds.height)
        }
        ,
        t.prototype.checkBoundLimit = function() {
            this.scrollEnableOnX && (this.inner.x < this.innerMin.x ? this.inner.x = this.innerMin.x : this.inner.x > this.innerMax.x && (this.inner.x = this.innerMax.x)),
            this.scrollEnableOnY && (this.inner.y < this.innerMin.y ? this.inner.y = this.innerMin.y : this.inner.y > this.innerMax.y && (this.inner.y = this.innerMax.y));
            var t = this.lastInnerPosition.x - this.inner.x
              , e = this.lastInnerPosition.y - this.inner.y;
            this.lastInnerPosition.x = this.inner.x,
            this.lastInnerPosition.y = this.inner.y,
            0 == t && 0 == e || this.scrollHandler.fire(t, e, -this.lastInnerPosition.x, -this.lastInnerPosition.y)
        }
        ,
        t.prototype.destroy = function() {
            this.dragManager.destroy(),
            this.game.inputManager.mouse.mouseWheelHandlers.remove(this.onMouseWheel)
        }
        ,
        t.prototype.addScrollHandler = function(t, e) {
            this.scrollHandler.add(t, e)
        }
        ,
        t.prototype.removeScrollHandler = function(t) {
            this.scrollHandler.remove(t)
        }
        ,
        t
    }(o.Container);
    o.ScrollableContainer = t
}(DUST || (DUST = {})),
function(t) {
    var e = function() {
        function r() {}
        return r.merge = function(t, e) {
            for (var i in t) {
                var n = t[i];
                "constructor" != typeof n && "function" != typeof n && ("[object Array]" === Object.prototype.toString.call(n) && 0 < n.length && (e[i] = n.slice(0)),
                i in e && "object" == typeof n ? r.merge(n, e[i]) : e[i] = n)
            }
        }
        ,
        r
    }();
    t.JSONS = e
}(DUST || (DUST = {})),
function(o) {
    var t = function() {
        function r() {}
        return r.setAvailableLocales = function(t) {
            r.availableLocales = t
        }
        ,
        r.registerTranslation = function(t, e) {
            null == r.translations[t] && (r.translations[t] = {}),
            o.JSONS.merge(e, r.translations[t])
        }
        ,
        r.setDefaultLocale = function(t) {
            r.defaultLocale = t
        }
        ,
        r.setLocale = function(t) {
            r.locale = 0 <= r.availableLocales.indexOf(t) ? t : r.defaultLocale
        }
        ,
        r.isAvailableLocale = function(t) {
            return 0 <= r.availableLocales.indexOf(t)
        }
        ,
        r.get = function(t, e) {
            var i = r.translations[r.locale][t];
            if (i)
                return null != e ? o.Strings.interpolate(i, e) : i;
            var n = r.translations[r.defaultLocale][t];
            return n ? null != e ? o.Strings.interpolate(n, e) : n : t
        }
        ,
        r.getPluralForm = function(t, e) {
            null == e && (e = r.locale);
            return "fr" == e ? 1 < t ? 1 : 0 : "lv" == e ? 0 == t ? 0 : t % 10 == 1 && t % 100 != 11 ? 1 : 2 : "pl" == e ? 1 == t ? 0 : 2 <= t % 10 && t % 10 <= 4 && (t % 100 < 10 || 20 <= t % 100) ? 1 : 2 : "ru" == e ? t % 10 == 1 && t % 100 != 11 ? 0 : 2 <= t % 10 && t % 10 <= 4 && (t % 100 < 10 || 20 <= t % 100) ? 1 : 2 : 1 == t ? 0 : 1
        }
        ,
        r.getPlural = function(t, e, i) {
            null == i && (i = {
                n: t
            });
            var n = r.getPluralForm(t);
            return r.get(e + "_F" + n, i)
        }
        ,
        r.availableLocales = [],
        r.defaultLocale = "en",
        r.locale = "en",
        r.translations = [],
        r
    }();
    o.I18N = t
}(DUST || (DUST = {})),
function(e) {
    var t = function() {
        function t() {
            this.isDown = !1,
            this.isUp = !0,
            this.isJustDown = !1,
            this.isJustUp = !1,
            this.timeDown = 0,
            this.timeUp = 0,
            this.downDuration = 0,
            this.justUpdated = !1,
            this.duration = 0
        }
        return t.prototype.update = function() {
            this.isDown && (this.downDuration = e.Time.now() - this.timeDown),
            this.justUpdated ? (this.isJustDown = this.isDown,
            this.isJustUp = this.isUp) : (this.isJustDown = !1,
            this.isJustUp = !1),
            this.justUpdated = !1
        }
        ,
        t.prototype.ondown = function() {
            this.isDown || (this.justUpdated = !0,
            this.isDown = !0,
            this.isUp = !1,
            this.timeDown = e.Time.now(),
            this.downDuration = 0)
        }
        ,
        t.prototype.onup = function() {
            this.isUp || (this.justUpdated = !0,
            this.isDown = !1,
            this.isUp = !0,
            this.timeUp = e.Time.now())
        }
        ,
        t
    }();
    e.AbstractInput = t
}(DUST || (DUST = {})),
function(i) {
    var t = function() {
        function t(t) {
            this.logger = JL("DragManager"),
            this._enabled = !0;
            var e = i.Game.get();
            e.addUpdatable(this),
            this.dragListener = t,
            this.pointer = e.inputManager.mouse.pointer
        }
        return t.prototype.enable = function() {
            this._enabled = !0
        }
        ,
        t.prototype.disable = function() {
            this._enabled = !1
        }
        ,
        t.prototype.onStateDown = function(t) {
            if (null != this.startDragController && !this.startDragController(t))
                return;
            this.down || (this.previousPosition = new i.Point(t.x,t.y),
            this.down = !0,
            this.dragListener.onDragBegin(t))
        }
        ,
        t.prototype.hasMoved = function(t) {
            if (this.down) {
                var e = 1 <= Math.abs(t.x - this.previousPosition.x)
                  , i = 1 <= Math.abs(t.y - this.previousPosition.y);
                if (e || i)
                    return !0
            }
            return !1
        }
        ,
        t.prototype.onStateMove = function(t) {
            this.down && this.dragListener.onDragMove(t.x - this.previousPosition.x, t.y - this.previousPosition.y, t),
            this.previousPosition = new i.Point(t.x,t.y)
        }
        ,
        t.prototype.onStateUp = function(t) {
            this.down && (this.down = !1,
            this.dragListener.onDragEnd(t))
        }
        ,
        t.prototype.update = function(t) {
            this._enabled && (this.pointer.isJustDown ? this.onStateDown(this.pointer.downPosition) : this.pointer.isJustUp ? this.onStateUp(this.pointer.upPosition) : this.pointer.isDown && this.hasMoved(this.pointer.position) && this.onStateMove(this.pointer.position))
        }
        ,
        t.prototype.destroy = function() {
            i.Game.get().removeUpdatable(this)
        }
        ,
        t.prototype.setStartDragController = function(t) {
            this.startDragController = t
        }
        ,
        t
    }();
    i.DragManager = t
}(DUST || (DUST = {})),
function(r) {
    var t = function() {
        this.width = 300,
        this.height = 50,
        this.borderWidth = 2,
        this.borderColor = 0,
        this.focusBorderColor = 16737792,
        this.placeholder = "",
        this.placeholderColor = 11776947
    };
    r.TextBoxOption = t;
    var e = function() {
        function t(t, e) {
            this.options = t,
            this.textFactory = e,
            this.game = r.Game.get(),
            this.justFocus = !1,
            this.hasFocus = !1,
            this.container = new r.Container,
            this.textContainer = new r.Container,
            this.value = "",
            this.focusinHandlers = new r.HandlerCollection,
            this.submitHandlers = new r.HandlerCollection,
            this.valueChangeHandlers = new r.HandlerCollection;
            var i = this
              , n = e();
            this.text = n,
            this.placeholder = e(),
            this.placeholder.text = t.placeholder,
            this.placeholder.tint = t.placeholderColor,
            this.placeholder.visible = !0,
            this.carret = e(),
            this.carret.text = "|",
            this.carret.visible = !1,
            this.border = this.buildBorder(),
            this.container.addChild(this.border),
            this.borderFocus = this.buildBorderFocus(),
            this.borderFocus.visible = !1,
            this.container.addChild(this.borderFocus),
            this.textContainer.addChild(this.placeholder),
            this.textContainer.addChild(n),
            this.textContainer.addChild(this.carret),
            this.container.addChild(this.textContainer),
            this.mask = this.buildMask(),
            this.textContainer.addChild(this.mask),
            this.textContainer.mask = this.mask,
            n.text = "A",
            n.centerY = t.height / 2,
            this.carret.centerY = t.height / 2,
            this.placeholder.centerY = t.height / 2,
            n.x = 5,
            this.carret.x = 5,
            this.placeholder.x = 5,
            n.text = "",
            this.hidden = document.createElement("input"),
            this.hidden.type = "text",
            this.hidden.style.position = "absolute",
            this.hidden.style.left = "0px",
            this.hidden.style.top = "0px",
            this.hidden.style.width = "5px",
            this.hidden.style.height = "5px",
            this.hidden.style.zIndex = "1",
            this.hidden.addEventListener("keyup", function(t) {
                i.onKeyUp(t)
            }),
            this.hidden.addEventListener("keydown", function(t) {
                i.onKeyDown(t)
            }),
            document.body.appendChild(this.hidden),
            this.container.interactive = !0,
            this.container.onImmediateClick(function() {
                i.focusIn()
            }),
            this.game.addUpdatable(this),
            this.container.detachListener.once(function() {
                i.destroy()
            }),
            this.carretTween = this.game.tweenManager.create(this.carret),
            this.carretTween.to({
                alpha: 0
            }, 500),
            this.carretTween.delay(250),
            this.carretTween.to({
                alpha: 1
            }, 500),
            this.carretTween.delay(250),
            this.carretTween.repeat(-1),
            this.carretTween.start()
        }
        return t.prototype.setAcceptKeyFilter = function(t) {
            this.accept = t
        }
        ,
        t.prototype.getContainer = function() {
            return this.container
        }
        ,
        t.prototype.getValue = function() {
            return this.value
        }
        ,
        t.prototype.setValue = function(t) {
            this.value = null == t ? "" : t,
            this.hidden.value = this.value,
            this.updateText(!1)
        }
        ,
        t.prototype.clear = function() {
            this.setValue("")
        }
        ,
        t.prototype.addSubmitHandler = function(t) {
            this.submitHandlers.add(t)
        }
        ,
        t.prototype.removeSubmitHandler = function(t) {
            this.submitHandlers.remove(t)
        }
        ,
        t.prototype.addValueHandler = function(t) {
            this.valueChangeHandlers.add(t)
        }
        ,
        t.prototype.removeValueHandler = function(t) {
            this.valueChangeHandlers.remove(t)
        }
        ,
        t.prototype.addFocusinHandler = function(t) {
            this.focusinHandlers.add(t)
        }
        ,
        t.prototype.removeFocusinHandler = function(t) {
            this.focusinHandlers.remove(t)
        }
        ,
        t.prototype.update = function(t) {
            this.hasFocus && !this.justFocus && this.game.inputManager.mouse.isJustUp && this.focusOut(),
            this.justFocus = !1
        }
        ,
        t.prototype.buildBorder = function() {
            var t = new r.Graphics;
            return t.lineStyle(this.options.borderWidth, this.options.borderColor),
            t.drawRoundedRect(0, 0, this.options.width, this.options.height, 5),
            t
        }
        ,
        t.prototype.buildBorderFocus = function() {
            var t = new r.Graphics;
            return t.lineStyle(this.options.borderWidth, this.options.focusBorderColor),
            t.drawRoundedRect(0, 0, this.options.width, this.options.height, 5),
            t
        }
        ,
        t.prototype.buildMask = function() {
            var t = new r.Graphics;
            return t.beginFill(16777215, 1),
            t.drawRect(2, 2, this.options.width - 4, this.options.height - 4),
            t.endFill(),
            t
        }
        ,
        t.prototype.updateText = function(t) {
            this.text.text = this.value;
            var e = this.text.width;
            e > this.options.width - 15 ? this.text.x = -(e - this.options.width + 15) : this.text.x = 5,
            this.carret.x = this.text.x + e,
            this.updatePlaceholderVisibility(),
            t && this.valueChangeHandlers.fire(this.value)
        }
        ,
        t.prototype.onKeyDown = function(t) {
            null != this.accept && (this.accept(t.keyCode) || (t.preventDefault(),
            t.stopPropagation()))
        }
        ,
        t.prototype.onKeyUp = function(t) {
            if (13 !== t.keyCode)
                if (27 !== t.keyCode) {
                    var e = this.hidden.value;
                    this.value = e,
                    this.updateText(!0)
                } else
                    this.focusOut();
            else
                this.submitHandlers.fire(this.value)
        }
        ,
        t.prototype.focusIn = function() {
            this.hasFocus || (this.hasFocus = !0,
            this.justFocus = !0,
            this.game.inputManager.keyboard.propagateAllKeys = !0,
            this.hidden.focus(),
            this.borderFocus.visible = !0,
            this.carret.visible = !0,
            r.TweenPreset.fadeIn(this.borderFocus, 500),
            this.updatePlaceholderVisibility(),
            this.focusinHandlers.fire())
        }
        ,
        t.prototype.focusOut = function() {
            this.hasFocus && (this.hasFocus = !1,
            this.game.inputManager.keyboard.propagateAllKeys = !1,
            this.hidden.blur(),
            this.borderFocus.visible = !1,
            this.carret.visible = !1,
            this.updatePlaceholderVisibility())
        }
        ,
        t.prototype.updatePlaceholderVisibility = function() {
            this.hasFocus ? this.placeholder.visible = !1 : this.placeholder.visible = 0 == this.value.length
        }
        ,
        t.prototype.destroy = function() {
            document.body.removeChild(this.hidden),
            this.carretTween.stop(),
            this.game.removeUpdatable(this)
        }
        ,
        t.prototype.blur = function() {
            this.focusOut()
        }
        ,
        t
    }();
    r.TextBox = e
}(DUST || (DUST = {})),
function(r) {
    var t = function() {
        function t(t) {
            this._pointerDirty = !1,
            this._maxTouchPointer = 1,
            this._immediateClickHandlerCount = 0,
            this._disabled = !1,
            this.noCursor = !1,
            this._maxTouchPointer = t.options.input.maxTouchPointer,
            this.rootContainer = t.layers.root,
            this.canvas = t.renderer.view,
            this.desktop = t.deviceManager.os.desktop,
            this.logger = JL("DUST.InputManager"),
            this.keyboard = new r.KeyboardHandler(t,this),
            this.mouse = new r.MouseHandler(t,this)
        }
        return t.prototype.update = function(t) {
            this._disabled || (this.keyboard.update(),
            this.mouse.update(),
            this.triggerMouseHit())
        }
        ,
        t.prototype.triggerImmediateClick = function() {
            if (!(this._immediateClickHandlerCount <= 0))
                for (var t = 0; t < this.mouse.pointers.length; t++) {
                    var e = this.mouse.pointers[t];
                    e.isActive() && e._triggerImmediateClick()
                }
        }
        ,
        t.prototype.triggerMouseHit = function() {
            var t = this._pointerDirty;
            if (this._pointerDirty = !1,
            r.DisplayObject.interactiveDirty && (this._immediateClickHandlerCount = 0,
            this.invalidateInteractive(this.rootContainer),
            t = !(r.DisplayObject.interactiveDirty = !1)),
            t)
                for (var e = 0; e < this.mouse.pointers.length; e++) {
                    this.mouse.pointers[e]._triggerMouseHit()
                }
        }
        ,
        t.prototype.invalidateInteractive = function(t) {
            t.hasInteractiveChild = !1;
            for (var e = t.getChildrenCount(), i = 0; i < e; i++) {
                var n = t.getChildAt(i);
                n instanceof r.Container ? (this.invalidateInteractive(n),
                (n.hasInteractiveChild || n.interactive) && (t.hasInteractiveChild = !0)) : n.interactive && (t.hasInteractiveChild = !0),
                n.hasImmediateClickHandler() && this._immediateClickHandlerCount++
            }
        }
        ,
        Object.defineProperty(t.prototype, "maxTouchPointer", {
            get: function() {
                return this._maxTouchPointer
            },
            enumerable: !0,
            configurable: !0
        }),
        t.prototype.enable = function() {
            this._disabled = !1
        }
        ,
        t.prototype.disable = function() {
            this._disabled = !0,
            this.mouse.update()
        }
        ,
        t.prototype.hideCursor = function() {
            this.noCursor = !0,
            this.canvas.style.cursor = "none"
        }
        ,
        t
    }();
    r.InputManager = t
}(DUST || (DUST = {})),
function(n) {
    var t = function() {
        function t(t, e) {
            var i = this;
            this._enable = !1,
            this.keys = [],
            this.propagatedKeys = new n.HashSet,
            this.propagateAllKeys = !1,
            this.keydown = function(t) {
                var e = i.ensureKey(t.which);
                e.keydown(t),
                i.keyDownHandlers.fire(e),
                i.stopEvent(t)
            }
            ,
            this.keyup = function(t) {
                var e = i.ensureKey(t.which);
                e.keyup(t),
                i.keyUpHandlers.fire(e),
                i.stopEvent(t)
            }
            ,
            this.enable(),
            this.propagatedKeys.add(n.KeyCode.F5),
            this.propagatedKeys.add(n.KeyCode.F12),
            this.keyUpHandlers = new n.HandlerCollection,
            this.keyDownHandlers = new n.HandlerCollection
        }
        return t.prototype.update = function() {
            if (this.enable)
                for (var t = 0; t < this.keys.length; t++) {
                    var e = this.keys[t];
                    null != e && e.update()
                }
        }
        ,
        t.prototype.enable = function() {
            this._enable || (this._enable = !0,
            window.addEventListener("keydown", this.keydown, !1),
            window.addEventListener("keyup", this.keyup, !1))
        }
        ,
        t.prototype.disable = function() {
            this._enable && (this._enable = !1,
            window.removeEventListener("keydown", this.keydown),
            window.removeEventListener("keyup", this.keyup))
        }
        ,
        t.prototype.key = function(t) {
            return this.ensureKey(t)
        }
        ,
        t.prototype.isDown = function(t) {
            var e = this.keys[t];
            return null != e && e.isDown
        }
        ,
        t.prototype.isUp = function(t) {
            var e = this.keys[t];
            return null == e || e.isUp
        }
        ,
        t.prototype.isJustDown = function(t) {
            var e = this.keys[t];
            return null != e && e.isJustDown
        }
        ,
        t.prototype.isJustUp = function(t) {
            var e = this.keys[t];
            return null != e && e.isJustUp
        }
        ,
        t.prototype.downDuration = function(t) {
            var e = this.keys[t];
            return null == e ? 0 : e.downDuration
        }
        ,
        t.prototype.stopEvent = function(t) {
            if (!this.propagateAllKeys) {
                var e = t.which;
                e && this.propagatedKeys.contains(e) || (t.preventDefault(),
                t.stopPropagation())
            }
        }
        ,
        t.prototype.ensureKey = function(t) {
            var e = this.keys[t];
            return null == e && (e = new n.KeyInput(t),
            this.keys[t] = e),
            e
        }
        ,
        t
    }();
    n.KeyboardHandler = t
}(DUST || (DUST = {})),
function(t) {
    var e = function() {
        function t() {}
        return t.fromChar = function(t) {
            return t.charCodeAt(0) - 32
        }
        ,
        t.SPACEBAR = 32,
        t.LEFT = 37,
        t.UP = 38,
        t.RIGHT = 39,
        t.DOWN = 40,
        t.F1 = 112,
        t.F2 = 113,
        t.F3 = 114,
        t.F4 = 115,
        t.F5 = 116,
        t.F6 = 117,
        t.F7 = 118,
        t.F8 = 119,
        t.F9 = 120,
        t.F10 = 121,
        t.F11 = 122,
        t.F12 = 123,
        t
    }();
    t.KeyCode = e
}(DUST || (DUST = {})),
function(t) {
    var e = function(i) {
        function t(t) {
            var e = i.call(this) || this;
            return e.keycode = t,
            e
        }
        return __extends(t, i),
        t.prototype.keydown = function(t) {
            this.isDown || i.prototype.ondown.call(this)
        }
        ,
        t.prototype.keyup = function(t) {
            this.isUp || i.prototype.onup.call(this)
        }
        ,
        t
    }(t.AbstractInput);
    t.KeyInput = e
}(DUST || (DUST = {})),
function(n) {
    var t = function() {
        function t(t, e) {
            var r = this;
            this._enable = !1,
            this.touchEndFired = !1,
            this.mousedown = function(t) {
                r.pointer.mousedown(t),
                r.inputManager._pointerDirty = !0,
                r.stopEvent(t)
            }
            ,
            this.mousemove = function(t) {
                r.pointer.mousemove(t),
                r.inputManager._pointerDirty = !0,
                r.stopEvent(t)
            }
            ,
            this.mouseup = function(t) {
                r.pointer.mouseup(t),
                r.inputManager._pointerDirty = !0,
                r.stopEvent(t)
            }
            ,
            this.mouseout = function(t) {
                r.mouseup(t)
            }
            ,
            this.mousewheel = function(t) {
                if (t.deltaY) {
                    var e = t.deltaY;
                    e < -1 ? e = -1 : 1 < e && (e = 1),
                    0 != e && r.mouseWheelHandlers.fire(e, t)
                }
                r.stopEvent(t)
            }
            ,
            this.touchstart = function(t) {
                for (var e = 0; e < t.changedTouches.length; e++) {
                    var i = t.changedTouches[e]
                      , n = r.getPointerOrFirstFree(i);
                    null != n && n.touchdown(i)
                }
                r.inputManager._pointerDirty = !0,
                r.stopEvent(t)
            }
            ,
            this.touchmove = function(t) {
                for (var e = 0; e < t.changedTouches.length; e++) {
                    var i = t.changedTouches[e]
                      , n = r.getPointerOrFirstFree(i);
                    null != n && n.touchmove(i)
                }
                r.inputManager._pointerDirty = !0,
                r.stopEvent(t)
            }
            ,
            this.touchend = function(t) {
                for (var e = 0; e < t.changedTouches.length; e++) {
                    var i = t.changedTouches[e]
                      , n = r.getPointerOrFirstFree(i);
                    null != n && n.touchup(i)
                }
                r.inputManager._pointerDirty = !0,
                r.touchEndFired ? r.stopEvent(t) : r.touchEndFired = !0
            }
            ,
            this.touchcancel = function(t) {
                r.touchend(t)
            }
            ,
            this.touchleave = function(t) {
                r.touchend(t)
            }
            ,
            this.game = t,
            this.inputManager = e,
            this.pointer = new n.PointerInput(t,e),
            this.pointers = new Array(e.maxTouchPointer),
            this.pointers[0] = this.pointer;
            for (var i = 1; i < e.maxTouchPointer; i++)
                this.pointers[i] = new n.PointerInput(t,e);
            this.mouseWheelHandlers = new n.HandlerCollection,
            this.enable()
        }
        return t.prototype.update = function() {
            for (var t = 0; t < this.pointers.length; t++)
                this.pointers[t].update()
        }
        ,
        t.prototype.enable = function() {
            if (!this._enable) {
                this._enable = !0;
                var t = this.game.renderer.view;
                t.addEventListener("mousedown", this.mousedown),
                t.addEventListener("mousemove", this.mousemove),
                t.addEventListener("mouseup", this.mouseup),
                t.addEventListener("mouseout", this.mouseout),
                t.addEventListener("wheel", this.mousewheel),
                t.addEventListener("touchstart", this.touchstart),
                t.addEventListener("touchmove", this.touchmove),
                t.addEventListener("touchend", this.touchend),
                t.addEventListener("touchcancel", this.touchcancel),
                t.addEventListener("touchleave", this.touchleave)
            }
        }
        ,
        t.prototype.disable = function() {
            if (this._enable) {
                this._enable = !1;
                var t = this.game.renderer.view;
                t.removeEventListener("mousedown", this.mousedown),
                t.removeEventListener("mousemove", this.mousemove),
                t.removeEventListener("mouseup", this.mouseup),
                t.removeEventListener("mouseout", this.mouseout),
                t.removeEventListener("touchstart", this.touchstart),
                t.removeEventListener("touchmove", this.touchmove),
                t.removeEventListener("touchend", this.touchend),
                t.removeEventListener("touchcancel", this.touchcancel),
                t.removeEventListener("touchleave", this.touchleave)
            }
        }
        ,
        Object.defineProperty(t.prototype, "isDown", {
            get: function() {
                return this.pointer.isDown
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "isUp", {
            get: function() {
                return this.pointer.isUp
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "isJustDown", {
            get: function() {
                return this.pointer.isJustDown
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "isJustUp", {
            get: function() {
                return this.pointer.isJustUp
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "downDuration", {
            get: function() {
                return this.pointer.downDuration
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "downPosition", {
            get: function() {
                return this.pointer.downPosition
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "position", {
            get: function() {
                return this.pointer.position
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "upPosition", {
            get: function() {
                return this.pointer.upPosition
            },
            enumerable: !0,
            configurable: !0
        }),
        t.prototype.getPointerOrFirstFree = function(t) {
            for (var e = t.identifier, i = null, n = null, r = 0; r < this.pointers.length; r++) {
                var o = this.pointers[r];
                if (null == o.identifier && null == i)
                    i = o;
                else if (o.identifier == e) {
                    n = o;
                    break
                }
            }
            return null != n ? n : i
        }
        ,
        t.prototype.stopEvent = function(t) {
            t.preventDefault(),
            t.stopPropagation()
        }
        ,
        t.prototype.debugTouch = function(t, e) {
            for (var i = "", n = 0; n < e.changedTouches.length; n++)
                i += "" + e.changedTouches[n].identifier,
                n < e.changedTouches.length - 1 && (i += ",");
            console.log("#### MouseHandler: " + t + ", changes: " + i)
        }
        ,
        t
    }();
    n.MouseHandler = t
}(DUST || (DUST = {})),
function(h) {
    var t = function(n) {
        function t(t, e) {
            var i = n.call(this) || this;
            return i.downPosition = new h.Point,
            i.position = new h.Point,
            i.upPosition = new h.Point,
            i.mouseActive = !1,
            i.touchInProgress = !1,
            i.touchEndTime = 0,
            i.touchEndDebounce = 4e3,
            i.prevMousePosition = new h.Point(-1,-1),
            i.prevMouseBState = -1,
            i.previousHit = null,
            i.lastDownTarget = null,
            i.inputManager = e,
            i.scaleManager = t.scaleManager,
            i.rootContainer = t.layers.root,
            i.canvas = t.renderer.view,
            i.desktop = t.deviceManager.os.desktop,
            i
        }
        return __extends(t, n),
        t.prototype.update = function() {
            n.prototype.update.call(this),
            null != this.touchEndTime && this.touchEndTime < h.Time.now() && (this.touchEndTime = null,
            this.touchInProgress = !1),
            this.isUp && null != this.identifier && this.releasePointer()
        }
        ,
        t.prototype.isActive = function() {
            return this.mouseActive || null != this.identifier
        }
        ,
        t.prototype.mousedown = function(t) {
            this.touchInProgress || this.isDown || (n.prototype.ondown.call(this),
            this.downPosition.x = this.getXValue(t.pageX),
            this.downPosition.y = this.getYValue(t.pageY),
            this.position.x = this.downPosition.x,
            this.position.y = this.downPosition.y)
        }
        ,
        t.prototype.mousemove = function(t) {
            this.position.x = this.getXValue(t.pageX),
            this.position.y = this.getYValue(t.pageY),
            this.mouseActive = !0
        }
        ,
        t.prototype.mouseup = function(t) {
            this.touchInProgress || this.isUp || (n.prototype.onup.call(this),
            this.upPosition.x = this.getXValue(t.pageX),
            this.upPosition.y = this.getYValue(t.pageY),
            this.inputManager.triggerImmediateClick())
        }
        ,
        t.prototype.touchdown = function(t) {
            this.isDown || null == this.identifier && (n.prototype.ondown.call(this),
            this.touchInProgress = !0,
            this.touchEndTime = null,
            this.identifier = t.identifier,
            this.downPosition.x = this.getXValue(t.pageX),
            this.downPosition.y = this.getYValue(t.pageY),
            this.position.x = this.downPosition.x,
            this.position.y = this.downPosition.y,
            this.acquirePointer())
        }
        ,
        t.prototype.touchmove = function(t) {
            this.isDown && this.identifier == t.identifier && (this.touchInProgress = !0,
            this.position.x = this.getXValue(t.pageX),
            this.position.y = this.getYValue(t.pageY))
        }
        ,
        t.prototype.touchup = function(t) {
            this.isUp || this.identifier == t.identifier && (n.prototype.onup.call(this),
            this.touchInProgress = !0,
            this.touchEndTime = h.Time.now() + this.touchEndDebounce,
            this.upPosition.x = this.getXValue(t.pageX),
            this.upPosition.y = this.getYValue(t.pageY),
            this.inputManager.triggerImmediateClick())
        }
        ,
        t.prototype.toGlobal = function(t) {
            void 0 === t && (t = null),
            null == t && (t = this.position);
            var e = t.x * this.scaleManager.scale + this.scaleManager.offsetX
              , i = t.y * this.scaleManager.scale + this.scaleManager.offsetY;
            return new h.Point(e,i)
        }
        ,
        t.prototype.getXValue = function(t) {
            return Math.round((t - this.scaleManager.offsetX) / this.scaleManager.scale)
        }
        ,
        t.prototype.getYValue = function(t) {
            return Math.round((t - this.scaleManager.offsetY) / this.scaleManager.scale)
        }
        ,
        t.prototype.acquirePointer = function() {
            this.previousHit = null,
            this.lastDownTarget = null,
            this.prevMousePosition.x = -1,
            this.prevMousePosition.y = -1,
            this.prevMouseBState = -1
        }
        ,
        t.prototype.releasePointer = function() {
            this.identifier = null
        }
        ,
        t.prototype.mouseChanged = function() {
            var t = !1
              , e = this.isDown ? 0 : 1
              , i = this.position.x
              , n = this.position.y;
            return e != this.prevMouseBState && (t = !0),
            t || this.prevMousePosition.x == i && this.prevMousePosition.y == n || (t = !0),
            this.prevMouseBState = e,
            this.prevMousePosition.x = i,
            this.prevMousePosition.y = n,
            t
        }
        ,
        t.prototype._triggerMouseHit = function() {
            if (this.mouseChanged()) {
                var t = new Array;
                if (this.collectInteractiveHit(this.position, this.rootContainer, t),
                0 < t.length) {
                    var e = t[t.length - 1];
                    this.interactiveElement = e,
                    this.isJustDown ? (this.lastDownTarget = e).hasDownHandler() && e.downHandler.fire() : this.isJustUp && (e.hasUpHandler() && e.upHandler.fire(),
                    e.hasClickHandler() && this.lastDownTarget == e && (this.wasSwipe() || e.clickHandler.fire())),
                    e != this.previousHit && (e.hasOverHandler() && e.overHandler.fire(),
                    null != this.previousHit && this.previousHit.hasOutHandler() && this.previousHit.outHandler.fire()),
                    this.previousHit = e
                } else
                    (this.interactiveElement = null) != this.previousHit && this.previousHit.hasOutHandler() && this.previousHit.outHandler.fire(),
                    this.previousHit = null;
                this.desktop && !this.inputManager.noCursor && (null != this.previousHit && this.previousHit.showCursor ? this.canvas.style.cursor = "pointer" : this.canvas.style.cursor = "default")
            }
        }
        ,
        t.prototype._triggerImmediateClick = function() {
            var t = new Array;
            if (this.collectInteractiveHit(this.position, this.rootContainer, t),
            0 < t.length) {
                var e = t[t.length - 1];
                e.hasImmediateClickHandler() && e.immediateClickHandler.fire()
            }
        }
        ,
        t.prototype.collectInteractiveHit = function(t, e, i) {
            if (e.visible) {
                var n = e.hitPoint(t);
                if (e.interactive && n && i.push(e),
                e.hasInteractiveChild) {
                    var r = new h.Point;
                    e == this.rootContainer ? (r.x = t.x,
                    r.y = t.y) : (r.x = t.x - e.x + e.pivotX,
                    r.y = t.y - e.y + e.pivotY,
                    1 != e.scaleX && (r.x = r.x / e.scaleX),
                    1 != e.scaleY && (r.y = r.y / e.scaleY));
                    for (var o = e.getChildrenCount(), s = 0; s < o; s++) {
                        var a = e.getChildAt(s);
                        a instanceof h.Container ? this.collectInteractiveHit(r, a, i) : a.visible && a.interactive && a.hitPoint(r) && i.push(a)
                    }
                }
            }
        }
        ,
        t.prototype.wasSwipe = function() {
            return 60 <= h.Point.distance(this.upPosition, this.downPosition)
        }
        ,
        t
    }(h.AbstractInput);
    h.PointerInput = t
}(DUST || (DUST = {})),
function(l) {
    var t = function() {
        function t() {}
        return t.containsPoint = function(t, e, i, n) {
            for (var r = e; null != r; )
                r.updateTransform(),
                r = r.parent instanceof l.Container ? r.parent : null;
            var o = e.getWorldTransformScaleX()
              , s = e.getWorldTransformScaleX()
              , a = e.toGlobal()
              , h = l.Game.get().inputManager.mouse.pointer.toGlobal(t);
            return null == i && (i = e.width),
            null == n && (n = e.height),
            new l.Rectangle(a.x,a.y,i * o,n * s).containsPoint(h)
        }
        ,
        t
    }();
    l.InputHelper = t
}(DUST || (DUST = {})),
function(t) {
    var e = function(n) {
        function t(t, e) {
            var i = n.call(this) || this;
            return i._showOnDesktop = !1,
            i._initiateByTouch = !1,
            i.keyboard = t.inputManager.keyboard,
            i.keyCode = e,
            i.game = t,
            i.game.addUpdatable(i),
            i
        }
        return __extends(t, n),
        t.prototype.setButton = function(t, e) {
            null == e && (e = this.game.layers.gameplayHUD),
            this._button = t,
            this._displayObject = t,
            this._layer = e,
            this._layer.addChild(t),
            this.addButtonListeners(),
            this.updateVisibility()
        }
        ,
        t.prototype.setHitArea = function(t) {
            this._button.hitArea = t
        }
        ,
        t.prototype.update = function() {
            if (!this._initiateByTouch && null != this.keyCode) {
                var t = this.keyboard.key(this.keyCode);
                t.isDown ? this.ondown() : t.isUp && this.onup()
            }
            n.prototype.update.call(this)
        }
        ,
        t.prototype.destroy = function() {
            this.game.removeUpdatable(this),
            this._displayObject.removeSelf()
        }
        ,
        t.prototype.vOnDown = function() {
            this._initiateByTouch = !0,
            this.ondown()
        }
        ,
        t.prototype.vOnUp = function() {
            this._initiateByTouch = !1,
            this.onup()
        }
        ,
        t.prototype.addButtonListeners = function() {
            this._displayObject.downHandler.add(this.vOnDown, this),
            this._displayObject.upHandler.add(this.vOnUp, this),
            this._displayObject.outHandler.add(this.vOnUp, this)
        }
        ,
        t.prototype.removeButtonListeners = function() {
            this._displayObject.downHandler.remove(this.vOnDown),
            this._displayObject.upHandler.remove(this.vOnUp),
            this._displayObject.outHandler.remove(this.vOnUp)
        }
        ,
        t.prototype.updateVisibility = function() {
            null != this._displayObject && this.game.deviceManager.os.desktop && (this._showOnDesktop ? this._displayObject.visible = !0 : this._displayObject.visible = !1)
        }
        ,
        Object.defineProperty(t.prototype, "displayObject", {
            get: function() {
                return this._displayObject
            },
            set: function(t) {
                null != this._displayObject && this.removeButtonListeners(),
                this._displayObject = t
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "showOnDesktop", {
            get: function() {
                return this._showOnDesktop
            },
            set: function(t) {
                this._showOnDesktop = t,
                this.updateVisibility()
            },
            enumerable: !0,
            configurable: !0
        }),
        t
    }(t.AbstractInput);
    t.VirtualButton = e
}(DUST || (DUST = {})),
function(t) {
    var e, i;
    e = t.LOADER || (t.LOADER = {}),
    i = function() {
        function t() {
            this.loader = new e.ResourceLoader("",4)
        }
        return t.prototype.add = function(t, e, i) {
            this.loader.add(t, e, i)
        }
        ,
        t.prototype.addJS = function(t, e, i) {
            this.loader.addJS(t, e, i)
        }
        ,
        t.prototype.load = function(i, n) {
            this.loader.on("progress", function(t, e) {
                i && i(t, e)
            }),
            this.loader.once("complete", function(t, e) {
                n && n()
            }),
            this.loader.load()
        }
        ,
        t
    }(),
    e.PixiAssetLoader = i
}(DUST || (DUST = {})),
function(t) {
    var e, i;
    e = t.LOADER || (t.LOADER = {}),
    i = function(n) {
        function t(t, e) {
            var i = n.call(this, t, e) || this;
            return i.logger = JL("DUST.ResourceLoader"),
            i
        }
        return __extends(t, n),
        t.prototype.addJS = function(t, e, i) {
            this.add(t, e, {
                loadType: PIXI.loaders.Resource.LOAD_TYPE.IMAGE
            });
            var n = this.resources[t];
            n.load = function() {
                this.loadJS(n, i)
            }
            .bind(this)
        }
        ,
        t.prototype.loadJS = function(t, e) {
            t.emit("start", this),
            t.once("complete", this._boundOnLoad),
            this.loadAndInsertJS(t.url, function() {
                e && e(),
                t._boundComplete(t)
            })
        }
        ,
        t.prototype.loadAndInsertJS = function(t, e) {
            var i = document.createElement("script");
            i.type = "text/javascript",
            i.readyState ? i.onreadystatechange = function() {
                "loaded" !== i.readyState && "complete" !== i.readyState || (i.onreadystatechange = null,
                e())
            }
            : i.onload = function() {
                e()
            }
            ,
            i.onerror = function() {
                console.error("Failed to load script!!!")
            }
            ,
            i.src = t,
            document.getElementsByTagName("head")[0].appendChild(i)
        }
        ,
        t
    }(PIXI.loaders.Loader),
    e.ResourceLoader = i
}(DUST || (DUST = {})),
function(e) {
    var t = function() {
        function t(t, e, i) {
            this._x = t,
            this._y = e,
            this._radius = i
        }
        return t.prototype.containsPoint = function(t) {
            var e = this.x - t.x
              , i = this.y - t.y;
            return e * e + i * i <= this._radius * this._radius
        }
        ,
        t.prototype.overlap = function(t) {
            return e.Collisions.overlapCircles(this, t)
        }
        ,
        Object.defineProperty(t.prototype, "x", {
            get: function() {
                return this._x
            },
            set: function(t) {
                this._x = t
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "y", {
            get: function() {
                return this._y
            },
            set: function(t) {
                this._y = t
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "radius", {
            get: function() {
                return this._radius
            },
            set: function(t) {
                this._radius = t
            },
            enumerable: !0,
            configurable: !0
        }),
        t
    }();
    e.Circle = t
}(DUST || (DUST = {})),
function(t) {
    var e = function() {
        function o() {}
        return o.overlapCircles = function(t, e) {
            var i = t.x - e.x
              , n = t.y - e.y;
            return Math.sqrt(i * i + n * n) < t.radius + e.radius
        }
        ,
        o.overlapRectangles = function(t, e) {
            return t.left < e.right && t.right > e.left && t.top < e.bottom && t.bottom > e.top
        }
        ,
        o.overlapPolygonRectangle = function(t, e) {
            t.getTransformedVertices();
            return !0
        }
        ,
        o.overlapPolygons = function(t, e) {
            var i = t.getAABB()
              , n = e.getAABB()
              , r = o.overlapRectangles(i, n);
            return !!r && (!!(r = this.overlapPolygons0(t, e)) && (r = this.overlapPolygons0(e, t)))
        }
        ,
        o.overlapPolygons0 = function(t, e) {
            for (var i = t.getTransformedVertices(), n = 0; n < i.length; n++) {
                var r = i[n].asVector()
                  , o = i[n + 1 == i.length ? 0 : n + 1];
                r.sub2(o.x, o.y),
                r.perp(),
                r.normalize();
                var s = t.getProjection(r)
                  , a = e.getProjection(r);
                if (!s.overlap(a))
                    return !1
            }
            return !0
        }
        ,
        o
    }();
    t.Collisions = e
}(DUST || (DUST = {})),
function(t) {
    var e = function() {
        function e(t, e) {
            void 0 === t && (t = 0),
            void 0 === e && (e = 0),
            this._x = t,
            this._y = e
        }
        return e.prototype.copy = function() {
            return new e(this._x,this._y)
        }
        ,
        e.prototype.asVector = function() {
            return new t.Vector(this._x,this._y)
        }
        ,
        e.prototype.equals = function(t) {
            return null != t && (this.x == t.x && this.y == t.y)
        }
        ,
        Object.defineProperty(e.prototype, "x", {
            get: function() {
                return this._x
            },
            set: function(t) {
                this._x = t
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(e.prototype, "y", {
            get: function() {
                return this._y
            },
            set: function(t) {
                this._y = t
            },
            enumerable: !0,
            configurable: !0
        }),
        e.prototype.toString = function() {
            return this._x + "," + this._y
        }
        ,
        e.distance = function(t, e) {
            var i = 0
              , n = 0;
            return i = e.x - t.x,
            i *= i,
            n = e.y - t.y,
            n *= n,
            Math.sqrt(i + n)
        }
        ,
        e.prototype.minusNewPoint = function(t) {
            return new e(this._x - t.x,this._y - t.y)
        }
        ,
        e.prototype.addNewPoint = function(t) {
            return new e(this._x + t.x,this._y + t.y)
        }
        ,
        e.prototype.minus = function(t) {
            this._x -= t.x,
            this._y -= t.y
        }
        ,
        e.prototype.add = function(t) {
            this._x += t.x,
            this._y += t.y
        }
        ,
        e
    }();
    t.Point = e
}(DUST || (DUST = {})),
function(h) {
    var t = function() {
        function t() {
            this._localVertices = [],
            this._rotation = 0,
            this._dirty = !0,
            this._dirtyBounds = !0,
            this._transformedVertices = [],
            this._pivot = new h.Point(0,0),
            this._position = new h.Point(0,0)
        }
        return t.prototype.addVertice = function(t) {
            this._localVertices.push(t),
            this._transformedVertices.push(t.copy()),
            this._dirty = !0
        }
        ,
        t.fromValues = function(t) {
            for (var e = new h.Polygon, i = 0; i < t.length; i += 2) {
                var n = t[i]
                  , r = t[i + 1];
                e.addVertice2(n, r)
            }
            return e
        }
        ,
        t.fromPoints = function(t) {
            for (var e, i = new h.Polygon, n = 0; n < t.length; n++)
                e = t[n],
                i.addVertice2(e.x, e.y);
            return i
        }
        ,
        t.fromRectangle = function(t) {
            var e = new h.Polygon;
            return e.addVertice2(0, 0),
            e.addVertice2(t.width, 0),
            e.addVertice2(t.width, t.height),
            e.addVertice2(0, t.height),
            e.setPosition(t.x, t.y),
            e
        }
        ,
        t.prototype.addVertice2 = function(t, e) {
            this.addVertice(new h.Point(t,e))
        }
        ,
        t.prototype.getVertices = function() {
            return this._localVertices
        }
        ,
        t.prototype.getTransformedVertices = function() {
            if (!this._dirty)
                return this._transformedVertices;
            this._dirty = !1,
            this._dirtyBounds = !0;
            for (var t = Math.cos(this._rotation * h.Maths.DEG_TO_RADIAN), e = Math.sin(this._rotation * h.Maths.DEG_TO_RADIAN), i = 0; i < this._localVertices.length; i++) {
                var n = this._localVertices[i]
                  , r = n.x - this._pivot.x
                  , o = n.y - this._pivot.y;
                if (0 != this._rotation) {
                    var s = r;
                    r = t * r - e * o,
                    o = e * s + t * o
                }
                var a = this._transformedVertices[i];
                a.x = this._position.x + this._pivot.x + r,
                a.y = this._position.y + this._pivot.y + o
            }
            return this._transformedVertices
        }
        ,
        t.prototype.getAABB = function() {
            if (!this._dirty && !this._dirtyBounds)
                return this._transformedBounds;
            var t = this.getTransformedVertices();
            null == this._transformedBounds && (this._transformedBounds = new h.Rectangle(0,0,0,0));
            for (var e = t[0].x, i = t[0].y, n = t[0].x, r = t[0].y, o = 1; o < t.length; o++) {
                var s = t[o];
                e = Math.min(e, s.x),
                i = Math.min(i, s.y),
                n = Math.max(n, s.x),
                r = Math.max(r, s.y)
            }
            return this._transformedBounds.x = e,
            this._transformedBounds.y = i,
            this._transformedBounds.width = n - e,
            this._transformedBounds.height = r - i,
            this._dirtyBounds = !1,
            this._transformedBounds
        }
        ,
        t.prototype.overlap = function(t) {
            return h.Collisions.overlapPolygons(this, t)
        }
        ,
        t.prototype.setPivot = function(t, e) {
            this.pivotX = t,
            this.pivotY = e,
            this._dirty = !0
        }
        ,
        t.prototype.setPosition = function(t, e) {
            this.positionX = t,
            this.positionY = e,
            this._dirty = !0
        }
        ,
        t.prototype.getProjection = function(t) {
            for (var e = this.getTransformedVertices(), i = t.dot2(e[0].x, e[0].y), n = i, r = 1; r < e.length; r++) {
                var o = e[r]
                  , s = t.dot2(o.x, o.y);
                s < i ? i = s : n < s && (n = s)
            }
            return new h.Range(i,n)
        }
        ,
        Object.defineProperty(t.prototype, "pivotX", {
            get: function() {
                return this._pivot.x
            },
            set: function(t) {
                this._pivot.x = t,
                this._dirty = !0
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "pivotY", {
            get: function() {
                return this._pivot.y
            },
            set: function(t) {
                this._pivot.y = t,
                this._dirty = !0
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "positionX", {
            get: function() {
                return this._position.x
            },
            set: function(t) {
                this._position.x = t,
                this._dirty = !0
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "positionY", {
            get: function() {
                return this._position.y
            },
            set: function(t) {
                this._position.y = t,
                this._dirty = !0
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "rotation", {
            get: function() {
                return this._rotation
            },
            set: function(t) {
                this._rotation = t,
                this._dirty = !0
            },
            enumerable: !0,
            configurable: !0
        }),
        t
    }();
    h.Polygon = t
}(DUST || (DUST = {})),
function(t) {
    var e = function() {
        function i(t, e) {
            void 0 === t && (t = 0),
            void 0 === e && (e = 0),
            this.min = t,
            this.max = e
        }
        return i.prototype.overlap = function(t) {
            return t.min <= this.max && this.min <= t.max
        }
        ,
        i.prototype.sort = function() {
            if (this.min > this.max) {
                var t = this.min;
                this.min = this.max,
                this.max = t
            }
        }
        ,
        i.prototype.copy = function(t) {
            this.min = t.min,
            this.max = t.max
        }
        ,
        i.prototype.clone = function() {
            return new i(this.min,this.max)
        }
        ,
        i.prototype.combine = function(t) {
            var e = new i;
            return e.min = this.min,
            e.max = this.max,
            t.min < this.min && (e.min = t.min),
            t.max > this.max && (e.max = t.max),
            e
        }
        ,
        i.prototype.extend = function(t) {
            t > this.max ? this.max = t : t < this.min && (this.min = t)
        }
        ,
        i.prototype.clamp = function(t) {
            return t < this.min ? this.min : t > this.max ? this.max : t
        }
        ,
        i
    }();
    t.Range = e
}(DUST || (DUST = {})),
function(e) {
    var t = function() {
        function t(t, e, i, n) {
            this._left = t,
            this._top = e,
            this._width = i,
            this._height = n
        }
        return t.prototype.getCenter = function() {
            return new e.Point(this._left + Math.round(this._width / 2),this._top + Math.round(this._height / 2))
        }
        ,
        t.prototype.containsPoint = function(t) {
            return this.containsPoint2(t.x, t.y)
        }
        ,
        t.prototype.containsPoint2 = function(t, e) {
            return t >= this.left && t <= this.right && (e >= this.top && e <= this.bottom)
        }
        ,
        t.prototype.overlap = function(t) {
            return e.Collisions.overlapRectangles(this, t)
        }
        ,
        t.prototype.toString = function() {
            return this.x + "," + this.y + " | " + this._width + "," + this._height
        }
        ,
        t.prototype.copy = function() {
            return new t(this._left,this._top,this._width,this._height)
        }
        ,
        Object.defineProperty(t.prototype, "x", {
            get: function() {
                return this._left
            },
            set: function(t) {
                this._left = t
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "left", {
            get: function() {
                return this._left
            },
            set: function(t) {
                this._left = t
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "right", {
            get: function() {
                return this._left + this._width
            },
            set: function(t) {
                this._left = t - this._width
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "y", {
            get: function() {
                return this._top
            },
            set: function(t) {
                this._top = t
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "top", {
            get: function() {
                return this._top
            },
            set: function(t) {
                this._top = t
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "bottom", {
            get: function() {
                return this._top + this._height
            },
            set: function(t) {
                this._top = t - this._height
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "width", {
            get: function() {
                return this._width
            },
            set: function(t) {
                this._width = t
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "height", {
            get: function() {
                return this._height
            },
            set: function(t) {
                this._height = t
            },
            enumerable: !0,
            configurable: !0
        }),
        t.toPixiRectangle = function(t) {
            return t ? new PIXI.Rectangle(t.x,t.y,t.width,t.height) : null
        }
        ,
        t
    }();
    e.Rectangle = t
}(DUST || (DUST = {})),
function(s) {
    var t = function() {
        function i(t, e) {
            void 0 === t && (t = 0),
            void 0 === e && (e = 0),
            this._x = t,
            this._y = e
        }
        return i.prototype.copy = function() {
            return new i(this._x,this._y)
        }
        ,
        i.prototype.copy2 = function(t) {
            this._x = t.x,
            this._y = t.y
        }
        ,
        i.prototype.clone = function() {
            return new i(this._x,this._y)
        }
        ,
        i.prototype.length = function() {
            return Math.sqrt(this._x * this._x + this._y * this._y)
        }
        ,
        i.prototype.lengthApprox = function() {
            return this._x * this._x + this._y * this._y
        }
        ,
        i.prototype.mag = function() {
            return this.length()
        }
        ,
        i.prototype.magSq = function() {
            return this.lengthApprox()
        }
        ,
        i.prototype.sub = function(t) {
            this._x -= t.x,
            this._y -= t.y
        }
        ,
        i.sub = function(t, e) {
            return new i(t.x - e.x,t.y - e.y)
        }
        ,
        i.prototype.sub2 = function(t, e) {
            this._x -= t,
            this._y -= e
        }
        ,
        i.prototype.add = function(t) {
            this._x += t.x,
            this._y += t.y
        }
        ,
        i.prototype.minus = function(t) {
            this._x -= t.x,
            this._y -= t.y
        }
        ,
        i.prototype.add2 = function(t, e) {
            this._x += t,
            this._y += e
        }
        ,
        i.prototype.dot = function(t) {
            return this._x * t.x + this._y * t.y
        }
        ,
        i.prototype.dot2 = function(t, e) {
            return this._x * t + this._y * e
        }
        ,
        i.prototype.project = function(t) {
            var e = this.dot(t)
              , i = t.copy();
            return i.scale1(e),
            i
        }
        ,
        i.prototype.scale = function(t) {
            this.x *= t.x,
            this.y *= t.y
        }
        ,
        i.prototype.scale1 = function(t) {
            this.x *= t,
            this.y *= t
        }
        ,
        i.prototype.scale2 = function(t, e) {
            this.x *= t,
            this.y *= e
        }
        ,
        i.prototype.cross = function(t) {
            return this.x * t.y - this.y * t.x
        }
        ,
        i.prototype.cross2 = function(t, e) {
            return this.x * e - this.y * t
        }
        ,
        i.prototype.perp = function() {
            var t = this._y;
            this.y = -this._x,
            this.x = t
        }
        ,
        i.prototype.normalize = function() {
            var t = this.length();
            this.x /= t,
            this.y /= t
        }
        ,
        i.prototype.rotate = function(t) {
            var e = s.Maths.DEG_TO_RADIAN * t
              , i = Math.cos(e)
              , n = Math.sin(e)
              , r = this.x * i - this.y * n
              , o = this.x * n + this.y * i;
            this.x = r,
            this.y = o
        }
        ,
        i.prototype.rotate2 = function(t) {
            var e = Math.cos(t)
              , i = Math.sin(t)
              , n = e * this.x + i * this.y
              , r = e * this.y - i * this.x;
            this.x = n,
            this.y = r
        }
        ,
        i.prototype.rotate90 = function() {
            var t = -this.y
              , e = this.x;
            this.x = t,
            this.y = e
        }
        ,
        i.prototype.unit = function() {
            var t = this.length();
            0 != t ? (this.x = this.x / t,
            this.y = this.y / t) : (this.x = 0,
            this.y = 0)
        }
        ,
        Object.defineProperty(i.prototype, "x", {
            get: function() {
                return this._x
            },
            set: function(t) {
                this._x = t
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(i.prototype, "y", {
            get: function() {
                return this._y
            },
            set: function(t) {
                this._y = t
            },
            enumerable: !0,
            configurable: !0
        }),
        i.prototype.toString = function() {
            return "(" + this._x + "," + this._y + ")"
        }
        ,
        i.prototype.angle = function(t) {
            var e = this.length()
              , i = t.length()
              , n = this.x * t.x + this.y * t.y / (e * i)
              , r = 1;
            return this.cross(t) < 0 && (r = -1),
            r * Math.acos(n)
        }
        ,
        i
    }();
    s.Vector = t
}(DUST || (DUST = {})),
function(t) {
    var e = function() {
        function t(t) {
            this._p2Body = new p2.Body(t)
        }
        return t.prototype.cast = function() {
            return this._p2Body
        }
        ,
        t
    }();
    t.Body = e
}(DUST || (DUST = {})),
function(t) {
    var e, i, n;
    e = t.PHYSICS || (t.PHYSICS = {}),
    i = e.P2 || (e.P2 = {}),
    n = function() {
        function i(t, e) {
            this.pxm = function(t) {
                return t / i.PIXEL_PER_METER
            }
            ,
            this.pxmi = function(t) {
                return -this.pxm(t)
            }
            ,
            this.mpx = function(t) {
                return t * i.PIXEL_PER_METER
            }
            ,
            this.mpxi = function(t) {
                return -this.mpx(t)
            }
            ,
            this.game = t,
            this.world = new p2.World(e)
        }
        return i.prototype.update = function(t) {
            this.world.step(t / 1e3)
        }
        ,
        i.prototype.enablePhysics = function(t) {
            this.world.addBody(t.body)
        }
        ,
        i.prototype.disablePhysics = function(t) {
            this.world.removeBody(t.body)
        }
        ,
        i.textForBody = function(t) {
            var e = "Body: ";
            return e += "\n         ",
            e += "Position: x:" + t.position[0] + " y:" + t.position[1] + ", ",
            e += "\n         ",
            e += "Velocity: x:" + t.velocity[0] + " y:" + t.velocity[1] + ", ",
            e += "\n         ",
            e += "Angle: " + t.angle + ", ",
            e += "\n         "
        }
        ,
        i.PIXEL_PER_METER = 20,
        i.PHYSICS_TO_WORLD_SCALE = 128,
        i
    }(),
    i.P2Engine = n
}(DUST || (DUST = {})),
function(e) {
    var t = function() {
        function t(t) {
            this.physicsEnabled = !1,
            this.physicsSubSteps = 10,
            this.debugPhysics = !1,
            this.game = t,
            this.bodyByP2Body = new e.HashMap
        }
        return t.prototype.configure = function(t) {
            this.physics = new p2.World(t)
        }
        ,
        t.prototype.enable = function() {
            if (!this.physics)
                throw new Error("Canno't enable physics ! Physics world not configure, please use configure method call before");
            this.physicsEnabled = !0
        }
        ,
        t.prototype.disable = function() {
            this.physicsEnabled = !1
        }
        ,
        t.prototype.addBody = function(t) {
            this.bodyByP2Body.put(t._p2Body.id.toString(), t),
            this.physics.addBody(t._p2Body)
        }
        ,
        t.prototype.removeBody = function(t) {
            this.bodyByP2Body.remove(t._p2Body.id.toString())
        }
        ,
        t.prototype.getBodyForP2Body = function(t) {
            return this.bodyByP2Body.get(t.id.toString())
        }
        ,
        t.prototype.update = function(t) {
            if (this.physicsEnabled)
                for (var e = t / 1e3, i = 0; i < this.physicsSubSteps; i++)
                    this.physics.step(e / this.physicsSubSteps)
        }
        ,
        t
    }();
    e.PhysicsManager = t
}(DUST || (DUST = {})),
function(n) {
    var t = function() {
        function t(t) {
            this.game = t,
            this.container = new n.Container,
            this.container.hitArea = t.bounds
        }
        return t.prototype.addChild = function(t) {
            this.container.addChild(t)
        }
        ,
        t.prototype.addChildAt = function(t, e) {
            this.container.addChildAt(t, e)
        }
        ,
        t.prototype.removeChild = function(t) {
            this.container.removeChild(t)
        }
        ,
        t.prototype.removeChildAt = function(t) {
            this.container.removeChildAt(t)
        }
        ,
        t.prototype.update = function(t) {}
        ,
        t.prototype.render = function(t) {}
        ,
        t.prototype.show = function(t) {
            var e = this;
            void 0 === t && (t = !0);
            var i = this;
            1 == t ? this.animateIn(function() {
                e.game.inputManager.enable(),
                n.DisplayObject.interactiveDirty = !0,
                i.onShow()
            }) : (this.game.inputManager.enable(),
            n.DisplayObject.interactiveDirty = !0,
            this.onShow())
        }
        ,
        t.prototype.animateIn = function(t) {
            t()
        }
        ,
        t.prototype.onShow = function() {}
        ,
        t.prototype.hide = function(t, e) {
            void 0 === e && (e = !0),
            n.Game.get().inputManager.disable(),
            this.container.interactive = !1,
            this.container.hasInteractiveChild = !1,
            null != this._hideHandler && (this._hideHandler.fire(),
            this._hideHandler.clear());
            var i = this;
            1 == e ? this.animateOut(function() {
                i.onHide(),
                t()
            }) : (this.onHide(),
            t())
        }
        ,
        t.prototype.animateOut = function(t) {
            t()
        }
        ,
        t.prototype.onHide = function() {}
        ,
        Object.defineProperty(t.prototype, "hideHandler", {
            get: function() {
                return null == this._hideHandler && (this._hideHandler = new n.HandlerCollection),
                this._hideHandler
            },
            enumerable: !0,
            configurable: !0
        }),
        t
    }();
    n.Scene = t
}(DUST || (DUST = {})),
function(e) {
    var t = function(i) {
        function t(t) {
            var e = i.call(this, t) || this;
            return e.game.layers.background.addChild(e.container),
            e
        }
        return __extends(t, i),
        t.prototype.setBackground = function(t) {
            this._backgound = t,
            this._backgound.anchorX = .5,
            this._backgound.anchorY = .5,
            this._backgound.setPosition(this.game.bounds.getCenter()),
            this.container.addChild(this._backgound)
        }
        ,
        t.prototype.getBackground = function() {
            return this._backgound
        }
        ,
        t.prototype.addDebugBorder = function() {
            var t = new e.Graphics;
            t.lineStyle(5, 65467, 1),
            t.drawRect(0, 0, this.game.width, this.game.height),
            t.endFill(),
            this.container.addChild(t)
        }
        ,
        t
    }(e.Scene);
    e.BackgroundScene = t
}(DUST || (DUST = {})),
function(u) {
    var t = function(l) {
        function i(t, e, i) {
            var n = l.call(this, t) || this;
            n.backgroundColor = 16777215,
            n.gameBackgroundColor = 0,
            n.logoBgTint = 4474182,
            n.logoTint = 9175244,
            n.brandTint = 4474182,
            n.progressListener = new u.HandlerCollection,
            n.progress = 0,
            n.estimatedDuration = 0,
            n.lastEstimatedProgress = 0,
            n.errors = [],
            n.failedResources = [],
            n.assetList = e,
            n.callback = i,
            (n.game = t).renderer.backgroundColor = n.backgroundColor,
            e.forEach(function(t) {
                t.indexOf(".js") == t.length - 3 ? n.game.loader.addJS(t, t) : n.game.loader.add(t, t)
            }),
            n.addB64Texture("brand.png", "iVBORw0KGgoAAAANSUhEUgAAATgAAAAwCAMAAACyhZaBAAAA51BMVEUAAAD////////////////////////+/v7////+/v7////+/v7////+/v7+/v7////////////+/v7+/v7////+/v7+/v7+/v7////+/v7+/v7+/v7+/v7+/v7////+/v7////+/v7+/v7////+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7////+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7////+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7////lHQ1rAAAATHRSTlMABAgMEBQYHCAkKCwwNDg8QERITFBUWFxgZGhscHR4fICEh4iLjI+QlJeYm5ygo6SnqKuvsLO0t7i7vL/Aw8fLz9PX29/j5+vv8/f7XUAsSgAABmRJREFUeAHswYEAAAAAgKD9qRepAgAAuDqzb0sb6eLwSQiYCEqsKAiKsT48urbpVltlK+8vIgnz/T/PbsMM+c0wSRuW64K9/2nJGcnkZl7OmWwF57Tmed5FzbVJj2UfUAK5pJBp24Qczdk606hNqY/XgqFfzRGSt21D8/Um9E+614HSp68smY+0KeXPM+h0p+mQSvNng0Xb0f3x+J9Q+GD8RqDHdNwT0XHAVOYtizg5PwqPTiWVkep+PvpQXfbP4u2fwp+3fordH7M0DmgjjjpMRdxScCNGR55UjLdl6A9ScLiLS1qxYDr6RDTRBd6OacmlcElAk0U0ow8hi7jC9njrOkvjA21CU/c4nwn5wATPpFISoYoidMCv/6AVTMs0MRKUKcJjHOLARQ+/2ZPbe9g4hRptwP+ZjgkB1lvKPRoi8g6jEbsabCAOvnNfxXlJDwN8xpUH9CjBrwQU43Fc/IW4PkRUHrYkLn2qnlJm3AXT8oJroH4Sc4Zx6IS0+0D1F+IeUsSFue2IK295czDGq5F0W7aIDtzLdrTONihG3jsWRUJMMD82SFBlMXfp4t5sjKhUtiBu2+kIPt+zRQKr3mdPBgxK3mTE//1GpB+OoNucwdXOmjhaAwOm7VT+FL/H9ZbEkb4TmzIQ3gzSAgMudJ554xIBFwyYWbqVc55JHKeGw3XvxDni0SzSgqljixw+CnwC7hjCe2rJFUJhA3EGzwJv904cJopNSuYxdvvAV7kChP9iEQPRCjvegfwyqziaQkq7d+K+/3pXKSx4H+D/1xCf8dXtG+TqfMAtimO4mFFcnl9x900cPvWQtGBhE0ajzOf7INT3IhPh83hmENGVmNIvmIxlEmd84kPY3EdxFlTZSYxxXSsJTWub6oGQer6qXkNHLICdbOJydqk+hL1h/8QVMYuQTmssVUwZdmFMgs/5skdi6+gTna1cN5QRqintbF0Etum9FOfqynOrHc3ekrRpTuTdJDCJc81TXyJ6EgVWe+nSITplS0xK1NPSRLDI30txZ7gAc8QCNaCIiUgKlhzAXMVK9TUenHc2z5NhSB8mi/PTaooy7ae4mk5cg1+0cDKXidNXlvvX+PF57N2Lv9TCfCS7uFnD+A+JO8KLfE8NDKW3U+JMoIc13nhZoEVhnsXWM4kDOoW9FHeuE2fyi3Uot9pry+KhfKZ7Ef0l1gtX6PUmWVxVEwHGuX3eHE4JmcU3NUM14zUX0hjK4zfgud0iH13pykWaiHorqhgRgTv/Zc44XyRxJsW0diMOZ+UFISP+sGD2ZO347VFOaMrqodcPqV57zZ4An83EdEBxNsX4uxOXx5RAgKOkyTRgaubKD/Qmwvy3ENXtaINa9ZAPuqc9FEe8b+0kcd9TD01he8mBJ5ip5KHmbOLoRuSM8AMerx8vNHchrof5rDIZfRhBGirS8Yr6NqxHpMYzizuJj//OdW9VprzG24W4W13pEKwK2DxL5hp7OBNbR4hRHJHZxWFdU8LXE5yC8LoLca5yuI0r/KX4rwruDvdKWtdWplQF1qYs4lB6DX6QmaEm6qG5C3HGbH0KPMe72QVLZogL9FApXQNDTfuyizNGUHZ0mJoAmBOxfe9AXDxXgxO14grMOGpq3qPOMd3oKutSTx3SbmZxxZUrB3rFgiLX+sQvNHYjrhCIbfDeiYr4B1xNfLGCIR4uW11FnLWQzgSoqBfnIc28mgDf+o9jfoHf3QpX5rxDIqvSFx8tvTgdo/z2xGGmNu12J0ywcGItI0LquGyp4qg6Zmz+LU8cW86gmZa2PsJp8amh55b04rR4WxRn9FK6O0Qt6qtYV8n5tNjyGsr05FLEBcsyPzfVRqe5LOK+b1EcFcZMQ8+ATEkW525fnJ0Qwd3gKNBZPaIs4rrbFEeFgeY0J0cgzt+huP+RoLxubl6mHYoj4yZkEqFnSC9qHghxsK5/xRYp1fBZqriCKP5UghreuK9OCycOyi8ur9KmKm+6oH9P4RZqq/eWQ5x6dI95iSS+LAdlJPd82eKIkvi03F5MrOZU3omostBouyuQROVH3GrRrhDwcVkT867nZymbgyc+bIXSRct/efXvGpKDg9Nazc2RwqHrukJm3q2eKy2Uxie1ypEhalndQhVGw8odyDIH9+ear7Uq1/5j99G/rlgk45zUzsrm6q695HSECm616hboN/gbveDbb/g5gkYAAAAASUVORK5CYII="), n.addB64Texture("cat.png", "iVBORw0KGgoAAAANSUhEUgAAATgAAAEICAMAAAD82xj1AAAA6lBMVEUAAAD////////////////////////+/v7////+/v7////+/v7////+/v7+/v7////////////+/v7+/v7////+/v7+/v7+/v7////+/v7+/v7+/v7+/v7+/v7////+/v7////+/v7////+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7////+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7////+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7///+iekI1AAAATXRSTlMABAgMEBQYHCAkKCwwNDg8QERITFBUWFxgZGhscHR4fICEiIuMj5CTlJeYnJ+go6SnqKusr7CztLe4u7y/wMPHy8/T19vf4+fr7/P3+z+XTDIAABVvSURBVHgB7d17V9ra1gbwJwmEcEECggZFDb6WzZGdbbXaWgsqQsCQzO//dV6suYAQhLUCpsXff2eMnrHhMcm6MNcM4kba0eoXnf6QXjlm92fruJIV8CmUkK9969N8drepKZj1KVW9GdE7zPOyhE8TUrV7Wo59vS9iu/nE/TatYmQU8AnpM4tW9nQo4W8mK4oiYJH8tUNMrFMZiySVsQT+LEKuenbTHZBrZN5/axyWFMxQ28TObsiYoezWGjcPpuPn2/91XiuI+AMkq99HNJd1d1ZOIJB7NzbLfie6JAKJ8umdRXM57WMF8Za7tGmh7mkBvylfaT6naxzv7SiCTqQDqdxurdm2wpI9EfHbTv2RFrtVEV+pr7SEQSMLsT43YPv2eEfEq9fgXBnNMGkeswxk6gNaQjuDmNq1aEkPJs0lwucH5wu7lO5oSfYBYqnmELsBvcC7wd06xOELYqhMzJzvu8KSwSGlD4jdCWJHGRGjUUMBsGxwgFB5IFbODuLmimaYv1m0kKUngJWCG1NvaTHL/M2htx4RMwpNcB7O9nIJeOR8+ej8YRQa28rBhU8CRw/nR+W8DE8iV6m3bZqgIl5OyPd0kMQ82YOLIU1xGgmALThA7dK04cVBFvNIWpd8LcTLgx/GoYBw+bpJvts0wBCcr/pMPrOexwLaiFx9xItNrgO8o3RNvw3KAF9wSJzTq+8lvGOXPAnESYpcloBF/OeT05DAHpyv0COi+zze1ydXDnGSJ1cHy6hcZoEogoNw3K1gGd/iOTqo5PoGRiYRmeHB+f+ClRHz4DpgVOhTvxAenP8v/rLgsuR6ALMEMD84XwLsfsUzuBS5nhEFP7jo9MiVRqw45ErGMziRPCJi5Ylcu/EMrkCuAeLFH+1P4xncMbl+IF6OyPUQz+BuyVVHvPi3gpOMY3CiTa4S4iX4ZFp01/BR9NvTjoSY8e+F74hG8tu3JKJyQa57xM3h5L0aN9KIXMeImxR5aogdjTxpxM49uZ4QOw/k6iJ+DshTRMzkKIZ3qi9pk+saMWOQy0khhi7j+iCR7WDEj6MCeQzESoM8u4ilLrmcdDwvuD7iaZ88V4iRJnkOEU+CSZ4dxEbaIddQREzVyPMQw7Ug6YgrcUieavyqz6wEYksjjyUjFiQzzktBn9CP2/jQJM9ARIztkk/DfFK+omlaOSciApmSpmn7hSRClMi3j1i7I4+Vwqz8aZdc9v2Jwnmi4nZELrNVFDArMZgcrmLthBY8U8rd6A4fpA2bpgxq4oIblfYQaxmbPI8CpuUeaNZVCizEM4dmmLt4I2uTpysgxoQgm1F6uWr+5xJWl3miuf4nhO51kY4YOwp/Fn+hEM4hVlUYUYh7CdOuyePk/ogb9er93HwH/LmFJpcc/gk3a5s8g8TMYiycU8QqUkNa4L/wCdIx4qI8sE8RqFLYxlfOoUUGCYY/TxgN0/5HHjsNX6Fnnwv4IKI1dTwqaZHnX0y7p4Bzf3ag1ZpPNKG54uaVb2AcadXTW5sCz4nQRdfd9N1exQeRpw+W/Rd6BZXJZzdSeJX9j3xOmmVVR/dFL5zac/jwWSTfnp/bxx7sak8mVyDfbujN1csiUAy+7RmWtRekXUMgeUseS8S0f8kzTEzk5mTxUaT7IDkhuPe+hh5X6suYlBn595eAJd2FTHiE76GLhMSQPGcTuVWAOCRXC99ROgydSgWXTwHLkRxynWOaNCDXxYKrNBN9bnzJJa3wadlN+K9f3VUPkpbINUqEbgYOF+wC38YjtyC58wXbECa58nirSq4bLOc4/DCbOAqtQ07b5NHjkZufnM+ZSUdYUJEur1pw0iJXGTNuwu/7Ovn83GKW3Hn4UdZfmPXs317L+bmgWqAevoUkmjO5xSw5KxkenAGE38ZYTmdB1f3Bgs3nykxuMUvuEOHBtTDrkV7ZqwaHWdqC4NCOX26Tf86+gPCH9iFmGfNKTBPq4ZnReXHZPCqnMOFswTMxT64sZuVi9wPc1Ny3jDlOFyzlsw79VoEnW585M27sCnClR/7sN3RyfLu41osa8fs1tT8/2P9+55bHPJXR1Oope0fz9P2gyhYROXXMIz/Q2IP8zm1hy7H7MTWslczOiV4VMZ98qB+l4dp3KMRXIfj3x1nMJ5R1fVd4d/ezgVjQomvCozoUqgl2fm5xuuSEPkWW3D2Fc2Tu3HyNeA2pNndyJi2g8ubmWLG65LrB3sc9b3JtWkDmza1Sow85CpeUFleLGJB4k6tTuAF3bhCHC0u+JDWDNfiX7FZ6wUXipMGdXI7CnXPnBtQW1GfIdWstP4SVaMy5zoV+1UuAP7knCrXDnxtEi1wDAVPSTZvGRojcHr1qF0MON+QQQXIahXnkz21Mn7+/nrt0IuvFEF4x1a0I8MjO9NkLP7lDzrnNjDKYJK3J3JCw5+y3Bt3onANEL6Fb5OofiDNPcxVTyV3yXdgz7sFG9XN71aC329HlR3LZzTTWQqoNyTU8TkxXSz++2WU6iXZG4uTYT4dM5gbFmfpJR6z6l7hVl7E2gtYjl3UmT14fewhIrfszAYwyI5rjDKxKd3eluS0p7SQSR8GVUEtgvcr35LJb6QdyDQVE5YB86yg02iHP6Wnw7NFErJ96TS5nLW1i/6W3nhVE55HeeixjQ3KGQ77I137CPU0bFRAh7UOboCsNmyZcRvwbxhpzg/hMAecyhw1L6hb5ioiU9J0CwwIiJXwj/vkHF/GJPMOTBKIknAQT6xSi4s8/PvgYZtKhgNWQEaX06yLooYwI+fMPV/sjW7T47AoilSSiU0RK7NG01Ec2GvENEK3ozyZU6I2jj21tc/w6O7FiH1zRnX9ckKv7ocehR+Lr7OQ49sHh39f5R/lDG33cT62Wk3t5xD84yAmMSfYHHv5Nzqzv4x+c7+4Du6JV19PKTlR8RNRQPDKidEyeJDbtmlx3WJakKDlV3dU07UTXT42xztij/56RpQzMF52xn4ZhtHRdP9I0TVXVjKIIq2+RaNgwcfTOkJ5UcuOMqrp+bnzrdPrmkDbCNJ86nQujoZ9oWnEcpoR5hBH7KptTkTwZvEooO6p2oJ8ZN50nc0Sx8Ww+di6Nuq7tqTlFfFuGbgnYrFNyjWr6+JLqDejP4JjdzsW5/v0DevJIilo50E36S7T1g4qqSFgnQdV/9Gz6K9m9G10VsA47LYv+cs+tHUSt3KWt0C0jSjuPtH6WGehMMAMWrd/jDqIiNSOaYvU6nV+GYei6XtM0bVdV1R1lLIUVpZSxHfV1Ml3Tdd0wjF8vk0WTotCUEIm8yTh7ujHOdV3TSi/xiNgQ8SXSkqa9zLxvOo/mM63OzCMCmrP0BOnS0I+1ippTJMSIpOTUinasG5edrmnTMhwN3OoUzup3vrX0Q20clYA/hDCOUTvUW986fYvC1cHpy7y0LhonWimv4I+n5EvaSeNiXoZfIs2tp6sS/kqSWu9FmNwhTWqr+KsV2zTpEMyKDgV6Rfz1ij3GzkWzDZ18DRFbQGxSYJjkfy30aB9bYn9EvA1SS7MFQ9ugMCJfCQyE3tblNpNcT+Bq+e6UsFVKDnn2uUo+dWwZnedYSo48DwK2zESP1BzHGjWPrZPnWLM+kesaW+ia+V1ZMnmK2EJF5uPFGrmesZWeWWskjKBGYCtdsr7xaRAkvpU0cplYSYY8CraSwli0WSVXD1uqx3bLGeQ6x5Y6Z3vImUGd6pbaI5fJNouTsaXYIjgg13MSWyr5TK7qSu/Q8Q1uDtLYMumDmwEFRrfVJN6Tu7BpRvckhY0TMqqawualTro0w77IYZFky6G5nGt1s6lV7mwasy4K2Cj1OiyBVhKhys8Urr3B6PJd8l0nNxhbm8I97yKETou1s9iMikMTBhlsRrZNi+mLyx3COQ0JG7Dr0JShgg2QGg6958uquflMFWuXsuiNB6yfahIRS3JHtBTnVMCaGTRDw5oJpw4t5QhvFByaMLo5rWpaVb/sOvTWnYy1Sjk0o4v1ku/oLad7ob9kcHozoglOYfZVQr5uRYRH2m090zQzs8mj/ps4kJsxZ+r2SxI8YqVLAVPCpAb5Roczc6o2c+cZBt9oDm0DP9372hUB0w7Dui9nHPIM85iVu51ObndDPRJ8OtZndzq32xxm5YfkcTJzX21oZZaoHCMnuuRSMqb1lwlOSUQ/+VlYBZixyHMNX3aJYjpBd9Zwt5b7RL2TNCZ03g2u0Hwmukuv4T51dAEhiuTLwtNaqsFdvk8BKxNJbv4uQn7yw8yqwCUWmwP6bZgCH/9K8vXzCHdGnhZmOm4OpKV7RZlJ8OuTb3hRzYQ3Zv0dkpA/mtzxaoJf0qTA98XffkAuOzHTI1DDQsL/UeBOAC+Vplm3Z3s52aIZd2Ju/+x+RFMsEbyEOwr8n7Bs47mDt+OY+W4WtUhHuhYtyaJ5yuClU6D2bsrmm6Ybcuh6YnFyToG/BR6XK3AqOItzC12Vym86iCRXe020KYJLkfiMRHARTfIdrdT3rTpdJnGHZfyPfKf8dyqXMricku8fLONuuqBm6Oe46gPVyYDHgDi1wCPjrDrQVadeC5lZ9QfE5IA8t+CQJV4D8LglzyC56m+tmclRtscwi1DB7oi4ZcCO5Vv0JqvRG6uXiTQj6TJ5S9wOwK7NMJM+n9wiaS9+xC2eRFMBzCzidglmBQpfLoWqTl4wzwyV6fsRzKWyxG8AZlcs/e9yEwW+SXI5AtOrkWQwqlIEkmAkOyzb8oIT/Id3mArTy+Q5BqMmRWCXv/VemekQw05QB3bD9jauLv9OL4djsGD//Df+/R1E32B860Kaf2zY/OiQZhyYG8ESrcHWoFQacTYhTlIUHnnv1JHENvds4IKxaPWCc/VQoChYvHPIC8YC1wt0GBcBZXKNBPaJOzcHTIIemWXGT93BI+PyRXKC+R8LyaIIXIFJjrUXbyZ4RpisJ0EeghUHk50u3VczkHZOV46wW81AzJ2Y9pXMOYd8YD03YmJALgGrOYvsLa+Jr7SKURW8GqyvrRKCNQt5mM/s/wC3L7RI9AUYP5iPcZAHzI/ZfLDk4NempVXB74lcef7gTOaJ2BD80rSsLiIwZF7rmvzBTYQfgTv+C479o284uGGUwZ3QkjJRBjf8kODMKIPTaElilMGZWxSc/OcHN4oyuDNakhplcBY+cnBwEIEnWlIDEXAiHByGYF998CvSsqwk+AXrTPYRkTzM3/UB3CSTlnYNfg/MNz55YLMGdxhdZxLpnlbwjxBdV5FD1uDs4KqVWA/A6GCT2U25165JK2nn8FuunAQbnbUdS4JcJvvt3iNXhfnDO3fHmnb2RCu7P3n9/1kFzpcQ9tgf7B3G9a7C2dIlTVHogQX7h8+Tq4OfjF27apxrfJUiwbvKrzGOiD+DR5XG/upBFjmKwhBsLvybnnGBY6BOrhPGi30fTCSKQhts9hnv1RNy1YNZRYttieQk2Ceh/Jpgk3DYNs9bwTxml1y/2H6j+s69fc3jEIy+k8uSsIJfQdFKlulxUeN/SWidIlDgbp1ENaZBJQuRPAksLWGR61kEozLxcyT+MxZWgmH+SyJgMvz1TiOo2JeJXxfMmL5CgVzmZOVSjaHQ3ZbBzPyIscEn2wyHDmqTNXF1/38wNGZugJ1B3PbArsHQWvtmsq9yeeXGtScUxQUHjbglwX/JrTKFfZ6s1Umu2ptbdaJ5CZMcfXUc47DuqFhKfvov1lst+NRwttCdzSNxqoOdf+hghdPW+vTeQnOlMUp6Il8FXHTilAeXCvmeJCzhaXpQKq3yQaT76M6L5ojPAJyuyHcvrXKnlt68gPx8pdyGSXDqE5cGOCWHKyV3/vag7EUwSK6Qm1MEL51m2I+XFs14+jWkWTnwKjorJCfbb3fSSsv+DZUeBU7ATaFJTrexnwWy8zd6E4XapTmdZsQlKz1l2YlfCa+EwXKT6OIzBb5GW6PUb5Qkv5J+VtZNWrt4nlyd8/tKgeficsulgTB7PudBWLLF2r2ICChDt19LGr6bxecrhUJjQC++C4iAeB/WHC98uXQ8Z7OD6gtqnSf0JEQiWe/80tPvz+50TCq0Oj8PBEQi0aMJ3Z1FmwKz2yk6vXMDyC1nKjcZa9PbcDcvuUcTnJaMeWrzP0tiuPAzyg2bJnVlrE+H/bAbG/mJJtkNeeH4P0xgwj4F2hlMEkqXDk1pS1ijJnujDEZSm6Y4lyUBkzJtCuzP7MH7nKuyF002GMZ8/wpYpzLNchJYJ+FfeuP5Qst6sZavHAp8n98Tw9fvjPVsmuEcgh1r46ArrNmhQzPsXmesT775nTbyI1pGP491O6a3nBzWLd+nZYzyoS0PF2tKWDvhkd44xfpJTQq3uMVleUTv6O5gE+QhTbkSsAk7T/SOURlz5Qe0yLAqYDNSXYbBiJ9QHdIigzxCJK8WxFYTsTHCiUWufgWbI9YWRHeVRLhSl+Zq7wnYKKl6+WSaj+e7AjZK2GvTXN0SFtu9deiNx5M0tkj65JHecG538b6kZvTJ5bQbFRlbR6402g65TENLrlwuaWFrWeRSGTsVbCnGfgcPwS7TlqqxnX9pBAUlW+qG7be08tY/5Cy2Ha0EefLYSnnyJBjbhB1jKx2Tq8tasNjGVmqz7syUyGVL2ELBfKyE1Yg2uQ6whQ7IZYvMP7I/Cdg6Qp9cd+wTQKpi61TJU+Po9/osY8sEbz90kjxVd3cCtopwx9W8NEe+f7BV/iFfjrPQ8xhbROf9PVexyfcFW+ML+WyF/4ULVxK2gnRNgaMo3lpl7mAL7JgUuAMreUATWjL+cnKLJgxkMMuNaIJ9nsNfLNe0acIoF+U7W/vnB8WcjL+MnCseNPuhzV/5k/MNuj+N0yNNzSn4Yyk5VTs6NX51B+tpmlsY0kKW2bkx6sfarqrIiDlZUXe147px0zEtWmhYADelS0t7Nh86Rks/1vbUHSWFD5dSdtQ97URvGZ0HP6sldBVEQGwSK3Mc5A/D0PWaphVVVVFS6wxJUdWiptV03TB+jIMyiVVTRDTUPkXINM1up9O5NAzjTB870F6UVFdamSOtukraiwN97MwwjMtOp9M1zQFFqK8iMuKRRVvCOhIRpcTRgLbA4CiBqAnF1pD+asNWUcB6ZPZ042d3QH8Pf1pa38tg/eTs78njz0fToT+UYz6+TuKzMj6EqOyUtCPd+NZ5inuKjvnU+WboR1ppR5EQK4KSVcvjGJvGj3GOFn0wa5zUD6M5jqqsZhUBfw7xZVJa0aq63jCMX52Oaa7rqnRM0+x0fhlGQ9erWuVlsi3ib5NUXvJUi9rYkT52avx22XnHpfHbqT52pI0V1ZeElCQ+ffr06dOnT58+ffq0Vv8Pd1tQ/byTTDgAAAAASUVORK5CYII=");
            var r = u.Sprite.fromFrame("cat.png")
              , o = (t.viewport.width - 312) / 2;
            r.tint = n.logoBgTint,
            r.x = o,
            r.y = (t.viewport.height - 264) / 2 - 100;
            var s = u.Sprite.fromFrame("cat.png");
            s.tint = n.logoTint,
            s.x = o,
            s.y = r.y;
            var a = u.Sprite.fromFrame("brand.png");
            a.tint = n.brandTint,
            a.x = o,
            a.y = r.y + 264;
            var h = new u.ProgressBar(r,s,u.ProgressBarWay.BottomToTop);
            return h.updateProgress(0),
            n.progressBar = h,
            n.addChild(h),
            n.addChild(a),
            window.addEventListener("load", n.onDocumentLoaded.bind(n)),
            n
        }
        return __extends(i, l),
        i.prototype.addProgressListener = function(t, e) {
            this.progressListener.add(t, e)
        }
        ,
        i.prototype.onDocumentLoaded = function() {
            if (window.performance && window.performance.timing && window.performance.timing.domContentLoadedEventEnd && window.performance.timing.navigationStart) {
                var t = window.performance.timing.domContentLoadedEventEnd - window.performance.timing.navigationStart;
                0 < t && u.Analytics.sendTiming(u.AnalyticsTiming.BOOT, t)
            }
        }
        ,
        i.prototype.addB64Texture = function(t, e) {
            var i = document.createElement("img");
            i.src = "data:image/png;base64," + e;
            var n = new PIXI.BaseTexture(i)
              , r = new PIXI.Texture(n);
            PIXI.Texture.addTextureToCache(r, t)
        }
        ,
        i.prototype.onLoadComplete = function() {
            var o = this
              , t = Date.now() - this.startLoadTime;
            this.game.renderer.backgroundColor = this.gameBackgroundColor,
            u.Analytics.sendTiming(u.AnalyticsTiming.ASSETS, t),
            this.assetList.forEach(function(t) {
                var e = t.split("/")
                  , i = e[e.length - 1];
                if (-1 != i.indexOf(".json")) {
                    var n = "fake-" + i;
                    if (u.Texture.hasInCache(n)) {
                        var r = u.Sprite.fromFrame(n);
                        o.addChild(r)
                    }
                }
            }),
            u.TimeManager.get().createAndStartTimer(300, function() {
                o.callback()
            }),
            o.progressListener.fire(100)
        }
        ,
        i.prototype.onShow = function() {
            this.startLoadTime = Date.now();
            var n = this;
            this.game.loader.loader.on("error", function(t, e, i) {
                n.errors.push(t),
                n.failedResources.push(i)
            }),
            this.doLoad()
        }
        ,
        i.prototype.doLoad = function(n) {
            void 0 === n && (n = 0);
            var r = this;
            this.game.loader.load(function(t, e) {
                if (0 == n) {
                    r.progress = t.progress,
                    r.progressListener.fire(r.progress);
                    var i = Date.now() - r.startLoadTime;
                    r.estimatedDuration = 100 * i / r.progress
                }
            }, function(t, e) {
                r.progress = 100,
                0 < r.failedResources.length ? (console.error("errors occurred preloading resources: retry: " + n),
                n < i.retryMax ? u.TimeManager.createAndStartTimer(i.retryDelay, function() {
                    r.errors = [];
                    var t = r.failedResources;
                    r.failedResources = [],
                    r.game.loader.loader.reset(),
                    t.forEach(function(t) {
                        r.game.loader.add(t.name, t.url)
                    }),
                    r.doLoad(++n)
                }) : r.onLoadComplete()) : r.onLoadComplete()
            })
        }
        ,
        i.prototype.update = function(t) {
            this.progressBar.updateProgress(this.progress / 100)
        }
        ,
        i.prototype.render = function(t) {
            this.progressBar.render(t)
        }
        ,
        i.prototype.getErrors = function() {
            return this.errors
        }
        ,
        i.retryMax = 5,
        i.retryDelay = 1e3,
        i
    }(u.Scene);
    u.DefaultPreLoadingScene = t
}(DUST || (DUST = {})),
function(n) {
    var t = function(i) {
        function t(t) {
            var e = i.call(this, t) || this;
            return e.objects = [],
            e.fillTop = !0,
            e.fillBottom = !0,
            e.fillLeft = !0,
            e.fillRight = !0,
            e.scaleManager = e.game.scaleManager,
            e.game.layers.top.addChild(e.container),
            e.scaleManager.resizeHandler.add(e.onResize, e),
            e
        }
        return __extends(t, i),
        t.prototype.onResize = function() {
            this.refresh()
        }
        ,
        t.prototype.setFillColor = function(t) {
            this.fillColor = t
        }
        ,
        t.prototype.setFillZone = function(t, e, i, n) {
            this.fillTop = t,
            this.fillBottom = e,
            this.fillLeft = i,
            this.fillRight = n
        }
        ,
        t.prototype.refresh = function() {
            this.objects.forEach(function(t) {
                t.removeSelf()
            }),
            this.fillTop && null != this.scaleManager.topBorder && this.refreshBorder(this.scaleManager.topBorder),
            this.fillBottom && null != this.scaleManager.bottomBorder && this.refreshBorder(this.scaleManager.bottomBorder),
            this.fillLeft && null != this.scaleManager.leftBorder && this.refreshBorder(this.scaleManager.leftBorder),
            this.fillRight && null != this.scaleManager.rightBorder && this.refreshBorder(this.scaleManager.rightBorder)
        }
        ,
        t.prototype.refreshBorder = function(t) {
            var e;
            if (null != this.fillColor) {
                var i = new n.Graphics;
                i.beginFill(this.fillColor, 1),
                i.drawRect(t.x, t.y, t.width, t.height),
                i.endFill(),
                i.cacheAsBitmap = !0,
                e = i,
                this.container.addChild(i)
            }
            null != e && this.objects.push(e)
        }
        ,
        t
    }(n.Scene);
    n.ForegroundScene = t
}(DUST || (DUST = {})),
function(e) {
    var t = function() {
        function t() {
            this._children = [],
            this._container = new e.Container
        }
        return t.prototype.getContainer = function() {
            return this._container
        }
        ,
        t.prototype.addDisplayObject = function(t) {
            var e = this.createLayoutItem();
            return e.displayObject = t,
            this._children.push(e),
            this._container.addChild(t),
            e
        }
        ,
        t.prototype.addDisplayObjectAt = function(t, e) {
            var i = this.createLayoutItem();
            return i.displayObject = t,
            this._children.splice(e, 0, i),
            this._container.addChildAt(t, e),
            i
        }
        ,
        t.prototype.addLayout = function(t) {
            var e = this.createLayoutItem();
            return e.layout = t,
            this._children.push(e),
            this._container.addChild(t.getContainer()),
            e
        }
        ,
        t.prototype.removeItem = function(t) {
            var e = this._children.indexOf(t);
            return -1 < e ? (this._children.splice(e, 1),
            null != t.displayObject ? this._container.removeChild(t.displayObject) : null != t.layout && this._container.removeChild(t.layout.getContainer()),
            t) : null
        }
        ,
        t.prototype.update = function() {
            this.beforeUpdates(),
            this._children.forEach(function(t) {
                this.updateItem(t)
            }, this),
            this.afterUpdates()
        }
        ,
        t.prototype.updateItem = function(t) {
            t.isLayout() ? this.updateLayout(t) : this.updateDisplayObject(t, t.displayObject)
        }
        ,
        t.prototype.updateLayout = function(t) {
            t.layout.update(),
            this.updateDisplayObject(t, t.layout.getContainer())
        }
        ,
        t.prototype.beforeUpdates = function() {}
        ,
        t.prototype.afterUpdates = function() {}
        ,
        t.prototype.updateDisplayObject = function(t, e) {}
        ,
        t.prototype.createLayoutItem = function() {
            return new e.LayoutItem
        }
        ,
        Object.defineProperty(t.prototype, "width", {
            get: function() {
                return this._container.width
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "height", {
            get: function() {
                return this._container.height
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "x", {
            get: function() {
                return this._container.x
            },
            set: function(t) {
                this._container.x = t
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "y", {
            get: function() {
                return this._container.y
            },
            set: function(t) {
                this._container.y = t
            },
            enumerable: !0,
            configurable: !0
        }),
        t
    }();
    e.AbstractLayout = t
}(DUST || (DUST = {})),
function(l) {
    var t = function(n) {
        function e(t, e) {
            var i = n.call(this) || this;
            return i._width = null,
            i._height = null,
            i._width = t,
            i._height = e,
            i._container.setDebugId("absolute-layout"),
            i
        }
        return __extends(e, n),
        e.fromGame = function(t) {
            return new e(t.width,t.height)
        }
        ,
        e.prototype.addDisplayObject = function(t) {
            return n.prototype.addDisplayObject.call(this, t)
        }
        ,
        e.prototype.addLayout = function(t) {
            return n.prototype.addLayout.call(this, t)
        }
        ,
        e.prototype.createLayoutItem = function() {
            return new l.AbsoluteLayoutItem
        }
        ,
        e.prototype.updateDisplayObject = function(t, e) {
            var i = t
              , n = this.width
              , r = this.height
              , o = e.width
              , s = e.height
              , a = 0;
            if (null != i.hAlign)
                switch (i.hAlign) {
                case l.HorizontalAlignment.Center:
                    a = (n - o) / 2;
                    break;
                case l.HorizontalAlignment.Right:
                    a = n - o
                }
            null != i.xOffset && (a += i.xOffset);
            var h = 0;
            if (null != i.vAlign)
                switch (i.vAlign) {
                case l.VerticalAlignment.Middle:
                    h = (r - s) / 2;
                    break;
                case l.VerticalAlignment.Bottom:
                    h = r - s
                }
            null != i.yOffset && (h += i.yOffset),
            e.x = a,
            e.y = h
        }
        ,
        Object.defineProperty(e.prototype, "width", {
            get: function() {
                return this._width
            },
            set: function(t) {
                this._width = t
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(e.prototype, "height", {
            get: function() {
                return this._height
            },
            set: function(t) {
                this._height = t
            },
            enumerable: !0,
            configurable: !0
        }),
        e
    }(l.AbstractLayout);
    l.AbsoluteLayout = t
}(DUST || (DUST = {})),
function(t) {
    var e, i;
    (e = t.VerticalAlignment || (t.VerticalAlignment = {}))[e.Bottom = 0] = "Bottom",
    e[e.Middle = 1] = "Middle",
    e[e.Top = 2] = "Top",
    (i = t.HorizontalAlignment || (t.HorizontalAlignment = {}))[i.Left = 0] = "Left",
    i[i.Center = 1] = "Center",
    i[i.Right = 2] = "Right";
    var n = function() {
        function t() {}
        return t.prototype.isLayout = function() {
            return null != this._layout
        }
        ,
        Object.defineProperty(t.prototype, "displayObject", {
            get: function() {
                return this._displayObject
            },
            set: function(t) {
                this._displayObject = t
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "layout", {
            get: function() {
                return this._layout
            },
            set: function(t) {
                this._layout = t
            },
            enumerable: !0,
            configurable: !0
        }),
        t.prototype.getWidth = function() {
            return this.isLayout() ? this.layout.getContainer().width : this.displayObject.width
        }
        ,
        t.prototype.getHeight = function() {
            return this.isLayout() ? this.layout.getContainer().height : this.displayObject.height
        }
        ,
        t
    }();
    t.LayoutItem = n
}(DUST || (DUST = {})),
function(t) {
    var e = function(e) {
        function t() {
            var t = null !== e && e.apply(this, arguments) || this;
            return t.xOffset = 0,
            t.yOffset = 0,
            t
        }
        return __extends(t, e),
        t
    }(t.LayoutItem);
    t.AbsoluteLayoutItem = e
}(DUST || (DUST = {})),
function(t) {
    var e = function(t) {
        function e() {
            return null !== t && t.apply(this, arguments) || this
        }
        return __extends(e, t),
        e
    }(t.LayoutItem);
    t.LinearLayoutItem = e
}(DUST || (DUST = {})),
function(l) {
    var t = function(i) {
        function t(t) {
            var e = i.call(this) || this;
            return e.spaceBetween = 0,
            e.vertical = t,
            e._container.setDebugId("linear-layout(" + t + ")"),
            e
        }
        return __extends(t, i),
        t.prototype.addDisplayObject = function(t) {
            return i.prototype.addDisplayObject.call(this, t)
        }
        ,
        t.prototype.addDisplayObjectAt = function(t, e) {
            return i.prototype.addDisplayObjectAt.call(this, t, e)
        }
        ,
        t.prototype.addLayout = function(t) {
            return i.prototype.addLayout.call(this, t)
        }
        ,
        t.prototype.createLayoutItem = function() {
            return new l.LinearLayoutItem
        }
        ,
        t.prototype.updateDisplayObject = function(t, e) {
            var i, n = t, r = this._children.indexOf(t);
            if (0 < r) {
                var o, s = this._children[r - 1];
                o = s.isLayout() ? s.layout.getContainer() : s.displayObject,
                i = new l.Rectangle(o.x,o.y,o.width,o.height)
            } else
                i = new l.Rectangle(0,0,0,0);
            var a = 0
              , h = 0;
            this.vertical ? (h += i.y,
            h += i.height,
            0 < r && (h += this.spaceBetween),
            null != n.yMargin && (h += n.yMargin)) : (a += i.x,
            a += i.width,
            0 < r && (a += this.spaceBetween),
            null != n.xMargin && (a += n.xMargin)),
            e.x = a,
            e.y = h
        }
        ,
        t.prototype.beforeUpdates = function() {}
        ,
        t.prototype.afterUpdates = function() {
            var i = this.getContainer().width
              , n = this.getContainer().height;
            this._children.forEach(function(t) {
                var e = t.isLayout() ? t.layout.getContainer() : t.displayObject;
                this.vertical ? this.applyHAlignement(t, e, i) : this.applyVAlignement(t, e, n)
            }, this)
        }
        ,
        t.prototype.applyHAlignement = function(t, e, i) {
            var n = null == t.hAlign ? this.hAlign : t.hAlign;
            if (null != n) {
                var r = 0;
                switch (n) {
                case l.HorizontalAlignment.Center:
                    r = (i - e.width) / 2;
                    break;
                case l.HorizontalAlignment.Right:
                    r = i - e.width
                }
                e.x = e.x + r
            }
        }
        ,
        t.prototype.applyVAlignement = function(t, e, i) {
            var n = null == t.vAlign ? this.vAlign : t.vAlign;
            if (null != n) {
                var r = 0
                  , o = e.height;
                switch (n) {
                case l.VerticalAlignment.Middle:
                    r = (i - o) / 2;
                    break;
                case l.VerticalAlignment.Bottom:
                    r = i - o
                }
                e.y = e.y + r
            }
        }
        ,
        t
    }(l.AbstractLayout);
    l.LinearLayout = t
}(DUST || (DUST = {})),
function(e) {
    var t = function(i) {
        function t(t) {
            var e = i.call(this, t) || this;
            return e.beforeBuild(),
            e.build(),
            e.afterBuild(),
            e.animate(),
            e
        }
        return __extends(t, i),
        t.prototype.beforeBuild = function() {
            this.rootLayout = e.AbsoluteLayout.fromGame(this.game),
            this.logoLayout = new e.LinearLayout(!0),
            this.logoLayout.hAlign = e.HorizontalAlignment.Center,
            this.logoLayoutItem = this.rootLayout.addLayout(this.logoLayout),
            this.logoLayoutItem.hAlign = e.HorizontalAlignment.Center,
            this.bActionsLayout = new e.LinearLayout(!1),
            this.bActionsLayout.vAlign = e.VerticalAlignment.Middle,
            this.bActionsLayoutItem = this.rootLayout.addLayout(this.bActionsLayout),
            this.bActionsLayoutItem.hAlign = e.HorizontalAlignment.Center,
            this.addChild(this.rootLayout.getContainer())
        }
        ,
        t.prototype.afterBuild = function() {
            this.rootLayout.update()
        }
        ,
        t
    }(e.Scene);
    e.MenuScene = t
}(DUST || (DUST = {})),
function(r) {
    var t = function(i) {
        function n(t, e) {
            return i.call(this, n.generateTexture(t, e)) || this
        }
        return __extends(n, i),
        n.generateTexture = function(t, e) {
            var i = new r.Graphics;
            return i.drawRect(0, 0, t, e),
            i.generateTexture()
        }
        ,
        n
    }(r.Sprite);
    r.BlankSprite = t
}(DUST || (DUST = {})),
function(p) {
    var d, t;
    (t = d = p.HamburgerMenuOrientation || (p.HamburgerMenuOrientation = {}))[t.Left = 0] = "Left",
    t[t.Right = 1] = "Right",
    t[t.Bottom = 2] = "Bottom",
    t[t.Top = 3] = "Top";
    var e = function() {
        function r() {}
        return r.from = function(t, e, i) {
            return r.fromTextures(p.Texture.fromFrame(t), p.Texture.fromFrame(e), p.Texture.fromFrame(i))
        }
        ,
        r.fromTextures = function(t, e, i) {
            var n = new r;
            return n.up = t,
            n.down = e,
            n.hover = i,
            n
        }
        ,
        r
    }();
    p.HamburgerMenuStyle = e;
    var i = function(r) {
        function t(t, e, i) {
            var n = r.call(this) || this;
            return n.duration = 250,
            n.spaceBetweenButton = 10,
            n.buttons = [],
            n._open = !1,
            n._buttonPositions = [],
            n.openTime = 0,
            n.hitCheck = new p.Point(0,0),
            n.game = t,
            n.style = i,
            n._onToggleCloseFct = null,
            n._onToggleOpenFct = null,
            n.orientation = d.Right,
            n.mainButton = p.ImageButton.fromTextures(n.style.up, n.style.down, n.style.hover),
            n.mainButton.setIcon(p.Sprite.fromFrame(e)),
            n.mainButton.onClick(n.toggle, n),
            n.addChild(n.mainButton),
            n._bWidth = n.mainButton.sprite.width,
            n._bHeight = n.mainButton.sprite.height,
            n.openHandler = new p.HandlerCollection,
            n.timer = n.game.timeManager.createTimer(1e3, n.tick, n),
            n.timer.id = "HamburgerMenu",
            n.timer.setRepeat(-1),
            n.timer.start(),
            n.inputManager = n.game.inputManager,
            n
        }
        return __extends(t, r),
        t.prototype.onOpenMenu = function(t, e) {
            this._onToggleOpenFct = null == t ? null : new p.ContextualCallback(t,e)
        }
        ,
        t.prototype.onCloseMenu = function(t, e) {
            this._onToggleCloseFct = null == t ? null : new p.ContextualCallback(t,e)
        }
        ,
        t.prototype.open = function() {
            this._open = !1,
            this.toggle()
        }
        ,
        t.prototype.close = function() {
            this._open = !0,
            this.toggle()
        }
        ,
        t.prototype.toggle = function() {
            if (0 == this._buttonPositions.length || this._buttonPositions.length != this.buttons.length) {
                this._buttonPositions = [];
                for (var t = 0, e = 0, i = 0, n = 0, r = this.width, o = this.height, s = 0; s < this.buttons.length; s++) {
                    switch (this.orientation) {
                    case d.Right:
                        t += this._bWidth + this.spaceBetweenButton;
                        break;
                    case d.Left:
                        t -= this._bWidth + this.spaceBetweenButton;
                        break;
                    case d.Bottom:
                        e += this._bHeight + this.spaceBetweenButton;
                        break;
                    case d.Top:
                        e -= this._bHeight + this.spaceBetweenButton
                    }
                    this._buttonPositions.push(new p.Point(t,e)),
                    t < i && (i = t),
                    e < n && (n = e),
                    r < t && (r = t),
                    o < e && (o = e)
                }
                this.deployArea = new p.Rectangle(this.x + i,this.y + n,r - i,o - n)
            }
            this._open = !this._open;
            var a = this.game.tweenManager;
            for (s = 0; s < this.buttons.length; s++) {
                var h = this.buttons[s]
                  , l = this._buttonPositions[s]
                  , u = a.create(h)
                  , c = {};
                this._open ? this.orientation == d.Right || this.orientation == d.Left ? c.x = l.x : c.y = l.y : this.orientation == d.Right || this.orientation == d.Left ? c.x = 0 : c.y = 0,
                u.to(c, this.duration, p.Easing.EaseInOut),
                u.start(),
                this._open ? h.visible = !0 : u.onComplete = this.onHideTweenComplete
            }
            this._open ? null != this._onToggleOpenFct && this._onToggleOpenFct.execute() : null != this._onToggleCloseFct && this._onToggleCloseFct.execute(),
            this.openHandler.fire(this._open),
            this.onStateChange()
        }
        ,
        t.prototype.onHideTweenComplete = function(t) {
            t.getObject().visible = !1
        }
        ,
        t.prototype.addButton = function(t, e, i, n) {
            var r = p.ImageButton.fromTextures(this.style.up, this.style.down, this.style.hover);
            return r.setIcon(p.Sprite.fromFrame(t)),
            r.visible = !1,
            null != e && (null != n && n ? r.onImmediateClick(e, i) : r.onClick(e, i)),
            this.buttons.push(r),
            this.addChildAt(r, 0),
            r
        }
        ,
        t.prototype.addToggleButton = function(t, e, i, n, r) {
            var o = p.ImageToggleButton.fromTextures(this.style.up, this.style.down, this.style.hover);
            return o.setIcons(p.Sprite.fromFrame(t), p.Sprite.fromFrame(e)),
            o.visible = !1,
            null != i && (null != r && r ? o.onImmediateClick(i, n) : o.clickHandler.add(i, n)),
            this.buttons.push(o),
            this.addChildAt(o, 0),
            o
        }
        ,
        t.prototype.onStateChange = function() {
            this._open && (this.openTime = p.Time.now())
        }
        ,
        t.prototype.cleanUp = function() {
            this.openHandler.clear()
        }
        ,
        t.prototype.tick = function() {
            if (this._open)
                if (this.openTime + 5e3 < p.Time.now())
                    this.close();
                else {
                    var t = this.inputManager.mouse.pointer.downPosition;
                    this.deployArea.containsPoint(t) ? this.hitCheck.equals(t) || (this.openTime = p.Time.now()) : this.close(),
                    this.hitCheck.x = t.x,
                    this.hitCheck.y = t.y
                }
            this.isOrphan(!0) && (this.timer.cancel(),
            this.cleanUp())
        }
        ,
        t
    }(p.Container);
    p.HamburgerMenu = i
}(DUST || (DUST = {})),
function(e) {
    var t = function(r) {
        function t(t, e, i) {
            var n = r.call(this, t, e, i) || this;
            return n.fullscreenManager = n.game.deviceManager.fullscreenManager,
            n.audioManager = n.game.audioManager,
            n.openHandler.add(n.onOpen, n),
            n
        }
        return __extends(t, r),
        t.prototype.addFullScreenToggle = function(t, e) {
            this.fullscreenManager.fullscreenEnabled && (this.fullscreenManager.changeHandler.add(this.onFullScreenChange, this),
            this.fullScreenToggle = this.addToggleButton(t, e),
            this.fullScreenToggle.pressed = this.fullscreenManager.isInFullScreen)
        }
        ,
        t.prototype.addMusicToggle = function(t, e) {
            this.musicToggle = this.addToggleButton(t, e, this.onMusicToggleClicked, this),
            this.musicToggle.pressed = !this.audioManager.enableMusics
        }
        ,
        t.prototype.onMusicToggleClicked = function() {
            var t = this.audioManager.enableMusics;
            this.audioManager.enableMusics = !this.musicToggle.pressed,
            t ? e.Analytics.sendGlobalWorkflowEvent(e.AnalyticsGlobalWorkflowEvent.MUSICS, "off") : e.Analytics.sendGlobalWorkflowEvent(e.AnalyticsGlobalWorkflowEvent.MUSICS, "on")
        }
        ,
        t.prototype.addSoundToggle = function(t, e) {
            this.soundToggle = this.addToggleButton(t, e, this.onSoundToggleClicked, this),
            this.soundToggle.pressed = !this.audioManager.enableSoundsSprites
        }
        ,
        t.prototype.onSoundToggleClicked = function() {
            var t = this.audioManager.enableSoundsSprites;
            this.audioManager.enableSoundsSprites = !this.soundToggle.pressed,
            t ? e.Analytics.sendGlobalWorkflowEvent(e.AnalyticsGlobalWorkflowEvent.SOUNDS, "off") : e.Analytics.sendGlobalWorkflowEvent(e.AnalyticsGlobalWorkflowEvent.SOUNDS, "on")
        }
        ,
        t.prototype.onOpen = function(t) {
            t ? (null != this.fullScreenToggle && this.fullScreenToggle.onImmediateClick(this.onFullScreenToggleClicked, this),
            null != this.musicToggle && (this.musicToggle.pressed = !this.audioManager.enableMusics),
            null != this.soundToggle && (this.soundToggle.pressed = !this.audioManager.enableSoundsSprites)) : null != this.fullScreenToggle && this.fullScreenToggle.immediateClickHandler.remove(this.onFullScreenToggleClicked)
        }
        ,
        t.prototype.onFullScreenChange = function() {
            this.fullScreenToggle.pressed = this.fullscreenManager.isInFullScreen
        }
        ,
        t.prototype.onFullScreenToggleClicked = function() {
            var t = this.fullscreenManager.isInFullScreen;
            this.fullscreenManager.toggleFullScreen(),
            t ? e.Analytics.sendGlobalWorkflowEvent(e.AnalyticsGlobalWorkflowEvent.FULLSCREEN, "off") : e.Analytics.sendGlobalWorkflowEvent(e.AnalyticsGlobalWorkflowEvent.FULLSCREEN, "on")
        }
        ,
        t.prototype.cleanUp = function() {
            r.prototype.cleanUp.call(this),
            this.openHandler.clear(),
            this.fullscreenManager.changeHandler.remove(this.onFullScreenChange)
        }
        ,
        t
    }(e.HamburgerMenu);
    e.DefaultHamburgerMenu = t
}(DUST || (DUST = {})),
function(a) {
    var t = function(i) {
        function s(t) {
            var e = i.call(this, t) || this;
            return e._pressed = !1,
            e
        }
        return __extends(s, i),
        s.fromFrames = function(t, e, i) {
            var n = a.Texture.fromFrame(t)
              , r = null
              , o = null;
            return null != e && (r = a.Texture.fromFrame(e)),
            null != i && (o = a.Texture.fromFrame(i)),
            new s(new a.ImageButtonStyle(n,r,o))
        }
        ,
        s.fromTextures = function(t, e, i) {
            return new s(new a.ImageButtonStyle(t,e,i))
        }
        ,
        s.prototype.setIcon = function(t) {
            throw new Error("Use setIcons")
        }
        ,
        s.prototype.setIcons = function(t, e) {
            this.normal = t,
            this.press = e,
            this.pressed = this._pressed,
            i.prototype.setIcon.call(this, this.normal),
            this.clickHandler.add(this.toggle, this)
        }
        ,
        s.prototype.toggle = function() {
            this.pressed = !this.pressed
        }
        ,
        Object.defineProperty(s.prototype, "pressed", {
            get: function() {
                return this._pressed
            },
            set: function(t) {
                this._pressed = t,
                this._pressed ? i.prototype.setIcon.call(this, this.press) : i.prototype.setIcon.call(this, this.normal)
            },
            enumerable: !0,
            configurable: !0
        }),
        s
    }(a.ImageButton);
    a.ImageToggleButton = t
}(DUST || (DUST = {})),
function(e) {
    var t = function() {
        function t(t) {
            void 0 === t && (t = .5),
            this.closeHandler = new e.HandlerCollection,
            this._alpha = t,
            this.game = e.Game.get(),
            this.container = new e.Container,
            this.logger = JL("DUST.Popup"),
            this.bgContainer = new e.Container,
            this.bgContainer.interactive = !0,
            this.bgContainer.showCursor = !1;
            this.game.scaleManager;
            this.bgContainer.hitArea = new e.Rectangle(0,0,this.game.bounds.width,this.game.bounds.height),
            this.emptyRect = new e.Graphics,
            this.bgContainer.addChild(this.emptyRect),
            this.resizeEmptyRect(),
            this.container.addChild(this.bgContainer),
            this.contentContainer = new e.Container,
            this.container.addChild(this.contentContainer),
            this.game.scaleManager.resizeHandler.add(this.onResize, this)
        }
        return t.prototype.onResize = function() {
            this.resizeEmptyRect()
        }
        ,
        t.prototype.resizeEmptyRect = function() {
            var t = this.game.scaleManager
              , e = this.game.layers.root
              , i = t.offsetX / e.scaleX
              , n = t.offsetY / e.scaleY
              , r = this.game.bounds.width + 2 * i
              , o = this.game.bounds.height + 2 * n;
            this.emptyRect.clear(),
            this.emptyRect.beginFill(0, this.alpha),
            this.emptyRect.drawRect(-i, -n, r, o),
            this.emptyRect.endFill()
        }
        ,
        t.prototype.setPosition = function(t, e) {
            this.contentContainer.x = t,
            this.contentContainer.y = e
        }
        ,
        t.prototype.center = function() {
            this.contentContainer.x = (this.game.width - this.contentContainer.width) / 2,
            this.contentContainer.y = (this.game.height - this.contentContainer.height) / 2
        }
        ,
        t.prototype.show = function(t) {
            void 0 === t && (t = this.game.layers.popup),
            t.addChild(this.container)
        }
        ,
        t.prototype.close = function() {
            this.game.scaleManager.resizeHandler.remove(this.onResize),
            this.container.removeSelf(),
            this.closeHandler.fire()
        }
        ,
        t.prototype.addChild = function(t) {
            this.contentContainer.addChild(t)
        }
        ,
        t.prototype.removeChild = function(t) {
            this.contentContainer.removeChild(t)
        }
        ,
        Object.defineProperty(t.prototype, "alpha", {
            get: function() {
                return this._alpha
            },
            set: function(t) {
                this._alpha = t,
                this.resizeEmptyRect()
            },
            enumerable: !0,
            configurable: !0
        }),
        t
    }();
    e.Popup = t
}(DUST || (DUST = {})),
function(r) {
    var t = function(n) {
        function t(t, e) {
            void 0 === e && (e = "#EB00B0");
            var i = n.call(this) || this;
            return i.text = new r.Text(t),
            i.text.style = {
                fill: e
            },
            i.addChild(i.text),
            i
        }
        return __extends(t, n),
        t.prototype.setText = function(t) {
            this.text.text = t
        }
        ,
        t
    }(r.Button);
    r.TextButton = t
}(DUST || (DUST = {})),
function(o) {
    var t = function(r) {
        function t(t, e, i) {
            var n = r.call(this) || this;
            return n.isEnabled = !0,
            n.textureStateUp = t,
            n.textureStateDown = e,
            n.textureStateOver = i,
            n.sprite = new o.Sprite(t),
            n.addChild(n.sprite),
            n
        }
        return __extends(t, r),
        t.prototype.onStateDown = function() {
            this.logger.debug("onStateDown"),
            this.isOver = !0,
            this.textureStateDown && this.sprite.setTexture(this.textureStateDown),
            this.alpha = 1
        }
        ,
        t.prototype.onStateUp = function() {
            this.logger.debug("onStateUp"),
            this.isDown = !1,
            this.isOver && this.textureStateOver ? this.sprite.setTexture(this.textureStateOver) : this.sprite.setTexture(this.textureStateUp)
        }
        ,
        t.prototype.onStateOver = function() {
            r.prototype.onStateOver.call(this),
            this.isDown || this.textureStateOver && this.sprite.setTexture(this.textureStateOver)
        }
        ,
        t.prototype.onStateOut = function() {
            r.prototype.onStateOut.call(this),
            this.isDown || this.textureStateUp && this.sprite.setTexture(this.textureStateUp)
        }
        ,
        t
    }(o.Button);
    o.TextureButton = t
}(DUST || (DUST = {})),
function(t) {
    var e, i;
    e = t.System || (t.System = {}),
    i = function() {
        function t() {
            var t = this;
            this.os = new e.OS,
            this.fullscreenManager = new e.FullScreenManager,
            this.visibilityManager = new e.VisibilityManager,
            this.checkReady = function() {
                document.body ? (t.os.init(),
                document.removeEventListener("DOMContentLoaded", t.checkReady),
                window.removeEventListener("load", t.checkReady),
                t.readyCallback()) : window.setTimeout(t.checkReady, 20)
            }
        }
        return t.prototype.whenReady = function(t) {
            var e = "complete" == document.readyState;
            this.readyCallback = t,
            e ? (this.os.init(),
            this.readyCallback()) : (document.addEventListener("DOMContentLoaded", this.checkReady),
            window.addEventListener("load", this.checkReady))
        }
        ,
        t
    }(),
    e.DeviceManager = i
}(DUST || (DUST = {})),
function(e) {
    var t, i;
    t = e.System || (e.System = {}),
    i = function() {
        function t() {
            var t = this;
            this.onFullscreenChange = function() {
                t._isInFullScreen = t.hasFullscreenElement(),
                null != t._changeHandler && t._changeHandler.fire()
            }
            ,
            this.log = JL("DUST.FullScreenManager"),
            this.fullscreenEnabled = document.fullscreenEnabled || document.msFullscreenEnabled || document.mozFullScreenEnabled || document.webkitFullscreenEnabled,
            this._element = document.documentElement,
            this._isInFullScreen = this.hasFullscreenElement(),
            document.addEventListener("fullscreenchange", this.onFullscreenChange),
            document.addEventListener("msfullscreenchange", this.onFullscreenChange),
            document.addEventListener("mozfullscreenchange", this.onFullscreenChange),
            document.addEventListener("webkitfullscreenchange", this.onFullscreenChange)
        }
        return Object.defineProperty(t.prototype, "isInFullScreen", {
            get: function() {
                return this._isInFullScreen
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "changeHandler", {
            get: function() {
                return null == this._changeHandler && (this._changeHandler = new e.HandlerCollection),
                this._changeHandler
            },
            enumerable: !0,
            configurable: !0
        }),
        t.prototype.requestFullScreen = function() {
            if (this.fullscreenEnabled)
                if (document.documentElement.requestFullscreen)
                    document.documentElement.requestFullscreen();
                else if (document.documentElement.msRequestFullscreen)
                    document.documentElement.msRequestFullscreen();
                else if (document.documentElement.mozRequestFullScreen)
                    document.documentElement.mozRequestFullScreen();
                else if (document.documentElement.webkitRequestFullscreen) {
                    Element.ALLOW_KEYBOARD_INPUT;
                    document.documentElement.webkitRequestFullscreen()
                }
        }
        ,
        t.prototype.exitFullscreen = function() {
            this.fullscreenEnabled && (document.exitFullscreen ? document.exitFullscreen() : document.msExitFullscreen ? document.msExitFullscreen() : document.mozCancelFullScreen ? document.mozCancelFullScreen() : document.webkitExitFullscreen && document.webkitExitFullscreen())
        }
        ,
        t.prototype.hasFullscreenElement = function() {
            return null != (document.fullscreenElement || document.msFullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement)
        }
        ,
        t.prototype.toggleFullScreen = function() {
            this.fullscreenEnabled ? this.isInFullScreen ? this.exitFullscreen() : this.requestFullScreen() : this.log.info("fullScreen is not enabled")
        }
        ,
        t
    }(),
    t.FullScreenManager = i
}(DUST || (DUST = {})),
function(r) {
    function n(t, e, i) {
        void 0 !== e[t] && (null !== e[t] ? i[t] = e[t] : delete i[t])
    }
    function h(t) {
        if (null != r.enabled && !r.enabled)
            return !1;
        if (null != r.maxMessages && r.maxMessages < 1)
            return !1;
        try {
            if (t.userAgentRegex && !new RegExp(t.userAgentRegex).test(navigator.userAgent))
                return !1
        } catch (t) {}
        try {
            if (t.ipRegex && r.clientIP && !new RegExp(t.ipRegex).test(r.clientIP))
                return !1
        } catch (t) {}
        return !0
    }
    function l(t, e) {
        try {
            if (t.disallow && new RegExp(t.disallow).test(e))
                return !1
        } catch (t) {}
        return !0
    }
    function a(t) {
        return "function" == typeof t ? t instanceof RegExp ? t.toString() : t() : t
    }
    r.requestId = "";
    var o = function(t, e, i) {
        this.msg = t,
        this.meta = e,
        this.finalString = i
    };
    function u(t) {
        var e, i = a(t);
        switch (typeof i) {
        case "string":
            return new o(i,null,i);
        case "number":
        case "boolean":
            return e = i.toString(),
            new o(e,null,e);
        case "undefined":
            return new o("undefined",null,"undefined");
        case "object":
            return i instanceof RegExp || i instanceof String || i instanceof Number || i instanceof Boolean ? (e = i.toString(),
            new o(e,null,e)) : new o(null,i,JSON.stringify(i));
        default:
            return new o("unknown",null,"unknown")
        }
    }
    function t() {
        return 1e3
    }
    function e() {
        return 2e3
    }
    function i() {
        return 3e3
    }
    function s() {
        return 4e3
    }
    function c() {
        return 5e3
    }
    function p() {
        return 6e3
    }
    r.setOptions = function(t) {
        return n("enabled", t, this),
        n("maxMessages", t, this),
        n("defaultAjaxUrl", t, this),
        n("clientIP", t, this),
        n("requestId", t, this),
        n("defaultBeforeSend", t, this),
        this
    }
    ,
    r.getAllLevel = function() {
        return -2147483648
    }
    ,
    r.getTraceLevel = t,
    r.getDebugLevel = e,
    r.getInfoLevel = i,
    r.getWarnLevel = s,
    r.getErrorLevel = c,
    r.getFatalLevel = p,
    r.getOffLevel = function() {
        return 2147483647
    }
    ;
    var d = function(t, e) {
        this.inner = e,
        this.name = "JL.Exception",
        this.message = u(t).finalString
    };
    (r.Exception = d).prototype = new Error;
    var f = function(t, e, i, n) {
        this.l = t,
        this.m = e,
        this.n = i,
        this.t = n
    };
    r.LogItem = f;
    var g = function() {
        function t(t, e) {
            this.appenderName = t,
            this.sendLogItems = e,
            this.level = r.getTraceLevel(),
            this.sendWithBufferLevel = 2147483647,
            this.storeInBufferLevel = -2147483648,
            this.bufferSize = 0,
            this.batchSize = 1,
            this.buffer = [],
            this.batchBuffer = []
        }
        return t.prototype.setOptions = function(t) {
            return n("level", t, this),
            n("ipRegex", t, this),
            n("userAgentRegex", t, this),
            n("disallow", t, this),
            n("sendWithBufferLevel", t, this),
            n("storeInBufferLevel", t, this),
            n("bufferSize", t, this),
            n("batchSize", t, this),
            this.bufferSize < this.buffer.length && (this.buffer.length = this.bufferSize),
            this
        }
        ,
        t.prototype.log = function(t, e, i, n, r, o, s) {
            var a;
            h(this) && l(this, o) && (r < this.storeInBufferLevel || (a = new f(r,o,s,(new Date).getTime()),
            r < this.level ? 0 < this.bufferSize && (this.buffer.push(a),
            this.buffer.length > this.bufferSize && this.buffer.shift()) : (r < this.sendWithBufferLevel || this.buffer.length && (this.batchBuffer = this.batchBuffer.concat(this.buffer),
            this.buffer.length = 0),
            this.batchBuffer.push(a),
            this.batchBuffer.length >= this.batchSize && this.sendBatch())))
        }
        ,
        t.prototype.sendBatch = function() {
            0 != this.batchBuffer.length && (null != r.maxMessages && r.maxMessages < 1 || (null != r.maxMessages && (r.maxMessages -= this.batchBuffer.length),
            this.sendLogItems(this.batchBuffer),
            this.batchBuffer.length = 0))
        }
        ,
        t
    }()
      , y = function(e) {
        function i(t) {
            return e.call(this, t, i.prototype.sendLogItemsAjax) || this
        }
        return __extends(i, e),
        i.prototype.setOptions = function(t) {
            return n("url", t, this),
            n("beforeSend", t, this),
            e.prototype.setOptions.call(this, t),
            this
        }
        ,
        i.prototype.sendLogItemsAjax = function(t) {
            try {
                var e = "/jsnlog.logger";
                null != r.defaultAjaxUrl && (e = r.defaultAjaxUrl),
                this.url && (e = this.url);
                var i = JSON.stringify({
                    r: r.requestId,
                    lg: t
                })
                  , n = this.getXhr(e);
                "function" == typeof this.beforeSend ? this.beforeSend(n) : "function" == typeof r.defaultBeforeSend && r.defaultBeforeSend(n),
                n.send(i)
            } catch (t) {}
        }
        ,
        i.prototype.getXhr = function(t) {
            var e = new XMLHttpRequest;
            return e.open("POST", t),
            e.setRequestHeader("Content-Type", "application/json"),
            e.setRequestHeader("JSNLog-RequestId", r.requestId),
            e
        }
        ,
        i
    }(r.Appender = g);
    r.AjaxAppender = y;
    var m = function(e) {
        function i(t) {
            return e.call(this, t, i.prototype.sendLogItemsConsole) || this
        }
        return __extends(i, e),
        i.prototype.clog = function(t) {
            console.log(t)
        }
        ,
        i.prototype.cerror = function(t) {
            console.error ? console.error(t) : this.clog(t)
        }
        ,
        i.prototype.cwarn = function(t) {
            console.warn ? console.warn(t) : this.clog(t)
        }
        ,
        i.prototype.cinfo = function(t) {
            console.info ? console.info(t) : this.clog(t)
        }
        ,
        i.prototype.cdebug = function(t) {
            console.debug ? console.debug(t) : this.cinfo(t)
        }
        ,
        i.prototype.sendLogItemsConsole = function(t) {
            try {
                if (!console)
                    return;
                var e;
                for (e = 0; e < t.length; ++e) {
                    var i = t[e]
                      , n = i.n + ": " + i.m;
                    "undefined" == typeof window && (n = new Date(i.t) + " | " + n),
                    i.l <= r.getDebugLevel() ? this.cdebug(n) : i.l <= r.getInfoLevel() ? this.cinfo(n) : i.l <= r.getWarnLevel() ? this.cwarn(n) : this.cerror(n)
                }
            } catch (t) {}
        }
        ,
        i
    }(g);
    r.ConsoleAppender = m;
    var v = function() {
        function t(t) {
            this.loggerName = t,
            this.seenRegexes = []
        }
        return t.prototype.setOptions = function(t) {
            return n("level", t, this),
            n("userAgentRegex", t, this),
            n("disallow", t, this),
            n("ipRegex", t, this),
            n("appenders", t, this),
            n("onceOnly", t, this),
            this.seenRegexes = [],
            this
        }
        ,
        t.prototype.buildExceptionObject = function(t) {
            var e = {};
            return t.stack ? e.stack = t.stack : e.e = t,
            t.message && (e.message = t.message),
            t.name && (e.name = t.name),
            t.data && (e.data = t.data),
            t.inner && (e.inner = this.buildExceptionObject(t.inner)),
            e
        }
        ,
        t.prototype.log = function(t, e, i) {
            var n, r, o, s = 0;
            if (!this.appenders)
                return this;
            if (t >= this.level && h(this) && (i ? (r = this.buildExceptionObject(i)).logData = a(e) : r = e,
            l(this, (n = u(r)).finalString))) {
                if (this.onceOnly)
                    for (s = this.onceOnly.length - 1; 0 <= s; ) {
                        if (new RegExp(this.onceOnly[s]).test(n.finalString)) {
                            if (this.seenRegexes[s])
                                return this;
                            this.seenRegexes[s] = !0
                        }
                        s--
                    }
                for (n.meta = n.meta || {},
                n.meta.loggerName = this.loggerName,
                s = this.appenders.length - 1; 0 <= s; )
                    this.appenders[s].log((o = t) <= 1e3 ? "trace" : o <= 2e3 ? "debug" : o <= 3e3 ? "info" : o <= 4e3 ? "warn" : o <= 5e3 ? "error" : "fatal", n.msg, n.meta, function() {}, t, n.finalString, this.loggerName),
                    s--
            }
            return this
        }
        ,
        t.prototype.trace = function(t) {
            return this.log(1e3, t)
        }
        ,
        t.prototype.debug = function(t) {
            return this.log(2e3, t)
        }
        ,
        t.prototype.info = function(t) {
            return this.log(3e3, t)
        }
        ,
        t.prototype.warn = function(t) {
            return this.log(4e3, t)
        }
        ,
        t.prototype.error = function(t, e) {
            return this.log(5e3, t, e)
        }
        ,
        t.prototype.fatal = function(t) {
            return this.log(6e3, t)
        }
        ,
        t.prototype.fatalException = function(t, e) {
            return this.log(6e3, t, e)
        }
        ,
        t
    }();
    r.Logger = v,
    r.createAjaxAppender = function(t) {
        return new y(t)
    }
    ,
    r.createConsoleAppender = function(t) {
        return new m(t)
    }
    ;
    var S = new m("");
    "undefined" == typeof window && (S = new m("")),
    r.__ = new r.Logger(""),
    r.__.setOptions({
        level: r.getDebugLevel(),
        appenders: [S]
    })
}(JL || (JL = {})),
void 0 !== exports && (exports.JL = JL),
"function" == typeof define && define.amd && define("jsnlog", [], function() {
    return JL
}),
"function" == typeof __jsnlog_configure && __jsnlog_configure(JL),
function(t) {
    var e, i;
    e = t.System || (t.System = {}),
    i = function() {
        function t() {
            this.vita = !1,
            this.kindle = !1,
            this.android = !1,
            this.chromeOS = !1,
            this.iOS = !1,
            this.linux = !1,
            this.macOS = !1,
            this.windows = !1,
            this.windowsPhone = !1,
            this.desktop = !1
        }
        return t.prototype.init = function() {
            var t = navigator.userAgent;
            /Playstation Vita/.test(t) ? this.vita = !0 : /Kindle/.test(t) || /\bKF[A-Z][A-Z]+/.test(t) || /Silk.*Mobile Safari/.test(t) ? this.kindle = !0 : /Android/.test(t) ? this.android = !0 : /CrOS/.test(t) ? this.chromeOS = !0 : /iP[ao]d|iPhone/i.test(t) ? (this.iOS = !0,
            navigator.appVersion.match(/OS (\d+)/),
            this.iOSVersion = parseInt(RegExp.$1, 10)) : /Linux/.test(t) ? this.linux = !0 : /Mac OS/.test(t) ? this.macOS = !0 : /Windows/.test(t) && (this.windows = !0),
            (/Windows Phone/i.test(t) || /IEMobile/i.test(t)) && (this.android = !1,
            this.iOS = !1,
            this.macOS = !1,
            this.windows = !0,
            this.windowsPhone = !0);
            var e = /Silk/.test(t);
            (this.windows || this.macOS || this.linux && !e || this.chromeOS) && (this.desktop = !0),
            (this.windowsPhone || /Windows NT/i.test(t) && /Touch/i.test(t)) && (this.desktop = !1)
        }
        ,
        t
    }(),
    e.OS = i
}(DUST || (DUST = {})),
function(i) {
    var t, e;
    t = i.System || (i.System = {}),
    e = function() {
        function t() {
            this._isUnloading = !1,
            this._isVisible = !0,
            this._isExtendedVisible = !0,
            this.visibilityChangeHandler = new i.HandlerCollection,
            this.extendedVisibilityChangeHandler = new i.HandlerCollection,
            this.beforeUnloadHandler = new i.HandlerCollection,
            this.browserPrefixes = ["moz", "ms", "o", "webkit"];
            var t = this;
            this.log = JL("VisibilityManager");
            var e = this.getBrowserPrefix();
            this.hiddenPropertyName = this.getHiddenPropertyName(e),
            this.visibilityEventName = this.getVisibilityEvent(e),
            document.addEventListener(this.visibilityEventName, this.handleVisibilityChange.bind(this), !1),
            document.addEventListener("focus", function() {
                t.handleExtendedVisibilityChange(!0, "document-focus")
            }, !1),
            document.addEventListener("blur", function() {
                t.handleExtendedVisibilityChange(!1, "document-blur")
            }, !1),
            window.addEventListener("focus", function() {
                t.handleExtendedVisibilityChange(!0, "window-focus")
            }, !1),
            window.addEventListener("blur", function() {
                t.handleExtendedVisibilityChange(!1, "window-blur")
            }, !1),
            window.addEventListener("beforeunload", this.handleOnBeforeUnload.bind(this), !1)
        }
        return t.prototype.getHiddenPropertyName = function(t) {
            return t ? t + "Hidden" : "hidden"
        }
        ,
        t.prototype.getVisibilityEvent = function(t) {
            return (t || "") + "visibilitychange"
        }
        ,
        t.prototype.getBrowserPrefix = function() {
            for (var t = 0; t < this.browserPrefixes.length; t++)
                if (this.getHiddenPropertyName(this.browserPrefixes[t])in document)
                    return this.browserPrefixes[t];
            return null
        }
        ,
        t.prototype.handleVisibilityChange = function() {
            if (document[this.hiddenPropertyName])
                return this.log.trace("hidden"),
                this._isVisible = !1,
                this.visibilityChangeHandler.fire(!1),
                void this.onExtendedHidden(this.hiddenPropertyName);
            this.log.trace("visible"),
            this._isVisible = !0,
            this.visibilityChangeHandler.fire(!0),
            this.onExtendedVisible(this.hiddenPropertyName)
        }
        ,
        t.prototype.handleExtendedVisibilityChange = function(t, e) {
            return t ? this.onExtendedVisible(e) : this.onExtendedHidden(e)
        }
        ,
        t.prototype.onExtendedVisible = function(t) {
            this._isExtendedVisible || (this._isExtendedVisible = !0,
            this.log.trace("extended visible"),
            this.extendedVisibilityChangeHandler.fire(this._isExtendedVisible, t))
        }
        ,
        t.prototype.onExtendedHidden = function(t) {
            this._isExtendedVisible && (this._isExtendedVisible = !1,
            this.extendedVisibilityChangeHandler.fire(this._isExtendedVisible, t),
            this.log.trace("extended hidden"))
        }
        ,
        t.prototype.handleOnBeforeUnload = function(t) {
            this._isUnloading = !0,
            this.beforeUnloadHandler.fire(t)
        }
        ,
        t.prototype.addVisibilityChangeHandler = function(t) {
            this.visibilityChangeHandler.add(t)
        }
        ,
        t.prototype.removeVisibilityChangeHandler = function(t) {
            this.visibilityChangeHandler.remove(t)
        }
        ,
        t.prototype.addExtendedVisibilityChangeHandler = function(t) {
            this.extendedVisibilityChangeHandler.add(t)
        }
        ,
        t.prototype.removeExtendedVisibilityChangeHandler = function(t) {
            this.extendedVisibilityChangeHandler.remove(t)
        }
        ,
        t.prototype.addBeforeUnloadHandler = function(t) {
            this.beforeUnloadHandler.add(t)
        }
        ,
        t.prototype.removeBeforeUnloadHandler = function(t) {
            this.beforeUnloadHandler.remove(t)
        }
        ,
        t.prototype.isVisible = function() {
            return this._isVisible
        }
        ,
        t.prototype.isUnloading = function() {
            return this._isUnloading
        }
        ,
        Object.defineProperty(t.prototype, "hidden", {
            get: function() {
                return !this._isVisible
            },
            set: function(t) {
                throw "Read only"
            },
            enumerable: !0,
            configurable: !0
        }),
        t
    }(),
    t.VisibilityManager = e
}(DUST || (DUST = {})),
function(t) {
    var e = function() {
        function t(t) {
            this.entities = [],
            this.layers = [],
            this.raw = t
        }
        return t.prototype.read = function() {
            for (var t = [], e = 0; e < this.raw.tilesets.length; e++) {
                var i = this.raw.tilesets[e];
                for (var n in i.tiles) {
                    var r = i.tiles[n];
                    t[i.firstgid + parseInt(n)] = new p(r)
                }
            }
            for (e = 0; e < this.raw.layers.length; e++) {
                var o = [];
                this.layers.push(o);
                for (var s = this.raw.layers[e], a = 0; a < s.data.length; a++) {
                    var h = s.data[a];
                    if (0 != h) {
                        var l = a % s.width
                          , u = (a - l) / s.width
                          , c = t[h].copy();
                        c.x = l * this.raw.tilewidth,
                        c.y = u * this.raw.tileheight + this.raw.tileheight,
                        o.push(c)
                    }
                }
            }
            this.width = this.raw.width * this.raw.tilewidth,
            this.height = this.raw.height * this.raw.tileheight
        }
        ,
        t.prototype.loadEntities = function(t) {
            for (var e = 0; e < this.layers.length; e++)
                for (var i = this.layers[e], n = 0; n < i.length; n++) {
                    var r = t.createEntity(i[n]);
                    null != r && this.entities.push(r)
                }
        }
        ,
        t.prototype.getCustomPropertie = function(t) {
            return null == this.raw.properties ? null : this.raw.properties[t]
        }
        ,
        t
    }();
    t.Tiled = e;
    var p = function() {
        function t(t) {
            this.image = t.image
        }
        return t.prototype.copy = function() {
            return new t({
                image: this.image
            })
        }
        ,
        t
    }();
    t.Tile = p
}(DUST || (DUST = {})),
function(t) {
    var e;
    (e = t.UTCDate || (t.UTCDate = {})).oneday = 864e5,
    e.serverTimeDiff = 0,
    e.now = function() {
        return Date.now() - e.serverTimeDiff
    }
}(DUST || (DUST = {})),
function(t) {
    var e, i, n;
    e = t.Time || (t.Time = {}),
    n = i = 0,
    e._refresh = function(t) {}
    ,
    e._update = function(t) {
        n = t,
        i = performance.now()
    }
    ,
    e.now = function() {
        return i
    }
    ,
    e.ellapsed = function() {
        return n
    }
}(DUST || (DUST = {})),
function(o) {
    var t = function() {
        function r() {
            this._timers = [],
            this.inUpdateLoop = !1,
            this.timersToAdd = [],
            this.timersToRemove = [],
            r.TIME_MANAGER = this
        }
        return r.get = function() {
            return null == r.TIME_MANAGER && (r.TIME_MANAGER = new r),
            r.TIME_MANAGER
        }
        ,
        r.prototype.update = function(t) {
            this.inUpdateLoop = !0,
            this._now = o.Time.now();
            for (var e = this._timers.length - 1; 0 <= e; e--) {
                var i = this._timers[e];
                i.update(this._now) && i.hasExpired() && this.timersToRemove.push(i)
            }
            this.inUpdateLoop = !1,
            0 < this.timersToRemove.length && (this.timersToRemove.forEach(function(t) {
                this.remove(t)
            }, this),
            this.timersToRemove.length = 0),
            0 < this.timersToAdd.length && (this.timersToAdd.forEach(function(t) {
                this.pushTimer(t)
            }, this),
            this.timersToAdd.length = 0)
        }
        ,
        r.prototype.pushTimer = function(t) {
            this._timers.push(t)
        }
        ,
        r.prototype.remove = function(t) {
            if (this.inUpdateLoop)
                this.timersToRemove.push(t);
            else {
                var e = this._timers.indexOf(t);
                0 <= e && this._timers.splice(e, 1)
            }
        }
        ,
        r.prototype.removeAll = function() {
            for (var t = 0; t < this._timers.length; t++)
                this._timers[t]._expired = !0;
            this._timers = []
        }
        ,
        r.prototype.cancelAll = function() {
            for (var t = this._timers.length - 1; 0 <= t; t--)
                this._timers[t].cancel()
        }
        ,
        r.prototype.createTimer = function(t, e, i, n) {
            var r = new o.Timer(this,t,e,i,n);
            return this.inUpdateLoop ? this.timersToAdd.push(r) : this.pushTimer(r),
            r
        }
        ,
        r.prototype.createAndStartTimer = function(t, e, i, n) {
            var r = this.createTimer(t, e, i, n);
            return r.start(),
            r
        }
        ,
        r.createAndStartTimer = function(t, e, i, n) {
            return r.get().createAndStartTimer(t, e, i, n)
        }
        ,
        Object.defineProperty(r.prototype, "activeTimersCount", {
            get: function() {
                return this._timers.length
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(r.prototype, "activeTimers", {
            get: function() {
                return this._timers.map(function(t) {
                    return t.id
                }).join()
            },
            enumerable: !0,
            configurable: !0
        }),
        r
    }();
    o.TimeManager = t
}(DUST || (DUST = {})),
function(e) {
    var t = function() {
        function t(t, e, i, n, r) {
            this.id = "DefaultId",
            this._repeatCount = 1,
            this._enabled = !1,
            this._expired = !1,
            this._paused = !1,
            this._pausedTime = 0,
            this._timeManager = t,
            this._delay = e,
            this._callback = i,
            this._thisArg = n,
            this._argArray = r
        }
        return t.prototype.setRepeat = function(t) {
            this._repeatCount = t
        }
        ,
        t.prototype.update = function(t) {
            return this._paused ? (this._pausedTime += t,
            !1) : !this._enabled || this._tick - t <= 0 && (null != this._callback && this._callback.call(this._thisArg, this._argArray),
            this._repeatCount--,
            0 == this._repeatCount ? (this._enabled = !1,
            this._expired = !0) : (this._repeatCount < -1 && (this._repeatCount = -1),
            this._tick = t + this._delay,
            this._startTime = t,
            !1))
        }
        ,
        t.prototype.start = function() {
            this._enabled || (this._enabled = !0,
            this._tick = e.Time.now() + this._delay,
            this._startTime = e.Time.now())
        }
        ,
        t.prototype.pause = function() {
            this._enabled && (this._paused = !0)
        }
        ,
        t.prototype.resume = function() {
            this._enabled && (this._paused = !1)
        }
        ,
        t.prototype.cancel = function() {
            this._enabled = !1,
            this._timeManager.remove(this)
        }
        ,
        t.prototype.hasExpired = function() {
            return this._expired
        }
        ,
        t.prototype.getProgress = function() {
            return this._expired ? 1 : this._enabled ? (e.Time.now() - this._startTime - this._pausedTime) / this._delay : 0
        }
        ,
        t.prototype.getDuration = function() {
            return this._delay
        }
        ,
        t
    }();
    e.Timer = t
}(DUST || (DUST = {})),
(DUST || (DUST = {})).Easing = {
    Linear: new BezierEasing([0, 0, 1, 1]),
    Ease: new BezierEasing([.25, .1, .25, 1]),
    EaseIn: new BezierEasing([.42, 0, 1, 1]),
    EaseOut: new BezierEasing([0, 0, .58, 1]),
    EaseInOut: new BezierEasing([.42, 0, .58, 1]),
    EaseInBack: new BezierEasing([.6, -.28, .735, .045]),
    EaseOutBack: new BezierEasing([.175, .885, .32, 1.275]),
    EaseInOutBack: new BezierEasing([.68, -.55, .265, 1.55])
},
function(l) {
    var u = function(s) {
        function t(t, e, i) {
            var n = s.call(this, t) || this;
            n.direction = e,
            n.goto = i,
            n.valueDown = 0,
            n.valueUp = 0,
            n.coinX = 10,
            n.coinY = 100,
            n.amplitude = 50,
            n.tweenManager = l.TweenManager.get();
            var r = n;
            n.random = Math.random(),
            n.maxParabolaHeight = .1,
            n.valueDown = 0,
            n.valueUp = 0,
            n.amplitude = n.random * n.amplitude,
            n.coinX = n.x + n.getDirection() * n.amplitude,
            n.coinY = n.y - n.maxParabolaHeight * n.amplitude * n.amplitude;
            var o = n.tweenManager.create(n);
            return o.delay(1e3 * n.random),
            o.from({
                up: -n.getDirection() * n.amplitude,
                scaleXY: .3
            }, 1e3 * n.random, l.Easing.EaseIn),
            o.to({
                down: n.getDirection() * n.amplitude,
                scaleXY: 1.2
            }, 1e3 * n.random, l.Easing.EaseOut),
            o.onComplete = function() {
                var t = this.tweenManager.create(r);
                t.to({
                    y: r.y - 100
                }, 1e3, l.Easing.EaseIn),
                t.to({
                    y: r.y
                }, 1e3, l.Easing.EaseOut),
                t.repeat(2),
                t.onComplete = function() {}
                ,
                t.start()
            }
            ,
            o.start(),
            n
        }
        return __extends(t, s),
        t.prototype.getDirection = function() {
            return this.direction
        }
        ,
        Object.defineProperty(t.prototype, "up", {
            get: function() {
                return this.valueUp
            },
            set: function(t) {
                this.valueUp = t,
                console.log(t),
                this.x = this.coinX + t,
                this.y = this.coinY + this.maxParabolaHeight * t * t
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "down", {
            get: function() {
                return this.valueDown
            },
            set: function(t) {
                this.valueDown = t,
                console.log(t),
                this.x = this.coinX + t,
                this.y = this.coinY + this.maxParabolaHeight * t * t
            },
            enumerable: !0,
            configurable: !0
        }),
        t
    }(l.Sprite);
    l.RewardParticule = u;
    var t = function(h) {
        function t(t, e, i, n) {
            var r = h.call(this) || this;
            r.goto = i;
            for (var o = 0; o < e; o++) {
                var s = new u(t,.5 < Math.random() ? 1 : -1,i);
                n.addChild(s);
                var a = l.TweenManager.get().create(s);
                a.delay(3e3),
                a.to({
                    x: 0,
                    y: -800,
                    scaleXY: 0
                }, 700, l.Easing.EaseIn),
                a.start()
            }
            return r
        }
        return __extends(t, h),
        t
    }(l.Container);
    l.RewardAnimation = t
}(DUST || (DUST = {})),
function(d) {
    var t = function(p) {
        function t(t, e, i, r, n, o) {
            void 0 === i && (i = 100),
            void 0 === r && (r = 2e3),
            void 0 === n && (n = [[253, 31], [472, 190], [179, 521], [312, 633]]),
            void 0 === o && (o = !1);
            var s = p.call(this, d.Game.get()) || this;
            s.g = new d.Graphics,
            s.curves = [],
            s.birds = [];
            for (var a = 0; a < i; a++) {
                var h = Math.random() / 10 + .6
                  , l = [n[0], [n[1][0] * h, n[1][1]], [h * n[2][0], h * n[2][1]], n[3]];
                s.curves.push(l),
                1 == o && (e.addChild(s.g),
                s.g.lineStyle(1, 16777215, 1),
                s.g.moveTo(l[0][0], l[0][1]),
                s.g.bezierCurveTo(l[1][0], l[1][1], l[2][0], l[2][1], l[3][0], l[3][1]));
                var u = d.Sprite.fromFrame(t);
                e.addChild(u),
                u.setPivotToCenter(),
                u.scaleXY = 1,
                u.y = -300,
                s.birds.push([u, l, 1e4 * Math.random()])
            }
            var c = s;
            return s.birds.forEach(function(e) {
                var t = new d.TweenValueListener(0,!1);
                t.onValueChange = function(t) {
                    e[0].x = c.bezierX(1 - t, e[1]),
                    e[0].y = c.bezierY(1 - t, e[1]),
                    e[0].scaleXY = 1 - t
                }
                ;
                var i = d.TweenManager.get().create(t)
                  , n = Math.floor(Math.random() * r);
                i.delay(n),
                i.to({
                    value: 1
                }, 1e3, d.Easing.EaseIn),
                i.start()
            }),
            s
        }
        return __extends(t, p),
        t.prototype.bezierX = function(t, e) {
            return e[0][0] * (1 - t) * (1 - t) * (1 - t) + 3 * e[1][0] * t * (1 - t) * (1 - t) + 3 * e[2][0] * t * t * (1 - t) + e[3][0] * t * t * t
        }
        ,
        t.prototype.bezierY = function(t, e) {
            return e[0][1] * (1 - t) * (1 - t) * (1 - t) + 3 * e[1][1] * t * (1 - t) * (1 - t) + 3 * e[2][1] * t * t * (1 - t) + e[3][1] * t * t * t
        }
        ,
        t
    }(d.Scene);
    d.TravelParticle = t
}(DUST || (DUST = {})),
function(r) {
    var n, t;
    (t = n = r.TweenState || (r.TweenState = {}))[t.PENDING = 0] = "PENDING",
    t[t.RUNNING = 1] = "RUNNING",
    t[t.TERMINATED = 2] = "TERMINATED";
    var e = function() {
        function t(t, e, i) {
            this.id = "DefaultId",
            this.repeatCount = 1,
            this.currentStepIndex = -1,
            this.steps = [],
            this.state = n.PENDING,
            this._savedValues = {},
            this.object = t,
            this.game = e,
            this.tweenManager = i,
            this.logger = JL("Tween")
        }
        return t.prototype.getObject = function() {
            return this.object
        }
        ,
        t.prototype.delay = function(t) {
            var e = new r.DelayTweenStep(t);
            return this.steps.push(e),
            this
        }
        ,
        t.prototype.repeat = function(t) {
            this.repeatCount = t
        }
        ,
        t.prototype.to = function(t, e, i) {
            void 0 === e && (e = 1e3),
            void 0 === i && (i = r.Easing.Linear);
            var n = new r.PropertiesTweenStep(this.object,t,e,i,!1);
            return this.steps.push(n),
            this
        }
        ,
        t.prototype.from = function(t, e, i) {
            void 0 === e && (e = 1e3),
            void 0 === i && (i = r.Easing.Linear);
            var n = new r.PropertiesTweenStep(this.object,t,e,i,!0);
            return this.steps.push(n),
            this
        }
        ,
        t.prototype.saveProperties = function() {
            for (var t = [], e = 0; e < arguments.length; e++)
                t[e] = arguments[e];
            var i = new r.SavePropertiesTweenStep(this,this.object,t);
            return this.steps.push(i),
            this
        }
        ,
        t.prototype.restoreProperties = function() {
            for (var t = [], e = 0; e < arguments.length; e++)
                t[e] = arguments[e];
            var i = new r.RestorePropertiesTweenStep(this,this.object,t);
            return this.steps.push(i),
            this
        }
        ,
        t.prototype.start = function() {
            this.state != n.RUNNING ? 0 != this.steps.length ? (this.state = n.RUNNING,
            this.nextStep(),
            this.onStart && this.onStart()) : this.logger.warn("No step defined in Tween") : this.logger.warn("Tween already started")
        }
        ,
        t.prototype.stop = function() {
            this.state != n.TERMINATED && (this.state = n.TERMINATED,
            this.onComplete && this.onComplete(this),
            this.tweenManager.remove(this))
        }
        ,
        t.prototype.update = function(t) {
            this.state == n.RUNNING && (null != this.currentStep ? (this.currentStep.update(t),
            this.currentStep.isComplete() && (this.render(1),
            this.nextStep())) : this.stop())
        }
        ,
        t.prototype.render = function(t) {
            this.state == n.RUNNING && null != this.currentStep && this.currentStep.render(t)
        }
        ,
        t.prototype.nextStep = function() {
            this.currentStepIndex++,
            this.currentStepIndex < this.steps.length ? (this.currentStep = this.steps[this.currentStepIndex],
            this.currentStep.start()) : (this.repeatCount -= 1,
            0 == this.repeatCount ? this.currentStep = null : (this.currentStepIndex = -1,
            this.nextStep()))
        }
        ,
        t
    }();
    r.Tween = e
}(DUST || (DUST = {})),
function(u) {
    var t = function() {
        function t(t, e) {
            void 0 === e && (e = !0),
            this.roundValue = e,
            this._value = e ? Math.round(t) : t
        }
        return t.prototype.notify = function(t) {
            var e = this._value;
            e != t && (e < t ? (null != this.onValueUp && this.onValueUp(t),
            null != this.onValueChange && this.onValueChange(t)) : t < e && (null != this.onValueDown && this.onValueDown(t),
            null != this.onValueChange && this.onValueChange(t)))
        }
        ,
        Object.defineProperty(t.prototype, "value", {
            get: function() {
                return this._value
            },
            set: function(t) {
                this.roundValue && (t = Math.round(t)),
                this.notify(t),
                this._value = t
            },
            enumerable: !0,
            configurable: !0
        }),
        t
    }();
    u.TweenValueListener = t;
    var e = function() {
        function t() {}
        return t.fadeIn = function(t, e, i, n) {
            void 0 === e && (e = 350),
            void 0 === i && (i = 0),
            void 0 === n && (n = u.Easing.Linear),
            t.alpha = 0;
            var r = u.Game.get().tweenManager.create(t);
            return 0 < i && r.delay(i),
            r.to({
                alpha: 1
            }, e, n),
            r.start(),
            r
        }
        ,
        t.fadeOut = function(t, e, i, n) {
            void 0 === e && (e = 350),
            void 0 === i && (i = 0),
            void 0 === n && (n = u.Easing.Linear);
            var r = u.Game.get().tweenManager.create(t);
            return 0 < i && r.delay(i),
            r.to({
                alpha: 0
            }, e, n),
            r.start(),
            r
        }
        ,
        t.translateY = function(t, e, i, n, r) {
            void 0 === i && (i = 350),
            void 0 === n && (n = 0),
            void 0 === r && (r = u.Easing.Linear);
            var o = t.y + e
              , s = u.Game.get().tweenManager.create(t);
            return 0 < n && s.delay(n),
            s.to({
                y: o
            }, i, r),
            s.start(),
            s
        }
        ,
        t.infiniteRotation = function(t, e, i) {
            var n = u.Game.get().tweenManager.create(t);
            n.saveProperties("rotation");
            var r = 3600 * u.Maths.DEG_TO_RADIAN;
            return null != i && 0 == i && (r *= -1),
            n.to({
                rotation: r
            }, 10 * e),
            n.restoreProperties("rotation"),
            n.repeat(-1),
            n.start(),
            n
        }
        ,
        t.zoomInOut = function(t, e, i) {
            void 0 === e && (e = !0),
            void 0 === i && (i = 0);
            var n = u.Game.get().tweenManager.create(t)
              , r = t.scaleXY;
            return e ? (n.to({
                scaleXY: 1.15 * r
            }, 500),
            n.to({
                scaleXY: r
            }, 500)) : (o.toScale(n, 1.15 * r, 500),
            o.toScale(n, r, 500)),
            n.delay(500),
            0 < i && n.delay(i),
            n.repeat(-1),
            n.start(),
            t.detachListener.once(function() {
                n.stop()
            }),
            n
        }
        ,
        t.alphaInOut = function(t, e, i, n, r, o) {
            void 0 === e && (e = 1),
            void 0 === i && (i = 0),
            void 0 === n && (n = 0),
            void 0 === r && (r = 500),
            void 0 === o && (o = u.Easing.Linear);
            var s = u.Game.get().tweenManager.create(t)
              , a = t.alpha;
            return s.to({
                alpha: e
            }, r, o),
            s.to({
                alpha: i
            }, r, o),
            0 < n && s.delay(n),
            s.repeat(-1),
            s.start(),
            t.detachListener.once(function() {
                s.stop(),
                t.alpha = a
            }),
            s
        }
        ,
        t.translateYAndScale = function(t, e, i, n, r, o, s, a) {
            void 0 === i && (i = 0),
            void 0 === n && (n = 500),
            void 0 === r && (r = 0),
            void 0 === o && (o = u.Easing.EaseOutBack),
            t.scaleXY = i;
            var h = t.y + e
              , l = u.Game.get().tweenManager.create(t);
            return 0 < r && l.delay(r),
            l.to({
                y: h,
                scaleXY: 1
            }, n, o),
            s && (l.onComplete = s.bind(a)),
            l.start(),
            l
        }
        ,
        t.infiniteScaleXYLoop = function(t, e, i, n, r, o, s) {
            void 0 === e && (e = 1.2),
            void 0 === i && (i = 1),
            void 0 === n && (n = 500),
            void 0 === r && (r = 0),
            void 0 === o && (o = u.Easing.Linear),
            void 0 === s && (s = u.Easing.Linear);
            var a = u.Game.get().tweenManager.create(t);
            return 0 < r && a.delay(r),
            a.to({
                scaleXY: e
            }, n, o),
            a.to({
                scaleXY: i
            }, n, s),
            a.delay(r),
            a.repeat(-1),
            t.detachListener.once(function() {
                a.stop(),
                t.scaleXY = 1
            }),
            a.start(),
            a
        }
        ,
        t.stamp = function(t, e, i, n) {
            void 0 === i && (i = 250),
            void 0 === n && (n = 300),
            t.alpha = 0;
            var r = u.Game.get().tweenManager.create(t);
            return 0 < n && r.delay(n),
            r.to({
                alpha: 1
            }, 1),
            r.from({
                scaleX: e,
                scaleY: e
            }, i, u.Easing.EaseInOutBack),
            r.start(),
            r
        }
        ,
        t.infiniteTextBlink = function(t, e, i, n, r) {
            void 0 === n && (n = 200),
            void 0 === r && (r = 0);
            var o = u.Game.get().tweenManager.create(t);
            return 0 < r && o.delay(r),
            o.to({
                tint: e
            }, 1),
            o.delay(n / 2),
            o.to({
                tint: i
            }, 1),
            o.delay(n / 2),
            o.repeat(-1),
            o.start(),
            t.detachListener.once(function() {
                o.stop(),
                t.tint = e
            }),
            o
        }
        ,
        t
    }();
    u.TweenPreset = e;
    var o = function() {
        function t() {}
        return t.toScale = function(t, e, i, n) {
            var r = t.getObject()
              , o = r.x
              , s = r.y
              , a = r.width
              , h = r.height
              , l = a * e
              , u = h * e
              , c = o - (e - 1) * a / 2
              , p = s - (e - 1) * h / 2;
            t.to({
                width: l,
                height: u,
                x: c,
                y: p
            }, i, n)
        }
        ,
        t
    }();
    u.TweenHelper = o
}(DUST || (DUST = {})),
function(n) {
    var t = function() {
        function e(t) {
            this.tweens = [],
            this.game = t,
            e.instance = this
        }
        return e.get = function() {
            return e.instance
        }
        ,
        e.prototype.create = function(t, e) {
            var i = new n.Tween(t,this.game,this);
            return i.id = e,
            this.tweens.push(i),
            i
        }
        ,
        e.prototype.remove = function(t) {
            var e = this.tweens.indexOf(t);
            -1 < e && (this.tweens.splice(e, 1),
            t.stop())
        }
        ,
        e.prototype.removeAll = function() {
            this.cancelAll(),
            this.tweens = []
        }
        ,
        e.prototype.cancelAll = function() {
            for (var t = 0; t < this.tweens.length; t++)
                this.tweens[t].stop()
        }
        ,
        e.prototype.update = function(t) {
            for (var e = 0; e < this.tweens.length; e++)
                this.tweens[e].update(t)
        }
        ,
        e.prototype.render = function(t) {
            for (var e = 0; e < this.tweens.length; e++)
                this.tweens[e].render(t)
        }
        ,
        Object.defineProperty(e.prototype, "activeTweensCount", {
            get: function() {
                return this.tweens.length
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(e.prototype, "activeTweens", {
            get: function() {
                return this.tweens.map(function(t) {
                    return t.id
                }).join()
            },
            enumerable: !0,
            configurable: !0
        }),
        e
    }();
    n.TweenManager = t
}(DUST || (DUST = {})),
function(i) {
    var t = function() {
        function t(t) {
            this.complete = !1,
            this.elapsedTime = null,
            this.startTime = null,
            this.duration = t
        }
        return t.prototype.start = function() {
            this.startTime = i.Time.now(),
            this.elapsedTime = 0,
            this.complete = !1
        }
        ,
        t.prototype.update = function(t) {
            var e = i.Time.now();
            this.elapsedTime = e - this.startTime,
            this.elapsedTime >= this.duration && (this.complete = !0)
        }
        ,
        t.prototype.render = function(t) {}
        ,
        t.prototype.isComplete = function() {
            return this.complete
        }
        ,
        t
    }()
      , e = function(e) {
        function t(t) {
            return e.call(this, t) || this
        }
        return __extends(t, e),
        t
    }(i.TweenStep = t);
    i.DelayTweenStep = e;
    var n = function(s) {
        function t(t, e, i, n, r) {
            var o = s.call(this, i) || this;
            return o.startValues = {},
            o.endValues = {},
            o.previousValues = {},
            o.computedValues = {},
            o.properties = e,
            o.easing = n,
            o.from = r,
            o.object = t,
            o
        }
        return __extends(t, s),
        t.prototype.start = function() {
            for (var t in s.prototype.start.call(this),
            this.properties)
                this.from ? (this.startValues[t] = this.properties[t],
                this.endValues[t] = this.object[t]) : (this.startValues[t] = this.object[t],
                this.endValues[t] = this.properties[t]),
                this.previousValues[t] = this.startValues[t],
                this.computedValues[t] = this.startValues[t]
        }
        ,
        t.prototype.update = function(t) {
            s.prototype.update.call(this, t);
            var e = Math.min(this.elapsedTime, this.duration) / this.duration
              , i = this.easing.find(e);
            for (var n in this.properties) {
                this.previousValues[n] = this.computedValues[n];
                var r = this.startValues[n]
                  , o = r + (this.endValues[n] - r) * i;
                this.computedValues[n] = o
            }
        }
        ,
        t.prototype.render = function(t) {
            for (var e in s.prototype.render.call(this, t),
            this.computedValues) {
                var i = this.previousValues[e]
                  , n = this.computedValues[e];
                this.object[e] = i + (n - i) * t
            }
        }
        ,
        t
    }(t);
    i.PropertiesTweenStep = n;
    var r = function(r) {
        function t(t, e, i) {
            var n = r.call(this, 0) || this;
            return n.tween = t,
            n.properties = i,
            n.object = e,
            n
        }
        return __extends(t, r),
        t.prototype.update = function(t) {
            r.prototype.update.call(this, t);
            for (var e = 0; e < this.properties.length; e++) {
                var i = this.properties[e];
                this.tween._savedValues[i] = this.object[i]
            }
        }
        ,
        t
    }(t);
    i.SavePropertiesTweenStep = r;
    var o = function(r) {
        function t(t, e, i) {
            var n = r.call(this, 0) || this;
            return n.tween = t,
            n.properties = i,
            n.object = e,
            n
        }
        return __extends(t, r),
        t.prototype.update = function(t) {
            r.prototype.update.call(this, t);
            for (var e = 0; e < this.properties.length; e++) {
                var i = this.properties[e]
                  , n = this.tween._savedValues[i];
                null != n && (this.object[i] = n)
            }
        }
        ,
        t
    }(t);
    i.RestorePropertiesTweenStep = o
}(DUST || (DUST = {})),
function(e) {
    var t = function() {
        function n() {}
        return n.shuffle = function(t) {
            var e = 0
              , i = 0
              , n = null;
            for (e = t.length - 1; 0 < e; e -= 1)
                i = Math.floor(Math.random() * (e + 1)),
                n = t[e],
                t[e] = t[i],
                t[i] = n
        }
        ,
        n.concat = function() {
            for (var t = [], e = 0; e < arguments.length; e++)
                t[e] = arguments[e];
            for (var i = [], n = 0; n < t.length; n++)
                for (var r = t[n], o = 0; o < r.length; o++)
                    i.push(r[o]);
            return i
        }
        ,
        n.addAll = function(t, e) {
            if (null != e)
                for (var i = 0; i < e.length; i++)
                    t.push(e[i])
        }
        ,
        n.copy = function(t) {
            return null == t ? null : t.slice()
        }
        ,
        n.one = function(t) {
            return null == t || t.length < 1 ? null : 1 == t.length ? t[0] : t[e.Random.intInRange(0, t.length - 1)]
        }
        ,
        n.some = function(t, e) {
            if (null == t || t.length < 1)
                return null;
            var i = n.copy(t);
            return n.shuffle(i),
            i.length <= e ? i : i.slice(0, e)
        }
        ,
        n.remove = function(t, e) {
            var i = t.indexOf(e);
            if (0 <= i) {
                var n = t.splice(i, 1);
                if (null != n && 0 < n.length)
                    return !0
            }
            return !1
        }
        ,
        n
    }();
    e.Collections = t
}(DUST || (DUST = {})),
function(t) {
    var e = function() {
        function t() {
            this._data = [],
            this._size = 0
        }
        return t.prototype.isEmpty = function() {
            return 0 == this._data.length
        }
        ,
        t.prototype.size = function() {
            return this._data.length
        }
        ,
        t.prototype.clear = function() {
            this._data = [],
            this._data.length = 0
        }
        ,
        t.prototype.add = function(t) {
            return 0 <= this._data.indexOf(t) || this._data.push(t),
            !1
        }
        ,
        t.prototype.remove = function(t) {
            var e = this._data.indexOf(t);
            return !(e < 0) && (this._data.splice(e, 1),
            !0)
        }
        ,
        t.prototype.contains = function(t) {
            return 0 <= this._data.indexOf(t)
        }
        ,
        t.prototype.values = function() {
            return this._data
        }
        ,
        t.prototype.forEach = function(t, e) {
            for (var i in this._data) {
                var n = this._data[i];
                if (null != n)
                    if (!1 === t.call(e, i, n))
                        break
            }
        }
        ,
        t
    }();
    t.HashSet = e
}(DUST || (DUST = {})),
function(t) {
    var e = function() {
        function t() {}
        return t.getRgb = function(t) {
            return [t >> 16 & 255, t >> 8 & 255, 255 & t]
        }
        ,
        t.fromRgb = function(t, e, i) {
            return t << 16 | e << 8 | i
        }
        ,
        t
    }();
    t.Colors = e
}(DUST || (DUST = {})),
function(a) {
    var t = function() {
        function t(t) {
            this.debugGameData = !0,
            this._bootstrap = !0,
            this._outputConsole = !0,
            this._outputUI = !1,
            this.min = 240,
            this.max = 0,
            this.minText = "NA",
            this.maxText = "NA",
            this.last1Count = 0,
            this.last5Count = 0,
            this.last1UpdateTime = 0,
            this.last5UpdateTime = 0,
            this.last1FPS = 0,
            this.last5FPS = 0,
            this.minMaxRAZ = -1,
            this.game = t,
            this.game.addRenderable(this)
        }
        return t.prototype.render = function(t) {
            var e = a.Time.now()
              , i = e - this.last1UpdateTime;
            1e3 < i && (this.last1FPS = Math.round(1e3 * this.last1Count / i),
            this.last1Count = 0,
            this.last1UpdateTime = e,
            this.minMaxRAZ--,
            this.minMaxRAZ < 0 && (this.minMaxRAZ = 30,
            this.min = 240,
            this.max = 0),
            this._bootstrap || (this.min = Math.min(this.min, this.last1FPS),
            this.max = Math.max(this.max, this.last1FPS),
            this.minText = "" + Math.floor(this.min),
            this.maxText = "" + Math.floor(this.max)),
            this.outputUI && this.logToUi());
            var n = e - this.last5UpdateTime;
            5e3 < n && (this.last5FPS = Math.round(1e3 * this.last5Count / n),
            this.last5Count = 0,
            this.last5UpdateTime = e,
            this._bootstrap = !1,
            this.outputConsole && this.logToConsole()),
            this.last1Count++,
            this.last5Count++
        }
        ,
        t.prototype.start = function() {
            this.last1UpdateTime = a.Time.now(),
            this.last5UpdateTime = a.Time.now()
        }
        ,
        t.prototype.logToConsole = function() {
            var t = MainLoop.getFPS();
            console && (console.log("FPS: %d, 1s: %d, 5s: %d, min: %s, max: %s", t, this.last1FPS, this.last5FPS, this.minText, this.maxText),
            this.outputDebugGameData())
        }
        ,
        t.prototype.logToUi = function() {
            this.fpsText.text = "" + Math.floor(MainLoop.getFPS()),
            this.minFpsText.text = this.minText,
            this.maxFpsText.text = this.maxText
        }
        ,
        t.prototype.ensureUi = function() {
            if (null != this.container)
                return this.container;
            this.container = new a.Container,
            this.fpsText = new a.Text("00",{
                font: "20px Arial Black",
                fill: "white"
            }),
            this.minFpsText = new a.Text("00",{
                font: "20px Arial Black",
                fill: "white"
            }),
            this.maxFpsText = new a.Text("00",{
                font: "20px Arial Black",
                fill: "white"
            });
            var t = this.fpsText.width
              , e = this.fpsText.height;
            t += 10,
            e += 4;
            var i = new a.Container
              , n = new a.Graphics;
            n.beginFill(14162784, 1),
            n.drawRect(0, 0, t, e);
            var r = new a.Graphics;
            r.beginFill(14162784, 1),
            r.drawRect(t + 5, 0, t, e);
            var o = new a.Graphics;
            o.beginFill(14162784, 1),
            o.drawRect(2 * (t + 5), 0, t, e),
            i.addChild(n),
            i.addChild(r),
            i.addChild(o),
            i.cacheAsBitmap = !0,
            this.fpsText.x = 5,
            this.fpsText.y = 2,
            this.minFpsText.x = 5 + t + 5,
            this.minFpsText.y = 2,
            this.maxFpsText.x = 5 + 2 * (t + 5),
            this.maxFpsText.y = 2,
            this.container.addChild(i),
            this.container.addChild(this.fpsText),
            this.container.addChild(this.minFpsText),
            this.container.addChild(this.maxFpsText),
            this.game.layers.technical.addChild(this.container),
            this.game.scaleManager.resizeHandler.add(this.onResize, this),
            this.onResize();
            var s = this;
            o.onClick(function() {
                s.game.layers.root._outputToConsole(0, ["hasInteractiveChild", "interactive", "x", "y"]),
                s.game.layers.root._outputToConsole(0, ["x", "y", "visible"])
            })
        }
        ,
        t.prototype.onResize = function() {
            null != this.game.scaleManager.leftBorder ? (this.container.x = this.game.scaleManager.leftBorder.x,
            this.container.y = 0) : null != this.game.scaleManager.topBorder ? (this.container.x = 0,
            this.container.y = this.game.scaleManager.topBorder.y) : (this.container.x = 0,
            this.container.y = 0)
        }
        ,
        t.prototype.outputDebugGameData = function() {
            this.debugGameData && (console.log("Graph contains " + this.game.layers.root._countElements() + " ui elements"),
            console.log("Active tweens: " + this.game.tweenManager.activeTweensCount + " :  [" + this.game.tweenManager.activeTweens + "]"),
            console.log("Active timers: " + this.game.timeManager.activeTimersCount + " :  [" + this.game.timeManager.activeTimers + "]"),
            console.log("Active updatables: " + this.game._updatables.length),
            console.log("Active renderables: " + this.game._renderables.length))
        }
        ,
        Object.defineProperty(t.prototype, "outputConsole", {
            get: function() {
                return this._outputConsole
            },
            set: function(t) {
                this._outputConsole = t
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "outputUI", {
            get: function() {
                return this._outputUI
            },
            set: function(t) {
                t && this.ensureUi(),
                this._outputUI = t
            },
            enumerable: !0,
            configurable: !0
        }),
        t
    }();
    a.FPSLogger = t
}(DUST || (DUST = {})),
function(s) {
    var t = function() {
        function t(t) {
            this._outputConsole = !0,
            this._outputUI = !1,
            this.last1UpdateTime = 0,
            this.game = t,
            this.game.addRenderable(this)
        }
        return t.prototype.render = function(t) {
            var e = s.Time.now();
            1e3 < e - this.last1UpdateTime && (this.outputUI && this.logToUi(),
            this.last1UpdateTime = e)
        }
        ,
        t.prototype.start = function() {
            MainLoop.setProfileTiming(!0)
        }
        ,
        t.prototype.logToConsole = function() {
            console && console.log("MainLoop UpdateTime: %s, RenderingTime: %s", MainLoop.getLastUpdateTime().toFixed(2), MainLoop.getLastRenderingTime().toFixed(2))
        }
        ,
        t.prototype.logToUi = function() {
            this.lastUpdateTimeText.text = MainLoop.getLastUpdateTime().toFixed(2),
            this.lastRenderingTimeText.text = MainLoop.getLastRenderingTime().toFixed(2)
        }
        ,
        t.prototype.ensureUi = function() {
            if (null != this.container)
                return this.container;
            this.container = new s.Container,
            this.lastUpdateTimeText = new s.Text("00",{
                font: "40px Arial Black",
                fill: "white"
            }),
            this.lastRenderingTimeText = new s.Text("00",{
                font: "40px Arial Black",
                fill: "white"
            });
            var t = this.lastRenderingTimeText.width
              , e = this.lastRenderingTimeText.height;
            t += 60,
            e += 4;
            var i = new s.Container
              , n = new s.Graphics;
            n.beginFill(14162784, 1),
            n.drawRect(0, 0, t, e);
            var r = new s.Graphics;
            r.beginFill(14162784, 1),
            r.drawRect(t + 20, 0, t, e);
            var o = new s.Graphics;
            o.beginFill(14162784, 1),
            o.drawRect(2 * (t + 20), 0, t, e),
            i.addChild(n),
            i.addChild(r),
            i.addChild(o),
            i.cacheAsBitmap = !0,
            this.lastUpdateTimeText.x = 30,
            this.lastUpdateTimeText.y = 2,
            this.lastRenderingTimeText.x = 30 + t + 20,
            this.lastRenderingTimeText.y = 2,
            this.container.addChild(this.lastUpdateTimeText),
            this.container.addChild(this.lastRenderingTimeText),
            this.game.layers.technical.addChild(this.container),
            this.game.scaleManager.resizeHandler.add(this.onResize, this),
            this.onResize()
        }
        ,
        t.prototype.onResize = function() {
            null != this.game.scaleManager.leftBorder ? (this.container.x = this.game.scaleManager.leftBorder.x,
            this.container.y = 0) : null != this.game.scaleManager.topBorder ? (this.container.x = 0,
            this.container.y = this.game.scaleManager.topBorder.y) : (this.container.x = 0,
            this.container.y = 0)
        }
        ,
        Object.defineProperty(t.prototype, "outputConsole", {
            get: function() {
                return this._outputConsole
            },
            set: function(t) {
                this._outputConsole = t
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "outputUI", {
            get: function() {
                return this._outputUI
            },
            set: function(t) {
                t && this.ensureUi(),
                this._outputUI = t
            },
            enumerable: !0,
            configurable: !0
        }),
        t
    }();
    s.Profiler = t
}(DUST || (DUST = {})),
function(i) {
    var t = function() {
        function t(t) {
            this.fixSleep = 20,
            this.game = t,
            this.game.addUpdatable(this)
        }
        return t.prototype.update = function() {
            var t = this.fixSleep;
            null != this.randSleepMin && null != this.randSleepMax && (t = i.Random.intInRange(this.randSleepMin, this.randSleepMax));
            for (var e = performance.now(); performance.now() - e < t; )
                ;
        }
        ,
        t
    }();
    i.TimeConsumer = t
}(DUST || (DUST = {})),
function(t) {
    var e = function() {
        function t() {}
        return t.draw = function(t, e) {
            var i = t._texture
              , n = i.crop.width
              , r = i.crop.height
              , o = i.trim ? i.trim.x - 0 * i.trim.width : 0 * -i._frame.width
              , s = i.trim ? i.trim.y - 0 * i.trim.height : 0 * -i._frame.height
              , a = i.baseTexture;
            e.drawImage(a.source, i.crop.x * a.resolution, i.crop.y * a.resolution, n * a.resolution, r * a.resolution, 1 * o, 1 * s, 1 * n, 1 * r)
        }
        ,
        t
    }();
    t.TextureUtils = e
}(DUST || (DUST = {})),
function(t) {
    var e = function() {
        function t(t, e) {
            this.callback = t,
            this.context = e
        }
        return t.prototype.execute = function() {
            for (var t = [], e = 0; e < arguments.length; e++)
                t[e] = arguments[e];
            this.callback.apply(this.context, t)
        }
        ,
        t
    }();
    t.ContextualCallback = e
}(DUST || (DUST = {})),
function(e) {
    var t = function() {
        function t() {
            this.data = null,
            this.loading = !1,
            this.loaded = !1,
            this.handlers = new e.HandlerCollection
        }
        return t.prototype.get = function(e) {
            if (this.loaded)
                e(this.data);
            else {
                var i = this;
                this.loading ? this.handlers.once(function() {
                    e(i.data)
                }) : (this.loading = !0,
                this.loadingFunction(function(t) {
                    i.data = t,
                    i.loading = !1,
                    i.loaded = !0,
                    i.handlers.fire(),
                    e(i.data)
                }))
            }
        }
        ,
        t
    }();
    e.DataLoader = t
}(DUST || (DUST = {})),
function(n) {
    var t = function() {
        function t() {
            this.handlers = [],
            this.onces = []
        }
        return Object.defineProperty(t.prototype, "length", {
            get: function() {
                return this.handlers.length
            },
            enumerable: !0,
            configurable: !0
        }),
        t.prototype.once = function(t, e) {
            var i = new n.ContextualCallback(t,e);
            this.onces.push(i)
        }
        ,
        t.prototype.add = function(t, e) {
            var i = new n.ContextualCallback(t,e);
            return this.handlers.push(i),
            i
        }
        ,
        t.prototype.remove = function(t) {
            for (var e = -1, i = 0; i < this.handlers.length; i++)
                if (this.handlers[i].callback == t) {
                    e = i;
                    break
                }
            -1 < e && this.handlers.splice(e, 1)
        }
        ,
        t.prototype.removeCtx = function(t) {
            var e = this.handlers.indexOf(t);
            -1 < e && this.handlers.splice(e, 1)
        }
        ,
        t.prototype.removeIdx = function(t) {
            return this.handlers.splice(t, 1)[0]
        }
        ,
        t.prototype.clear = function() {
            0 < this.handlers.length && this.handlers.splice(0, this.handlers.length),
            0 < this.onces.length && this.onces.splice(0, this.onces.length)
        }
        ,
        t.prototype.fire = function() {
            for (var e = [], t = 0; t < arguments.length; t++)
                e[t] = arguments[t];
            this.handlers.forEach(function(t) {
                t.callback.apply(t.context, e)
            }),
            0 < this.onces.length && (this.onces.forEach(function(t) {
                t.callback.apply(t.context, e)
            }),
            this.onces.splice(0, this.onces.length))
        }
        ,
        t
    }();
    n.HandlerCollection = t
}(DUST || (DUST = {})),
function(t) {
    var e = function() {
        function t(t) {
            this.size = t,
            this.data = [],
            this.resolved = [];
            for (var e = 0; e < t; e++)
                this.resolved[e] = !1
        }
        return t.prototype.resolve = function(t, e) {
            this.data[t] = e,
            this.resolved[t] = !0,
            this.allDone() && this.onComplete(this.data)
        }
        ,
        t.prototype.allDone = function() {
            for (var t = 0; t < this.resolved.length; t++)
                if (!this.resolved[t])
                    return !1;
            return !0
        }
        ,
        t
    }();
    t.WaitQueue = e
}(DUST || (DUST = {})),
function(a) {
    var t = function() {
        function s() {}
        return s.rotateFromOrigin = function(t, e) {
            var i = e * s.DEG_TO_RADIAN
              , n = t.x * Math.cos(i) - t.y * Math.sin(i)
              , r = t.x * Math.sin(i) + t.y * Math.cos(i);
            return new a.Point(n,r)
        }
        ,
        s.rotate = function(t, e, i) {
            var n = t.x - i.x
              , r = t.y - i.y
              , o = s.rotateFromOrigin(new a.Point(n,r), e);
            return o.x += i.x,
            o.y += i.y,
            o
        }
        ,
        s.DEG_TO_RADIAN = Math.PI / 180,
        s.RADIAN_TO_DEG = 180 / Math.PI,
        s
    }();
    a.Maths = t
}(DUST || (DUST = {})),
function(t) {
    var e = function() {
        function t() {}
        return t.get = function() {
            return Math.random()
        }
        ,
        t.inRange = function(t, e) {
            return Math.random() * (e - t) + t
        }
        ,
        t.intInRange = function(t, e) {
            return Math.floor(Math.random() * (e - t + 1)) + t
        }
        ,
        t
    }();
    t.Random = e
}(DUST || (DUST = {})),
function(t) {
    var e = function() {
        function n() {}
        return n.isValid = function(t) {
            return null != t && 0 < t.length
        }
        ,
        n.ellipsis = function(t, e, i) {
            if (null == t)
                return t;
            if (t.length <= e)
                return t;
            var n = t.substring(0, e);
            return null != i && (n += i),
            n
        }
        ,
        n.capitalize = function(t) {
            return null == t ? null : t.length <= 1 ? t.toUpperCase() : t.charAt(0).toUpperCase() + t.slice(1).toLowerCase()
        }
        ,
        n.interpolate = function(t, i) {
            return t.replace(/{([^{}]*)}/g, function(t, e) {
                return i[e]
            })
        }
        ,
        n.pad = function(t, e) {
            for (var i = t + ""; i.length < e; )
                i = "0" + i;
            return i
        }
        ,
        n.pad2 = function(t) {
            return n.pad(t, 2)
        }
        ,
        n.kFormatter = function(t, e, i) {
            return void 0 === e && (e = ["", "K", "M", "G"]),
            void 0 === i && (i = null),
            null == e && (e = ["", "K", "M", "G"]),
            null != i && t < i ? t + "" : t < 1e3 ? t + e[0] : t < 1e6 ? (t /= 1e3).toFixed(n.kFormatterGetDecimals(t)) + e[1] : t < 1e9 ? (t /= 1e6).toFixed(n.kFormatterGetDecimals(t)) + e[2] : (t /= 1e9).toFixed(n.kFormatterGetDecimals(t)) + e[3]
        }
        ,
        n.kFormatterGetDecimals = function(t) {
            return t < 10 ? 2 : t < 100 ? 1 : 0
        }
        ,
        n.randomUUID = function() {
            function t() {
                return Math.floor(65536 * (1 + Math.random())).toString(16).substring(1)
            }
            return t() + t() + "-" + t() + "-" + t() + "-" + t() + "-" + t() + t() + t()
        }
        ,
        n.numberWithSpaces = function(t) {
            return t.toString().replace(/\B(?=(\d{3})+(?!\d))/g, " ")
        }
        ,
        n
    }();
    t.Strings = e
}(DUST || (DUST = {})),
function(t) {
    var e = function() {
        function t() {}
        return t.text = function(t, e) {
            var i = document.createElement("a")
              , n = "data:text/plain;base64," + btoa(e);
            i.href = n,
            i.download = t,
            window.open(n),
            i.remove()
        }
        ,
        t
    }();
    t.Exporter = e
}(GAME || (GAME = {})),
function(u) {
    var n = function() {
        function h() {}
        return h.ToUint32 = function(t) {
            return t >>> 0
        }
        ,
        h.ToInt32 = function(t) {
            return t >> 0
        }
        ,
        h.hiBit = function(t) {
            return 2147483648 & (t = h.ToUint32(t))
        }
        ,
        h.loBit = function(t) {
            return 1 & (t = h.ToUint32(t))
        }
        ,
        h.loBits = function(t) {
            return 2147483647 & (t = h.ToUint32(t))
        }
        ,
        h.mixBits = function(t, e) {
            return t = h.ToUint32(t),
            e = h.ToUint32(e),
            h.hiBit(t) | h.loBits(e)
        }
        ,
        h.twist = function(t, e, i) {
            return t = h.ToUint32(t),
            e = h.ToUint32(e),
            i = h.ToUint32(i),
            h.ToUint32(t ^ h.mixBits(e, i) >>> 1 ^ 2567483615 & h.ToUint32(-h.ToInt32(h.loBit(e))))
        }
        ,
        h.generate_seed = function() {
            return Math.random() * Number.MAX_VALUE
        }
        ,
        h.php_mt_initialize = function(t, e) {
            t = h.ToUint32(t);
            var i = 0
              , n = 0
              , r = 1;
            for (e[i++] = 4294967295 & t; r < h.N; ++r) {
                var o = e[n] ^ e[n] >>> 30
                  , s = 65535 & o
                  , a = 4294901760 & o;
                e[i++] = h.ToUint32(h.ToUint32(1812433253 * s) + h.ToUint32(1812433253 * a) + r),
                n++
            }
        }
        ,
        h.php_mt_reload = function() {
            var t, e = h._state, i = 0;
            for (t = h.N - h.M; t--; ++i)
                e[i] = h.twist(e[i + h.M], e[i], e[i + 1]);
            for (t = h.M; --t; ++i)
                e[i] = h.twist(e[i + h.M - h.N], e[i], e[i + 1]);
            e[i] = h.twist(e[i + h.M - h.N], e[i], e[0]),
            h._left = h.N,
            h._next = 0
        }
        ,
        h.php_mt_srand = function(t) {
            h.php_mt_initialize(t, h._state),
            h.php_mt_reload(),
            h._mt_rand_is_seeded = !0
        }
        ,
        h.php_mt_rand = function() {
            var t;
            return 0 === h._left && h.php_mt_reload(),
            --h._left,
            t = h._state[h._next++],
            t ^= t >>> 11,
            t ^= t << 7 & 2636928640,
            (t ^= t << 15 & 4022730752) ^ t >>> 18
        }
        ,
        h.srand = function(t) {
            t = t || h.generate_seed(),
            h.php_mt_srand(t)
        }
        ,
        h.rand = function() {
            return h._mt_rand_is_seeded || h.php_mt_srand(h.generate_seed()),
            (h.php_mt_rand() >>> 1) / h.getrandmax()
        }
        ,
        h.getrandmax = function() {
            return h.PHP_MT_RAND_MAX
        }
        ,
        h.N = 624,
        h.M = 397,
        h.PHP_MT_RAND_MAX = 2147483647,
        h._state = [],
        h._left = 0,
        h._next = 0,
        h._mt_rand_is_seeded = !1,
        h
    }();
    u.Mt = n;
    var i = function() {
        function t() {
            this.touchTab = {},
            this.onTouch = null,
            this.isTouch = null
        }
        return t.prototype.getX = function(t) {
            var e = this.touchTab[t];
            if (e)
                return e.x
        }
        ,
        t.prototype.getY = function(t) {
            var e = this.touchTab[t];
            if (e)
                return e.y
        }
        ,
        t.prototype.getTouch = function(t) {
            var e = this.touchTab[t];
            if (e)
                return e
        }
        ,
        t
    }();
    u.MultiTouch = i;
    var h = function() {
        function t() {
            this.isTouch = !1,
            this.onTouch = !1,
            this.onTouchEnd = !1
        }
        return t.prototype.isTouchingObject = function(t) {
            if (null != t && null != t && (o.touch.isTouch || o.touch.onTouchEnd)) {
                var e = new DUST.Point(o.touch.x,o.touch.y)
                  , i = t.getLocalBounds()
                  , n = t.toGlobal(i.left, i.top)
                  , r = t.toGlobal(i.left + i.width, i.top + i.height);
                return e.x >= n.x && e.x <= r.x && e.y >= n.y && e.y <= r.y
            }
        }
        ,
        t
    }();
    u.TouchH5Sys = h;
    var t = function() {
        function t() {}
        return t.up = 2,
        t.down = 4,
        t.left = 1,
        t.right = 3,
        t
    }();
    u.Direction = t;
    var o = function() {
        function a() {}
        return a.start = function(t) {
            if (!a.started) {
                (a.sys_sine = {}).low = 0,
                a.sys_sine.med = 0,
                a.sys_sine.fast = 0,
                a.sys_sine.veryFast = 0,
                a.sys_sine.lowDir = 1,
                a.sys_sine.medDir = 1,
                a.sys_sine.fastDir = 1,
                a.sys_sine.veryFastDir = 1,
                a.tickcount = 0,
                a.started = !0,
                a.mouse = (a.game = t).inputManager.mouse,
                a.keyboard = a.game.inputManager.keyboard,
                (a.touch = new h).duration = 0,
                a.colorList = {
                    white: a.rgb(255, 255, 255),
                    dark: a.rgb(0, 0, 0),
                    red: a.rgb(255, 0, 0),
                    blue: a.rgb(0, 0, 255),
                    green: a.rgb(0, 255, 0),
                    yellow: a.rgb(255, 255, 0),
                    aqua: a.rgb(0, 255, 255),
                    brown: a.rgb(165, 42, 42),
                    orange: a.rgb(255, 150, 0),
                    purple: a.rgb(155, 0, 255),
                    pink: a.rgb(255, 100, 255)
                };
                var e = new a;
                a.multiTouch = new i,
                t.addUpdatable(e)
            }
        }
        ,
        a.tokenChoose = function(t, e) {
            var i = t.split(e);
            return i[Math.min(i.length - 1, Math.floor(Math.random() * i.length))]
        }
        ,
        a.tokenAt = function(t, e, i) {
            var n = t.split(e)
              , r = n.length;
            return 0 <= i ? n[Math.max(0, Math.min(r - 1, i))] : n[Math.max(0, Math.min(r - 1, r + i))]
        }
        ,
        a.tokenCount = function(t, e) {
            return t.split(e).length
        }
        ,
        a.tokenExist = function(t, e, i) {
            for (var n = t.split(e), r = 0; r < n.length; r++)
                if (t[r] == i)
                    return !0;
            return !1
        }
        ,
        a.tokenListToArray = function(t, e) {
            var i, n, r = "";
            if (i = 0,
            n = t.length,
            null != t && 0 != n)
                for (r = "" + t[i]; ++i < n; )
                    r += "" + e + t[i];
            return r
        }
        ,
        a.decimal = function(t) {
            return t - Math.floor(t)
        }
        ,
        a.move = function(t, e, i, n) {
            return n = null == n ? 10 : Math.abs(n),
            i || 0 == i || (i = (t - e) * n * a.dt),
            Math.abs(t - e) < Math.abs(i) ? t : e + Math.abs(i) * a.signOf(t - e)
        }
        ,
        a.move2 = function(t, e, i) {
            var n = 10 * (t - e) * i * a.dt;
            return Math.abs(t - e) < Math.abs(n) ? t : e + Math.abs(n) * a.signOf(t - e)
        }
        ,
        a.moveAngle = function(t, e, i, n) {
            var r = a.angleDiffH(t, e)
              , o = a.angleDiffAH(t, e)
              , s = Math.min(r, o);
            return n = null == n ? 7 : Math.abs(n),
            i = (null != i ? Math.abs(i) : s * n) * a.dt,
            s <= (i *= o < r ? 1 : -1) ? t : e + i
        }
        ,
        a.signOf = function(t) {
            return 0 <= t ? 1 : -1
        }
        ,
        a.roundBy = function(t, e) {
            return Math.ceil(t / e) * e
        }
        ,
        a.range = function(t, e, i) {
            var n = Math.min(t, i)
              , r = Math.max(t, i);
            return Math.max(n, Math.min(e, r))
        }
        ,
        a.rand = function(t, e) {
            var i, n;
            return i = Math.min(t, e),
            n = Math.max(t, e),
            Math.random() * (n - i) + i
        }
        ,
        a.randINT = function(t, e) {
            var i, n;
            return i = Math.floor(Math.min(t, e)),
            n = Math.floor(Math.max(t, e)),
            Math.floor(Math.random() * (n - i)) + i
        }
        ,
        a.angle = function(t, e, i, n) {
            return Math.atan2(n - e, i - t)
        }
        ,
        a.isBetweenAngle = function(t, e, i) {
            return a.angleDiffH(t, i) >= a.angleDiffH(t, e)
        }
        ,
        a.angleDiffO = function(t, e) {
            var i = a.angleDiffAH(t, e)
              , n = a.angleDiffH(t, e);
            return Math.min(i, n) * (i < n ? -1 : 1)
        }
        ,
        a.angleDiff = function(t, e) {
            return Math.min(a.angleDiffAH(t, e), a.angleDiffH(t, e))
        }
        ,
        a.angleDiffH = function(t, e) {
            var i = 2 * Math.PI;
            return t += i * -Math.floor(t / i),
            (e += i * -Math.floor(e / i)) < t ? 2 * Math.PI - (t - e) : e - t
        }
        ,
        a.angleDiffAH = function(t, e) {
            var i = 2 * Math.PI;
            return t += i * -Math.floor(t / i),
            (e += i * -Math.floor(e / i)) <= t ? t - e : 2 * Math.PI - (e - t)
        }
        ,
        a.degToRad = function(t) {
            return t < 0 && (t = 360 - Math.abs(t) % 360),
            360 < t && (t %= 360),
            t * Math.PI / 180
        }
        ,
        a.radToDeg = function(t) {
            return 180 * t / Math.PI
        }
        ,
        a.distance = function(t, e, i, n) {
            var r = i - t
              , o = n - e;
            return Math.sqrt(r * r + o * o)
        }
        ,
        a.distanceFromRec = function(t, e, i) {
            var n, r, o, s = -1;
            return t >= i.x && t <= i.x + i.width && e >= i.y && e <= i.y + i.height ? 0 : s = t >= i.x && t <= i.x ? (r = Math.min(Math.abs(e - i.y), Math.abs(e - (i.y + i.height))),
            -1 == s ? r : Math.min(s, r)) : e >= i.y && e <= i.y + i.height ? (n = Math.min(Math.abs(t - i.x), Math.abs(t - (i.x + i.width))),
            -1 == s ? n : Math.min(s, n)) : (n = Math.min(Math.abs(t - i.x), Math.abs(t - (i.x + i.width))),
            r = Math.min(Math.abs(e - i.y), Math.abs(e - (i.y + i.height))),
            o = Math.sqrt(n * n + r * r),
            -1 == s ? o : Math.min(s, o))
        }
        ,
        a.moveTo = function(t, e, i) {
            i || 0 == i || (i = 7 * a.distance(e.x, e.y, t.x, t.y) * a.dt);
            var n = a.angle(t.x, t.y, e.x, e.y);
            Math.abs(t.x - e.x) < i ? t.x = e.x : t.x += i * Math.cos(n),
            Math.abs(t.y - e.y) < i ? t.y = e.y : t.y += i * Math.sin(n)
        }
        ,
        a.distanceD = function(t, e, i) {
            var n, r, o, s, a;
            return n = i.x - e.x,
            o = -(r = i.y - e.y),
            s = n,
            a = r * e.x - n * e.y,
            Math.abs(o * t.x + s * t.y + a) / Math.sqrt(o * o + s * s)
        }
        ,
        a.onSegment = function(t, e, i, n) {
            if (a.distanceD(t, e, i) < n) {
                var r = new DUST.Point(Math.min(e.x, i.x) - n,Math.min(e.y, i.y) - n)
                  , o = new DUST.Point(Math.max(e.x, i.x) + n,Math.max(e.y, i.y) + n);
                if (t.x > r.x && t.y > r.y && t.x < o.x && t.y < o.y)
                    return !0
            }
            return !1
        }
        ,
        a.getTransformedPoint = function(t, e, i) {
            for (var n, r, o = t.x, s = t.y, a = new u.ListH5; e !== i && null != e; )
                a.addToList(new u.ListElemH5(e)),
                e = e.parent;
            for (var h = a.start, l = new DUST.Point(0,0); null != h; )
                l.x = h.content.x + h.content.pivotX,
                l.y = h.content.y + h.content.pivotY,
                o = (o - l.x) / h.content.scaleX,
                s = (s - l.y) / h.content.scaleY,
                n = o * Math.cos(h.content.rotation) + s * Math.sin(h.content.rotation),
                r = -o * Math.sin(h.content.rotation) + s * Math.cos(h.content.rotation),
                o = n,
                s = r,
                h = h.next;
            return new DUST.Point(o,s)
        }
        ,
        a.rgb = function(t, e, i, n) {
            var r = 0;
            if (t = Math.floor(t),
            i = Math.floor(i),
            e = Math.floor(e),
            n = Math.floor(n)) {
                var o = t / 255
                  , s = i / 255
                  , a = e / 255;
                r += Math.max(0, Math.min(255, n * s + i)),
                r += 16 * Math.max(0, Math.min(255, n * a + e)) * 16,
                r += 16 * Math.max(0, Math.min(255, n * o + t)) * 16 * 16 * 16
            } else
                r += Math.max(0, Math.min(255, i)),
                r += 16 * Math.max(0, Math.min(255, e)) * 16,
                r += 16 * Math.max(0, Math.min(255, t)) * 16 * 16 * 16;
            return r
        }
        ,
        a.rgbVar = function(t, e, i, n, r, o, s) {
            return a.rgb((t = t < 0 ? 0 : 255 < t ? 255 : t) + ((n = n < 0 ? 0 : 255 < n ? 255 : n) - t) * (s = 1 < s ? 1 : s < 0 ? 0 : s), (e = e < 0 ? 0 : 255 < e ? 255 : e) + ((r = r < 0 ? 0 : 255 < r ? 255 : r) - e) * s, (i = i < 0 ? 0 : 255 < i ? 255 : i) + ((o = o < 0 ? 0 : 255 < o ? 255 : o) - i) * s)
        }
        ,
        a.rgbString = function(t, e, i) {
            var n = "0123456789abcdef"
              , r = "#";
            return t = a.range(0, t, 255),
            e = a.range(0, e, 255),
            i = a.range(0, i, 255),
            r += n[Math.floor(t / 16)],
            r += n[t % 16],
            r += n[Math.floor(e / 16)],
            r += n[i % 16],
            r += n[Math.floor(i / 16)],
            r += n[i % 16]
        }
        ,
        a.getTimeLeftBeforeNextDay = function() {
            var t = a.getTimeStamp();
            return 24 * (a.getDayNumber(t) + 1) * 60 * 60 * 1e3 - t
        }
        ,
        a.getCurrentDayNumber = function() {
            var t = a.getTimeStamp();
            return Math.floor(t / 864e5)
        }
        ,
        a.getDayNumber = function(t) {
            return Math.floor(t / 864e5)
        }
        ,
        a.getTimeStamp = function() {
            return DUST.UTCDate.now()
        }
        ,
        a.randomColor = function() {
            return a.rgb(a.randINT(0, 255), a.randINT(0, 255), a.randINT(0, 255))
        }
        ,
        a.randomColorList = function(t) {
            return t || (t = "green,blue,red,yellow,orange,purple,pink"),
            a.colorStringToTint(a.tokenChoose(t, ","))
        }
        ,
        a.colorStringToTint = function(t) {
            return a.started ? a.colorList[t] ? a.colorList[t] : a.rgb(255, 255, 255) : (alert("init System with System.start() before using colorString"),
            0)
        }
        ,
        a.tintToColorName = function(t) {
            var e = "black";
            return t == a.colorStringToTint("white") && (e = "white"),
            t == a.colorStringToTint("dark") && (e = "dark"),
            t == a.colorStringToTint("red") && (e = "red"),
            t == a.colorStringToTint("blue") && (e = "blue"),
            t == a.colorStringToTint("green") && (e = "green"),
            t == a.colorStringToTint("yellow") && (e = "yellow"),
            t == a.colorStringToTint("brown") && (e = "brown"),
            t == a.colorStringToTint("orange") && (e = "orange"),
            t == a.colorStringToTint("purple") && (e = "purple"),
            t == a.colorStringToTint("pink") && (e = "pink"),
            t == a.colorStringToTint("aqua") && (e = "aqua"),
            e
        }
        ,
        a.choose = function(t, e) {
            if (null == t)
                return null;
            var i = null != e ? e : t.length;
            return 0 == i ? null : t[Math.floor(n.rand() * i)]
        }
        ,
        a.deleteTable = function(t) {
            for (; t && 0 < t.length; )
                t.shift();
            t = null
        }
        ,
        a.copyTable = function(t) {
            var e;
            if (null == t)
                e = null;
            else {
                e = [];
                for (var i = 0; i < t.length; i++)
                    e.push(t[i])
            }
            return e
        }
        ,
        a.pickRandom = function(t) {
            return t[Math.min(t.length - 1, Math.floor(Math.random() * t.length))]
        }
        ,
        a.link = function(t, e, i) {
            var n = Math.max(t, i)
              , r = Math.min(t, i);
            if (n < e) {
                var o = n - r;
                e = r + (s = e - n) - Math.floor(s / o) * o
            } else if (e < r) {
                var s;
                o = n - r;
                e = n - ((s = Math.abs(e - r)) - Math.floor(s / o) * o)
            }
            return e
        }
        ,
        a.apply = function(t, e) {
            if (a.aplStop = !1,
            e)
                for (var i = 0; i < e.length && (e[i] && t(e[i]),
                !a.aplStop); i++)
                    ;
            a.aplStop = !1
        }
        ,
        a.applyStop = function() {
            a.aplStop = !0
        }
        ,
        a.reduce = function(t, e) {
            var i = [];
            if (e)
                for (var n = 0; n < e.length; n++)
                    1 != t(e[n]) && i.push(e[n]);
            return i
        }
        ,
        a.timeString = function(t, e, i, n) {
            var r, o, s = "";
            (r = e ? ["T ", ":", " : ", n ? "." : ""] : ["d ", "h ", "m ", "s "],
            i) ? (86400 <= t && (s = s + Math.floor(t / 86400) + r[0]),
            3600 <= t && (s = s + Math.floor(t % 86400 / 3600) + r[1]),
            o = t % 3600 / 60,
            s = (s += Math.floor(o / 10)) + Math.floor(o % 10) + r[2],
            o = t % 60,
            s = (s += Math.floor(o / 10)) + Math.floor(o % 10) + r[3],
            n && (o = t % 1,
            s = s + Math.floor(10 * o) + Math.floor(100 * o) % 10)) : (86400 <= t && (s = s + Math.floor(t / 86400) + r[0]),
            3600 <= t && (s = s + Math.floor(t % 86400 / 3600) + r[1]),
            60 <= t && (s = s + Math.floor(t % 3600 / 60) + r[2]),
            s = s + Math.floor(t % 60) + r[3],
            n && (t %= 1,
            s = s + Math.floor(10 * t) + Math.floor(100 * t) % 10));
            return s
        }
        ,
        a.strCut = function(t, e, i) {
            if (!t)
                return null;
            if (e < t.length) {
                for (var n = 0, r = t.charAt(n++); r += t.charAt(n++),
                n < e; )
                    ;
                return i && (r += "..."),
                r
            }
            return t
        }
        ,
        a.angleToDir = function(t) {
            return (Math.ceil(t / (Math.PI / 2)) + 2) % 4 + 1
        }
        ,
        a.dirToAngle = function(t) {
            var e = 0;
            return e = 1 == t ? 180 : e,
            e = 2 == t ? 270 : e,
            a.degToRad(e = 4 == t ? 90 : e)
        }
        ,
        a.isFactorOf = function(t, e) {
            return Math.floor(t / e) == t / e
        }
        ,
        Object.defineProperty(a, "mouseX", {
            get: function() {
                return a.game.inputManager.mouse.position.x
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(a, "mouseY", {
            get: function() {
                return a.game.inputManager.mouse.position.y
            },
            enumerable: !0,
            configurable: !0
        }),
        a.middelWindow = function() {
            return new DUST.Point(a.game.width / 2,a.game.height / 2)
        }
        ,
        a.trigger = function(t) {
            null == this.triggerOnceList[t] && (this.triggerOnceList[t] = {}),
            null != this.triggerOnceList[t].tickCount && this.triggerOnceList[t].tickCount + 1 == a.tickcount ? this.triggerOnceList[t].duration += a.dt : this.triggerOnceList[t].duration = 0,
            this.triggerOnceList[t].tickCount = a.tickcount
        }
        ,
        a.triggerDuration = function(t) {
            return a.trigger(t),
            a.triggerOnceList[t].duration
        }
        ,
        a.triggerOnce = function(t) {
            return a.trigger(t),
            0 == this.triggerOnceList[t].duration
        }
        ,
        a.waitAndDo = function(t, e) {
            a.waitTable || (a.waitTable = []);
            var i = [];
            i[0] = t,
            i[1] = e,
            a.waitTable.push(i)
        }
        ,
        a.doWait = function(t) {
            t /= 1e3;
            for (var e = a.waitTable.length, i = 0; i < e; i++)
                a.waitTable[i][0] -= t,
                a.waitTable[i][0] <= 0 && (a.waitTable[i][1](),
                a.waitTable.splice(i, 1),
                i--,
                e--)
        }
        ,
        Object.defineProperty(a.prototype, "tickCount", {
            get: function() {
                return a.started ? a.tickcount : (alert("init System with System.start() before using System.tickCount"),
                0)
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(a.prototype, "dt", {
            get: function() {
                return a.started ? a.dt : (alert("init System with System.start() before using System.dt"),
                0)
            },
            enumerable: !0,
            configurable: !0
        }),
        a.everyXTick = function(t) {
            return a.started ? (t = Math.max(1, t),
            Math.floor(a.tickcount / t) == a.tickcount / t) : (alert("init System with System.start() before using tick comparaison"),
            !1)
        }
        ,
        a.addUpdatableFunct = function(t, e) {
            a.sys_Updatablefunction[e] = t
        }
        ,
        a.removeUpdatableFunct = function(t) {
            delete a.sys_Updatablefunction[t]
        }
        ,
        a.prototype.updateFunction = function() {
            var t;
            for (var e in a.sys_Updatablefunction)
                (t = a.sys_Updatablefunction[e]) && t()
        }
        ,
        a.addEventEveryX = function(t, e) {
            var i = {};
            return a.eventId++,
            i.id = a.eventId,
            i.interval = 1e3 * t,
            i.timeCount = 0,
            i.action = e,
            a.eventTable.push(i),
            a.eventId
        }
        ,
        a.stopEvent = function(t) {
            a.eventStopTable.push(t)
        }
        ,
        a.prototype.sys_stopEvent = function() {
            for (var t, e; 0 < a.eventStopTable.length; ) {
                t = a.eventStopTable.shift(),
                e = a.eventTable.length;
                for (var i = 0; i < e; i++)
                    if (a.eventTable[i].id == t) {
                        a.eventTable.splice(i);
                        break
                    }
            }
        }
        ,
        a.prototype.updateEvent = function(t) {
            if (null != a.eventTable)
                for (var e, i = a.eventTable.length, n = 0; n < i; n++)
                    (e = a.eventTable[n]).timeCount += t,
                    e.timeCount >= e.interval && (e.timeCount = e.timeCount - e.interval,
                    e.action())
        }
        ,
        a.prototype.updateTouchObject = function() {
            a.mouse.isDown ? (a.touch.lastTouchX = a.touch.x,
            a.touch.lastTouchY = a.touch.y,
            a.touch.x = a.mouseX,
            a.touch.y = a.mouseY,
            a.touch.isTouch ? (a.touch.onTouch = !1,
            a.touch.duration += a.dt,
            a.touch.vecX = a.touch.x - a.touch.lastTouchX,
            a.touch.vecY = a.touch.y - a.touch.lastTouchY) : (a.touch.onTouch = !0,
            a.touch.onTouchX = a.mouseX,
            a.touch.onTouchY = a.mouseY,
            a.touch.vecX = 0,
            a.touch.vecY = 0),
            a.touch.isTouch = !0) : a.touch.isTouch ? (a.touch.onTouchEnd = !0,
            a.touch.isTouch = !1) : (a.touch.onTouchEnd = !1,
            a.touch.duration = 0,
            a.touch.x = 0,
            a.touch.y = 0,
            a.touch.onTouchX = 0,
            a.touch.onTouchY = 0)
        }
        ,
        a.prototype.updateTouch = function(t) {
            var e = t.pointer;
            e && e.isActive() && e.isDown ? (t.lastTouchX = t.x,
            t.lastTouchY = t.y,
            t.x = e.position.x,
            t.y = e.position.y,
            t.isTouch ? (t.onTouch = !1,
            t.duration += a.dt,
            t.vecX = t.x - t.lastTouchX,
            t.vecY = t.y - t.lastTouchY) : (t.onTouch = !0,
            a.multiTouch.onTouch = t.uid,
            t.onTouchX = e.position.x,
            t.onTouchY = e.position.y,
            t.vecX = 0,
            t.vecY = 0),
            t.isTouch = !0,
            a.multiTouch.isTouch = t.uid) : t.isTouch ? (t.onTouchEnd = !0,
            a.multiTouch.onTouchEnd = t.uid,
            t.isTouch = !1) : (t.onTouchEnd = !1,
            t.duration = 0,
            t.x = 0,
            t.y = 0,
            t.onTouchX = 0,
            t.onTouchY = 0)
        }
        ,
        a.prototype.updateMultiTouch = function() {
            a.multiTouch.isTouch = null,
            a.multiTouch.onTouch = null,
            a.multiTouch.onTouchEnd = null;
            for (var t = a.mouse.pointers, e = t ? t.length : 0, i = 0; i < e; i++) {
                var n = t[i];
                if (n && n.isActive()) {
                    var r = n.identifier + "_uid";
                    (s = a.multiTouch.touchTab[r]) || ((s = new h).pointer = n,
                    s.uid = r,
                    a.multiTouch.touchTab[r] = s,
                    this.updateTouch(s))
                }
            }
            for (var o in a.multiTouch.touchTab) {
                var s = a.multiTouch.touchTab[o];
                this.updateTouch(s),
                1 != s.isTouch && 1 != s.onTouchEnd && delete a.multiTouch.touchTab[o]
            }
        }
        ,
        Object.defineProperty(a, "lowSineValue", {
            get: function() {
                return a.sys_sine.low
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(a, "medSineValue", {
            get: function() {
                return a.sys_sine.med
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(a, "fastSineValue", {
            get: function() {
                return a.sys_sine.fast
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(a, "veryFastSineValue", {
            get: function() {
                return a.sys_sine.veryFast
            },
            enumerable: !0,
            configurable: !0
        }),
        a.prototype.logSpriteH5 = function() {
            if (a.everyXTick(20)) {
                var t = "SpriteH5 elements : \n";
                for (var e in u.SpriteH5.familyListLen)
                    t += e + " : " + u.SpriteH5.familyListLen[e] + "\n";
                console.log(t)
            }
        }
        ,
        a.log = function(t) {
            1 == a.logOn && console.log(t)
        }
        ,
        a.sleep = function(t) {
            for (var e = new Date; (new Date).getMilliseconds() - e.getMilliseconds() < t; )
                ;
        }
        ,
        a.prototype.update = function(t) {
            a.tickcount++,
            a.dt = t / 1e3,
            a.sys_sine.low = a.range(0, a.sys_sine.low + .25 * a.sys_sine.lowDir * (t / 1e3), 1),
            a.sys_sine.lowDir = 0 == a.sys_sine.low ? 1 : 1 == a.sys_sine.low ? -1 : a.sys_sine.lowDir,
            a.sys_sine.med = a.range(0, a.sys_sine.med + 1 * a.sys_sine.medDir * (t / 1e3), 1),
            a.sys_sine.medDir = 0 == a.sys_sine.med ? 1 : 1 == a.sys_sine.med ? -1 : a.sys_sine.medDir,
            a.sys_sine.fast = a.range(0, a.sys_sine.fast + 2 * a.sys_sine.fastDir * (t / 1e3), 1),
            a.sys_sine.fastDir = 0 == a.sys_sine.fast ? 1 : 1 == a.sys_sine.fast ? -1 : a.sys_sine.fastDir,
            a.sys_sine.veryFast = a.range(0, a.sys_sine.veryFast + 5 * a.sys_sine.veryFastDir * (t / 1e3), 1),
            a.sys_sine.veryFastDir = 0 == a.sys_sine.veryFast ? 1 : 1 == a.sys_sine.veryFast ? -1 : a.sys_sine.veryFastDir,
            this.sys_stopEvent(),
            this.updateEvent(t),
            a.waitTable && a.doWait(t),
            this.updateTouchObject(),
            this.updateMultiTouch(),
            a.mouseVecX = a.mouseX - a.lastMouseX,
            a.mouseVecY = a.mouseY - a.lastMouseY,
            a.lastMouseX = a.mouseX,
            a.lastMouseY = a.mouseY,
            1 == a.logSpriteH5 && this.logSpriteH5(),
            this.updateFunction()
        }
        ,
        a.CONS = {},
        a.sys_Updatablefunction = {},
        a.triggerOnceList = {},
        a.eventTable = [],
        a.eventStopTable = [],
        a.eventId = 0,
        a.H5PNG_PATH = "H5/",
        a
    }();
    u.System = o
}(GAME || (GAME = {})),
function(t) {
    var e = function(t, e) {
        this.texture = t,
        this.id = e
    };
    (GAME || (GAME = {})).D3Image = e
}(),
function(n) {
    var t = function(r) {
        function t(t, e, i) {
            var n = r.call(this) || this;
            return n.looped = !1,
            n.stop = !0,
            n.onEndCallBack = null,
            n.lastChargedImage = null,
            n.nextImage = null,
            n.progressGap = 0,
            n.playerMap = t,
            n.buildImage(e, i),
            n.progress = 0,
            n.curImage = 0,
            n.progressWidth = 1,
            n.blurRatio = 0,
            n
        }
        return __extends(t, r),
        t.prototype.onEnd = function(t, e) {
            this.onEndCallBack = t ? new DUST.ContextualCallback(t,e) : null
        }
        ,
        t.prototype.buildImage = function(t, e) {
            var i = this.playerMap.getImage(0, this.lastChargedImage);
            this.image = new DUST.Sprite(i.content.texture),
            this.image.width = t,
            this.image.height = e,
            this.addChild(this.image)
        }
        ,
        Object.defineProperty(t.prototype, "tint", {
            set: function(t) {
                this.image.tint = t,
                0 != this.blurRatio && (this.nextImage.tint = t)
            },
            enumerable: !0,
            configurable: !0
        }),
        t.prototype.setProgressWidth = function(t) {
            this.progressWidth = Math.max(.001, t),
            this.progressMax = this.progressWidth * this.imageCount
        }
        ,
        t.prototype.getProgressDelta = function() {
            return this.progress - this.curImage * this.progressWidth
        }
        ,
        t.prototype.setLoop = function(t) {
            this.looped = t
        }
        ,
        Object.defineProperty(t.prototype, "imageCount", {
            get: function() {
                return this.playerMap.imageCount
            },
            enumerable: !0,
            configurable: !0
        }),
        t.prototype.fireEndCallBack = function() {
            this.onEndCallBack && this.onEndCallBack.execute()
        }
        ,
        t.prototype.linkProgress = function() {
            this.progress > this.progressMax ? this.looped ? this.progress = this.progress - this.progressMax : (1 != this.stop && this.fireEndCallBack(),
            this.stop = !0,
            this.progress = this.progressMax) : this.progress < -this.progressMax ? this.looped ? this.progress = this.progress + this.progressMax : this.progress = 0 : this.stop = !1
        }
        ,
        t.prototype.addToProgress = function(t) {
            this.progress += t,
            this.linkProgress(),
            this.updateImage()
        }
        ,
        t.prototype.setProgressGap = function(t) {
            this.progressGap = t
        }
        ,
        t.prototype.setBlurRatio = function(t) {
            if (this.blurRatio = t < 0 ? 0 : 1 < t ? 1 : t,
            0 == this.blurRatio && null != this.nextImage)
                this.nextImage.removeSelf(),
                this.nextImage = null;
            else if (0 != this.blurRatio && null == this.nextImage) {
                var e = this.playerMap.getImage(0, this.lastChargedImage);
                this.nextImage = new DUST.Sprite(e.content.texture),
                this.nextImage.width = this.image.width,
                this.nextImage.height = this.image.height,
                this.addChild(this.nextImage),
                this.nextImage.alpha = 0
            }
        }
        ,
        t.prototype.updateImage = function() {
            var t = this.progress / this.progressWidth
              , e = Math.floor(t);
            (e = this.looped ? n.System.link(0, e, this.playerMap.imageCount - 1) : n.System.range(0, e, this.playerMap.imageCount - 1)) != this.curImage && this._goToImage(e);
            var i = t % 1;
            0 != this.blurRatio && (this.nextImage.alpha = i * this.blurRatio)
        }
        ,
        t.prototype.getProgress = function() {
            return this.progress
        }
        ,
        t.prototype.setProgress = function(t) {
            this.progress = t + this.progressGap,
            this.linkProgress(),
            this.updateImage()
        }
        ,
        t.prototype.goToImage = function(t) {
            t = n.System.link(0, t, this.playerMap.imageCount - 1),
            this.progress = t * this.progressWidth,
            this._goToImage(t)
        }
        ,
        t.prototype.getCurPatternKey = function() {
            return this.playerMap.getPatternKey(this.curImage)
        }
        ,
        t.prototype._goToImage = function(t) {
            this.curImage = t;
            var e = this.playerMap.getImage(t, this.lastChargedImage);
            if (this.image.setTexture(e.content.texture),
            this.lastChargedImage = e,
            0 != this.blurRatio) {
                e = this.playerMap.getImage(n.System.link(0, t + 1, this.playerMap.imageCount - 1));
                this.nextImage.setTexture(e.content.texture),
                this.nextImage.alpha = 0
            }
        }
        ,
        t
    }(DUST.Container);
    n.D3Player = t
}(GAME || (GAME = {})),
function(h) {
    var t = function() {
        function t() {
            this.sequencedPattern = [],
            this.sequencePatternKey = [],
            this.imageCount = 0,
            this.imageSequence = null,
            this.lastElem = null,
            this.patterns = {}
        }
        return t.prototype.addPattern = function(t) {
            this.patterns[t.uid] = t
        }
        ,
        t.prototype.buildSequence = function(t) {
            this.imageCount = 0,
            this.sequenceLen = t.length,
            this.imageSequence = new h.ListH5,
            this.sequencedPattern = [],
            this.sequencePatternKey = [];
            for (var e = 0, i = 0; i < this.sequenceLen; i++) {
                var n = this.patterns[t[i]]
                  , r = n.imageCount;
                this.imageCount += r,
                this.sequencedPattern.push(this.imageCount),
                this.sequencePatternKey.push(n.uid);
                for (var o = 0; o < r; o++) {
                    var s = new h.D3Image(n.getPlayerImage(o),e)
                      , a = new h.ListElemH5(s);
                    this.imageSequence.addToList(a),
                    e++
                }
            }
        }
        ,
        t.prototype.getPatternKey = function(t) {
            for (var e = 0; t > this.sequencedPattern[e]; )
                e++;
            return this.sequencePatternKey[e]
        }
        ,
        t.prototype.getImage = function(t, e) {
            var i = e || this.imageSequence.start;
            for (t < Math.abs(t - i.content.id) && (i = this.imageSequence.start); null != i && t != i.content.id; )
                i = t > i.content.id ? i.next : i.prev;
            return i || null
        }
        ,
        t
    }();
    h.D3PlayerMap = t
}(GAME || (GAME = {})),
function(e) {
    var t = function() {
        function o(t, e) {
            this.uid = e,
            this.images = t,
            this.imageCount = this.images.length
        }
        return o.fromImage = function(t, e) {
            for (var i = [], n = t ? t.length : 0, r = 0; r < n; r++)
                i.push(DUST.Texture.fromImage(t[r]));
            return new o(i,e)
        }
        ,
        o.fromFrame = function(t, e) {
            for (var i = [], n = t ? t.length : 0, r = 0; r < n; r++)
                i.push(DUST.Texture.fromFrame(t[r]));
            return new o(i,e)
        }
        ,
        o.prototype.getPlayerImage = function(t) {
            return this.images[e.System.range(0, t, this.imageCount - 1)]
        }
        ,
        o
    }();
    e.D3PlayerPattern = t
}(GAME || (GAME = {})),
function(i) {
    var t = function(n) {
        function t(t, e) {
            var i = n.call(this) || this;
            return i.currentIdFrame = 0,
            i._switcher = .2,
            i._speed = 5,
            i.sys_destroyIn = -1,
            i.sys_onEndFctn = null,
            i.endedFrame = null,
            i.currentAnimation = "NotDefinedAnimation",
            i.pingPong = !1,
            i.pingPongState = 1,
            i.currentIdFrame = 0,
            t && e ? i.addAnimation(t, e) : i.currentAnimation = "NotDefinedAnimation",
            i.speed = 5,
            i.addUpdatable(),
            i
        }
        return __extends(t, n),
        t.prototype.destroyIn = function(t) {
            this.sys_destroyIn = t,
            this.whiled = !0
        }
        ,
        t.prototype.addAnimation = function(t, e) {
            null == this.animationList && (this.animationList = {}),
            this.animationList[t] = e.split(","),
            "NotDefinedAnimation" == this.currentAnimation && (this.currentFrame = new DUST.Sprite(DUST.Texture.fromFrame(this.animationList[t][0])),
            this.addChild(this.currentFrame),
            this.currentAnimation = t)
        }
        ,
        t.prototype.addAnimationFromTable = function(t, e) {
            null == this.animationList && (this.animationList = {}),
            this.animationList[t] = e,
            "NotDefinedAnimation" == this.currentAnimation && (this.currentFrame = new DUST.Sprite(DUST.Texture.fromFrame(this.animationList[t][0])),
            this.addChild(this.currentFrame),
            this.currentAnimation = t)
        }
        ,
        t.prototype.setLooping = function() {
            this.whiled = !0
        }
        ,
        t.prototype.setNotLooping = function() {
            this.whiled = !1
        }
        ,
        t.prototype.play = function(t, e) {
            null != this.animationList && this.animationList[t] && (this.currentAnimation = t),
            null != e && (this.currentIdFrame = e),
            this.currentFrame.setFrame(this.animationList[this.currentAnimation][this.currentIdFrame]),
            this.addUpdatable()
        }
        ,
        t.prototype.setRandomFrame = function() {
            this.currentIdFrame = Math.floor(Math.random() * this.animationList[this.currentAnimation].length),
            this._switcher = Math.random() * (1 / this._speed)
        }
        ,
        t.prototype.addUpdatable = function() {
            this.updatable || (this.updatable = !0,
            i.System.game.addUpdatable(this))
        }
        ,
        t.prototype.stopUdatable = function() {
            this.updatable && (this.updatable = !1,
            i.System.game.removeUpdatable(this))
        }
        ,
        t.prototype.destroy = function() {
            this.stopUdatable(),
            this.currentFrame.removeSelf(),
            this.removeSelf()
        }
        ,
        Object.defineProperty(t.prototype, "speed", {
            get: function() {
                return this._speed
            },
            set: function(t) {
                this._speed = t
            },
            enumerable: !0,
            configurable: !0
        }),
        t.prototype.onEnd = function(t) {
            this.sys_onEndFctn = t
        }
        ,
        t.prototype.setPingPong = function(t) {
            this.pingPong = t,
            this.pingPongState = 1
        }
        ,
        t.prototype.nextFrame = function(t) {
            this.whiled ? this.pingPong ? 1 == this.pingPongState ? this.currentIdFrame + 1 == t ? (this.pingPongState = -1,
            this.currentIdFrame = Math.max(0, t - 2)) : this.currentIdFrame += 1 : 0 == this.currentIdFrame ? (this.pingPongState = 1,
            this.currentIdFrame = Math.min(1, t - 1)) : this.currentIdFrame -= 1 : this.currentIdFrame = this.currentIdFrame + 1 == t ? 0 : this.currentIdFrame + 1 : this.currentIdFrame = Math.min(this.currentIdFrame + 1, t - 1)
        }
        ,
        t.prototype.update = function(t) {
            if (t /= 1e3,
            i.System.log("animationH5"),
            "NotDefinedAnimation" != this.currentAnimation && (0 < this._speed && (this._switcher = Math.min(this._switcher - 1 * t, 1 / this._speed)),
            this._switcher <= 0)) {
                var e = this.animationList[this.currentAnimation].length;
                this.currentIdFrame == e - 1 ? (0 < this.sys_destroyIn && (this.sys_destroyIn -= 1),
                this.endedFrame != this.currentIdFrame && (this.endedFrame = this.currentIdFrame,
                this.sys_onEndFctn && this.sys_onEndFctn())) : this.endedFrame = null,
                this.nextFrame(e),
                this.currentFrame.setFrame(this.animationList[this.currentAnimation][this.currentIdFrame]),
                this._switcher = 1 / this._speed,
                0 == this.sys_destroyIn && this.destroy()
            }
        }
        ,
        t
    }(DUST.Container);
    i.AnimationH5 = t
}(GAME || (GAME = {})),
function(u) {
    var t = function(l) {
        function t(t) {
            var e = l.call(this) || this;
            e.cont = new u.Container;
            var i = u.Texture.fromFrame(t)
              , n = Math.floor(i._texture._frame.width / 3)
              , r = i._texture._frame.height
              , o = new u.Rectangle(i._texture._frame.x,i._texture._frame.y,n,r)
              , s = new u.Sprite(new u.Texture(i,o))
              , a = (o = new u.Rectangle(i._texture._frame.x + n,i._texture._frame.y,n,r),
            new u.Sprite(new u.Texture(i,o)))
              , h = (o = new u.Rectangle(i._texture._frame.x + 2 * n,i._texture._frame.y,n,r),
            new u.Sprite(new u.Texture(i,o)));
            return a.x = s.width,
            e.cont.addChild(s),
            e.cont.addChild(a),
            e.cont.addChild(h),
            e.PL = s,
            e.PM = a,
            e.PR = h,
            e.minWidth = 2 * n,
            e.width = 2 * n,
            e.addChild(e.cont),
            e
        }
        return __extends(t, l),
        Object.defineProperty(t.prototype, "tint", {
            get: function() {
                return this.PL.tint
            },
            set: function(t) {
                this.PL.tint = t,
                this.PM.tint = t,
                this.PR.tint = t
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "width", {
            get: function() {
                return this.cont.width
            },
            set: function(t) {
                t = Math.max(this.minWidth, t),
                this.PM.width = Math.max(0, t - 2 * this.PL.width),
                this.PR.x = this.PL.width + this.PM.width
            },
            enumerable: !0,
            configurable: !0
        }),
        t
    }(u.Container);
    u.Button3P = t
}(DUST || (DUST = {})),
function(o) {
    var r = function(t, e, i, n) {
        this.x = t,
        this.y = e,
        this.height = n,
        this.width = i
    };
    o.DisplayZone = r;
    var t = function(n) {
        function t(t) {
            var e = n.call(this) || this;
            e.bounded = !1,
            e.scrollProgressivity = 10,
            e.display = t || new r(0,0,o.System.game.width,o.System.game.height),
            e.sys_ScrollX = e.cibleX = 0,
            e.sys_ScrollY = e.cibleY = 0,
            e.scrollSpeed = 400,
            e.zoom = 1,
            e.cibleZoom = 1,
            e.scrollMethode = 0,
            e.zoomMethode = 1,
            e.container = new DUST.Container,
            n.prototype.addChild.call(e, e.container),
            e.addUpdatable();
            var i = new DUST.Graphics;
            return i.beginFill(16777215, 1),
            i.drawRect(e.display.x, e.display.y, e.display.width, e.display.height),
            i.endFill(),
            n.prototype.addChild.call(e, i),
            e.mask = i,
            e
        }
        return __extends(t, n),
        t.prototype.addUpdatable = function() {
            1 != this.updatable && (this.updatable = !0,
            o.System.game.addUpdatable(this))
        }
        ,
        t.prototype.stopUpdatable = function() {
            1 == this.updatable && (this.updatable = !0,
            o.System.game.removeUpdatable(this))
        }
        ,
        t.prototype.addChild = function(t) {
            return this.container.addChild(t)
        }
        ,
        t.prototype.destroy = function() {
            o.System.game.removeUpdatable(this),
            n.prototype.removeSelf.call(this)
        }
        ,
        t.prototype.setArea = function(t, e) {
            this.bounded = !0,
            this.boundMaxX = t,
            this.boundMaxY = e
        }
        ,
        t.prototype.shakeMicroWave = function(t) {
            this.shakeDuration = t,
            this.sys_shakeDuration = t,
            this.shakeMagnetude = 2,
            this.shakeSpeed = 100,
            this.shakeDX = 1,
            this.shakeDY = 1,
            this.shakeX = 0,
            this.shakeY = 0
        }
        ,
        t.prototype.shakeMediumWave = function(t) {
            this.shakeDuration = t,
            this.sys_shakeDuration = t,
            this.shakeMagnetude = 5,
            this.shakeSpeed = 100,
            this.shakeDX = 1,
            this.shakeDY = 1,
            this.shakeX = 0,
            this.shakeY = 0
        }
        ,
        t.prototype.shakeBigWave = function(t) {
            this.shakeDuration = t,
            this.sys_shakeDuration = t,
            this.shakeMagnetude = 10,
            this.shakeSpeed = 500,
            this.shakeDX = 1,
            this.shakeDY = 1,
            this.shakeX = 0,
            this.shakeY = 0
        }
        ,
        t.prototype.SetUnboundedCamera = function() {
            this.bounded = !1
        }
        ,
        t.prototype.setScrollMethodeToDirect = function() {
            this.scrollMethode = 0
        }
        ,
        t.prototype.setScrollMethodeToProgressive = function() {
            this.scrollMethode = 1
        }
        ,
        t.prototype.setScrollMethodeToSpeedLimited = function(t) {
            isNaN(t) || (this.scrollSpeed = t),
            this.scrollMethode = 2
        }
        ,
        t.prototype.scrollX = function(t) {
            this.cibleX = -t + o.System.game.width / 2
        }
        ,
        t.prototype.scrollY = function(t) {
            this.cibleY = -t + o.System.game.height / 2
        }
        ,
        t.prototype.scrollTo = function(t, e) {
            this.cibleX = -t * this.zoom + o.System.game.width / 2,
            this.cibleY = -e * this.zoom + o.System.game.height / 2
        }
        ,
        t.prototype.zoomLevel = function(t) {
            this.cibleZoom = t,
            0 == this.zoomMethode && (this.zoom = this.cibleZoom)
        }
        ,
        t.prototype.setZoomMethodeDirect = function() {
            this.zoomMethode = 0
        }
        ,
        t.prototype.setZoomMethodeToProgressive = function() {
            this.zoomMethode = 1
        }
        ,
        t.prototype.setZoomMethodeToLimitedSpeed = function(t) {
            isNaN(t) || (this.zoomSpeed = t),
            this.zoomMethode = 2
        }
        ,
        t.prototype.update = function(t) {
            var e = t / 1e3;
            if (o.System.log("cameraH5"),
            2 == this.scrollMethode) {
                var i = Math.abs(this.cibleX - this.x)
                  , n = Math.abs(this.cibleY - this.y);
                i = Math.min(10 * i, this.scrollSpeed),
                i *= this.x <= this.cibleX ? 1 : -1,
                n = Math.min(10 * n, this.scrollSpeed),
                n *= this.sys_ScrollY <= this.cibleY ? 1 : -1,
                this.sys_ScrollX += i * e,
                this.sys_ScrollY += n * e,
                this.sys_ScrollX = .01 < Math.abs(i) ? this.sys_ScrollX : this.cibleX,
                this.sys_ScrollY = .01 < Math.abs(n) ? this.sys_ScrollY : this.cibleY
            } else if (1 == this.scrollMethode) {
                i = (this.cibleX - this.sys_ScrollX) * this.scrollProgressivity * e,
                n = (this.cibleY - this.sys_ScrollY) * this.scrollProgressivity * e;
                this.sys_ScrollX += i,
                this.sys_ScrollY += n,
                this.sys_ScrollX = .01 < Math.abs(i) ? this.sys_ScrollX : this.cibleX,
                this.sys_ScrollY = .01 < Math.abs(n) ? this.sys_ScrollY : this.cibleY
            } else
                this.sys_ScrollX = this.cibleX,
                this.sys_ScrollY = this.cibleY;
            if (1 == this.bounded && (this.sys_ScrollX = o.System.range(this.display.width - this.boundMaxX * this.zoom, this.sys_ScrollX, 0),
            this.sys_ScrollY = o.System.range(this.display.height - this.boundMaxY * this.zoom, this.sys_ScrollY, 0)),
            2 == this.zoomMethode) {
                var r = Math.abs(this.cibleZoom - this.zoom);
                r = Math.min(10 * r, this.zoomSpeed),
                r *= this.zoom <= this.cibleZoom ? 1 : -1,
                this.zoom += r * e,
                this.zoom = .01 < Math.abs(r) ? this.zoom : this.cibleZoom
            } else if (1 == this.zoomMethode) {
                r = 10 * (this.cibleZoom - this.zoom) * e;
                this.zoom += r,
                this.zoom = .01 < Math.abs(r) ? this.zoom : this.cibleZoom
            } else
                this.zoom = this.cibleZoom;
            this.container.scaleXY = this.zoom,
            0 < this.shakeDuration ? (this.sys_shakeMagnetude = this.shakeMagnetude * Math.min(1, this.sys_shakeDuration / this.shakeDuration * 2),
            this.shakeX = o.System.range(-this.sys_shakeMagnetude, this.shakeX + this.shakeSpeed * this.shakeDX * e, this.sys_shakeMagnetude),
            Math.abs(this.shakeX) == this.sys_shakeMagnetude && (this.shakeDX *= -1),
            this.shakeY = o.System.range(-this.sys_shakeMagnetude, this.shakeY + this.shakeSpeed * this.shakeDY * e, this.sys_shakeMagnetude),
            Math.abs(this.shakeY) == this.sys_shakeMagnetude && (this.shakeDY *= -1),
            this.sys_shakeDuration = Math.max(0, this.sys_shakeDuration - 1 * e)) : (this.shakeX = 0,
            this.shakeY = 0),
            this.container.x = this.display.x + this.sys_ScrollX + this.shakeX,
            this.container.y = this.display.y + this.sys_ScrollY + this.shakeY
        }
        ,
        t
    }(DUST.Container);
    o.CameraH5 = t
}(GAME || (GAME = {})),
function(i) {
    var t = function(e) {
        function t() {
            var t = e.call(this) || this;
            return t.speedY = -50,
            t.speedX = 0,
            t.cont = new DUST.Container,
            t._addChild(t.cont),
            t.cont.scaleXY = .01,
            t.step = 0,
            t.addUpdatable(),
            t
        }
        return __extends(t, e),
        t.prototype._addChild = function(t) {
            return e.prototype.addChild.call(this, t)
        }
        ,
        t.prototype.addChild = function(t) {
            return this.cont.addChild(t)
        }
        ,
        t.prototype.setMoveXY = function(t, e) {
            this.speedX = t,
            this.speedY = e
        }
        ,
        t.prototype.destroy = function() {
            this.stopUpdatable(),
            this.removeSelf()
        }
        ,
        t.prototype.addUpdatable = function() {
            1 != this.updatable && (this.updatable = !0,
            i.System.game.addUpdatable(this))
        }
        ,
        t.prototype.stopUpdatable = function() {
            1 == this.updatable && (this.updatable = !1,
            i.System.game.removeUpdatable(this))
        }
        ,
        t.prototype.update = function(t) {
            var e = t / 1e3;
            this.cont.y += this.speedY * Math.min(1, this.cont.scaleXY) * e,
            this.cont.x += this.speedX * Math.min(1, this.cont.scaleXY) * e,
            0 == this.step && this.cont.scaleXY < 1.4 ? this.cont.scaleXY = this.cont.scaleXY + 6 * e : this.step = 1,
            1 == this.step && 1 < this.cont.scaleXY && (this.cont.scaleXY = Math.max(1, this.cont.scaleXY - 6 * e)),
            1 == this.cont.scaleXY && (this.cont.alpha = Math.max(0, this.cont.alpha - .7 * e),
            0 == this.cont.alpha && this.destroy())
        }
        ,
        t
    }(DUST.Container);
    i.DropH5 = t
}(GAME || (GAME = {})),
function(e) {
    var t = function(i) {
        function t(t) {
            var e = i.call(this) || this;
            return e.speedY = -50,
            e.speedX = 0,
            e.cont = t,
            e.cont.setPivotToCenter(),
            e.cont.x = 0,
            e.cont.y = 0,
            e.addChild(e.cont),
            e.cont.scaleXY = .01,
            e.step = 0,
            e.addUpdatable(),
            e
        }
        return __extends(t, i),
        t.prototype.destroy = function() {
            this.stopUpdatable(),
            this.removeSelf()
        }
        ,
        t.prototype.addUpdatable = function() {
            1 != this.updatable && (this.updatable = !0,
            e.System.game.addUpdatable(this))
        }
        ,
        t.prototype.stopUpdatable = function() {
            1 == this.updatable && (this.updatable = !1,
            e.System.game.removeUpdatable(this))
        }
        ,
        t.prototype.setMoveXY = function(t, e) {
            this.speedX = t,
            this.speedY = e
        }
        ,
        t.prototype.update = function(t) {
            var e = t / 1e3;
            this.cont.y += this.speedY * Math.min(1, this.cont.scaleXY) * e,
            this.cont.x += this.speedX * Math.min(1, this.cont.scaleXY) * e,
            0 == this.step && this.cont.scaleXY < 1.4 ? this.cont.scaleXY = this.cont.scaleXY + 6 * e : this.step = 1,
            1 == this.step && 1 < this.cont.scaleXY && (this.cont.scaleXY = Math.max(1, this.cont.scaleXY - 6 * e)),
            1 == this.cont.scaleXY && (this.cont.alpha = Math.max(0, this.cont.alpha - .7 * e),
            0 == this.cont.alpha && this.destroy())
        }
        ,
        t
    }(DUST.Container);
    e.DropObject = t
}(GAME || (GAME = {})),
function(o) {
    var t = function(r) {
        function t(t, e, i) {
            var n = r.call(this) || this;
            return n.widthDynamique = o.System.game.width,
            n.heightDynamique = o.System.game.height,
            n.vectorX = -40,
            n.vectorY = -100,
            n.texture = t,
            (e || 0 == e) && (n.vectorX = e),
            (i || 0 == i) && (n.vectorY = i),
            n.imageA = new DUST.Sprite(DUST.Texture.fromFrame(t)),
            n.imageA.width = o.System.game.width,
            n.imageA.height = o.System.game.height,
            n.imageA.x = 0,
            n.imageA.y = 0,
            n.addChild(n.imageA),
            n.imageB = new DUST.Sprite(DUST.Texture.fromFrame(t)),
            n.imageB.width = o.System.game.width,
            n.imageB.height = o.System.game.height,
            n.imageB.x = o.System.game.width,
            n.imageB.y = 0,
            n.addChild(n.imageB),
            n.imageC = new DUST.Sprite(DUST.Texture.fromFrame(t)),
            n.imageC.width = o.System.game.width,
            n.imageC.height = o.System.game.height,
            n.imageC.x = 0,
            n.imageC.y = o.System.game.height,
            n.addChild(n.imageC),
            n.imageD = new DUST.Sprite(DUST.Texture.fromFrame(t)),
            n.imageD.width = o.System.game.width,
            n.imageD.height = o.System.game.height,
            n.imageD.x = o.System.game.width,
            n.imageD.y = o.System.game.height,
            n.addChild(n.imageD),
            n.updatable = !1,
            n.addUpdatable(),
            n
        }
        return __extends(t, r),
        t.prototype.destroy = function() {
            this.stopUpdatable(),
            this.imageA.removeSelf(),
            this.imageB.removeSelf(),
            this.imageC.removeSelf(),
            this.imageD.removeSelf(),
            this.removeSelf()
        }
        ,
        t.prototype.changeImage = function(t) {
            this.imageA.setFrame(this.texture),
            this.imageB.setFrame(this.texture),
            this.imageC.setFrame(this.texture),
            this.imageD.setFrame(this.texture)
        }
        ,
        t.prototype.addUpdatable = function() {
            0 == this.updatable && (this.updatable = !0,
            o.System.game.addUpdatable(this))
        }
        ,
        t.prototype.stopUpdatable = function() {
            1 == this.updatable && (this.updatable = !1,
            o.System.game.removeUpdatable(this))
        }
        ,
        t.prototype.update = function(t) {
            t /= 1e3,
            o.System.log("DynamicBackH5"),
            this.imageA.x += this.vectorX * t,
            this.imageB.x += this.vectorX * t,
            this.imageC.x += this.vectorX * t,
            this.imageD.x += this.vectorX * t,
            this.imageA.y += this.vectorY * t,
            this.imageB.y += this.vectorY * t,
            this.imageC.y += this.vectorY * t,
            this.imageD.y += this.vectorY * t,
            this.imageA.x < this.x - this.widthDynamique && (this.imageA.x = this.imageB.x + this.widthDynamique),
            this.imageA.x > this.x + this.widthDynamique && (this.imageA.x = this.imageB.x - this.widthDynamique),
            this.imageA.y < this.y - this.heightDynamique && (this.imageA.y = this.imageC.y + this.heightDynamique),
            this.imageA.y > this.y + this.heightDynamique && (this.imageA.y = this.imageC.y - this.heightDynamique),
            this.imageB.x < this.x - this.widthDynamique && (this.imageB.x = this.imageA.x + this.widthDynamique),
            this.imageB.x > this.x + this.widthDynamique && (this.imageB.x = this.imageA.x - this.widthDynamique),
            this.imageB.y < this.y - this.heightDynamique && (this.imageB.y = this.imageD.y + this.heightDynamique),
            this.imageB.y > this.y + this.heightDynamique && (this.imageB.y = this.imageD.y - this.heightDynamique),
            this.imageC.x < this.x - this.widthDynamique && (this.imageC.x = this.imageD.x + this.widthDynamique),
            this.imageC.x > this.x + this.widthDynamique && (this.imageC.x = this.imageD.x - this.widthDynamique),
            this.imageC.y < this.y - this.heightDynamique && (this.imageC.y = this.imageA.y + this.heightDynamique),
            this.imageC.y > this.y + this.heightDynamique && (this.imageC.y = this.imageA.y - this.heightDynamique),
            this.imageD.x < this.x - this.widthDynamique && (this.imageD.x = this.imageC.x + this.widthDynamique),
            this.imageD.x > this.x + this.widthDynamique && (this.imageD.x = this.imageC.x - this.widthDynamique),
            this.imageD.y < this.y - this.heightDynamique && (this.imageD.y = this.imageB.y + this.heightDynamique),
            this.imageD.y > this.y + this.heightDynamique && (this.imageD.y = this.imageB.y - this.heightDynamique)
        }
        ,
        t
    }(DUST.Container);
    o.DynamicBackH5 = t
}(GAME || (GAME = {})),
function(o) {
    var t = function(n) {
        function r(t, e) {
            var i = n.call(this, t) || this;
            return i.destroyed = !1,
            i.instantData = {},
            i.clickEnable = !0,
            i.clickDisableTint = o.System.rgb(255, 0, 0),
            i.clickEnableTint = o.System.rgb(255, 255, 255),
            r.addToFamily(e || r.familyName, i),
            i
        }
        return __extends(r, n),
        r.prototype.destroyOnDetach = function() {
            var t = this;
            1 != this._destroyOnDetach && (this.detachListener.add(function() {
                t.destroy()
            }, this),
            this._destroyOnDetach = !0)
        }
        ,
        r.prototype.destroy = function() {
            if (this.stopUpdatable(),
            this._onDestroy(),
            this.sineList)
                for (var t = 0; t < this.sineList.length; t++)
                    this.sineList[t].stopUpdatable();
            0 == this.destroyed && (this.destroyed = !0,
            this.removeFromTable(),
            this.removeSelf())
        }
        ,
        r.prototype._onDestroy = function() {
            if (this.onDestroyFct)
                for (var t, e = this.onDestroyFct.length, i = 0; i < e; i++)
                    (t = this.onDestroyFct[i]) && t()
        }
        ,
        r.prototype.addOnDestroyFct = function(t) {
            null != t && (this.onDestroyFct || (this.onDestroyFct = []),
            this.onDestroyFct.push(t))
        }
        ,
        r.prototype.setPivotToCenter = function() {
            n.prototype.setPivotToCenter.call(this),
            this.pivotToCenter = !0
        }
        ,
        Object.defineProperty(r.prototype, "middelX", {
            get: function() {
                return this.x - this.pivotX + this.width / 2
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(r.prototype, "middelY", {
            get: function() {
                return this.y - this.pivotY + this.height / 2
            },
            enumerable: !0,
            configurable: !0
        }),
        r.prototype.addUpdatable = function() {
            o.System.started ? this.updatable || (this.updatable = !0,
            o.System.game.addUpdatable(this)) : alert("you have to init system with System.start() before use SpriteH5.addUpdatable()")
        }
        ,
        r.prototype.stopUpdatable = function() {
            o.System.started ? this.updatable && (this.updatable = !1,
            o.System.game.removeUpdatable(this)) : alert("you have to init system with System.start() before use SpriteH5.stopUpdatable()")
        }
        ,
        r.prototype.addSine = function(t, e, i, n) {
            this.sineList || (this.sineList = []);
            var r = o.SineH5.newSine(0, t, e, i, n);
            this.sineList[this.sineList.length] = r,
            this.addUpdatable()
        }
        ,
        r.prototype.updateSine = function(t) {
            for (var e = null, i = this.sineList.length, n = 0; n < i; n++)
                (e = this.sineList[n]).propriete == o.SinePropriete.alpha ? this.alpha = e.value : e.propriete == o.SinePropriete.x ? this.x = e.value : e.propriete == o.SinePropriete.y ? this.y = e.value : e.propriete == o.SinePropriete.scale ? this.scaleXY = e.value : e.propriete == o.SinePropriete.width ? this.width = e.value : e.propriete == o.SinePropriete.height ? this.height = e.value : e.propriete == o.SinePropriete.rotation && (this.rotation = e.value)
        }
        ,
        r.prototype.addUpdatableFunction = function(t) {
            this.fonctionList || (this.fonctionList = []),
            this.fonctionList.push(t),
            this.addUpdatable()
        }
        ,
        r.prototype.updateFunction = function() {
            for (var t = this.fonctionList.length, e = 0; e < t; e++)
                this.fonctionList[e]()
        }
        ,
        r.prototype.ifClick = function() {
            this.clickable = !0,
            this.updatable || this.addUpdatable(),
            this.clickedFrame || (this.clickedFrame = new DUST.Sprite(DUST.Texture.fromFrame("H5/white.png")),
            this.clickedFrame.alpha = 0,
            this.addChild(this.clickedFrame));
            var t, e = 0;
            if (this.parent && (t = this.parent.x,
            e = this.parent.y),
            this.x + t < o.System.mouseX && o.System.mouseX < this.x + t + this.width && this.y + e < o.System.mouseY && o.System.mouseY < this.y + e + this.height && (this.clickedFrame.alpha = Math.max(this.clickedFrame.alpha, .2),
            o.System.game.inputManager.mouse.isJustDown)) {
                if (this.clickedFrame.alpha = 1,
                this.clickEnable)
                    return this.clickedFrame.tint = this.clickDisableTint,
                    !0;
                this.clickedFrame.tint = this.clickEnableTint
            }
            return !1
        }
        ,
        r.prototype.clickFrameUpdate = function(t) {
            t /= 1e3,
            0 < this.clickedFrame.alpha && (this.clickedFrame.alpha = Math.min(1, Math.max(0, this.clickedFrame.alpha - 4 * t)),
            this.clickedFrame.width = this.width / this.scaleXY,
            this.clickedFrame.height = this.height / this.scaleXY)
        }
        ,
        r.addToFamily = function(t, e) {
            r.spriteList || (r.spriteList = {}),
            r.spriteList[t] || (r.spriteList[t] = []),
            r.familyListLen[t] || (r.familyListLen[t] = 0),
            r.spriteList[t].push(e),
            e.familyName = t,
            r.familyListLen[t] += 1
        }
        ,
        r.familyTable = function(t) {
            return r.spriteList[t] ? r.spriteList[t] : null
        }
        ,
        r.destroyAllFamilys = function() {
            for (var t in r.spriteList) {
                var e = r.spriteList[t];
                if (null != e) {
                    for (; 0 < e.length; )
                        e[0].destroy();
                    r.spriteList[t] = null
                }
            }
            r.spriteList = {}
        }
        ,
        r.destroyAll = function(t) {
            var e = r.spriteList[t];
            if (null != e) {
                for (; 0 < e.length; )
                    e[0].destroy();
                r.spriteList[t] = null,
                delete r.familyListLen[t]
            }
        }
        ,
        r.prototype.removeFromTable = function() {
            for (var t = r.spriteList[this.familyName], e = t.length, i = 0; i < e; i++)
                if (t[i] === this) {
                    t.splice(i, 1);
                    break
                }
            var n = r.familyListLen[this.familyName];
            n && (n -= 1),
            0 == n ? delete r.familyListLen[this.familyName] : r.familyListLen[this.familyName] = n
        }
        ,
        Object.defineProperty(r.prototype, "IID", {
            get: function() {
                for (var t = r.spriteList[r.familyName], e = 0; e < t.length; e++)
                    return t[e] === this ? e : -1
            },
            enumerable: !0,
            configurable: !0
        }),
        r.prototype.update = function(t) {
            this.clickable && this.clickFrameUpdate(t),
            this.sineList && this.updateSine(t / 1e3),
            this.fonctionList && this.updateFunction()
        }
        ,
        r.spriteList = {},
        r.familyName = "Sprite",
        r.familyListLen = {},
        r
    }(DUST.Sprite);
    o.SpriteH5 = t
}(GAME || (GAME = {})),
function(n) {
    var t = function(i) {
        function t(t) {
            var e = i.call(this, DUST.Texture.fromFrame(t), "etincellesH5_OBJECT") || this;
            return e.vecX = 0,
            e.vecY = 0,
            e.speed = 50,
            e.duration = 0,
            e.endCallback = null,
            e.addUpdatable(),
            e.setPivotToCenter(),
            e.alpha = .3,
            e.scaleXY = n.System.rand(.1, .4),
            e
        }
        return __extends(t, i),
        t.prototype.onEnd = function(t) {
            this.endCallback = t
        }
        ,
        t.prototype.destroy = function() {
            i.prototype.destroy.call(this),
            this.endCallback && this.endCallback()
        }
        ,
        t.prototype.update = function(t) {
            t /= 1e3,
            n.System.log("Etincelles"),
            this.duration += t,
            this.duration < .3 && (this.alpha = Math.min(1, this.alpha + 1 * t),
            this.scaleXY = 1.07 * this.scaleXY),
            .3 < this.duration && (this.alpha = Math.max(0, this.alpha - (1e-4 + 4 * this.alpha * t))),
            this.x = this.x + this.vecX * this.speed * t,
            this.y = this.y + this.vecY * this.speed * t,
            this.vecY = this.vecY + 1 * t,
            0 == this.alpha && this.destroy()
        }
        ,
        t
    }(n.SpriteH5);
    n.Etincelles = t
}(GAME || (GAME = {})),
function(f) {
    var t = function(r) {
        function d(t, e) {
            var i = r.call(this) || this;
            i.scaleEnd = 5,
            i.endCallback = null,
            i.sprite = new f.SpriteH5(DUST.Texture.fromFrame(f.System.H5PNG_PATH + "explode.png"),"explodeH5_OBJECT"),
            i.cont = new DUST.Container,
            i.cont.setPivotToCenter(),
            i.addChild(i.cont),
            i.cont.addChild(i.sprite),
            i.sprite.tint = t,
            i.sprite.setPivotToCenter(),
            i.sprite.x = 0,
            i.sprite.y = 0,
            i.scaleEnd = e ? 2 * e / i.width : 5,
            i.speed = i.scaleEnd / .3,
            i.sprite.scaleXY = .01;
            var n = i;
            return i.sprite.addUpdatableFunction(function() {
                n.sprite.scaleXY = Math.min(n.scaleEnd, n.sprite.scaleXY + n.speed * f.System.dt),
                n.sprite.alpha = Math.min(1, n.sprite.scaleXY / (n.scaleEnd / 2) * 1) - Math.max(0, (n.sprite.scaleXY - n.scaleEnd / 2) / (n.scaleEnd / 2)),
                n.sprite.scaleXY == n.scaleEnd && n.destroy.apply(n)
            }),
            i
        }
        return __extends(d, r),
        d.prototype.onEnd = function(t) {
            this.endCallback = t
        }
        ,
        d.prototype.destroy = function() {
            this.sprite.destroy(),
            this.cont.removeSelf(),
            this.endCallback && this.endCallback()
        }
        ,
        d.newEjectedSprite = function(t, e) {
            var i = t.texture
              , n = new f.SpriteH5(i,"EjectedSprite_SysH5");
            return n.scaleXY = t.scaleXY,
            n.setPivotToCenter(),
            n.x = t.x + (t.width / 2 - t.pivotX),
            n.y = t.y + (t.height / 2 - t.pivotY),
            n.rotation = t.rotation,
            e = null == e ? 1 : e,
            n.instantData.time = 1,
            n.instantData.vecY = -600 * e,
            n.instantData.vecX = f.System.rand(-100, 100) * e,
            n.addUpdatableFunction(function() {
                var t = f.System.dt;
                n.instantData.time = Math.max(0, n.instantData.time - 1 * t),
                n.alpha = Math.min(1, 2 * n.instantData.time),
                n.rotation += Math.PI * n.instantData.vecX / 2e3,
                n.x += n.instantData.vecX * t,
                n.y += n.instantData.vecY * t,
                n.instantData.vecY += 1500 * e * t,
                0 == n.instantData.time && n.destroy()
            }),
            n
        }
        ,
        d.newEjected = function(t, e) {
            var i = DUST.Texture.fromFrame(t)
              , n = new f.SpriteH5(i,"EjectedSprite_SysH5");
            return n.setPivotToCenter(),
            e = null == e ? 1 : e,
            n.instantData.time = 1,
            n.instantData.vecY = -600 * e,
            n.instantData.vecX = f.System.rand(-100, 100) * e,
            n.addUpdatableFunction(function() {
                var t = f.System.dt;
                n.instantData.time = Math.max(0, n.instantData.time - 1 * t),
                n.alpha = Math.min(1, 2 * n.instantData.time),
                n.rotation += Math.PI * n.instantData.vecX / 2e3,
                n.x += n.instantData.vecX * t,
                n.y += n.instantData.vecY * t,
                n.instantData.vecY += 1500 * e * t,
                0 == n.instantData.time && n.destroy()
            }),
            n
        }
        ,
        d.newExplode_Et = function(t, e, i, n, r, o, s) {
            var a = new DUST.Container;
            a.setPivotToCenter();
            var h, l = !1;
            if (o) {
                var u = new d(e);
                u.alpha = null != o ? o : 1,
                a.addChild(u),
                u.scaleXY = s || 1,
                u.onEnd(function() {
                    a.removeSelf()
                }),
                l = !0
            }
            for (var c = 0; c < t; c++) {
                h = new f.Etincelles(r || f.System.H5PNG_PATH + "white.png");
                var p = f.System.degToRad(360 / t * c) + Math.random() * Math.PI * .5;
                h.vecX = Math.cos(p),
                h.vecY = Math.sin(p),
                h.x = 0,
                h.y = 0,
                h.scaleXY = n || 1,
                0 <= e && (h.tint = e),
                h.x += 60 * h.vecX * Math.random(),
                h.y += 60 * h.vecY * Math.random(),
                h.speed = 50 * Math.random() + (i ? 200 * i : 200),
                h.rotation = 2 * Math.random() * Math.PI,
                a.addChild(h),
                1 != l && (l = !0,
                h.onEnd(function() {
                    a.removeSelf()
                }))
            }
            return a
        }
        ,
        d
    }(DUST.Container);
    f.ExplodeH5 = t
}(GAME || (GAME = {})),
function(s) {
    var t = function(o) {
        function t(t, e, i, n) {
            var r = o.call(this) || this;
            return r.flash = new DUST.Sprite(DUST.Texture.fromFrame(s.System.H5PNG_PATH + "white.png")),
            r.flash.width = s.System.game.width,
            r.flash.height = s.System.game.height,
            r.flash.alpha = 0,
            r.addChild(r.flash),
            r.timeIn = r.timeInInit = t,
            r.timeWait = e,
            r.timeOut = r.timeOutInit = i,
            (n || 0 == n) && (r.flash.tint = n),
            r.addUpdatable(),
            r
        }
        return __extends(t, o),
        t.prototype.addUpdatable = function() {
            this.updatable || (s.System.game.addUpdatable(this),
            this.updatable = !0)
        }
        ,
        t.prototype.stopUpdatable = function() {
            this.updatable && (s.System.game.removeUpdatable(this),
            this.updatable = !1)
        }
        ,
        t.prototype.update = function(t) {
            t /= 1e3,
            s.System.log("FlashH5"),
            0 < this.timeIn ? (this.timeIn -= 1 * t,
            this.flash.alpha = Math.min(1, 1 - this.timeIn / this.timeInInit)) : 0 < this.timeWait ? this.timeWait -= 1 * t : 0 < this.timeOut ? (this.timeOut -= 1 * t,
            this.flash.alpha = Math.max(0, this.timeOut / this.timeOutInit)) : (this.stopUpdatable(),
            this.flash.removeSelf(),
            this.removeSelf())
        }
        ,
        t
    }(DUST.Container);
    s.FlashH5 = t
}(GAME || (GAME = {})),
function(n) {
    var t = function(i) {
        function n(t) {
            var e = i.call(this) || this;
            return t || (t = n.id + "_layer",
            n.id += 1),
            e.name = name,
            e.xRate = 1,
            e.yRate = 1,
            e.scaleRate = 1,
            e
        }
        return __extends(n, i),
        n
    }(DUST.Container);
    n.LayerH5 = t;
    var e = function(e) {
        function t() {
            var t = e.call(this) || this;
            return t.layerList = null,
            t.camera = new n.CameraH5,
            t.camera.stopUpdatable(),
            t.addChild(t.camera),
            t.addUpdatable(),
            t
        }
        return __extends(t, e),
        t.prototype.addUpdatable = function() {
            this.updatable || (this.updatable = !0,
            n.System.game.addUpdatable(this))
        }
        ,
        t.prototype.setDisplayZone = function(t) {
            this.camera.display = t
        }
        ,
        t.prototype.stopUpdatable = function() {
            this.updatable && (this.updatable = !1,
            n.System.game.removeUpdatable(this))
        }
        ,
        t.prototype.addLayer = function(t) {
            null == this.layerList && (this.layerList = {}),
            this.layerList[t.name] = t,
            this.addChild(t)
        }
        ,
        t.prototype.destroy = function() {
            this.stopUpdatable(),
            this.removeSelf()
        }
        ,
        t.prototype.update = function(t) {
            if (this.camera.update(t),
            n.System.log("LayoutH5"),
            this.layerList)
                for (var e in this.layerList) {
                    var i = this.layerList[e];
                    i.x = this.camera.container.x * i.xRate,
                    i.y = this.camera.container.y * i.yRate,
                    i.scaleXY = 1 - (1 - this.camera.scaleXY) * i.scaleRate
                }
        }
        ,
        t
    }(DUST.Container);
    n.LayoutH5 = e
}(GAME || (GAME = {})),
function(t) {
    var e = function(r) {
        function t(t, e, i) {
            var n = r.call(this) || this;
            return n.badge = DUST.Sprite.fromFrame(e),
            n.badge.x = -n.badge.width / 2,
            n.badge.y = -n.badge.height / 2,
            n.addChild(n.badge),
            n.text = new DUST.BitmapText("" + t,i || {
                font: "22px fontbig"
            }),
            n.text.x = -n.text.textWidth / 2,
            n.text.y = -n.text.textHeight / 2,
            n.addChild(n.text),
            n
        }
        return __extends(t, r),
        t.prototype.updateText = function(t) {
            this.text.text = t
        }
        ,
        t
    }(DUST.Container);
    t.NumberBadge = e
}(GAME || (GAME = {})),
function(t) {
    var e = function(o) {
        function t(t, e, i, n) {
            var r = o.call(this) || this;
            return r.textureOn = t,
            r.textureOff = e,
            r.objectBar = [],
            r.nbrMax = Math.floor(i),
            r.nbrWidth = Math.floor(n || 1e4),
            r.cont = null,
            r.build(),
            r
        }
        return __extends(t, o),
        t.prototype.build = function(t) {
            t = null != t ? t : this.nbrMax,
            null != this.cont && this.cont.removeSelf(),
            this.cont = new DUST.Container,
            this.addChild(this.cont);
            for (var e = this.textureOn, i = 0; i < this.nbrMax; i++) {
                i == t && (e = this.textureOff);
                var n = new DUST.Sprite(e);
                n.x = i % this.nbrWidth * n.width + 5,
                n.y = Math.floor(i / this.nbrWidth) * n.height + 5,
                this.addChild(n),
                this.objectBar.push(n)
            }
        }
        ,
        t.prototype.refresh = function(t) {
            if (t = Math.floor(t),
            this.nbrMax < t)
                this.nbrMax = t,
                this.build(t);
            else
                for (var e = this.textureOn, i = 0; i < this.nbrMax; i++)
                    i == t && (e = this.textureOff),
                    this.objectBar[i].setTexture(e)
        }
        ,
        t
    }(DUST.Container);
    t.objectBarH5 = e
}(GAME || (GAME = {})),
function(i) {
    var t = function() {
        function t(t, e) {
            this.sys_headerHeight = 128,
            this.sys_headerAlpha = .4,
            this.container = new DUST.Container,
            this.border = new i.Window9PH5,
            this.border.textures = {
                TL: i.System.H5PNG_PATH + "9patchWhite/bar_TL.png",
                T: i.System.H5PNG_PATH + "9patchWhite/bar_T.png",
                TR: i.System.H5PNG_PATH + "9patchWhite/bar_TR.png",
                L: i.System.H5PNG_PATH + "9patchWhite/bar_L.png",
                M: i.System.H5PNG_PATH + "9patchWhite/bar_M.png",
                R: i.System.H5PNG_PATH + "9patchWhite/bar_R.png",
                DL: i.System.H5PNG_PATH + "9patchWhite/bar_DL.png",
                D: i.System.H5PNG_PATH + "9patchWhite/bar_D.png",
                DR: i.System.H5PNG_PATH + "9patchWhite/bar_DR.png"
            },
            this.page = new i.Window9PH5,
            this.page.width = i.System.game.width,
            this.page.height = i.System.game.height,
            e && (this.page.tint = e),
            this.border.width = this.page.width,
            this.border.height = this.page.height,
            this.border.alpha = .8,
            this.container.addChild(this.page),
            t || (this.header = new i.Window9PH5,
            this.header.textures = {
                TL: i.System.H5PNG_PATH + "9patchWhite/degrade_TL.png",
                T: i.System.H5PNG_PATH + "9patchWhite/degrade_T.png",
                TR: i.System.H5PNG_PATH + "9patchWhite/degrade_TR.png",
                L: i.System.H5PNG_PATH + "9patchWhite/degrade_L.png",
                M: i.System.H5PNG_PATH + "9patchWhite/degrade_M.png",
                R: i.System.H5PNG_PATH + "9patchWhite/degrade_R.png",
                DL: i.System.H5PNG_PATH + "9patchWhite/degrade_DL.png",
                D: i.System.H5PNG_PATH + "9patchWhite/degrade_D.png",
                DR: i.System.H5PNG_PATH + "9patchWhite/degrade_DR.png"
            },
            this.header.width = this.page.width,
            this.header.height = this.sys_headerHeight,
            this.header.tint = i.System.rgb(0, 0, 0),
            this.header.alpha = this.sys_headerAlpha,
            this.container.addChild(this.header)),
            this.container.addChild(this.border)
        }
        return t.prototype.destroy = function() {
            this.container.removeSelf(),
            this.page.destroy(),
            this.border.destroy(),
            this.header && this.header.destroy()
        }
        ,
        Object.defineProperty(t.prototype, "y", {
            get: function() {
                return this.container.y
            },
            set: function(t) {
                this.container.y = t
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "x", {
            get: function() {
                return this.container.x
            },
            set: function(t) {
                this.container.x = t
            },
            enumerable: !0,
            configurable: !0
        }),
        t.prototype.addChild = function(t) {
            this.container.addChild(t)
        }
        ,
        Object.defineProperty(t.prototype, "headerHeight", {
            get: function() {
                return this.header ? this.sys_headerHeight : 0
            },
            set: function(t) {
                this.sys_headerHeight = Math.min(this.page.height, t),
                this.header && (this.header.height = this.sys_headerHeight)
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "tint", {
            get: function() {
                return this.page.tint
            },
            set: function(t) {
                this.page.tint = t
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "alpha", {
            get: function() {
                return this.container.alpha
            },
            set: function(t) {
                this.container.alpha = t
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "width", {
            get: function() {
                return this.page.width
            },
            set: function(t) {
                this.page.width = t,
                this.border.width = t,
                this.header && (this.header.width = t)
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "height", {
            get: function() {
                return this.page.height
            },
            set: function(t) {
                this.page.height = t,
                this.border.height = t
            },
            enumerable: !0,
            configurable: !0
        }),
        t.prototype.onClick = function(t, e) {
            this.container.onClick(t, e)
        }
        ,
        t
    }();
    i.PageH5 = t
}(GAME || (GAME = {})),
function(r) {
    var t = function(i) {
        function n() {
            var t = i.call(this) || this;
            if (t.instanData = null,
            t.fct = null,
            t.updatable = !1,
            t.detachListener.add(t.stopUpdatable, t),
            t.listElem = new r.ListElemH5(t),
            null == n.particuleList) {
                n.particuleList = new r.ListH5;
                var e = {
                    update: function(t) {
                        for (var e = n.particuleList.start; null != e; )
                            e.content.update(t),
                            e = e.next
                    }
                };
                DUST.Game.get().addUpdatable(e)
            }
            return t
        }
        return __extends(n, i),
        Object.defineProperty(n.prototype, "data", {
            get: function() {
                return this.instanData
            },
            enumerable: !0,
            configurable: !0
        }),
        n.prototype.removeSelf = function() {
            return this.stopUpdatable(),
            i.prototype.removeSelf.call(this)
        }
        ,
        n.prototype.setData = function(t, e) {
            null == this.instanData && (this.instanData = {}),
            this.instanData[t] = e
        }
        ,
        n.prototype.getData = function(t) {
            return null == this.instanData ? null : this.instanData[t]
        }
        ,
        n.prototype.addUpdatable = function() {
            1 != this.updatable && (this.updatable = !0,
            n.particuleList.addToList(this.listElem))
        }
        ,
        n.prototype.stopUpdatable = function() {
            1 == this.updatable && (this.updatable = !1,
            n.particuleList.removeFromList(this.listElem))
        }
        ,
        n.prototype.setBehavior = function(t) {
            this.fct = t,
            this.addUpdatable()
        }
        ,
        n.prototype.update = function(t) {
            this.fct && this.fct()
        }
        ,
        n.particuleList = null,
        n
    }(DUST.Container);
    r.ParticuleH5 = t
}(GAME || (GAME = {})),
function(i) {
    var t = function(o) {
        function t(t, e, i, n) {
            var r = o.call(this) || this;
            return i = null != i ? i : 190,
            r.box = new DUST.Graphics,
            r.box.beginFill(0, 1),
            r.box.drawRoundedRect(0, 0, i, 64, 10),
            r.box.endFill(),
            r.box.alpha = .6,
            r.addChild(r.box),
            r.score = 0,
            r.retardScore = 0,
            n = null != n ? n : 42,
            r.txt = new DUST.BitmapText("0",{
                font: n + "px fontbig"
            }),
            r.txt.y = (r.box.height - r.txt.textHeight) / 2,
            r.addChild(r.txt),
            1 != t && 1 != e ? (r.sys_type = 2) && (r.txt.x = (r.box.width - r.txt.textWidth) / 2) : t ? (r.sys_type = 1) && (r.txt.x = 10) : (r.sys_type = 3) && (r.txt.x = r.box.width - r.txt.textWidth - 10),
            r
        }
        return __extends(t, o),
        t.prototype.changeFont = function(t, e, i) {
            var n = this.txt;
            this.txt = new DUST.BitmapText(n.text,{
                font: i + "px fontbig"
            }),
            this.txt.y = (this.box.height - this.txt.textHeight) / 2,
            1 != t && 1 != e ? (this.sys_type = 2) && (this.txt.x = (this.box.width - this.txt.textWidth) / 2) : t ? (this.sys_type = 1) && (this.txt.x = 10) : (this.sys_type = 3) && (this.txt.x = this.box.width - this.txt.textWidth - 10),
            n.removeSelf(),
            this.addChild(this.txt)
        }
        ,
        t.prototype.replace = function() {
            this.txt.updateTransform(),
            2 == this.sys_type ? this.txt.x = (this.box.width - this.txt.textWidth) / 2 : 1 == this.sys_type ? this.txt.x = 10 : this.txt.x = this.box.width - this.txt.textWidth - 10
        }
        ,
        t.prototype.update = function(t, e) {
            this.score = t,
            this.retardScore != this.score && (e && (this.retardScore = this.score),
            Math.abs(this.retardScore - this.score) < .5 ? this.retardScore = this.score : this.retardScore = i.System.move(this.score, this.retardScore),
            this.txt.text = "" + Math.round(this.retardScore),
            this.replace())
        }
        ,
        t
    }(DUST.Container);
    i.ScoreBoxH5 = t
}(GAME || (GAME = {})),
function(i) {
    var t = function(r) {
        function t(t, e, i) {
            var n = r.call(this) || this;
            return n.callback = null,
            i = i || "fontbig",
            n.retardScore = 0,
            n.bumpValue = 0,
            n.bumpPower = 0,
            n.score = t,
            n.setPivotToCenter(),
            n.textScore = new DUST.BitmapText("0",{
                font: e + "px " + i
            }),
            n.textScore.x = -n.textScore.textWidth / 2,
            n.textScore.y = -n.textScore.textHeight / 2,
            n.addChild(n.textScore),
            n.addUpdatable(),
            n
        }
        return __extends(t, r),
        t.prototype.onEnd = function(t) {
            this.callback = t
        }
        ,
        t.prototype.destroy = function() {
            this.stopUpdatable(),
            this.textScore.removeSelf(),
            this.removeSelf()
        }
        ,
        t.prototype.addUpdatable = function() {
            1 != this.updatable && (this.updatable = !0,
            i.System.game.addUpdatable(this))
        }
        ,
        t.prototype.stopUpdatable = function() {
            1 == this.updatable && (this.updatable = !1,
            i.System.game.removeUpdatable(this))
        }
        ,
        t.prototype.actualiseTxt = function() {
            this.textScore.text = "" + this.retardScore,
            this.textScore.updateTransform(),
            this.textScore.x = -this.textScore.textWidth / 2
        }
        ,
        t.prototype.bump = function(t) {
            this.bumpPower = Math.abs(100 * t),
            this.addUpdatable()
        }
        ,
        t.prototype.addScore = function(t, e) {
            this.score += t,
            e && 0 != t ? (this.retardScore = this.score,
            this.actualiseTxt()) : this.addUpdatable()
        }
        ,
        t.prototype.setScore = function(t, e) {
            this.score = t,
            e ? (this.retardScore = this.score,
            this.actualiseTxt()) : this.addUpdatable()
        }
        ,
        t.prototype.update = function(t) {
            var e;
            this.retardScore != this.score && (this.retardScore = Math.ceil(i.System.move(this.score, this.retardScore)),
            this.actualiseTxt(),
            e = !0,
            null != this.callback && this.retardScore == this.score && this.callback()),
            0 != this.bumpPower && (this.bumpPower = Math.max(0, this.bumpPower - 500 * t / 1e3),
            this.bumpValue = 0 == this.bumpPower ? 0 : i.System.move(this.bumpPower, this.bumpValue),
            this.scaleXY = 1 + this.bumpValue / 100 * .2,
            e = !0),
            1 != e && this.stopUpdatable()
        }
        ,
        t
    }(DUST.Container);
    i.ScoreBumpH5 = t
}(GAME || (GAME = {})),
function(e) {
    var a, t;
    (t = a = e.SinePropriete || (e.SinePropriete = {}))[t.value = 0] = "value",
    t[t.alpha = 1] = "alpha",
    t[t.x = 2] = "x",
    t[t.y = 3] = "y",
    t[t.scale = 4] = "scale",
    t[t.width = 5] = "width",
    t[t.height = 6] = "height",
    t[t.rotation = 7] = "rotation";
    var i = function() {
        function s() {
            this.sys_max = 1,
            this.sys_min = -1,
            this.initValue = 0,
            this.value = 0,
            this.signe = 1,
            this.speed = 1,
            this.addUpdatable()
        }
        return s.newSine = function(t, e, i, n, r) {
            var o = new s;
            return o.initValue = t,
            o.sys_max = Math.max(i, e),
            o.sys_min = Math.min(i, e),
            n = (o.sys_periode = n) || 1,
            o.speed = Math.abs((i - e) / n),
            r ? o.propriete = r : r = a.value,
            o
        }
        ,
        Object.defineProperty(s.prototype, "periode", {
            get: function() {
                return this.speed / (this.sys_max - this.sys_min)
            },
            set: function(t) {
                this.speed = (this.sys_max - this.sys_min) / t
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(s.prototype, "min", {
            get: function() {
                return this.sys_min
            },
            set: function(t) {
                this.sys_min = t,
                this.periode = this.sys_periode
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(s.prototype, "max", {
            get: function() {
                return this.sys_max
            },
            set: function(t) {
                this.sys_max = t,
                this.periode = this.sys_periode
            },
            enumerable: !0,
            configurable: !0
        }),
        s.prototype.addUpdatable = function() {
            this.updatable || (e.System.game.addUpdatable(this),
            this.updatable = !0)
        }
        ,
        s.prototype.stopUpdatable = function() {
            this.updatable && (e.System.game.removeUpdatable(this),
            this.updatable = !1)
        }
        ,
        s.prototype.update = function(t) {
            t /= 1e3,
            e.System.log("sineH5"),
            this.value = e.System.range(this.sys_min, this.value + this.speed * this.signe * t, this.sys_max),
            this.value == this.sys_min && (this.signe = 1),
            this.value == this.sys_max && (this.signe = -1)
        }
        ,
        s
    }();
    e.SineH5 = i
}(GAME || (GAME = {})),
function(e) {
    var t = function(o) {
        function t(t, e, i, n) {
            var r = o.call(this, t) || this;
            return r.destroyed = !1,
            r.x = r.virtuelX = e || 0,
            r.y = r.virtuelY = i || 0,
            r.scaleEnd = 1,
            r.imageHeight = r.height,
            r.imageWidth = r.width,
            r.waitingTime = n || 0,
            r.scaleXY = 100,
            r.addUpdatable(),
            r
        }
        return __extends(t, o),
        t.prototype.destroy = function(t) {
            t && 0 == this.destroyed ? (this.stopUpdatable(),
            this.destroyed = !0,
            this.removeSelf()) : this.out = !0
        }
        ,
        t.prototype.addUpdatable = function() {
            this.updatable || (this.updatable = !0,
            e.System.game.addUpdatable(this))
        }
        ,
        t.prototype.stopUpdatable = function() {
            this.updatable && (this.updatable = !1,
            e.System.game.removeUpdatable(this))
        }
        ,
        t.prototype.update = function(t) {
            t /= 1e3,
            e.System.log("splashFrameH5"),
            this.alpha = e.System.range(0, this.scaleEnd / this.scaleXY, 1),
            this.waitingTime <= 0 ? (!this.out && this.scaleEnd < this.scaleXY && (this.scaleXY = Math.max(this.scaleEnd, .85 * this.scaleXY),
            this.x = this.virtuelX - this.width / 2,
            this.y = this.virtuelY - this.height / 2,
            this.frameChoc && this.scaleXY == this.scaleEnd && this.setFrame(this.frameChoc)),
            this.out && (this.x = this.virtuelX - this.width / 2,
            this.y = this.virtuelY - this.height / 2,
            0 == this.alpha && this.destroy(!0))) : this.waitingTime = Math.max(0, this.waitingTime - 1 * t)
        }
        ,
        t
    }(DUST.Sprite);
    e.SplashFrameH5 = t
}(GAME || (GAME = {})),
function(e) {
    var t = function(o) {
        function t(t, e, i, n) {
            var r = o.call(this) || this;
            return r.explosive = n,
            r.speed = 0,
            r.callBack = e,
            r.param = i,
            r.delay = t || 0,
            r.scaleXY = 10,
            r.alpha = 0,
            r.addUpdatable(),
            r
        }
        return __extends(t, o),
        t.prototype.onEnd = function(t) {
            this.callBack = t
        }
        ,
        t.prototype.addUpdatable = function() {
            1 != this.updatable && (e.System.game.addUpdatable(this),
            this.updatable = !0)
        }
        ,
        t.prototype.stopUpdatable = function() {
            1 == this.updatable && (e.System.game.removeUpdatable(this),
            this.updatable = !1)
        }
        ,
        t.prototype.destroy = function() {
            return this.stopUpdatable(),
            o.prototype.removeSelf.call(this)
        }
        ,
        t.prototype.moveScale = function(t) {
            return this.explosive ? (this.speed += 60 * t,
            (-3 - this.speed) * t) : (6 * (1 - this.scaleXY) - 3) * t
        }
        ,
        t.prototype.update = function(t) {
            t /= 1e3,
            e.System.log("splashH5"),
            0 != this.delay && (this.delay = Math.max(0, this.delay - t)),
            0 == this.delay && (this.scaleXY += this.moveScale(t),
            this.alpha = e.System.range(0, .4 + .6 / this.scaleXY, 1)),
            this.scaleXY <= 1 && (this.callBack && (this.callBack(this.param) || (this.callBack = null)),
            this.scaleXY = 1,
            this.stopUpdatable())
        }
        ,
        t
    }(DUST.Container);
    e.SplashH5 = t
}(GAME || (GAME = {})),
function(e) {
    var t = function(o) {
        function t(t, e, i, n) {
            var r = o.call(this) || this;
            r.callBack = n,
            r.delay = 0;
            return r.objetText = new DUST.BitmapText(t,{
                font: i + "px " + e
            }),
            r.objetText.x = -r.objetText.textWidth / 2,
            r.objetText.y = -r.objetText.textHeight / 2,
            r.addChild(r.objetText),
            r.scaleXY = 10,
            r.alpha = 0,
            r.addUpdatable(),
            r
        }
        return __extends(t, o),
        Object.defineProperty(t.prototype, "textWidth", {
            get: function() {
                return this.objetText.textWidth
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "textHeight", {
            get: function() {
                return this.objetText.textHeight
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "text", {
            get: function() {
                return this.objetText.text
            },
            set: function(t) {
                this.objetText.text = this.text
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "tint", {
            get: function() {
                return this.objetText.tint
            },
            set: function(t) {
                this.objetText.tint = t
            },
            enumerable: !0,
            configurable: !0
        }),
        t.prototype.addUpdatable = function() {
            1 != this.updatable && (DUST.Game.get().addUpdatable(this),
            this.updatable = !0)
        }
        ,
        t.prototype.stopUpdatable = function() {
            1 == this.updatable && (DUST.Game.get().removeUpdatable(this),
            this.updatable = !1)
        }
        ,
        t.prototype.destroy = function() {
            return this.stopUpdatable(),
            this.objetText.removeSelf(),
            o.prototype.removeSelf.call(this)
        }
        ,
        t.prototype.update = function(t) {
            t /= 1e3,
            e.System.log("splashTxtH5"),
            0 != this.delay && (this.delay = Math.max(0, this.delay - t)),
            0 == this.delay && (this.scaleXY = Math.max(1, this.scaleXY - 20 * t),
            this.alpha = e.System.range(0, .4 + .6 / this.scaleXY, 1)),
            1 == this.scaleXY && (this.callBack && this.callBack(),
            this.stopUpdatable())
        }
        ,
        t
    }(DUST.Container);
    e.SplashTxtH5 = t
}(GAME || (GAME = {})),
function(e) {
    var t = function(r) {
        function t(t, e, i) {
            var n = r.call(this) || this;
            return n.cont = new DUST.Container,
            n.addChild(n.cont),
            n.txt = new DUST.BitmapText(t,i || {
                font: "42px fontbig"
            }),
            n.txt.x = -n.txt.textWidth / 2,
            n.txt.y = -n.txt.textHeight / 2,
            null != e && (n.txt.tint = e),
            n.cont.addChild(n.txt),
            n.cont.scaleXY = .01,
            n.step = 0,
            n.addUpdatable(),
            n
        }
        return __extends(t, r),
        t.prototype.destroy = function() {
            this.stopUpdatable(),
            this.removeSelf()
        }
        ,
        t.prototype.addUpdatable = function() {
            1 != this.updatable && (this.updatable = !0,
            e.System.game.addUpdatable(this))
        }
        ,
        t.prototype.stopUpdatable = function() {
            1 == this.updatable && (this.updatable = !1,
            e.System.game.removeUpdatable(this))
        }
        ,
        t.prototype.update = function(t) {
            var e = t / 1e3;
            this.cont.y -= 50 * Math.min(1, this.cont.scaleXY) * e,
            0 == this.step && this.cont.scaleXY < 1.4 ? this.cont.scaleXY = this.cont.scaleXY + 6 * e : this.step = 1,
            1 == this.step && 1 < this.cont.scaleXY && (this.cont.scaleXY = Math.max(1, this.cont.scaleXY - 6 * e)),
            1 == this.cont.scaleXY && (this.cont.alpha = Math.max(0, this.cont.alpha - .7 * e),
            0 == this.cont.alpha && this.destroy())
        }
        ,
        t
    }(DUST.Container);
    e.TextBumpH5 = t
}(GAME || (GAME = {})),
function(e) {
    var t = function(r) {
        function t(t, e, i) {
            var n = r.call(this) || this;
            return n.speedY = -50,
            n.speedX = 0,
            n.cont = new DUST.Container,
            n.addChild(n.cont),
            i = i || 42,
            n.txt = new DUST.BitmapText(t,{
                font: i + "px fontbig"
            }),
            n.txt.x = -n.txt.textWidth / 2,
            n.txt.y = -n.txt.textHeight / 2,
            n.txt.tint = e,
            n.cont.addChild(n.txt),
            n.cont.scaleXY = .01,
            n.step = 0,
            n.addUpdatable(),
            n
        }
        return __extends(t, r),
        t.prototype.setMoveXY = function(t, e) {
            this.speedX = t,
            this.speedY = e
        }
        ,
        t.prototype.destroy = function() {
            this.stopUpdatable(),
            this.removeSelf()
        }
        ,
        t.prototype.addUpdatable = function() {
            1 != this.updatable && (this.updatable = !0,
            e.System.game.addUpdatable(this))
        }
        ,
        t.prototype.stopUpdatable = function() {
            1 == this.updatable && (this.updatable = !1,
            e.System.game.removeUpdatable(this))
        }
        ,
        t.prototype.update = function(t) {
            var e = t / 1e3;
            this.cont.y += this.speedY * Math.min(1, this.cont.scaleXY) * e,
            this.cont.x += this.speedX * Math.min(1, this.cont.scaleXY) * e,
            0 == this.step && this.cont.scaleXY < 1.4 ? this.cont.scaleXY = this.cont.scaleXY + 6 * e : this.step = 1,
            1 == this.step && 1 < this.cont.scaleXY && (this.cont.scaleXY = Math.max(1, this.cont.scaleXY - 6 * e)),
            1 == this.cont.scaleXY && (this.cont.alpha = Math.max(0, this.cont.alpha - .7 * e),
            0 == this.cont.alpha && this.destroy())
        }
        ,
        t
    }(DUST.Container);
    e.TextDrop = t
}(GAME || (GAME = {})),
function(t) {
    var e = function(s) {
        function t(t, e, i, n, r) {
            var o = s.call(this) || this;
            return o.text = new DUST.BitmapText(t,{
                font: e + "px fontbig"
            }),
            o.image = DUST.Sprite.fromFrame(i),
            null != n && (o.image.scaleXY = n),
            r ? (o.image.x = o.text.textWidth + 10,
            o.image.y = (o.text.textHeight - o.image.height) / 2) : (o.text.x = o.image.width + 10,
            o.text.y = (o.image.height - o.text.textHeight) / 2),
            o.addChild(o.image),
            o.addChild(o.text),
            o
        }
        return __extends(t, s),
        t
    }(DUST.Container);
    t.textImage = e
}(GAME || (GAME = {})),
function(e) {
    var t = function(s) {
        function t(t, e, i) {
            var n = s.call(this) || this;
            n.delay = .01,
            n.sys_delay = 0,
            n.updatable = !1,
            e = null != e ? e : 42,
            n.text = new DUST.BitmapText(t,{
                font: e + "px fontbig",
                align: "center"
            }),
            null != i && (n.text.tint = i),
            n.textHeight = n.text.textHeight,
            n.textWidth = n.text.textWidth,
            n.addChild(n.text),
            n.text.text = "",
            n.tabText = [];
            for (var r = t.length, o = 0; o < r; o++)
                n.tabText.push("" + t.charAt(o));
            return n.addUpdatable(),
            n.detachListener.add(function() {
                return n.stopUpdatable()
            }, n),
            n
        }
        return __extends(t, s),
        t.prototype.addUpdatable = function() {
            1 != this.updatable && (this.updatable = !0,
            e.System.game.addUpdatable(this))
        }
        ,
        t.prototype.stopUpdatable = function() {
            1 == this.updatable && (this.updatable = !1,
            e.System.game.removeUpdatable(this))
        }
        ,
        t.prototype.update = function(t) {
            if (0 == this.sys_delay) {
                var e = this.tabText.shift();
                this.text.text = this.text.text + e,
                0 == this.tabText.length && this.stopUpdatable(),
                this.sys_delay = this.delay
            } else
                this.sys_delay = Math.max(0, this.sys_delay - 1 * t / 1e3)
        }
        ,
        t
    }(DUST.Container);
    e.TextProgressif = t
}(GAME || (GAME = {})),
function(t) {
    var e = function(o) {
        function t(t, e, i, n) {
            void 0 === e && (e = 30),
            void 0 === i && (i = "center"),
            void 0 === n && (n = "fontbig");
            var r = o.call(this) || this;
            return r.btmText = new DUST.BitmapText(t,{
                font: e + "px " + n,
                align: i
            }),
            r.btmShadow = new DUST.BitmapText(t,{
                font: e + "px " + n,
                align: i
            }),
            r.btmShadow.y = .1 * e,
            r.btmShadow.alpha = .7,
            r.btmShadow.tint = 0,
            r.addChild(r.btmShadow),
            r.addChild(r.btmText),
            r
        }
        return __extends(t, o),
        Object.defineProperty(t.prototype, "text", {
            get: function() {
                return this.btmText.text
            },
            set: function(t) {
                this.btmText.text = t,
                this.btmShadow.text = t
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "tint", {
            get: function() {
                return this.btmText.tint
            },
            set: function(t) {
                this.btmText.tint = t
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "textWidth", {
            get: function() {
                return this.btmText.textWidth
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "textHeight", {
            get: function() {
                return this.btmText.textHeight
            },
            enumerable: !0,
            configurable: !0
        }),
        t
    }(DUST.Container);
    t.TextShadowH5 = e
}(GAME || (GAME = {})),
function(g) {
    var t = function(d) {
        function f(t, e, i, n, r) {
            var o, s = d.call(this) || this, a = (s.txt = t).length, h = 0, l = 0;
            s.topCont = new DUST.Container,
            s.speedScale = 1 / (r ? g.System.range(.1, r, 5) : 1);
            var u = s;
            i = i || null,
            s.letters = [];
            for (var c = 0; c < a; c++) {
                var p = null;
                null != i && c == a - 1 ? p = function() {
                    f.SOUND_TEXT_SPLASH && f.SOUND_TEXT_SPLASH(),
                    g.System.waitAndDo(.5 * s.speedScale, function() {
                        return u.blackBox.instantData.step = 1
                    })
                }
                : f.SOUND_TEXT_SPLASH && (p = f.SOUND_TEXT_SPLASH),
                " " == t[c] && (p = null),
                (o = new g.SplashTxtH5("" + t[c],e,n,p)).delay = .2 * s.speedScale * c,
                o.x = h + o.textWidth / 2,
                o.y = l,
                h += (" " == t[c] ? n : o.textWidth) + 2,
                "\n" == t[c] && (h = 0,
                l += o.textHeight + 4),
                s.topCont.x = -h / 2,
                s.topCont.y = 0,
                s.topCont.addChild(o),
                s.letters.push(o)
            }
            return null != i && s.buildBlackBox(i, l + n + 32),
            s.addChild(s.topCont),
            s
        }
        return __extends(f, d),
        f.prototype.buildBlackBox = function(t, e) {
            var i = this;
            this.blackBox = new g.SpriteH5(DUST.Texture.fromFrame(t),"LvlShow_Blackbox"),
            this.blackBox.setPivotToCenter(),
            this.blackBox.width = g.System.game.width,
            this.blackBox.height = e,
            this.blackBox.x = 0,
            this.blackBox.y = 0,
            this.blackBox.instantData.step = 0,
            this.blackBox.alpha = 0;
            var n = this;
            this.blackBox.addUpdatableFunction(function() {
                0 == n.blackBox.instantData.step && (n.blackBox.alpha = Math.min(.8, n.blackBox.alpha + 2 * i.speedScale * g.System.dt)),
                1 == n.blackBox.instantData.step && (n.alpha = Math.max(0, n.alpha - 1.5 * i.speedScale * g.System.dt),
                n.blackBox.height = g.System.move(0, n.blackBox.height),
                0 == n.alpha && (n.blackBox.destroy(),
                n.destroy()))
            }),
            this.addChild(this.blackBox)
        }
        ,
        f.prototype.destroy = function() {
            for (; 0 < this.letters.length; )
                this.letters.shift().destroy()
        }
        ,
        f.SOUND_TEXT_SPLASH = null,
        f
    }(DUST.Container);
    g.TextShowH5 = t
}(GAME || (GAME = {})),
function(t) {
    var e = function(u) {
        function t(t, e, i) {
            var n, r, o, s, a = u.call(this) || this;
            a.texture = DUST.Texture.fromFrame(t),
            a.widthMap = Math.floor(e) / Math.floor(a.texture.width),
            a.heightMap = Math.floor(i) / Math.floor(a.texture.height);
            for (var h = 0; h < a.widthMap; h++)
                for (var l = 0; l < a.heightMap; l++)
                    o = a.texture.width * (h + 1 >= a.widthMap ? a.widthMap - Math.floor(a.widthMap) : 1),
                    s = a.texture.height * (l + 1 >= a.heightMap ? a.heightMap - Math.floor(a.heightMap) : 1),
                    r = new DUST.Rectangle(a.texture._texture._frame.x,a.texture._texture._frame.y,o,s),
                    (n = new DUST.Sprite(new DUST.Texture(a.texture,r))).x = h * Math.floor(a.texture.width),
                    n.y = l * Math.floor(a.texture.height),
                    a.addChild(n);
            return a
        }
        return __extends(t, u),
        t
    }(DUST.Container);
    t.TiledSpriteH5 = e
}(GAME || (GAME = {})),
function(i) {
    var t = function(r) {
        function e(t, e, i) {
            var n = r.call(this) || this;
            return n.updatable = !1,
            n.scaleStart = 1,
            n.scaleEnd = 1,
            n.alphaStart = 1,
            n.alphaEnd = 1,
            n.pause = !1,
            n.cont = null,
            n._onEnd = null,
            n.size = null != e ? e : 42,
            n.color = null != i ? i : null,
            n.time = t,
            n.buildNumber(),
            n.addUpdatable(),
            n.detachListener.add(function() {
                n.stopUpdatable()
            }, n),
            n
        }
        return __extends(e, r),
        e.prototype.buildNumber = function() {
            e.SOUND_DECOMPTE && e.SOUND_DECOMPTE(),
            null != this.cont && this.cont.removeSelf(),
            this.lastSecond = Math.floor(this.time);
            var t = new DUST.BitmapText("" + this.lastSecond,{
                font: this.size + "px fontbig"
            });
            t.x = -t.textWidth / 2,
            t.y = -t.textHeight / 2,
            this.color && (t.tint = this.color),
            this.cont = new DUST.Container,
            this.cont.addChild(t),
            this.addChild(this.cont)
        }
        ,
        e.prototype.setScaleEffect = function(t, e) {
            this.scaleStart = t,
            this.scaleEnd = e
        }
        ,
        e.prototype.setAlphaEffect = function(t, e) {
            this.alphaStart = i.System.range(0, t, 1),
            this.alphaEnd = i.System.range(0, e, 1)
        }
        ,
        e.prototype.setPause = function(t) {
            this.pause = t
        }
        ,
        e.prototype.setClassicEffect = function() {
            this.setScaleEffect(1.2, 1),
            this.setAlphaEffect(1, .3)
        }
        ,
        e.prototype.addUpdatable = function() {
            this.updatable || (i.System.game.addUpdatable(this),
            this.updatable = !0)
        }
        ,
        e.prototype.stopUpdatable = function() {
            this.updatable && (i.System.game.removeUpdatable(this),
            this.updatable = !1)
        }
        ,
        e.prototype.onEnd = function(t, e) {
            this._onEnd = t ? new DUST.ContextualCallback(t,e) : null
        }
        ,
        e.prototype.destroy = function() {
            this._onEnd && this._onEnd.execute(),
            this.stopUpdatable(),
            r.prototype.removeSelf.call(this)
        }
        ,
        e.prototype.updateEffect = function() {
            var t = Math.abs(this.lastSecond - this.time)
              , e = 1 - t * t
              , i = 1 - t;
            this.cont.scaleXY = this.scaleStart + (this.scaleEnd - this.scaleStart) * e,
            this.cont.alpha = this.alphaStart + (this.alphaEnd - this.alphaStart) * i
        }
        ,
        e.prototype.update = function(t) {
            t /= 1e3,
            1 != this.pause && (this.time = Math.max(0, this.time - 1 * t),
            Math.floor(this.time) != this.lastSecond && this.buildNumber(),
            this.time <= 0 && this.destroy(),
            this.updateEffect())
        }
        ,
        e.SOUND_DECOMPTE = null,
        e
    }(DUST.Container);
    i.TimeCount = t
}(GAME || (GAME = {})),
function(e) {
    var t = function(r) {
        function t(t, e, i) {
            var n = r.call(this) || this;
            return n.elemTab = [],
            n.buildTitle(t, e, i),
            n.addUpdatable(),
            n.detachListener.add(function() {
                n.stopUpdatable()
            }, n),
            n
        }
        return __extends(t, r),
        t.prototype.buildTitle = function(t, e, i) {
            var n = t.length;
            e = null != e ? e : 42;
            for (var r = 0, o = 0; o < n; o++) {
                var s = new DUST.Container
                  , a = new DUST.BitmapText(t.charAt(o),{
                    font: e + "px fontbig"
                });
                a.x = -a.textWidth / 2,
                a.y = -a.textHeight / 2,
                s.addChild(a);
                var h = this.getTrueWidth(a, e);
                s.x = r + h / 2,
                s.y = e - a.textHeight + a.textHeight / 2,
                r += h,
                s.scaleXY = .01,
                this.addChild(s);
                var l = {};
                l.cont = s,
                l.step = 0,
                l.delay = .05 * o,
                this.elemTab.push(l)
            }
            this._width = r,
            this._height = e
        }
        ,
        Object.defineProperty(t.prototype, "width", {
            get: function() {
                return this._width
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "height", {
            get: function() {
                return this._height
            },
            enumerable: !0,
            configurable: !0
        }),
        t.prototype.getTrueWidth = function(t, e) {
            var i = t.text;
            return "i" == i || "l" == i ? .3 * e : " " == i ? .5 * e : t.width
        }
        ,
        t.prototype.addUpdatable = function() {
            this.updatable || (this.updatable = !0,
            e.System.game.addUpdatable(this))
        }
        ,
        t.prototype.stopUpdatable = function() {
            this.updatable && (this.updatable = !1,
            e.System.game.removeUpdatable(this))
        }
        ,
        t.prototype.update = function(t) {
            for (var e = this.elemTab.length, i = !1, n = t / 1e3, r = 0; r < e; r++) {
                var o = this.elemTab[r]
                  , s = o.cont
                  , a = o.step
                  , h = o.delay;
                h <= 0 ? 0 == a ? (s.scaleXY = Math.min(1.3, 1.2 * s.scaleXY),
                1.3 == s.scaleXY && (o.step = 1)) : 1 == a && (s.scaleXY = Math.max(1, .95 * s.scaleXY),
                1 == s.scaleXY && (o.step = 2)) : o.delay = h - 1 * n,
                2 != o.step && (i = !0)
            }
            1 != i && this.stopUpdatable()
        }
        ,
        t
    }(DUST.Container);
    e.TitleBump = t
}(GAME || (GAME = {})),
function(s) {
    var t = function(r) {
        function o(t) {
            var e = r.call(this) || this;
            if (e.sys_onTouched = null,
            (e.param = null) != t) {
                var i = new DUST.Sprite(DUST.Texture.fromFrame(t));
                e.addChild(i)
            }
            e.uid = "" + o.UID,
            o.UID += 1;
            var n = e;
            return s.System.addUpdatableFunct(function() {
                null != n.sys_onTouched && s.System.touch.onTouch && s.System.touch.isTouchingObject(e) && (n.start = !0),
                s.System.touch.onTouchEnd && (n.start && s.System.touch.isTouchingObject(e) && n.sys_onTouched(n.param),
                n.start = !1)
            }, n.uid),
            e
        }
        return __extends(o, r),
        o.prototype.onDetach = function() {
            r.prototype.onDetach.call(this),
            s.System.removeUpdatableFunct(this.uid)
        }
        ,
        o.prototype.destroy = function() {
            return s.System.removeUpdatableFunct(this.uid),
            r.prototype.removeSelf.call(this)
        }
        ,
        o.prototype.onTouched = function(t, e) {
            this.sys_onTouched = t,
            this.param = e
        }
        ,
        o.UID = 0,
        o
    }(DUST.Container);
    s.TouchContH5 = t
}(GAME || (GAME = {})),
function(o) {
    var s = function(t, e) {
        this.width = t,
        this.height = e
    };
    o.size = s;
    var t = function(r) {
        function t(t) {
            var e = r.call(this) || this;
            e.sys_textures = {
                TL: o.System.H5PNG_PATH + "9patchWhite/9P_TL.png",
                T: o.System.H5PNG_PATH + "9patchWhite/9P_T.png",
                TR: o.System.H5PNG_PATH + "9patchWhite/9P_TR.png",
                L: o.System.H5PNG_PATH + "9patchWhite/9P_L.png",
                M: o.System.H5PNG_PATH + "9patchWhite/9P_M.png",
                R: o.System.H5PNG_PATH + "9patchWhite/9P_R.png",
                DL: o.System.H5PNG_PATH + "9patchWhite/9P_DL.png",
                D: o.System.H5PNG_PATH + "9patchWhite/9P_D.png",
                DR: o.System.H5PNG_PATH + "9patchWhite/9P_DR.png"
            },
            e.frames = {},
            e.size = {};
            var i;
            t && (e.sys_textures = t);
            for (var n = 0; n < 9; n++)
                i = o.System.tokenAt("TL,T,TR,L,M,R,DL,D,DR", ",", n),
                e.frames[i] = new DUST.Sprite(DUST.Texture.fromFrame(e.sys_textures[i])),
                e.size[i] = new s(e.frames[i].width,e.frames[i].height),
                e.addChild(e.frames[i]);
            return e.sys_width = e.frames.TL.width + e.frames.T.width + e.frames.TR.width,
            e.sys_height = e.frames.TL.height + e.frames.L.height + e.frames.DL.height,
            e.imageWidth = e.sys_width,
            e.imageHeight = e.sys_height,
            e.refresh(),
            e
        }
        return __extends(t, r),
        t.prototype.destroy = function() {
            for (var t, e = 0; e < 9; e++)
                t = o.System.tokenAt("TL,T,TR,L,M,R,DL,D,DR", ",", e),
                this.frames[t].removeSelf();
            this.removeSelf()
        }
        ,
        t.prototype.refresh = function() {
            this.frames.TL.width = this.sys_width >= this.imageWidth ? this.size.TL.width : this.sys_width / 2,
            this.frames.TR.width = this.sys_width >= this.imageWidth ? this.size.TR.width : this.sys_width / 2,
            this.frames.T.width = Math.max(this.sys_width - this.size.TL.width - this.size.TR.width),
            this.frames.T.x = this.frames.TL.width,
            this.frames.TR.x = this.frames.T.x + this.frames.T.width,
            this.frames.L.width = this.frames.TL.width,
            this.frames.R.width = this.frames.TR.width,
            this.frames.M.width = this.frames.T.width,
            this.frames.M.x = this.frames.T.x,
            this.frames.R.x = this.frames.TR.x,
            this.frames.DL.width = this.frames.TL.width,
            this.frames.DR.width = this.frames.TR.width,
            this.frames.D.width = this.frames.T.width,
            this.frames.D.x = this.frames.T.x,
            this.frames.DR.x = this.frames.TR.x,
            this.frames.TL.height = this.sys_height >= this.imageHeight ? this.size.TL.height : this.sys_height / 2,
            this.frames.DL.height = this.sys_height >= this.imageHeight ? this.size.DL.height : this.sys_height / 2,
            this.frames.L.height = this.sys_height - this.size.TL.height - this.size.DL.height,
            this.frames.L.y = this.frames.TL.height,
            this.frames.DL.y = this.frames.L.y + this.frames.L.height,
            this.frames.T.height = this.frames.TL.height,
            this.frames.D.height = this.frames.DL.height,
            this.frames.M.height = this.frames.L.height,
            this.frames.M.y = this.frames.L.y,
            this.frames.D.y = this.frames.DL.y,
            this.frames.TR.height = this.frames.TL.height,
            this.frames.DR.height = this.frames.DL.height,
            this.frames.R.height = this.frames.L.height,
            this.frames.R.y = this.frames.L.y,
            this.frames.DR.y = this.frames.DL.y
        }
        ,
        Object.defineProperty(t.prototype, "textures", {
            get: function() {
                return this.sys_textures
            },
            set: function(t) {
                var e;
                this.sys_textures = t;
                for (var i = 0; i < 9; i++)
                    e = o.System.tokenAt("TL,T,TR,L,M,R,DL,D,DR", ",", i),
                    this.frames[e].setFrame(this.sys_textures[e])
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "width", {
            get: function() {
                return this.sys_width
            },
            set: function(t) {
                this.sys_width = t,
                this.refresh()
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "height", {
            get: function() {
                return this.sys_height
            },
            set: function(t) {
                this.sys_height = t,
                this.refresh()
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "tint", {
            get: function() {
                return this.sys_tint
            },
            set: function(t) {
                this.sys_tint = t;
                for (var e, i = 0; i < 9; i++)
                    e = o.System.tokenAt("TL,T,TR,L,M,R,DL,D,DR", ",", i),
                    this.frames[e].tint = t
            },
            enumerable: !0,
            configurable: !0
        }),
        t
    }(DUST.Container);
    o.Window9PH5 = t
}(GAME || (GAME = {})),
function(t) {
    var e = function() {
        function t() {}
        return t.WHITE = "white",
        t.BLACK = "black",
        t.RED = "red",
        t.GREEN = "green",
        t.BLUE = "blue",
        t.YELLOW = "yellow",
        t.BROWN = "brown",
        t.PURPLE = "purple",
        t.PINK = "pink",
        t.AQUA = "aqua",
        t.ORANGE = "orange",
        t
    }();
    t.ColorH5 = e
}(GAME || (GAME = {})),
function(t) {
    var e = function(t) {
        this.prev = null,
        this.next = null,
        this.content = t
    };
    t.ListElemH5 = e;
    var i = function() {
        function t() {
            this.len = 0,
            this.start = null,
            this.lastListAdded = null
        }
        return t.prototype.addToList = function(t) {
            null != t && (null == this.start ? this.start = t : (this.lastListAdded.next = t).prev = this.lastListAdded,
            this.lastListAdded = t,
            this.len += 1)
        }
        ,
        t.prototype.removeFromList = function(t) {
            if (null != t)
                if (t === this.start)
                    this.len -= 1,
                    this.start = this.start.next,
                    this.start && (this.start.prev = null),
                    this.lastListAdded === t && (this.lastListAdded = null);
                else {
                    var e = t.prev
                      , i = t.next;
                    e && (e.next = i),
                    i && (i.prev = e),
                    this.lastListAdded === t && (this.lastListAdded = e),
                    (e || i) && (this.len -= 1)
                }
        }
        ,
        t.prototype.removeFromListWithContent = function(t) {
            if (t === this.start.content)
                this.len -= 1,
                this.start = this.start.next,
                this.start && (this.start.prev = null),
                this.lastListAdded.content === t && (this.lastListAdded = null);
            else {
                for (var e = this.start; null != e && e.content != t; )
                    e = e.next;
                null != e && (e.prev.next = e.next,
                e.next && (e.next.prev = e.prev),
                this.lastListAdded.content == t && (this.lastListAdded = e.prev),
                this.len -= 1)
            }
        }
        ,
        t
    }();
    t.ListH5 = i
}(GAME || (GAME = {})),
function(r) {
    var t = function() {
        function t(t, e) {
            var i, n;
            i = e.x - t.x,
            n = e.y - t.y,
            this.a = -n,
            this.b = i,
            this.c = n * t.x - i * t.y,
            this.pointA = new DUST.Point(t.x,t.y),
            this.pointB = new DUST.Point(e.x,e.y),
            this.norme = r.System.distance(t.x, t.y, e.x, e.y)
        }
        return t.prototype.getYFromX = function(t) {
            return -(this.a * t + this.c) / this.b
        }
        ,
        t
    }();
    r.XLine = t
}(GAME || (GAME = {})),
function(t) {
    var e = function() {
        this.vecX = 0,
        this.vecY = 0,
        this.x = 0,
        this.y = 0
    };
    (GAME || (GAME = {})).XObject = e
}(),
function(n) {
    var t = function(o) {
        function t(t) {
            var e = o.call(this) || this;
            e.endCallback = null,
            e.buildLayout(),
            e.backBar = DUST.Sprite.fromFrame(t.frameBarEmpty),
            e.layBack.addChild(e.backBar),
            e.full_texture = DUST.Texture.fromFrame(t.frameBarComplete),
            e.fullBar = new DUST.Sprite(e.full_texture),
            e.fullBar.x = (e.backBar.width - e.fullBar.width) / 2,
            e.fullBar.y = (e.backBar.height - e.fullBar.height) / 2,
            e.layBack.addChild(e.fullBar),
            e.light = null,
            (e.lightFrame = null) != t.Lightframe && (e.lightFrame = t.Lightframe,
            e.light = DUST.Sprite.fromFrame(t.Lightframe),
            e.light.width = e.fullBar.width,
            e.light.height = e.fullBar.height,
            e.light.x = e.fullBar.x,
            e.light.y = e.fullBar.y,
            e.light.alpha = 0,
            e.layBack.addChild(e.light)),
            e.full_width = e.fullBar.width,
            e.fullCompteur = t.fullCompteur,
            e.currentProgress = e.fullCompteur,
            e.rewardSprite = [],
            e.rewardMarker = t.rewardsMarker;
            for (var i = 0; i < e.rewardMarker.length; i++) {
                var n = DUST.Sprite.fromFrame(t.framesReward[i])
                  , r = e.rewardMarker[i] / e.fullCompteur;
                n.setPivotToCenter(),
                n.y = e.fullBar.y + e.fullBar.height / 2,
                n.x = e.fullBar.x + e.fullBar.width * r,
                e.layTop.addChild(n),
                e.rewardSprite.push(n)
            }
            return e
        }
        return __extends(t, o),
        t.prototype.buildLayout = function() {
            this.layBack = new DUST.Container,
            this.layTop = new DUST.Container,
            this.addChild(this.layBack),
            this.addChild(this.layTop)
        }
        ,
        t.prototype.addUpdatable = function() {
            1 != this.updatable && (this.updatable = !0,
            DUST.Game.get().addUpdatable(this))
        }
        ,
        t.prototype.stopUpdatable = function() {
            1 == this.updatable && (this.updatable = !1,
            DUST.Game.get().removeUpdatable(this))
        }
        ,
        t.prototype.removeSelf = function() {
            return this.stopUpdatable(),
            o.prototype.removeSelf.call(this)
        }
        ,
        t.prototype.destroy = function() {
            this.stopUpdatable(),
            this.removeSelf()
        }
        ,
        t.prototype.startTimerMode = function(t, e) {
            this.addUpdatable(),
            t && (this.endCallback = new DUST.ContextualCallback(t,e))
        }
        ,
        t.prototype.onEnd = function(t, e) {
            this.endCallback = new DUST.ContextualCallback(t,e)
        }
        ,
        t.prototype.stopTimerMode = function() {
            this.stopUpdatable()
        }
        ,
        t.prototype.setPause = function(t) {
            this.pauseON = t
        }
        ,
        t.prototype.actualise = function() {
            var t = Math.max(0, this.currentProgress / this.fullCompteur)
              , e = new DUST.Rectangle(this.full_texture._texture._frame.x,this.full_texture._texture._frame.y,this.full_width * t,this.fullBar.height);
            this.fullBar.setTexture(new DUST.Texture(this.full_texture,e)),
            null != this.light && (this.light.width = Math.max(0, e.width),
            this.light.height = e.height,
            this.light.x = this.fullBar.x,
            this.light.y = this.fullBar.y)
        }
        ,
        t.prototype.replaceReward = function() {
            for (var t = 0; t < this.rewardMarker.length; t++) {
                var e = this.rewardSprite[t]
                  , i = this.rewardMarker[t] / this.fullCompteur;
                e.x = this.fullBar.x + this.full_width * i
            }
        }
        ,
        t.prototype.addTime = function(t, e, i) {
            e ? (this.currentProgress = Math.max(0, this.currentProgress + t),
            this.fullCompteur = Math.max(this.fullCompteur, this.currentProgress)) : this.currentProgress = Math.max(0, Math.min(this.fullCompteur, this.currentProgress + t)),
            this.actualise(),
            this.replaceReward(),
            i && this.effect(0 < t ? 65280 : 16711680)
        }
        ,
        t.prototype.setLightFrame = function(t) {
            this.lightFrame = t
        }
        ,
        t.prototype.effect = function(t) {
            if (null != this.lightFrame) {
                var e = Math.max(0, this.currentProgress / this.fullCompteur)
                  , i = new n.SpriteH5(DUST.Texture.fromFrame(this.lightFrame));
                i.width = this.full_width * e,
                i.height = this.fullBar.height,
                i.x = this.fullBar.x,
                i.y = this.fullBar.y,
                i.alpha = 0,
                i.tint = t,
                i.instantData.step = 0,
                i.addUpdatableFunction(function() {
                    0 == i.instantData.step ? (i.alpha = Math.min(1, i.alpha + .064),
                    1 == i.alpha && (i.instantData.step = 1)) : (i.alpha = Math.max(0, i.alpha - .016),
                    0 == i.alpha && i.destroy())
                }),
                this.layBack.addChild(i)
            }
        }
        ,
        t.prototype.getCurrentRewardLevel = function() {
            for (var t = this.rewardMarker.length; 0 <= t - 1 && this.rewardMarker[t - 1] > this.currentProgress; )
                t--;
            return t
        }
        ,
        t.prototype.setCurrentProgress = function(t) {
            this.currentProgress = Math.max(0, t),
            this.actualise()
        }
        ,
        t.prototype.getTimeLeft = function() {
            return this.currentProgress
        }
        ,
        t.prototype.update = function(t) {
            if (n.System.log("RewardBar"),
            1 != this.pauseON) {
                var e = this.rewardMarker.length;
                0 != this.currentProgress && (this.setCurrentProgress(this.currentProgress - 1 * t / 1e3),
                0 == this.currentProgress && null != this.endCallback && this.endCallback.execute())
            }
            for (var i = 0; i < e; i++)
                this.rewardSprite[i].alpha = this.currentProgress >= this.rewardMarker[i] ? 1 : Math.max(0, this.rewardSprite[i].alpha - 4 * t / 1e3);
            null != this.light && (this.light.alpha = Math.max(0, 2 * n.System.fastSineValue - 1))
        }
        ,
        t
    }(DUST.Container);
    n.RewardBar = t
}(GAME || (GAME = {})),
function(o) {
    var t = function(n) {
        function r(t) {
            var e = n.call(this) || this;
            e.area = t || e.getArea(),
            e.init(),
            e.middle = new DUST.Point(.5 * e.area.width,.5 * e.area.height),
            e.buildLayout(),
            e.addUpdatable();
            var i = e;
            return e.detachListener.add(function() {
                return i.stopUpdatable()
            }),
            e
        }
        return __extends(r, n),
        r.prototype.setWheelBehavior = function() {
            if (this.wheel) {
                var e = this
                  , t = function(t) {
                    e.vecX += 20 * t
                };
                this.mouse.mouseWheelHandlers.add(t),
                this.detachListener.add(function() {
                    e.mouse.mouseWheelHandlers.remove(t)
                })
            }
        }
        ,
        r.prototype.disableWheel = function() {
            this.wheel = !1
        }
        ,
        r.prototype.getBounds = function() {
            return this.area
        }
        ,
        r.prototype.setDeccalageY = function(t) {
            this.minY = t
        }
        ,
        r.prototype.buildArrow = function() {
            var t = .5 * (this.area.width - .85 * this.currentJacket.getArea().width)
              , e = this.getArrowTexture()
              , i = new DUST.Sprite(e);
            i.setPivotToCenter(),
            i.rotation = Math.PI,
            i.x = .5 * t,
            i.y = .5 * this.area.height,
            i.alpha = .7;
            var n = new DUST.Sprite(e);
            n.setPivotToCenter(),
            n.x = this.area.width - .5 * t,
            n.y = .5 * this.area.height,
            n.alpha = .7,
            this.layerGUI.addChild(i),
            this.layerGUI.addChild(n)
        }
        ,
        r.prototype.getArrowTexture = function() {
            if (null == r.DEFAULT_ARROW_TEXTURE) {
                var t = new DUST.Graphics;
                t.beginFill(16777215, 1),
                t.drawPolygon([new DUST.Point(0,0), new DUST.Point(80,50), new DUST.Point(0,100)]),
                t.endFill(),
                r.DEFAULT_ARROW_TEXTURE = t.generateTexture(DUST.Game.get().renderer)
            }
            return r.DEFAULT_ARROW_TEXTURE
        }
        ,
        r.prototype.getArea = function() {
            return new DUST.Rectangle(0,0,934,DUST.Game.get().height)
        }
        ,
        r.prototype.init = function() {
            this.wheel = !0,
            this.cursorScale = 1,
            this.mapEnable = !0,
            this.autoPlayDelay = null,
            this.controlEnable = !0,
            this.instantMoveTo = 0,
            this.speedMove = null,
            this.outCallBack = null,
            this.selectedTimeDelay = .5,
            this.onSelectedFired = !1,
            this.selectedDuration = 0,
            this.jacketVisibleNbr = 5,
            this.background = null,
            this.lastSelectedJakcket = null,
            this.modeInfinit = null,
            this.moveTo = null,
            this.mapIndicator = null,
            this.moveX = 0,
            this.vecX = 0,
            this.tmpVecX = 0,
            this.tickcount = 0,
            this.cursor = null,
            this.decalageX = 0,
            this.touchC = null,
            this.started = !1,
            this.mouse = DUST.Game.get().inputManager.mouse,
            this.spacingX = 45,
            this.touchO = null,
            this.initedNewjacket = null,
            this.firstJacket = null,
            this.lastBuildedJacket = null,
            this.currentJacket = null,
            this.jacketTab = null,
            this.minY = .03 * this.area.height
        }
        ,
        r.prototype.getBackground = function() {
            return this.background
        }
        ,
        r.prototype.navigatorPointEnable = function(t) {
            (this.mapEnable = t) ? null == this.mapIndicator && this.started && this.buildIndicator() : null != this.mapIndicator && (this.mapIndicator.removeSelf(),
            this.mapIndicator = null)
        }
        ,
        r.prototype.addJacket = function(t, e) {
            var i = !1;
            return e && t._setIdString(e),
            null == this.jacketTab && (this.jacketTab = [],
            i = !0),
            this.addJacketCont(t, i),
            this.jacketTab.length - 1
        }
        ,
        r.prototype.addJacketFromContainer = function(t, e) {
            var i = new o.SelectorJacketCmp;
            i.addChild(t),
            this.addJacket(i, e)
        }
        ,
        r.prototype.addJacketCont = function(t, e) {
            var i = this.jacketTab.length;
            if (t._setId(i),
            null == t.getArea()) {
                var n = new DUST.Rectangle(0,0,t.width,t.height);
                t.setArea(n)
            }
            var r = .5 * (this.area.height - t.getArea().height) + (1 == this.elemMax ? this.minY : 0);
            t.y = r,
            t.visible = !1,
            e ? (this.currentJacket = t,
            this.lastSelectedJakcket = t,
            this.firstJacket = t) : ((this.lastBuildedJacket.nextJacket = t).backJacket = this.lastBuildedJacket,
            2 < i && ((this.firstJacket.backJacket = t).nextJacket = this.firstJacket)),
            this.layerJacket.addChild(t),
            this.jacketTab.push(t),
            this.lastBuildedJacket = t,
            null == this.background && this.buildBackground()
        }
        ,
        r.prototype.buildLayout = function() {
            this.layerBackground = new DUST.Container,
            this.layerJacket = new DUST.Container,
            this.layerGUI = new DUST.Container,
            this.addChild(this.layerBackground),
            this.addChild(this.layerJacket),
            this.addChild(this.layerGUI),
            this.layerJacket.alpha = 0,
            this.buildMask()
        }
        ,
        r.prototype.buildMask = function() {
            for (var t = .1 * this.area.width, e = t / 5, i = new DUST.Graphics, n = 0; n < 5; n++) {
                var r = (n + 1) / 5;
                i.beginFill(Math.floor(16777215 * r), r),
                i.drawRect(n * e, 0, e, this.area.height)
            }
            i.beginFill(16777215, 1),
            i.drawRect(t, 0, this.area.width - 2 * t, this.area.height);
            for (n = 0; n < 5; n++) {
                r = 1 - (n + 1) / 5;
                i.beginFill(Math.floor(16777215 * r), r),
                i.drawRect(this.area.width - t + n * e, 0, e, this.area.height)
            }
            i.endFill(),
            this.layerJacket.mask = i,
            this.layerJacket.addChild(i)
        }
        ,
        r.prototype.addUpdatable = function() {
            1 != this.updatable && (this.updatable = !0,
            DUST.Game.get().addUpdatable(this))
        }
        ,
        r.prototype.stopUpdatable = function() {
            1 == this.updatable && (this.updatable = !1,
            DUST.Game.get().removeUpdatable(this))
        }
        ,
        r.getCursorTexture = function() {
            if (null == r.DEFAULT_CURSOR_TEXTURE) {
                var t = new DUST.Graphics;
                t.beginFill(0, .85),
                t.drawPolygon([new DUST.Point(0,0), new DUST.Point(80,0), new DUST.Point(40,60)]),
                t.endFill(),
                t.beginFill(16777215, 1),
                t.drawPolygon([new DUST.Point(5,2), new DUST.Point(75,2), new DUST.Point(40,55)]),
                t.endFill(),
                t.beginFill(0, .2),
                t.drawPolygon([new DUST.Point(40,0), new DUST.Point(80,0), new DUST.Point(40,60)]),
                t.endFill(),
                r.DEFAULT_CURSOR_TEXTURE = t.generateTexture(DUST.Game.get().renderer)
            }
            return r.DEFAULT_CURSOR_TEXTURE
        }
        ,
        r.prototype.buildCursor = function() {
            if (null == this.cursor) {
                var t = r.getCursorTexture()
                  , e = new DUST.Container
                  , i = new DUST.Sprite(t);
                i.x = .5 * -i.width,
                i.y = .5 * -i.height,
                e.addChild(i),
                this.cursor = e,
                this.layerJacket.addChild(this.cursor),
                this.cursor.scaleXY = this.cursorScale
            }
        }
        ,
        r.prototype.setCursorScale = function(t) {
            null != this.cursor && (this.cursor.scaleXY = t),
            this.cursorScale = t
        }
        ,
        r.prototype.setBackgroundImage = function(t) {
            null != this.cursor && this.cursor.removeSelf(),
            this.background = t,
            this.background.y = this.middle.y - .5 * this.background.height + this.minY,
            this.layerBackground.addChild(this.background)
        }
        ,
        r.prototype.setCursorImage = function(t) {
            null != this.cursor && this.cursor.removeSelf(),
            this.cursor = t,
            this.layerGUI.addChild(this.cursor)
        }
        ,
        r.prototype.buildIndicator = function() {
            this.mapIndicator = new o.SelectorJacketMap(this.elemMax),
            this.mapIndicator.width > this.area.width && (this.mapIndicator.scaleXY = (this.area.width - 60) / this.mapIndicator.width),
            this.mapIndicator.x = this.middle.x;
            var t = this.currentJacket ? this.middle.y + .5 * this.currentJacket.getArea().height + this.minY : 0;
            this.mapIndicator.y = t + .5 * (this.area.height - t) + this.mapIndicator.height,
            this.layerGUI.addChild(this.mapIndicator)
        }
        ,
        r.prototype.setCurrentWithId = function(t) {
            for (var e = 0; e < this.elemMax; e++) {
                var i = this.jacketTab[e];
                if (i._getIdString() == t) {
                    this.moveToJacket(i._getId());
                    break
                }
            }
        }
        ,
        r.prototype.setCurrent = function(t) {
            this.instantMoveTo = t
        }
        ,
        r.prototype.moveToJacket = function(t) {
            null == this.jacketTab ? console.error("Can't init first jacket selected, one jacket minimum needed") : this.moveTo = Math.min(t, this.jacketTab.length - 1)
        }
        ,
        r.prototype.isAvailableForInfinit = function() {
            return this.elemMax > this.jacketVisibleNbr
        }
        ,
        r.prototype.start = function() {
            this.started = !0;
            var t = this.jacketTab ? this.jacketTab.length : 0;
            if (null != this.instantMoveTo && 0 != t) {
                var e = this.jacketTab[Math.max(0, Math.min(this.instantMoveTo, t - 1))];
                e && (this.currentJacket = e)
            }
            this.jacketVisibleNbr = 0 == t ? 0 : Math.ceil(this.area.width / (this.currentJacket.getArea().width + this.spacingX)) + 1,
            this.elemMax = t,
            null == this.modeInfinit && (this.modeInfinit = this.isAvailableForInfinit()),
            this.currentJacket && (this.buildCursor(),
            this.buildNav(),
            this.mapEnable && this.buildIndicator(),
            null == this.background && this.buildBackground()),
            this.setWheelBehavior()
        }
        ,
        r.prototype.buildBackground = function() {
            if (null == r.DEFAULT_BACKGROUND_TEXTURE) {
                var t = this.currentJacket ? this.getBackgroundHeight() : .5 * this.area.height
                  , e = new DUST.Graphics;
                e.beginFill(0, .7),
                e.drawRect(0, 0, this.area.width, t),
                e.endFill(),
                e.beginFill(0, 1),
                e.drawRect(0, 0, this.area.width, 10),
                e.endFill(),
                e.beginFill(0, 1),
                e.drawRect(0, t - 10, this.area.width, 10),
                e.endFill(),
                r.DEFAULT_BACKGROUND_TEXTURE = e.generateTexture(DUST.Game.get().renderer)
            }
            this.background = DUST.Sprite.fromTexture(r.DEFAULT_BACKGROUND_TEXTURE),
            this.background.y = this.middle.y - .5 * this.background.height + this.minY,
            this.layerBackground.addChild(this.background)
        }
        ,
        r.prototype.buildNav = function() {
            if (this.jacketTab && 1 < this.elemMax) {
                var t, e = .5 * (this.area.width - .85 * this.currentJacket.getArea().width);
                this.backButton = new DUST.Container,
                (t = new DUST.Graphics).beginFill(16777215, 1),
                t.drawRect(0, 0, e, this.area.height),
                t.endFill(),
                this.backButton.addChild(t),
                this.backButton.alpha = 0,
                this.addChild(this.backButton),
                this.backButton.onClick(this.back, this),
                this.backButton.interactive = this.controlEnable,
                this.nextButton = new DUST.Container,
                (t = new DUST.Graphics).beginFill(16777215, 1),
                t.drawRect(0, 0, e, this.area.height),
                t.endFill(),
                this.nextButton.addChild(t),
                this.nextButton.alpha = 0,
                this.nextButton.x = this.area.width - e,
                this.addChild(this.nextButton),
                this.nextButton.onClick(this.next, this),
                this.nextButton.interactive = this.controlEnable,
                this.buildArrow()
            }
        }
        ,
        r.prototype.next = function() {
            null == this.moveTo && o.System.touch.duration < .5 && (this.modeInfinit || this.currentJacket._getId() < this.elemMax - 1) && (this.vecX = 0,
            this.tmpVecX = 0,
            this.moveX = -50)
        }
        ,
        r.prototype.back = function() {
            null == this.moveTo && o.System.touch.duration < .5 && (this.modeInfinit || 0 < this.currentJacket._getId()) && (this.vecX = 0,
            this.tmpVecX = 0,
            this.moveX = 50)
        }
        ,
        r.prototype.initNewJacket = function() {
            this.mapIndicator && this.mapIndicator.setCurent(this.currentJacket._getId());
            for (var t = this.jacketVisibleNbr, e = 0; e < t; e++) {
                var i = this.lastSelectedJakcket._getId() - Math.floor(t / 2) + e;
                (r = this.jacketTab[this.modeInfinit ? this.getLinkedID(i) : i]) && (r.visible = !1)
            }
            var n = this.currentJacket.getArea().width + this.spacingX;
            for (e = 0; e < this.jacketVisibleNbr; e++) {
                var r;
                i = this.currentJacket._getId() - Math.floor(this.jacketVisibleNbr / 2) + e;
                if (r = this.jacketTab[this.modeInfinit ? this.getLinkedID(i) : i]) {
                    r.visible = !0;
                    var o = i - this.currentJacket._getId();
                    r.fakeX = this.currentJacket.fakeX + n * o,
                    r.x = this.currentJacket.x + n * o
                }
            }
            this.onSelectedFired && this.lastSelectedJakcket._fireUnselected(),
            this.lastSelectedJakcket = this.currentJacket,
            this.selectedDuration = 0,
            this.onSelectedFired = !1
        }
        ,
        r.prototype.getLocalPoint = function(t, e) {
            return o.System.getTransformedPoint(new DUST.Point(t,e), this, DUST.Game.get().layers.root)
        }
        ,
        r.prototype.ajustPos = function(t, e) {
            var i = t.fakeX - t.x
              , n = 15 * i * e * .001;
            t.x = Math.abs(n) > Math.abs(i) ? t.fakeX : t.x + n
        }
        ,
        r.prototype.instantReplace = function() {
            var t = .5 * (this.area.height - this.currentJacket.getArea().height) + (1 == this.elemMax ? this.minY : 0)
              , e = this.currentJacket.getArea().width;
            this.currentJacket.fakeX = this.middle.x - .5 * e,
            this.currentJacket.x = this.currentJacket.fakeX,
            this.currentJacket.y = t;
            for (var i = 0; i < this.jacketVisibleNbr; i++) {
                var n = this.currentJacket._getId() - Math.floor(this.jacketVisibleNbr / 2) + i;
                if (n != this.currentJacket._getId()) {
                    var r = this.jacketTab[this.modeInfinit ? this.getLinkedID(n) : n];
                    if (r) {
                        var o = n - this.currentJacket._getId();
                        r.fakeX = this.currentJacket.fakeX + (e + this.spacingX) * o,
                        r.x = this.currentJacket.x + (e + this.spacingX) * o,
                        r.y = t + this.minY
                    }
                }
            }
        }
        ,
        r.prototype.moveCurrentJacket = function(t) {
            var e = this.decalageX;
            this.touchC = this.getLocalPoint(this.mouse.position.x, this.mouse.position.y),
            this.touchO && (e += this.touchC.x - this.touchO.x);
            var i = .001 * t
              , n = .5 * (this.area.height - this.currentJacket.getArea().height) + (1 == this.elemMax ? this.minY : 0)
              , r = this.currentJacket.getArea().width;
            null == this.touchO && 0 == this.moveX && 0 == this.vecX ? this.currentJacket.fakeX = this.currentJacket.fakeX + 5 * (this.middle.x - .5 * r + e - this.currentJacket.fakeX) * i : this.currentJacket.fakeX = this.middle.x - .5 * r + e,
            this.ajustPos(this.currentJacket, t),
            this.currentJacket.y += 7 * (n - this.currentJacket.y) * i;
            for (var o = 0; o < this.jacketVisibleNbr; o++) {
                var s = this.currentJacket._getId() - Math.floor(this.jacketVisibleNbr / 2) + o;
                if (s != this.currentJacket._getId()) {
                    var a = this.jacketTab[this.modeInfinit ? this.getLinkedID(s) : s];
                    if (a) {
                        var h = s - this.currentJacket._getId();
                        a.fakeX = this.currentJacket.fakeX + (r + this.spacingX) * h,
                        a.x = this.currentJacket.x + (r + this.spacingX) * h,
                        a.y += 7 * (n + this.minY - a.y) * i
                    }
                }
            }
        }
        ,
        r.prototype.moveOutJacket = function(t) {
            var e = .001 * t
              , i = this.currentJacket.getArea().width;
            this.speedMove += 600,
            this.currentJacket.x -= this.speedMove * e;
            for (var n = this.currentJacket.x + i, r = 0; r < this.jacketVisibleNbr; r++) {
                var o = this.currentJacket._getId() - Math.floor(this.jacketVisibleNbr / 2) + r;
                if (o != this.currentJacket._getId()) {
                    var s = this.jacketTab[this.modeInfinit ? this.getLinkedID(o) : o];
                    if (s) {
                        var a = o - this.currentJacket._getId();
                        s.x = this.currentJacket.x + (i + this.spacingX) * a;
                        n = Math.max(n, s.x + i)
                    }
                }
            }
            n < 0 && this.fireDestroy()
        }
        ,
        r.prototype.fireDestroy = function() {
            this.stopUpdatable(),
            this.removeSelf(),
            this.outCallBack && this.outCallBack.execute()
        }
        ,
        r.prototype.getLinkedID = function(t) {
            for (; t < 0; )
                t += this.elemMax;
            for (; t > this.elemMax - 1; )
                t -= this.elemMax;
            return t
        }
        ,
        r.prototype.setModeLoop = function(t) {
            this.modeInfinit = t && this.isAvailableForInfinit()
        }
        ,
        r.prototype.setControle = function(t) {
            this.controlEnable = t,
            this.nextButton && (this.nextButton.interactive = t),
            this.backButton && (this.backButton.interactive = t)
        }
        ,
        r.prototype.autoPlay = function(t) {
            this.autoPlayDelay = 3,
            this._sysAutoPlay = 0
        }
        ,
        r.prototype.initClick = function() {
            this.controlEnable && (this.touchO = this.getLocalPoint(this.mouse.position.x, this.mouse.position.y))
        }
        ,
        r.prototype.detectSelected = function() {
            var t, e = this.currentJacket.backJacket, i = this.currentJacket, n = this.currentJacket.nextJacket, r = i, o = this.middle.x - .5 * i.width, s = Math.abs(o - i.fakeX);
            n && ((t = Math.abs(o - n.fakeX)) < s && (r = n,
            s = t));
            e && ((t = Math.abs(o - e.fakeX)) < s && (r = e,
            s = t));
            r == this.currentJacket && null == this.instantMoveTo || (this.currentJacket = r,
            this.moveX = 0,
            this.instantMoveTo = null,
            this.decalageX = this.currentJacket.fakeX - (this.middle.x - .5 * this.currentJacket.getArea().width),
            null != this.instantMoveTo && (this.decalageX = 0),
            null != this.touchO && this.initClick(),
            this.initNewJacket())
        }
        ,
        r.prototype.getBackgroundHeight = function() {
            return 1.15 * this.currentJacket.getArea().height
        }
        ,
        r.prototype.updateVec = function() {
            if (this.vecX = Math.abs(this.vecX) < 5 ? 0 : this.vecX - .1 * this.vecX,
            this.touchO && this.touchC) {
                var t = this.getLocalPoint(this.mouse.position.x, this.mouse.position.y).x - this.touchC.x;
                5 < Math.abs(t) && (this.tmpVecX = t)
            } else
                this.vecX += 20 < Math.abs(this.tmpVecX) ? this.tmpVecX : 0,
                this.tmpVecX = 0;
            1 != this.modeInfinit && (0 < this.vecX && 0 == this.currentJacket._getId() || this.vecX < 0 && this.currentJacket._getId() == this.elemMax - 1) && (this.vecX = 0,
            this.tmpVecX = 0)
        }
        ,
        r.prototype.moveToSelected = function(t) {
            this.currentJacket._getId() == this.moveTo ? (this.moveTo = null,
            this.moveX = 0) : this.moveX = 50 * (this.moveTo < this.currentJacket._getId() ? 1 : -1)
        }
        ,
        r.prototype.isClickOnWidget = function() {
            if (this.controlEnable && this.mouse.isJustDown) {
                if (this.initClick(),
                0 < this.touchO.x && this.touchO.x < this.area.width && this.touchO.y > this.middle.y - .5 * this.getBackgroundHeight() && this.touchO.y < this.middle.y + .5 * this.getBackgroundHeight())
                    return !0;
                this.touchO = null
            }
            return !1
        }
        ,
        r.prototype.setSelectedTimeDelay = function(t) {
            this.selectedTimeDelay = t < 0 ? 0 : t
        }
        ,
        r.prototype.destroyOut = function(t, e) {
            this.outCallBack = t ? new DUST.ContextualCallback(t,e) : null,
            this.speedMove = 2e3
        }
        ,
        r.prototype.updateAutoPlay = function(t) {
            if (this._sysAutoPlay += 1 * t * .001,
            this._sysAutoPlay >= this.autoPlayDelay) {
                this._sysAutoPlay = 0;
                var e = this.currentJacket.nextJacket;
                e ? this.moveToJacket(e._getId()) : this.moveToJacket(0)
            }
        }
        ,
        r.prototype.update = function(t) {
            if (this.tickcount += 1,
            1 != this.started && this.start(),
            this.speedMove)
                return this.cursor && (this.cursor.alpha = Math.max(0, this.cursor.alpha - 4 * t * .001)),
                void this.moveOutJacket(t);
            this.layerJacket.alpha = Math.min(1, this.layerJacket.alpha + 2 * t * .001);
            var e = this.currentJacket;
            e && (null != this.autoPlayDelay && this.updateAutoPlay(t),
            e.update(t),
            this.updateVec(),
            null != this.instantMoveTo ? this.instantReplace() : this.moveCurrentJacket(t),
            this.detectSelected(),
            null != this.moveTo ? this.moveToSelected(t) : (this.isClickOnWidget(),
            this.mouse.isUp && (this.touchO = null),
            this.mouse.isJustUp && (this.decalageX = 0)),
            this.selectedDuration += .001 * t,
            1 != this.onSelectedFired && this.selectedDuration > this.selectedTimeDelay && (this.onSelectedFired = !0,
            this.currentJacket._fireSelected()),
            null != this.cursor && (this.cursor.y = this.currentJacket.y - this.cursor.height + 10 * Math.sin(.1 * this.tickcount),
            this.cursor.x = this.currentJacket.x + .5 * this.currentJacket.getArea().width)),
            this.decalageX += this.moveX + (this.touchO ? 0 : this.vecX),
            null == this.touchO && 0 == this.moveX && 0 == this.vecX && (this.decalageX = 0)
        }
        ,
        r.DEFAULT_CURSOR_TEXTURE = null,
        r.DEFAULT_ARROW_TEXTURE = null,
        r.DEFAULT_BACKGROUND_TEXTURE = null,
        r
    }(DUST.Container);
    o.SelectorJacket = t
}(GAME || (GAME = {})),
function(t) {
    var e = function(i) {
        function n(t) {
            var e = i.call(this) || this;
            return e.onSelectedCallBack = null,
            e.onUnselectedCallBack = null,
            e.idString = null,
            e.fakeX = 0,
            e.nextJacket = null,
            e.backJacket = null,
            e.selectorId = 0,
            e.area = t || null,
            e
        }
        return __extends(n, i),
        n.prototype.setArea = function(t) {
            this.area = t
        }
        ,
        n.prototype.onSelected = function(t, e) {
            this.onSelectedCallBack = t ? new DUST.ContextualCallback(t,e) : null
        }
        ,
        n.prototype.onUnselected = function(t, e) {
            this.onUnselectedCallBack = t ? new DUST.ContextualCallback(t,e) : null
        }
        ,
        n.prototype._fireUnselected = function() {
            null != this.onUnselectedCallBack && this.onUnselectedCallBack.execute()
        }
        ,
        n.prototype._fireSelected = function() {
            null != this.onSelectedCallBack && this.onSelectedCallBack.execute()
        }
        ,
        n.fromContainer = function(t) {
            var e = new n;
            return e.addChild(t),
            e
        }
        ,
        n.prototype.getBounds = function() {
            return null == this.area ? i.prototype.getBounds.call(this) : this.area
        }
        ,
        n.prototype._setId = function(t) {
            this.selectorId = t
        }
        ,
        n.prototype._setIdString = function(t) {
            this.idString = t
        }
        ,
        n.prototype._getIdString = function() {
            return this.idString
        }
        ,
        n.prototype._getId = function() {
            return this.selectorId
        }
        ,
        n.prototype._getLocked = function() {
            return this.locked
        }
        ,
        n.prototype._setLocked = function(t) {
            this.locked = t
        }
        ,
        n.prototype.getArea = function() {
            return this.area
        }
        ,
        n.prototype.update = function(t) {}
        ,
        n
    }(DUST.Container);
    t.SelectorJacketCmp = e
}(GAME || (GAME = {})),
function(t) {
    var e = function(a) {
        function h(t) {
            var e = a.call(this) || this;
            h.textureElem = null,
            e.elmMax = t,
            e.elementTab = [];
            for (var i, n, r = null, o = 0; o < t; o++) {
                var s = e.getMapElem();
                null == r ? (r = ((n = s.width) + (i = 2 + .3 * n)) * t,
                e.lastSelected = s,
                e.turnON(s)) : e.turnOFF(s),
                s.x = .5 * -r + o * (n + i),
                e.addChild(s),
                e.elementTab.push(s)
            }
            return e
        }
        return __extends(h, a),
        h.prototype.setCurent = function(t) {
            t %= this.elmMax,
            this.turnOFF(this.lastSelected),
            this.lastSelected = this.elementTab[t],
            this.turnON(this.lastSelected)
        }
        ,
        h.prototype.turnON = function(t) {
            t.scaleXY = 1.4,
            t.alpha = 1
        }
        ,
        h.prototype.turnOFF = function(t) {
            t.scaleXY = 1,
            t.alpha = .7
        }
        ,
        h.prototype.getMapElem = function() {
            if (null == h.textureElem) {
                var t = new DUST.Graphics;
                t.beginFill(16777215, .8),
                t.drawCircle(0, 0, 10),
                t.endFill(),
                t.beginFill(16777215, 1),
                t.drawCircle(0, 0, 8),
                t.endFill(),
                h.textureElem = t.generateTexture(DUST.Game.get().renderer)
            }
            var e = new DUST.Sprite(h.textureElem);
            return e.setPivotToCenter(),
            e
        }
        ,
        h
    }(DUST.Container);
    t.SelectorJacketMap = e
}(GAME || (GAME = {})),
function(t) {
    var e = function() {
        function t(t, e) {
            this.timeTextTint = null,
            this.framesRewardWatch = null,
            this.framesRewardBackTime = null,
            this.rewardFactors = null,
            this.frameBackGround = null,
            this.frameWatch = t,
            this.frameAiguille = e
        }
        return t.prototype.addTimeTextColor = function(t) {
            this.timeTextTint = t
        }
        ,
        t.prototype.addBackground = function(t) {
            this.frameBackGround = t
        }
        ,
        t.prototype.addReward = function(t, e, i) {
            this.framesRewardWatch = e || null,
            this.framesRewardBackTime = i || null,
            this.rewardFactors = t
        }
        ,
        t
    }();
    t.WatchCmp = e
}(GAME || (GAME = {})),
function(n) {
    var t = function(o) {
        function r(t, e, i) {
            var n = o.call(this) || this;
            n.playing = !1,
            n.decompte = i,
            n.onChangedCallBack = null,
            n.watchCmp = t,
            n.aiguilleSpeed = Math.PI / 2,
            n.endCallback = null,
            n.backTime = null,
            n.curReward = 0,
            n.rewardLoaded = 0,
            n.factorMax = n.getfactorMax(),
            n.time = e,
            n.newMaxTime = n.time * n.factorMax,
            n.curTime = e,
            n.buildLayout(),
            n.buildTimer(),
            n.buildText(),
            n.buildBackTime();
            var r = n;
            return n.detachListener.add(function() {
                return r.stopUpdatable()
            }),
            n
        }
        return __extends(r, o),
        r.prototype.isPlaying = function() {
            return this.playing
        }
        ,
        r.prototype.getfactorMax = function() {
            var t = 1;
            return this.watchCmp.rewardFactors && null != (t = this.watchCmp.rewardFactors[this.watchCmp.rewardFactors.length - 1]) && (t = Math.max(1, t)),
            t
        }
        ,
        r.prototype.lockTimer = function() {
            this.locked = !0
        }
        ,
        r.prototype.unlockTimer = function() {
            this.locked = !1
        }
        ,
        r.prototype.buildLayout = function() {
            this.layWatch = new DUST.Container,
            this.layText = new DUST.Container,
            this.addChild(this.layWatch),
            this.addChild(this.layText)
        }
        ,
        r.prototype.onEnd = function(t, e) {
            this.endCallback = t ? new DUST.ContextualCallback(t,e) : null
        }
        ,
        r.prototype.fireEnd = function() {
            this.decompte && this.stopUpdatable(),
            this.endCallback && this.endCallback.execute()
        }
        ,
        r.prototype.startTime = function() {
            1 != this.locked && (this.playing = !0,
            this.addUpdatable())
        }
        ,
        r.prototype.stopTime = function() {
            1 != this.locked && (this.playing = !1,
            this.stopUpdatable())
        }
        ,
        r.prototype.destroy = function() {
            this.stopUpdatable(),
            this.removeSelf()
        }
        ,
        r.prototype.addUpdatable = function() {
            1 != this.updatable && (this.updatable = !0,
            DUST.Game.get().addUpdatable(this))
        }
        ,
        r.prototype.stopUpdatable = function() {
            1 == this.updatable && (this.updatable = !1,
            DUST.Game.get().removeUpdatable(this))
        }
        ,
        r.prototype.buildBackTime = function() {
            this.watchCmp.frameBackGround && (this.backTime = DUST.Sprite.fromFrame(this.watchCmp.frameBackGround),
            this.backTime.x = this.timeText.x - 47,
            this.backTime.y = this.timeText.y - 18,
            this.layWatch.addChildAt(this.backTime, 0))
        }
        ,
        r.prototype.buildTimer = function() {
            this.watch = DUST.Sprite.fromFrame(this.watchCmp.frameWatch),
            this.aiguille = DUST.Sprite.fromFrame(this.watchCmp.frameAiguille),
            this.aiguille.setPivotToCenter(),
            this.aiguille.x = this.watch.width / 2,
            this.aiguille.y = this.watch.height / 2,
            this.aiguille.rotation = -Math.PI / 2,
            this.layWatch.addChild(this.watch),
            this.layWatch.addChild(this.aiguille)
        }
        ,
        r.prototype.buildText = function() {
            this.timeText = new n.WatchText(49),
            null != this.watchCmp.timeTextTint && (this.timeText.tint = this.watchCmp.timeTextTint),
            this.timeText.tint = 16235273,
            this.timeText.sep_min_sec.x += 12,
            this.timeText.sec.x += 20,
            this.timeText.sep_sec_micSec.x += 22,
            this.timeText.micSec.x += 26,
            this.timeText.x = this.watch ? this.watch.width : 0,
            this.timeText.y = this.watch ? (this.watch.height - this.timeText.micSec.textHeight) / 2 : 0,
            this.layText.addChild(this.timeText),
            this.refreshText()
        }
        ,
        r.prototype.refreshText = function() {
            var t = this.curTime;
            1 != this.decompte && (t = this.time - this.curTime),
            this.timeText.setTime(t)
        }
        ,
        r.prototype.getTime = function() {
            var t = this.curTime;
            return 1 != this.decompte && (t = this.time - this.curTime),
            t
        }
        ,
        r.prototype.getRewardLevel = function() {
            return this.curReward
        }
        ,
        r.prototype.fireOnChanged = function() {
            if (this._parent) {
                this.aiguilleSpeed = this.getSpeedAiguille(),
                this.aiguille.rotation = -Math.PI / 2;
                var t = new n.SpriteH5(this.getEffectTexture());
                t.x = this.x,
                t.y = this.y,
                t.rotation = this.rotation,
                t.scaleXY = this.scaleXY,
                t.addUpdatableFunction(function() {
                    t.alpha = Math.max(0, t.alpha - 1 * n.System.dt),
                    0 == t.alpha && t.destroy()
                }),
                this._parent.addChild(t)
            }
            this.onChangedCallBack && this.onChangedCallBack(this.getRewardLevel())
        }
        ,
        r.prototype.refreshLook = function() {
            if (this.rewardLoaded != this.curReward) {
                this.rewardLoaded = this.curReward;
                var t, e, i, n = !1;
                if (null != (e = this.watchCmp.framesRewardWatch))
                    t = (i = e[this.rewardLoaded - 1]) ? DUST.Texture.fromFrame(i) : DUST.Texture.fromFrame(this.watchCmp.frameWatch),
                    this.watch.setTexture(t),
                    n = !0;
                if (null != this.backTime)
                    if (null != (e = this.watchCmp.framesRewardBackTime))
                        (i = e[this.rewardLoaded - 1]) ? this.backTime.setTexture(DUST.Texture.fromFrame(i)) : this.backTime.setTexture(DUST.Texture.fromFrame(this.watchCmp.frameBackGround)),
                        n = !0;
                n && this.fireOnChanged()
            }
        }
        ,
        r.prototype.onChangedReward = function(t) {
            this.onChangedCallBack = t || null
        }
        ,
        r.prototype.setTime = function(t) {
            this.curTime < this.time * this.factorMax && (this.newMaxTime = this.time * this.factorMax),
            this.curTime = t,
            this.curTime > this.newMaxTime && (this.newMaxTime = this.curTime)
        }
        ,
        r.prototype.addTime = function(t) {
            this.curTime < this.time * this.factorMax && (this.newMaxTime = this.time * this.factorMax),
            this.curTime += t,
            this.curTime > this.newMaxTime && (this.newMaxTime = this.curTime)
        }
        ,
        r.prototype.getEffectTexture = function() {
            if (null == r.EFFECT_TEXTURE) {
                var t = new DUST.Container
                  , e = new DUST.Graphics;
                e.beginFill(16777215, 1),
                e.drawRect(0, 0, 1, 1),
                e.width = this.width,
                e.height = this.height,
                t.addChild(e);
                var i = this.layWatch.generateTexture(DUST.Game.get().renderer)
                  , n = DUST.Sprite.fromTexture(i);
                t.mask = n,
                t.addChild(n),
                r.EFFECT_TEXTURE = t.generateTexture(DUST.Game.get().renderer),
                t.mask = null
            }
            return r.EFFECT_TEXTURE
        }
        ,
        r.prototype.getCurReward = function() {
            var t = 0;
            if (this.watchCmp.rewardFactors) {
                for (var e = this.watchCmp.rewardFactors.length, i = this.curTime / this.time, n = e; 0 <= n && i < this.watchCmp.rewardFactors[n - 1]; )
                    n--;
                t = n
            }
            return t
        }
        ,
        r.prototype.getSpeedAiguille = function() {
            var t = Math.PI / 2
              , e = this.watchCmp.rewardFactors;
            if (null != e) {
                var i = this.factorMax
                  , n = 0;
                e[this.curReward] && (i = e[this.curReward]),
                e[this.curReward - 1] && (n = e[this.curReward - 1]),
                t = 2 * Math.PI / (this.time * (i - n))
            }
            return t
        }
        ,
        r.prototype.getCurAngle = function() {
            var t = this.watchCmp.rewardFactors
              , e = this.factorMax
              , i = 0;
            null != t && (t[this.curReward] && (e = t[this.curReward]),
            t[this.curReward - 1] && (i = t[this.curReward - 1]));
            var n = this.curTime / this.time
              , r = -Math.PI / 2;
            if (n < this.factorMax)
                r += 2 * Math.PI * (1 - (n - i) / (e - i));
            else {
                var o = this.factorMax * this.time;
                r += 2 * Math.PI * (1 - (this.curTime - o) / (this.newMaxTime - o))
            }
            return r
        }
        ,
        r.prototype.update = function(t) {
            var e = 0 == this.curTime;
            this.decompte ? this.curTime = Math.max(0, this.curTime - 1 * t / 1e3) : this.curTime = this.curTime - 1 * t / 1e3;
            var i = this.getCurAngle();
            this.aiguille.rotation = n.System.moveAngle(i, this.aiguille.rotation),
            n.System.tickcount % 2 == 0 && this.refreshText(),
            this.curReward = this.getCurReward(),
            this.refreshLook(),
            1 != e && 0 == this.curTime && this.fireEnd()
        }
        ,
        r.EFFECT_TEXTURE = null,
        r
    }(DUST.Container);
    n.WatchObject = t
}(GAME || (GAME = {})),
function(t) {
    var e = function(i) {
        function t(t) {
            var e = i.call(this) || this;
            return e.size = t,
            e.build(),
            e
        }
        return __extends(t, i),
        t.prototype.setSize = function(t) {
            this.removeChildren(),
            this.size = t,
            this.build()
        }
        ,
        t.prototype.build = function() {
            this.min = new DUST.BitmapText("00",{
                font: this.size + "px fontbig"
            }),
            this.sep_min_sec = new DUST.BitmapText(":",{
                font: this.size + "px fontbig"
            }),
            this.sep_min_sec.x = this.min.textWidth,
            this.sec = new DUST.BitmapText("00",{
                font: this.size + "px fontbig"
            }),
            this.sec.x = this.sep_min_sec.x + this.sep_min_sec.textWidth,
            this.sep_sec_micSec = new DUST.BitmapText(".",{
                font: this.size + "px fontbig"
            }),
            this.sep_sec_micSec.x = this.sec.x + this.sec.textWidth,
            this.micSec = new DUST.BitmapText("00",{
                font: this.size + "px fontbig"
            }),
            this.micSec.x = this.sep_sec_micSec.x + this.sep_sec_micSec.textWidth,
            this.addChild(this.min),
            this.addChild(this.sep_min_sec),
            this.addChild(this.sec),
            this.addChild(this.sep_sec_micSec),
            this.addChild(this.micSec)
        }
        ,
        Object.defineProperty(t.prototype, "tint", {
            set: function(t) {
                this.min.tint = t,
                this.micSec.tint = t,
                this.sec.tint = t,
                this.sep_min_sec.tint = t,
                this.sep_sec_micSec.tint = t
            },
            enumerable: !0,
            configurable: !0
        }),
        t.prototype.setTime = function(t) {
            var e = DUST.Strings.pad(Math.floor(t / 60), 2)
              , i = DUST.Strings.pad(Math.floor(t % 60), 2)
              , n = DUST.Strings.pad(Math.floor(t % 1 * 100), 2);
            this.min.text = e,
            this.sec.text = i,
            this.micSec.text = n
        }
        ,
        t
    }(DUST.Container);
    t.WatchText = e
}(GAME || (GAME = {})),
function(a) {
    var t = function(o) {
        function s(t, e, i, n) {
            var r = o.call(this) || this;
            return r.scoreFall = null,
            r.scoreBump = null,
            r.star1 = null,
            r.star2 = null,
            r.star3 = null,
            r.callBack = null,
            r.STAR_POSITION = [DUST.Game.get().width / 2, -170],
            r.STAR_SCALE = .5,
            r.font = null != s.FONT_SCORE ? s.FONT_SCORE : "fontbig",
            r.config = n,
            r.callBack = i,
            r.score = Math.floor(t),
            r.starCount = e,
            r.curTime = 0,
            r.build(),
            r.addUpdatable(),
            r
        }
        return __extends(s, o),
        s.getMultipliedScore = function(t, e) {
            return Math.floor(t) * s.getMultiplier(e)
        }
        ,
        s.prototype.onEnd = function(t) {
            this.callBack = t
        }
        ,
        s.prototype.getMultipliedScore = function() {
            return this.score * s.getMultiplier(this.starCount)
        }
        ,
        s.prototype.addUpdatable = function() {
            1 != this.updatable && (this.updatable = !0,
            DUST.Game.get().addUpdatable(this))
        }
        ,
        s.prototype.stopUpdatable = function() {
            1 == this.updatable && (this.updatable = !1,
            DUST.Game.get().removeUpdatable(this))
        }
        ,
        s.prototype.getMultiplier = function(t) {
            return s.getMultiplier(t)
        }
        ,
        s.getMultiplier = function(t) {
            var e = 1;
            return 1 == t && (e = 2),
            2 == t && (e = 3),
            3 == t && (e = 5),
            e
        }
        ,
        s.prototype.buildMultiplier = function(t) {
            var e;
            this.multiplier = [];
            for (var i = 0; i < 3; i++)
                (e = new a.WinScreenCmp("x" + s.getMultiplier(i + 1),this.config.multiplierFrame)).x = t.width / 2 + e.width * (i - 1.5),
                e.y = t.height - e.height - 32,
                this.multiplier.push(e),
                t.addChild(e)
        }
        ,
        s.prototype.build = function() {
            this.backGround = DUST.Sprite.fromFrame(this.config.bgBoxFrame),
            this.backGround.setPivotToCenter(),
            this.backGround.x = DUST.Game.get().width / 2,
            this.backGround.y = -30,
            this.backGround.alpha = .1,
            this.addChild(this.backGround),
            this.buildMultiplier(this.backGround),
            this.backGround.scaleXY = .01,
            this.sys_width = 300,
            this.sys_height = 300
        }
        ,
        s.prototype.getStarImpact = function(i) {
            return function(t) {
                var e = a.ExplodeH5.newExplode_Et(10, 16776960, .5, .05, i.config.starFrame);
                e.x = t[0],
                e.y = t[1],
                i.addChild(e),
                null != s.SOUND_STAR_SPLASH && s.SOUND_STAR_SPLASH()
            }
        }
        ,
        s.prototype.fireStar3 = function() {
            this.star3 = !0;
            var t = this.getStarImpact(this)
              , e = this
              , i = [this.STAR_POSITION[0] + this.sys_width * this.STAR_SCALE, this.STAR_POSITION[1] + .3 * this.sys_height * this.STAR_SCALE]
              , n = new a.SplashH5(0,function() {
                t(i),
                e.scoreBump.setScore(5 * e.score, !0),
                e.scoreBump.bump(2),
                e.multiplier[0].setOFF(),
                e.multiplier[1].setOFF(),
                e.multiplier[2].setON()
            }
            )
              , r = new DUST.Sprite(DUST.Texture.fromFrame(e.config.starFrame));
            r.setPivotToCenter(),
            r.x = 0,
            r.y = 0,
            r.scaleXY = .95 * this.STAR_SCALE,
            r.rotation = a.System.degToRad(30),
            n.x = i[0],
            n.y = i[1],
            n.addChild(r),
            this.addChild(n),
            null != s.SOUND_STAR_FALL && s.SOUND_STAR_FALL()
        }
        ,
        s.prototype.fireStar2 = function() {
            this.star2 = !0;
            var t = this
              , e = this.getStarImpact(this)
              , i = [this.STAR_POSITION[0], this.STAR_POSITION[1]]
              , n = new a.SplashH5(0,function() {
                e(i),
                t.scoreBump.setScore(3 * t.score, !0),
                t.scoreBump.bump(1.3),
                t.multiplier[0].setOFF(),
                t.multiplier[1].setON(),
                t.multiplier[2].setOFF()
            }
            )
              , r = new DUST.Sprite(DUST.Texture.fromFrame(t.config.starFrame));
            r.setPivotToCenter(),
            r.x = 0,
            r.y = 0,
            r.scaleXY = 1.05 * this.STAR_SCALE,
            n.x = i[0],
            n.y = i[1],
            n.addChild(r),
            this.addChild(n),
            null != s.SOUND_STAR_FALL && s.SOUND_STAR_FALL()
        }
        ,
        s.prototype.fireStar1 = function() {
            this.star1 = !0;
            var t = this
              , e = this.getStarImpact(this)
              , i = [this.STAR_POSITION[0] - this.sys_width * this.STAR_SCALE, this.STAR_POSITION[1] + .3 * this.sys_height * this.STAR_SCALE]
              , n = new a.SplashH5(0,function() {
                e(i),
                t.scoreBump.setScore(2 * t.score, !0),
                t.scoreBump.bump(1),
                t.multiplier[0].setON(),
                t.multiplier[1].setOFF(),
                t.multiplier[2].setOFF(),
                null != s.SOUND_STAR_FALL && s.SOUND_STAR_FALL()
            }
            )
              , r = new DUST.Sprite(DUST.Texture.fromFrame(t.config.starFrame));
            r.setPivotToCenter(),
            r.x = 0,
            r.y = 0,
            r.scaleXY = .95 * this.STAR_SCALE,
            r.rotation = a.System.degToRad(330),
            n.x = i[0],
            n.y = i[1],
            n.addChild(r),
            this.addChild(n)
        }
        ,
        s.prototype.update = function(t) {
            if (this.curTime += 1 * t / 1e3,
            1 != this.backGround.scaleXY && (this.backGround.scaleXY = Math.min(1, this.backGround.scaleXY + 7 * t / 1e3),
            this.backGround.alpha = this.backGround.scaleXY),
            null == this.scoreFall && .3 <= this.curTime && (this.scoreFall = new a.TextShowH5("" + this.score,this.font,null,90,4),
            this.scoreFall.y = -30,
            this.scoreFall.x = DUST.Game.get().width / 2,
            this.addChild(this.scoreFall)),
            null == this.scoreBump && 1.3 <= this.curTime && (this.scoreFall.destroy(),
            this.scoreBump = new a.ScoreBumpH5(this.score,90,this.font),
            this.scoreBump.setScore(this.score, !0),
            this.scoreBump.x = DUST.Game.get().width / 2,
            this.scoreBump.y = -30,
            this.addChildAt(this.scoreBump, 1)),
            1 != this.star1 && 0 < this.starCount && 1.3 <= this.curTime && this.fireStar1(),
            1 != this.star2 && 1 < this.starCount && 1.6 <= this.curTime && this.fireStar2(),
            1 != this.star3 && 2 < this.starCount && 1.9 <= this.curTime && this.fireStar3(),
            4.8 <= this.curTime && -600 < this.y && (this.y = Math.max(-600, this.y + 7 * (-600 - this.y) * t / 1e3)),
            this.callBack && 5.3 <= this.curTime) {
                this.stopUpdatable();
                var e = this.callBack;
                this.callBack = null,
                e(),
                this.removeSelf()
            }
        }
        ,
        s.FONT_SCORE = null,
        s.SOUND_STAR_FALL = null,
        s.SOUND_STAR_SPLASH = null,
        s
    }(DUST.Container);
    a.WinScreen = t
}(GAME || (GAME = {})),
function(t) {
    var e = function(n) {
        function t(t, e) {
            var i = n.call(this) || this;
            return i.frame = DUST.Sprite.fromFrame(e),
            i.addChild(i.frame),
            i.txt = new DUST.BitmapText(t,{
                font: "45px fontbig"
            }),
            i.txt.x = (i.frame.width - i.txt.textWidth) / 2,
            i.txt.y = (i.frame.height - i.txt.textHeight) / 2,
            i.addChild(i.txt),
            i.setOFF(),
            i
        }
        return __extends(t, n),
        t.prototype.setOFF = function() {
            this.frame.tint = 3289650,
            this.alpha = .4
        }
        ,
        t.prototype.setON = function() {
            this.frame.tint = 16777215,
            this.alpha = 1
        }
        ,
        t
    }(DUST.Container);
    t.WinScreenCmp = e
}(GAME || (GAME = {})),
function(t) {
    var e = function(t, e, i) {
        this.bgBoxFrame = t,
        this.starFrame = e,
        this.multiplierFrame = i
    };
    (GAME || (GAME = {})).WinScreenConfig = e
}(),
function(t) {
    var o = (p = t || {}).__deffered || [];
    function l(t) {
        return null == t ? null : t.length <= 1 ? t.toUpperCase() : t.charAt(0).toUpperCase() + t.slice(1)
    }
    p.__deffered = o;
    var e = function() {};
    e.prototype.loadNConstant = function(t, e, i) {
        var n = function() {};
        (p[t] = n).domainID = i.domainID,
        n.serializerID = e.serializerID,
        e.name = t,
        n.values = function() {
            return n._values
        }
        ,
        n.prototype.getValue = function() {
            return this._value
        }
        ,
        n.prototype.name = function() {
            return this._name
        }
        ,
        n.prototype.ordinal = function() {
            return this._value
        }
        ,
        n.prototype.init = function(t, e) {
            return null == n._values && (n._values = new Array),
            this._value = e,
            this._name = t,
            n._values.push(this),
            this
        }
        ,
        n.fromValue = function(t) {
            for (var e = 0; e < n._values.length; e++) {
                var i = n._values[e];
                if (i.getValue() == t)
                    return i
            }
            return null
        }
        ,
        n.valueOf = function(t) {
            for (var e = 0; e < n._values.length; e++) {
                var i = n._values[e];
                if (t == i.name())
                    return i
            }
            return null
        }
        ,
        n.prototype.getDomainID = function() {
            return n.domainID
        }
        ,
        n.prototype.getSerializerID = function() {
            return n.serializerID
        }
        ,
        n.prototype.toString = function() {
            return t + "." + this._name
        }
        ,
        n.prototype.clone = function() {
            return this
        }
        ;
        for (var r = 0; r < e.values.length; r++) {
            var o = e.values[r];
            n[o.text] = (new n).init(o.text, o.value)
        }
    }
    ,
    e.prototype.addField = function(t, e, i, n) {
        i.name = e;
        var r = n.hierarchyDepth + i.propertyId;
        i.serializerID = r;
        var o, s = l(e), a = "get";
        "Boolean" == (o = i).type && 1 == o.primitive && (a = "is"),
        i.getter = a + s,
        i.setter = "set" + s,
        t.prototype[a + s] = function() {
            return this["_" + e]
        }
        ,
        t.prototype["set" + s] = function(t) {
            this["_" + e] = t,
            this["_" + e + "Set"] = !0
        }
        ,
        t.prototype["is" + e + "Set"] = function() {
            return this["_" + e + "Set"]
        }
        ,
        t.prototype["unSet" + e] = function(t) {
            this["_" + e + "Set"] = !1
        }
    }
    ,
    e.prototype.loadNObject = function(n, r, t) {
        var e = {};
        p._serializer[n] = e,
        r.name = n;
        var i = function() {};
        if (p[n] = i,
        null != r.extendss) {
            var o = p[r.extendss.name];
            (i.prototype = new o).constructor = o
        }
        for (var s in i.prototype.init = function() {
            return this
        }
        ,
        i.domainID = t.domainID,
        i.serializerID = r.serializerID,
        i.prototype.getDomainID = function() {
            return i.domainID
        }
        ,
        i.prototype.getSerializerID = function() {
            return i.serializerID
        }
        ,
        r.fields) {
            var a = r.fields[s];
            this.addField(i, s, a, r),
            e[a.serializerID] = a
        }
        for (var h = r.extendss; null != h; ) {
            var l = p._specs[h.domainID];
            if (null == l)
                throw "Domain " + h.domainID + " not loaded";
            var u = l.nobjects[h.name];
            if (null == u)
                throw "NObject " + h.name + " not loaded";
            for (var s in u.fields) {
                var c = u.fields[s];
                e[(r.fields[s] = c).serializerID] = c
            }
            h = h.extendss
        }
        i.prototype.toString = function() {
            var t = "";
            for (var e in t += "[" + n + " --\x3e ",
            r.fields) {
                var i = this[r.fields[e].getter]();
                p.Utils.isNull(i) || (t += e + "=" + i + "| ")
            }
            return t += "]"
        }
        ,
        i.prototype.clone = function() {
            var t = new i;
            for (var e in this) {
                "function" != typeof this[e] && (t[e] = this[e])
            }
            return t
        }
    }
    ,
    e.prototype.createSerializerFactory = function(t) {
        var u = [];
        for (var e in t.nconstants) {
            var i = t.nconstants[e];
            u[i.serializerID] = i
        }
        for (var e in t.nobjects) {
            var n = t.nobjects[e];
            u[n.serializerID] = n
        }
        var r = function() {
            this.dynamicFieldResolver = (new p.DefaultDynamicFieldResolver).init()
        };
        (p["String" + t.domainName + "SerializerFactory"] = r).prototype.init = function() {
            return this
        }
        ,
        r.prototype.setDynamicFieldSerializerResolver = function(t) {
            this.dynamicFieldResolver = t
        }
        ,
        r.prototype.writeField0 = function(t, e, i, n) {
            if (n.list) {
                if (n.primitive) {
                    var r = "write" + n.type + "ListProperty";
                    return p.StringOutputStream[r](e, n.serializerID, i)
                }
                if (null == e)
                    return !1;
                i.putShort(n.serializerID),
                i.put(p.SerializationTypes.LIST);
                var o = i.position();
                i.skip(4);
                var s = e.length;
                i.putShort(s);
                for (var a = 0; a < s; a++) {
                    var h = e[a];
                    null == h ? i.put(p.SerializationTypes.NULL_TYPE) : p.StringOutputStream.writeObject(t, h, i)
                }
                return i.putIntAt(o, i.position() - o),
                !0
            }
            if (n.primitive) {
                r = "write" + n.type + "Property";
                return p.StringOutputStream[r](e, n.serializerID, i)
            }
            return n.reference ? p.StringOutputStream.writeObjectProperty(t, e, n.serializerID, i) : n.structure && "nmap" == n.type ? p.StringOutputStream.writeNMapProperty(t, e, n.serializerID, i, this.dynamicFieldResolver) : (console && console.error("Field not supported!!"),
            !1)
        }
        ,
        r.prototype.write = function(t, e, i) {
            var n = e.getSerializerID()
              , r = u[n];
            if (null == r)
                throw Error("No serializer found for " + e);
            if (null != r.values)
                p.StringOutputStream.writeInteger(e.getValue(), i);
            else {
                var o = i.position();
                i.skip(2);
                var s = 0;
                for (var a in r.fields) {
                    var h = r.fields[a];
                    if (1 == e["is" + a + "Set"]()) {
                        var l = e[h.getter]();
                        this.writeField0(t, l, i, h) && s++
                    }
                }
                i.putShortAt(o, s)
            }
        }
        ,
        r.prototype.readField0 = function(t, e, i, n) {
            if (n.list) {
                if (n.primitive) {
                    var r = "read" + n.type + "List";
                    return p.StringInputStream[r](i)
                }
                var o = new Array;
                if (i.get() != p.SerializationTypes.NULL_TYPE) {
                    i.getInt();
                    for (var s = i.getShort(), a = 0; a < s; a++)
                        o.push(p.StringInputStream.readObject(t, i))
                }
                return o
            }
            if (n.primitive) {
                r = "read" + n.type;
                return p.StringInputStream[r](i)
            }
            return n.reference ? p.StringInputStream.readObject(t, i) : n.structure && "nmap" == n.type ? p.StringInputStream.readNMap(t, i, this.dynamicFieldResolver) : void 0
        }
        ,
        r.prototype.readSerializable = function(t, e, i) {
            var n = u[i];
            if (null == n)
                throw Error("No serializer found for " + i);
            if (null != n.values) {
                var r = p.StringInputStream.readInteger(e);
                return p[n.name].fromValue(r)
            }
            r = new p[n.name];
            for (var o = p._serializer[n.name], s = p.StringInputStream.getShort(e), a = 0; a < s; a++) {
                var h = o[p.StringInputStream.getShort(e)];
                if (null != h) {
                    var l = this.readField0(t, r, e, h);
                    r[h.setter](l)
                } else
                    p.StringInputStream.skipProperty(e)
            }
            return r
        }
    }
    ,
    e.prototype.createDispatcher = function(o) {
        var s = function() {};
        function t(t, e) {
            var i = e ? t : l(t) + "Response"
              , n = i + "Handler"
              , r = o.nobjects[i];
            s.prototype["add" + n] = function(t) {
                this.listenersBySerializerId[r.serializerID].push(t)
            }
            ,
            s.prototype["remove" + n] = function(t) {
                var e = this.listenersBySerializerId[r.serializerID].indexOf(t);
                0 <= e && this.listenersBySerializerId[r.serializerID].splice(e, 1)
            }
        }
        if ((p[o.domainName + "Dispatcher"] = s).prototype.init = function() {
            return this.clear(),
            this
        }
        ,
        s.prototype.fireMessage = function(t) {
            var e = t.getSerializerID()
              , i = this.listenersBySerializerId[e];
            if (null != i) {
                for (var n = 0; n < this.globalListeners.length; n++) {
                    (0,
                    this.globalListeners[n])(t)
                }
                for (n = 0; n < i.length; n++) {
                    (0,
                    i[n])(t)
                }
            }
        }
        ,
        s.prototype.clear = function() {
            if (this.globalListeners = new Array,
            this.listenersBySerializerId = {},
            null != o.methods)
                for (var t in o.methods) {
                    var e = l(t) + "Response"
                      , i = o.nobjects[e];
                    this.listenersBySerializerId[i.serializerID] = new Array
                }
            if (null != o.notifications)
                for (var n = 0; n < o.notifications.length; n++) {
                    var r = o.notifications[n];
                    i = o.nobjects[r];
                    this.listenersBySerializerId[i.serializerID] = new Array
                }
        }
        ,
        s.prototype.addHipGsMessageListener = function(t) {
            this.globalListeners.push(t)
        }
        ,
        s.prototype.removeHipGsMessageListener = function(t) {
            var e = this.globalListeners.indexOf(t);
            0 <= e && this.globalListeners.splice(e, 1)
        }
        ,
        null != o.methods)
            for (var e in o.methods)
                t(e, !1);
        if (null != o.notifications)
            for (var i = 0; i < o.notifications.length; i++) {
                t(o.notifications[i], !0)
            }
    }
    ,
    e.prototype.createAPI = function(t) {
        null != p.AbstractNuggetaApi && this.createAPI0(t, !1),
        null != p.AbstractDisconnectedApi && this.createAPI0(t, !0)
    }
    ,
    e.prototype.createAPI0 = function(n, t) {
        if (0 != n.domainID) {
            var h = function() {};
            for (var e in t ? ((p[n.domainName + "DisconnectedApi"] = h).prototype = new p.AbstractDisconnectedApi,
            (h.prototype.constructor = h).prototype.init = function() {
                return this.dispatcher = (new p[n.domainName + "Dispatcher"]).init(),
                this.domain = (new p[n.domainName + "Domain"]).init(),
                p.AbstractDisconnectedApi.prototype.init.call(this),
                this
            }
            ,
            2) : ((p[n.domainName + "Api"] = h).prototype = new p.AbstractNuggetaApi,
            (h.prototype.constructor = h).prototype.init = function() {
                return this.dispatcher = (new p[n.domainName + "Dispatcher"]).init(),
                this.domain = (new p[n.domainName + "Domain"]).init(),
                p.AbstractNuggetaApi.prototype.init.call(this),
                this
            }
            ,
            1),
            h.prototype.getDomain = function() {
                return this.domain
            }
            ,
            h.prototype.getDispatcher = function() {
                return this.dispatcher
            }
            ,
            n.methods)
                r(e);
            if (null != n.methods)
                for (var e in n.methods) {
                    o(l(e) + "ResponseHandler")
                }
            if (null != n.notifications)
                for (var i = 0; i < n.notifications.length; i++) {
                    o(n.notifications[i] + "Handler")
                }
            h.prototype.callHandler = function(t, e) {
                e(t)
            }
        }
        function r(t) {
            for (var r = n.methods[t], o = l(t) + "Request", s = r.parameters.length, a = new Array, e = 0; e < s; e++) {
                var i = r.parameters[e];
                a.push("set" + l(i))
            }
            h.prototype[t] = function() {
                if (arguments.length != s)
                    throw "Invalid api call. Received " + arguments.length + " arguments, expected " + r.parameters;
                for (var t = new p[o], e = 0; e < s; e++) {
                    var i = a[e]
                      , n = arguments[e];
                    t[i](n)
                }
                return this.send(t)
            }
            ,
            h.prototype[t + "Request"] = function() {
                if (arguments.length != s + 1)
                    throw "Invalid api call. Received " + arguments.length + " arguments, expected " + r.parameters + " and response handler.";
                for (var t = new p[o], e = 0; e < s; e++) {
                    var i = a[e]
                      , n = arguments[e];
                    t[i](n)
                }
                return this.request(t, arguments[arguments.length - 1])
            }
        }
        function o(e) {
            h.prototype["add" + e] = function(t) {
                this.dispatcher["add" + e](t)
            }
            ,
            h.prototype["remove" + e] = function(t) {
                this.dispatcher["remove" + e](t)
            }
        }
    }
    ,
    e.prototype.createDomain = function(t) {
        var e = function() {};
        p[t.domainName + "Domain"] = e;
        var i = "String" + t.domainName + "SerializerFactory";
        (e.prototype = new p.NDomain).constructor = p[t.domainName + "Domain"],
        e.prototype.init = function() {
            return p.NDomain.prototype.init.call(this),
            this.setDomainId(t.domainID),
            this.setStringSerializerFactory(new p[i]),
            this
        }
    }
    ,
    e.prototype.load = function(t) {
        for (var e in console && console.log("Loading " + t.domainID),
        p._specs = p._specs || {},
        p._specs[t.domainID] = t,
        p._serializer = p._serializer || {},
        t.nconstants) {
            var i = t.nconstants[e];
            this.loadNConstant(e, i, t)
        }
        for (var e in t.nobjects) {
            var n = t.nobjects[e];
            this.loadNObject(e, n, t)
        }
        this.createSerializerFactory(t),
        this.createDispatcher(t),
        this.createAPI(t);
        var r = this;
        void 0 === p.NDomain ? (console && console.log("Deffer domain creation"),
        o.push(function() {
            console && console.log("Executing deffered domain creation"),
            r.createDomain(t)
        })) : this.createDomain(t)
    }
    ,
    e.loadDeffered = function() {
        for (var t = p.__deffered, e = 0; e < t.length; e++)
            t[e]();
        t = []
    }
    ,
    p.nruntime = e,
    console && console.log("nruntime ready");
    (new (p = t || {}).nruntime).load({
        domainID: 0,
        domainName: "NuggetaCore",
        nconstants: {
            DnsStatus: {
                serializerID: 0,
                values: [{
                    value: 0,
                    text: "SUCCESS"
                }, {
                    value: 1,
                    text: "WARNED"
                }, {
                    value: 2,
                    text: "REFUSED"
                }, {
                    value: 3,
                    text: "FAILED"
                }, {
                    value: 4,
                    text: "FAILED_TRY_LATER"
                }]
            },
            ErrorCode: {
                serializerID: 1,
                values: [{
                    value: 0,
                    text: "INVALID_MESSAGE"
                }, {
                    value: 1,
                    text: "INTERNAL_ERROR"
                }]
            },
            NMonitorType: {
                serializerID: 2,
                values: [{
                    value: 0,
                    text: "AVERAGE"
                }, {
                    value: 1,
                    text: "COUNT"
                }]
            }
        },
        nobjects: {
            Storable: {
                hierarchyDepth: 0,
                serializerID: 3e3,
                fields: {
                    StoreId: {
                        propertyId: 0,
                        primitive: !0,
                        type: "String"
                    },
                    DF: {
                        propertyId: 1,
                        structure: !0,
                        type: "nmap"
                    }
                }
            },
            Message: {
                hierarchyDepth: 1e3,
                serializerID: 3001,
                extendss: {
                    domainID: "0",
                    name: "Storable"
                },
                fields: {
                    SenderId: {
                        propertyId: 0,
                        primitive: !0,
                        type: "String"
                    },
                    MessageId: {
                        propertyId: 1,
                        primitive: !0,
                        type: "String"
                    },
                    RequestId: {
                        propertyId: 2,
                        primitive: !0,
                        type: "String"
                    }
                }
            },
            HeartBeatRequest: {
                hierarchyDepth: 2e3,
                serializerID: 3002,
                extendss: {
                    domainID: "0",
                    name: "Message"
                },
                fields: {
                    Counter: {
                        propertyId: 0,
                        primitive: !0,
                        type: "Integer"
                    }
                }
            },
            HeartBeatResponse: {
                hierarchyDepth: 2e3,
                serializerID: 3003,
                extendss: {
                    domainID: "0",
                    name: "Message"
                },
                fields: {
                    Counter: {
                        propertyId: 0,
                        primitive: !0,
                        type: "Integer"
                    }
                }
            },
            DnsRequest: {
                hierarchyDepth: 2e3,
                serializerID: 3004,
                extendss: {
                    domainID: "0",
                    name: "Message"
                },
                fields: {
                    GameId: {
                        propertyId: 0,
                        primitive: !0,
                        type: "String"
                    },
                    GameVersion: {
                        propertyId: 1,
                        primitive: !0,
                        type: "Integer"
                    },
                    GameDeployedVersion: {
                        propertyId: 2,
                        primitive: !0,
                        type: "Integer"
                    },
                    Platform: {
                        propertyId: 3,
                        primitive: !0,
                        type: "String"
                    }
                }
            },
            DnsResponse: {
                hierarchyDepth: 2e3,
                serializerID: 3005,
                extendss: {
                    domainID: "0",
                    name: "Message"
                },
                fields: {
                    IpAddress: {
                        propertyId: 0,
                        primitive: !0,
                        type: "String"
                    },
                    TcpPort: {
                        propertyId: 1,
                        primitive: !0,
                        type: "Integer"
                    },
                    DnsStatus: {
                        propertyId: 2,
                        reference: !0,
                        type: "DnsStatus",
                        domainId: "0"
                    },
                    StartDetails: {
                        propertyId: 3,
                        reference: !0,
                        type: "StartDetails",
                        domainId: "0"
                    }
                }
            },
            StartDetails: {
                hierarchyDepth: 0,
                serializerID: 3006,
                fields: {
                    UseDefaultImpl: {
                        propertyId: 0,
                        primitive: !0,
                        type: "Boolean"
                    },
                    CurrentVersion: {
                        propertyId: 1,
                        primitive: !0,
                        type: "Integer"
                    },
                    NextVersion: {
                        propertyId: 2,
                        primitive: !0,
                        type: "Integer"
                    },
                    Title: {
                        propertyId: 3,
                        primitive: !0,
                        type: "String"
                    },
                    Text: {
                        propertyId: 4,
                        primitive: !0,
                        type: "String"
                    },
                    Url: {
                        propertyId: 5,
                        primitive: !0,
                        type: "String"
                    }
                }
            },
            StopPlugConnectionRequest: {
                hierarchyDepth: 2e3,
                serializerID: 3007,
                extendss: {
                    domainID: "0",
                    name: "Message"
                },
                fields: {}
            },
            StopPlugConnectionResponse: {
                hierarchyDepth: 2e3,
                serializerID: 3008,
                extendss: {
                    domainID: "0",
                    name: "Message"
                },
                fields: {}
            },
            NuggetaExceptionMessage: {
                hierarchyDepth: 2e3,
                serializerID: 3009,
                extendss: {
                    domainID: "0",
                    name: "Message"
                },
                fields: {
                    ErrorCode: {
                        propertyId: 0,
                        reference: !0,
                        type: "ErrorCode",
                        domainId: "0"
                    },
                    Reason: {
                        propertyId: 1,
                        primitive: !0,
                        type: "String"
                    }
                }
            },
            NuggetaQuery: {
                hierarchyDepth: 0,
                serializerID: 3010,
                fields: {
                    domain: {
                        propertyId: 0,
                        primitive: !0,
                        type: "String"
                    },
                    start: {
                        propertyId: 1,
                        primitive: !0,
                        type: "Integer"
                    },
                    limit: {
                        propertyId: 2,
                        primitive: !0,
                        type: "Integer"
                    },
                    query: {
                        propertyId: 3,
                        primitive: !0,
                        type: "String"
                    }
                }
            },
            NRawMessage: {
                hierarchyDepth: 2e3,
                serializerID: 3011,
                extendss: {
                    domainID: "0",
                    name: "Message"
                },
                fields: {
                    content: {
                        propertyId: 0,
                        primitive: !0,
                        type: "String"
                    }
                }
            },
            NStringPair: {
                hierarchyDepth: 0,
                serializerID: 3012,
                fields: {
                    Key: {
                        propertyId: 0,
                        primitive: !0,
                        type: "String"
                    },
                    Value: {
                        propertyId: 1,
                        primitive: !0,
                        type: "String"
                    }
                }
            },
            NMessagesList: {
                hierarchyDepth: 2e3,
                serializerID: 3013,
                extendss: {
                    domainID: "0",
                    name: "Message"
                },
                fields: {
                    storables: {
                        propertyId: 0,
                        list: !0,
                        type: "Storable",
                        domainID: "0",
                        reference: !0
                    }
                }
            },
            NMonitor: {
                hierarchyDepth: 1e3,
                serializerID: 3014,
                extendss: {
                    domainID: "0",
                    name: "Storable"
                },
                fields: {
                    Type: {
                        propertyId: 0,
                        reference: !0,
                        type: "NMonitorType",
                        domainId: "0"
                    },
                    Name: {
                        propertyId: 1,
                        primitive: !0,
                        type: "String"
                    },
                    Description: {
                        propertyId: 2,
                        primitive: !0,
                        type: "String"
                    },
                    Enabled: {
                        propertyId: 3,
                        primitive: !0,
                        type: "Boolean"
                    }
                }
            }
        },
        notifications: ["NRawMessage"]
    }),
    (p = t || {}).StringUtil = function() {}
    ,
    p.StringUtil.prototype.init = function() {
        return this
    }
    ,
    p.StringUtil.pad = function(t, e) {
        for (var i = t.length; i < e; i++)
            t = "0" + t;
        return t
    }
    ,
    p.ConnectionFail = function() {}
    ,
    p.ConnectionFail.prototype = new p.Message,
    p.ConnectionFail.prototype.constructor = p.ConnectionFail,
    p.ConnectionFail.prototype.init = function() {
        return this
    }
    ,
    p.ConnectionFail.prototype.getSerializerID = function() {
        return 0
    }
    ,
    p.ConnectionFail.prototype.getDomainID = function() {
        return 0
    }
    ,
    p.ConnectionFail.prototype.clone = function() {
        return null
    }
    ,
    p.StringStream = function() {}
    ,
    p.StringStream.prototype.init = function(t) {
        return this._position = 0,
        this.str = t,
        this
    }
    ,
    p.StringStream.prototype.getStringWithSize = function(t) {
        var e = this.str.substring(this._position, this._position + t);
        return this._position = this._position + t,
        e
    }
    ,
    p.StringStream.prototype.append = function(t) {
        this.str.appendString(t),
        this._position = this.str.length1()
    }
    ,
    p.StringStream.prototype.toString = function() {
        return this.str.toString()
    }
    ,
    p.StringStream.prototype.position = function() {
        return this._position
    }
    ,
    p.StringStream.prototype.limit = function() {
        return this.str.length1()
    }
    ,
    p.StringStream.prototype.skip = function(t) {}
    ,
    p.StringStream.prototype.setPosition = function(t) {
        this._position = t
    }
    ,
    p.StringStream.prototype.ignore = function() {
        var t = parseFloat(this.getStringWithSize(1))
          , e = parseFloat(this.getStringWithSize(t));
        this._position = this._position + e
    }
    ,
    p.StringStream.prototype.ignoreLength = function(t) {
        this._position = this._position + t
    }
    ,
    p.StringStream.prototype.putShortAt = function(t, e) {
        this.writeStringAt(t, "" + e)
    }
    ,
    p.StringStream.prototype.writeStringAt = function(t, e) {
        var i = (new p.StrBuilder).init("");
        i.appendString(this.str.substring(0, t));
        var n = "" + e.length
          , r = n.length;
        i.appendString("" + r),
        i.appendString(n),
        i.appendString(e),
        i.appendString(this.str.substring(t, this.str.length1())),
        this.str = i,
        this._position = i.length1()
    }
    ,
    p.StringStream.prototype.writeString = function(t) {
        this.writeLength(t.length),
        this.append(t)
    }
    ,
    p.StringStream.prototype.getShort = function() {
        return parseFloat(this.readString())
    }
    ,
    p.StringStream.prototype.getDouble = function() {
        return parseFloat(this.readString())
    }
    ,
    p.StringStream.prototype.getInt = function() {
        return parseFloat(this.readString())
    }
    ,
    p.StringStream.prototype.getLong = function() {
        return parseFloat(this.readString())
    }
    ,
    p.StringStream.prototype.getString = function() {
        return this.readString()
    }
    ,
    p.StringStream.prototype.get = function() {
        return parseFloat(this.readString())
    }
    ,
    p.StringStream.prototype.getFloat = function() {
        return parseFloat(this.readString())
    }
    ,
    p.StringStream.prototype.putShort = function(t) {
        this.writeString("" + t)
    }
    ,
    p.StringStream.prototype.putString = function(t) {
        this.writeString(t)
    }
    ,
    p.StringStream.prototype.put = function(t) {
        this.writeString("" + t)
    }
    ,
    p.StringStream.prototype.putIntAt = function(t, e) {
        this.writeStringAt(t, "" + e)
    }
    ,
    p.StringStream.prototype.putDouble = function(t) {
        this.writeString("" + t)
    }
    ,
    p.StringStream.prototype.putInt = function(t) {
        this.writeString("" + t)
    }
    ,
    p.StringStream.prototype.putLong = function(t) {
        this.writeString("" + t)
    }
    ,
    p.StringStream.prototype.putFloat = function(t) {
        this.writeString("" + t)
    }
    ,
    p.StringStream.prototype.writeLength = function(t) {
        var e = "" + t
          , i = e.length;
        this.str.appendString("" + i),
        this.str.appendString(e)
    }
    ,
    p.StringStream.prototype.pad = function(t, e) {
        for (var i = t.length; i < e; i++)
            t = "0" + t;
        return t
    }
    ,
    p.StringStream.prototype.readString = function() {
        var t = parseFloat(this.getStringWithSize(1))
          , e = parseFloat(this.getStringWithSize(t));
        return this.getStringWithSize(e)
    }
    ,
    p.StringStream.prototype.getKeyShort = function(t) {
        return 0
    }
    ,
    p.StringStream.prototype.getKeyDouble = function(t) {
        return 0
    }
    ,
    p.StringStream.prototype.getKeyInt = function(t) {
        return 0
    }
    ,
    p.StringStream.prototype.getKeyLong = function(t) {
        return 0
    }
    ,
    p.StringStream.prototype.getKeyFloat = function(t) {
        return 0
    }
    ,
    p.StringStream.prototype.getKeyString = function(t) {
        return null
    }
    ,
    p.StringStream.prototype.putKeyShort = function(t, e) {}
    ,
    p.StringStream.prototype.putKeyString = function(t, e) {}
    ,
    p.StringStream.prototype.putKeyDouble = function(t, e) {}
    ,
    p.StringStream.prototype.putKeyInt = function(t, e) {}
    ,
    p.StringStream.prototype.putKeyLong = function(t, e) {}
    ,
    p.StringStream.prototype.putKeyFloat = function(t, e) {}
    ,
    p.SerializerFactoryType = function() {}
    ,
    p.SerializerFactoryType.prototype.init = function() {
        return this
    }
    ,
    p.SerializerFactoryType.BINARY = 0,
    p.SerializerFactoryType.STRING = 1,
    p.SerializerFactoryType.JSON = 2,
    p.StringInputStream = function() {}
    ,
    p.StringInputStream.prototype.init = function() {
        return this
    }
    ,
    p.StringInputStream.readObject = function(t, e) {
        var i = null;
        try {
            if (e.get() == p.SerializationTypes.NULL_TYPE)
                return null;
            e.getInt();
            var n = e.getInt()
              , r = t.getDomain(n);
            if (null == r)
                throw new Error("No domain available for domain id " + n,null);
            var o = r.getStringSerializerFactory();
            if (null == o)
                throw new Error("No string factory found in domain " + n,null);
            var s = e.getShort();
            i = o.readSerializable(t, e, s)
        } catch (t) {
            throw new Error("Can't read Object",t)
        }
        return i
    }
    ,
    p.StringInputStream.readObjectList = function(t, e) {
        var i = new Array;
        if (e.get() == p.SerializationTypes.NULL_TYPE)
            return i;
        e.getInt();
        for (var n = e.getShort(), r = 0; r < n; r++) {
            var o = p.StringInputStream.readObject(t, e);
            null != o && i.push(o)
        }
        return i
    }
    ,
    p.StringInputStream.readIntegerList = function(t) {
        if (t.get() == p.SerializationTypes.NULL_TYPE)
            return null;
        t.getInt();
        for (var e = t.getShort(), i = new Array, n = 0; n < e; n++) {
            t.get() == p.SerializationTypes.NULL_TYPE ? i.push(p.Utils.NULL_INTEGER) : i.push(t.getInt())
        }
        return i
    }
    ,
    p.StringInputStream.readShortList = function(t) {
        if (t.get() == p.SerializationTypes.NULL_TYPE)
            return null;
        t.getInt();
        for (var e = t.getShort(), i = new Array, n = 0; n < e; n++) {
            t.get() == p.SerializationTypes.NULL_TYPE ? i.push(p.Utils.NULL_SHORT) : i.push(t.getShort())
        }
        return i
    }
    ,
    p.StringInputStream.readLongList = function(t) {
        if (t.get() == p.SerializationTypes.NULL_TYPE)
            return null;
        t.getInt();
        for (var e = t.getShort(), i = new Array, n = 0; n < e; n++) {
            t.get() == p.SerializationTypes.NULL_TYPE ? i.push(p.Utils.NULL_LONG) : i.push(t.getLong())
        }
        return i
    }
    ,
    p.StringInputStream.readFloatList = function(t) {
        if (t.get() == p.SerializationTypes.NULL_TYPE)
            return null;
        t.getInt();
        for (var e = t.getShort(), i = new Array, n = 0; n < e; n++) {
            t.get() == p.SerializationTypes.NULL_TYPE ? i.push(p.Utils.NULL_FLOAT) : i.push(t.getFloat())
        }
        return i
    }
    ,
    p.StringInputStream.readDoubleList = function(t) {
        if (t.get() == p.SerializationTypes.NULL_TYPE)
            return null;
        t.getInt();
        for (var e = t.getShort(), i = new Array, n = 0; n < e; n++) {
            t.get() == p.SerializationTypes.NULL_TYPE ? i.push(p.Utils.NULL_DOUBLE) : i.push(t.getDouble())
        }
        return i
    }
    ,
    p.StringInputStream.readStringList = function(t) {
        if (t.get() == p.SerializationTypes.NULL_TYPE)
            return null;
        t.getInt();
        for (var e = t.getShort(), i = new Array, n = 0; n < e; n++)
            i.push(p.StringInputStream.readString(t));
        return i
    }
    ,
    p.StringInputStream.readBooleanList = function(t) {
        if (t.get() == p.SerializationTypes.NULL_TYPE)
            return null;
        t.getInt();
        for (var e = t.getShort(), i = new Array, n = 0; n < e; n++) {
            t.get() == p.SerializationTypes.NULL_TYPE ? i.push(p.Utils.NULL_BOOLEAN) : i.push(1 == t.get())
        }
        return i
    }
    ,
    p.StringInputStream.readNMap = function(t, e, i) {
        if (e.get() == p.SerializationTypes.NULL_TYPE)
            return null;
        e.getInt();
        for (var n = e.getShort(), r = (new p.NMap).init(), o = 0; o < n; o++) {
            var s = p.StringInputStream.readString(e)
              , a = null
              , h = e.position()
              , l = e.get();
            if (e.setPosition(h),
            l == p.SerializationTypes.NULL_TYPE)
                e.get();
            else if (l == p.SerializationTypes.OBJECT)
                a = p.StringInputStream.readObject(t, e);
            else if (l == p.SerializationTypes.STRING)
                a = p.StringInputStream.readString(e);
            else if (l == p.SerializationTypes.SHORT)
                a = p.StringInputStream.readShort(e);
            else if (l == p.SerializationTypes.INTEGER)
                a = p.StringInputStream.readInteger(e);
            else if (l == p.SerializationTypes.LONG)
                a = p.StringInputStream.readLong(e);
            else if (l == p.SerializationTypes.FLOAT)
                a = p.StringInputStream.readFloat(e);
            else if (l == p.SerializationTypes.DOUBLE)
                a = p.StringInputStream.readDouble(e);
            else if (l == p.SerializationTypes.BOOLEAN)
                a = p.StringInputStream.readBoolean(e);
            else if (l == p.SerializationTypes.NMAP)
                a = p.StringInputStream.readNMap(t, e, i);
            else if (l == p.SerializationTypes.LIST) {
                h = e.position(),
                l = e.get();
                var u = e.getInt();
                if (0 < e.getShort()) {
                    var c = e.get();
                    e.setPosition(h),
                    c == p.SerializationTypes.OBJECT ? a = p.StringInputStream.readObjectList(t, e) : c == p.SerializationTypes.STRING ? a = p.StringInputStream.readStringList(e) : c == p.SerializationTypes.SHORT ? a = p.StringInputStream.readShortList(e) : c == p.SerializationTypes.INTEGER ? a = p.StringInputStream.readIntegerList(e) : c == p.SerializationTypes.LONG ? a = p.StringInputStream.readLongList(e) : c == p.SerializationTypes.FLOAT ? a = p.StringInputStream.readFloatList(e) : c == p.SerializationTypes.DOUBLE ? a = p.StringInputStream.readDoubleList(e) : c == p.SerializationTypes.BOOLEAN ? a = p.StringInputStream.readBooleanList(e) : e.setPosition(h + u)
                }
            }
            r.put(s, a)
        }
        return r
    }
    ,
    p.StringInputStream.readString = function(t) {
        return t.get() == p.SerializationTypes.NULL_TYPE ? null : t.getString()
    }
    ,
    p.StringInputStream.readDate = function(t) {
        return t.get() == p.SerializationTypes.NULL_TYPE ? p.Utils.NULL_DATE : new Date(t.getLong())
    }
    ,
    p.StringInputStream.readDouble = function(t) {
        return t.get() == p.SerializationTypes.NULL_TYPE ? p.Utils.NULL_DOUBLE : t.getDouble()
    }
    ,
    p.StringInputStream.readInteger = function(t) {
        return t.get() == p.SerializationTypes.NULL_TYPE ? p.Utils.NULL_INTEGER : t.getInt()
    }
    ,
    p.StringInputStream.readLong = function(t) {
        return t.get() == p.SerializationTypes.NULL_TYPE ? p.Utils.NULL_LONG : t.getLong()
    }
    ,
    p.StringInputStream.readByte = function(t) {
        return t.get() == p.SerializationTypes.NULL_TYPE ? p.Utils.NULL_BYTE : t.get()
    }
    ,
    p.StringInputStream.readShort = function(t) {
        return t.get() == p.SerializationTypes.NULL_TYPE ? p.Utils.NULL_SHORT : t.getShort()
    }
    ,
    p.StringInputStream.readFloat = function(t) {
        return t.get() == p.SerializationTypes.NULL_TYPE ? p.Utils.NULL_FLOAT : t.getFloat()
    }
    ,
    p.StringInputStream.readBoolean = function(t) {
        return t.get() == p.SerializationTypes.NULL_TYPE ? p.Utils.NULL_BOOLEAN : 1 == t.get()
    }
    ,
    p.StringInputStream.getInteger = function(t) {
        return t.getInt()
    }
    ,
    p.StringInputStream.getLong = function(t) {
        return t.getLong()
    }
    ,
    p.StringInputStream.getShort = function(t) {
        return t.getShort()
    }
    ,
    p.StringInputStream.skipProperty = function(t) {
        var e = t.get();
        if (e != p.SerializationTypes.NULL_TYPE)
            if (e != p.SerializationTypes.OBJECT && e != p.SerializationTypes.NMAP)
                t.ignore();
            else {
                var i = t.getInt();
                t.ignoreLength(i)
            }
    }
    ,
    p.NDomainList = function() {}
    ,
    p.NDomainList.prototype.init = function() {
        return this.nDomains = new Array,
        this
    }
    ,
    p.NDomainList.prototype.addDomain = function(t) {
        this.nDomains.push(t)
    }
    ,
    p.NDomainList.prototype.getDomain = function(t) {
        for (var e = 0; e < this.nDomains.length; e++) {
            var i = this.nDomains[e];
            if (i.getDomainId() == t)
                return i
        }
        return null
    }
    ,
    p.NDomainList.prototype.getDomains = function() {
        return this.nDomains
    }
    ,
    p.NDomainList.prototype.setDomainList = function(t) {
        for (var e = 0; e < t.length; e++) {
            var i = t[e];
            this.nDomains.push(i)
        }
    }
    ,
    p.NDomainList.prototype.setDynamicFieldSerializerResolver = function(t) {
        for (var e = 0; e < this.nDomains.length; e++) {
            this.nDomains[e].setDynamicFieldSerializerResolver(t)
        }
    }
    ,
    p.NDomain = function() {}
    ,
    p.NDomain.prototype.init = function() {
        return this
    }
    ,
    p.NDomain.prototype.getDomainId = function() {
        return this.domainId
    }
    ,
    p.NDomain.prototype.setDomainId = function(t) {
        this.domainId = t
    }
    ,
    p.NDomain.prototype.getBinarySerializerFactory = function() {
        return this.binarySerializerFactory
    }
    ,
    p.NDomain.prototype.setBinarySerializerFactory = function(t) {
        this.binarySerializerFactory = t
    }
    ,
    p.NDomain.prototype.getStringSerializerFactory = function() {
        return this.stringSerializerFactory
    }
    ,
    p.NDomain.prototype.setStringSerializerFactory = function(t) {
        this.stringSerializerFactory = t
    }
    ,
    p.NDomain.prototype.getJsonSerializerFactory = function() {
        return this.jsonSerializerFactory
    }
    ,
    p.NDomain.prototype.setJsonSerializerFactory = function(t) {
        this.jsonSerializerFactory = t
    }
    ,
    p.NDomain.prototype.setDynamicFieldSerializerResolver = function(t) {
        null != this.binarySerializerFactory && this.binarySerializerFactory.setDynamicFieldSerializerResolver(t),
        null != this.stringSerializerFactory && this.stringSerializerFactory.setDynamicFieldSerializerResolver(t),
        null != this.jsonSerializerFactory && this.jsonSerializerFactory.setDynamicFieldSerializerResolver(t)
    }
    ,
    p.DomainMessageListener = function() {}
    ,
    p.DomainMessageListener.prototype.init = function(t, e) {
        return this.domainId = t,
        this.messageListener = e,
        this
    }
    ,
    p.DomainMessageListener.prototype.getDomainId = function() {
        return this.domainId
    }
    ,
    p.DomainMessageListener.prototype.getMessageListener = function() {
        return this.messageListener
    }
    ,
    p.NuggetaException = function() {}
    ,
    p.NuggetaException.prototype = new Error,
    p.NuggetaException.prototype.constructor = p.NuggetaException,
    p.NuggetaException.prototype.init = function(t, e) {
        return RuntimeException.prototype.init.call(this, t.getReason(), e),
        this.nuggetaExceptionMessage = t,
        this
    }
    ,
    p.NuggetaException.prototype.getNuggetaException = function() {
        return this.nuggetaExceptionMessage
    }
    ,
    p.StringOutputStream = function() {}
    ,
    p.StringOutputStream.prototype.init = function() {
        return this
    }
    ,
    p.StringOutputStream.writeObject = function(t, e, i) {
        var n = e
          , r = n.getDomainID()
          , o = t.getDomain(r);
        if (null == o)
            throw new Error("No domain available for domain id " + r,null);
        var s = o.getStringSerializerFactory();
        if (null == s)
            throw new Error("No binary factory found in domain " + r,null);
        if (null == e)
            return !1;
        i.put(p.SerializationTypes.OBJECT);
        var a = i.position();
        i.skip(4);
        var h = i.position();
        i.putInt(r);
        var l = n.getSerializerID();
        return i.putShort(l),
        s.write(t, n, i),
        i.putIntAt(a, i.position() - h),
        !0
    }
    ,
    p.StringOutputStream.writeObjectProperty = function(t, e, i, n) {
        return null != e && (n.putShort(i),
        p.StringOutputStream.writeObject(t, e, n),
        !0)
    }
    ,
    p.StringOutputStream.writeObjectListProperty = function(t, e, i, n) {
        return null != e && (n.putShort(i),
        p.StringOutputStream.writeObjectList(t, e, n),
        !0)
    }
    ,
    p.StringOutputStream.writeObjectList = function(t, e, i) {
        if (null == e)
            return !1;
        i.put(p.SerializationTypes.LIST);
        var n = i.position();
        i.skip(4);
        var r = e.length;
        i.putShort(r);
        for (var o = 0; o < r; o++) {
            var s = e[o];
            null == s ? i.put(p.SerializationTypes.NULL_TYPE) : p.StringOutputStream.writeObject(t, s, i)
        }
        return i.putIntAt(n, i.position() - n),
        !0
    }
    ,
    p.StringOutputStream.writeIntegerListProperty = function(t, e, i) {
        return null != t && (i.putShort(e),
        p.StringOutputStream.writeIntegerList(t, i),
        !0)
    }
    ,
    p.StringOutputStream.writeIntegerList = function(t, e) {
        if (null == t)
            return !1;
        e.put(p.SerializationTypes.LIST);
        var i = e.position();
        e.skip(4);
        var n = t.length;
        e.putShort(n);
        for (var r = 0; r < n; r++) {
            var o = t[r];
            p.Utils.isNullInteger(o) ? e.put(p.SerializationTypes.NULL_TYPE) : p.StringOutputStream.writeInteger(o, e)
        }
        return e.putIntAt(i, e.position() - i),
        !0
    }
    ,
    p.StringOutputStream.writeShortListProperty = function(t, e, i) {
        return null != t && (i.putShort(e),
        p.StringOutputStream.writeShortList(t, i),
        !0)
    }
    ,
    p.StringOutputStream.writeShortList = function(t, e) {
        if (null == t)
            return !1;
        e.put(p.SerializationTypes.LIST);
        var i = e.position();
        e.skip(4);
        var n = t.length;
        e.putShort(n);
        for (var r = 0; r < n; r++) {
            var o = t[r];
            p.Utils.isNullShort(o) ? e.put(p.SerializationTypes.NULL_TYPE) : p.StringOutputStream.writeShort(o, e)
        }
        return e.putIntAt(i, e.position() - i),
        !0
    }
    ,
    p.StringOutputStream.writeLongListProperty = function(t, e, i) {
        return null != t && (i.putShort(e),
        p.StringOutputStream.writeLongList(t, i),
        !0)
    }
    ,
    p.StringOutputStream.writeLongList = function(t, e) {
        if (null == t)
            return !1;
        e.put(p.SerializationTypes.LIST);
        var i = e.position();
        e.skip(4);
        var n = t.length;
        e.putShort(n);
        for (var r = 0; r < n; r++) {
            var o = t[r];
            p.Utils.isNullLong(o) ? e.put(p.SerializationTypes.NULL_TYPE) : p.StringOutputStream.writeLong(o, e)
        }
        return e.putIntAt(i, e.position() - i),
        !0
    }
    ,
    p.StringOutputStream.writeFloatListProperty = function(t, e, i) {
        return null != t && (i.putShort(e),
        p.StringOutputStream.writeFloatList(t, i),
        !0)
    }
    ,
    p.StringOutputStream.writeFloatList = function(t, e) {
        if (null == t)
            return !1;
        e.put(p.SerializationTypes.LIST);
        var i = e.position();
        e.skip(4);
        var n = t.length;
        e.putShort(n);
        for (var r = 0; r < n; r++) {
            var o = t[r];
            p.Utils.isNullFloat(o) ? e.put(p.SerializationTypes.NULL_TYPE) : p.StringOutputStream.writeFloat(o, e)
        }
        return e.putIntAt(i, e.position() - i),
        !0
    }
    ,
    p.StringOutputStream.writeDoubleListProperty = function(t, e, i) {
        return null != t && (i.putShort(e),
        p.StringOutputStream.writeDoubleList(t, i),
        !0)
    }
    ,
    p.StringOutputStream.writeDoubleList = function(t, e) {
        if (null == t)
            return !1;
        e.put(p.SerializationTypes.LIST);
        var i = e.position();
        e.skip(4);
        var n = t.length;
        e.putShort(n);
        for (var r = 0; r < n; r++) {
            var o = t[r];
            p.Utils.isNullDouble(o) ? e.put(p.SerializationTypes.NULL_TYPE) : p.StringOutputStream.writeDouble(o, e)
        }
        return e.putIntAt(i, e.position() - i),
        !0
    }
    ,
    p.StringOutputStream.writeBooleanListProperty = function(t, e, i) {
        return null != t && (i.putShort(e),
        p.StringOutputStream.writeBooleanList(t, i),
        !0)
    }
    ,
    p.StringOutputStream.writeBooleanList = function(t, e) {
        if (null == t)
            return !1;
        e.put(p.SerializationTypes.LIST);
        var i = e.position();
        e.skip(4);
        var n = t.length;
        e.putShort(n);
        for (var r = 0; r < n; r++) {
            var o = t[r];
            p.Utils.isNullBoolean(o) ? e.put(p.SerializationTypes.NULL_TYPE) : p.StringOutputStream.writeBoolean(o, e)
        }
        return e.putIntAt(i, e.position() - i),
        !0
    }
    ,
    p.StringOutputStream.writeStringListProperty = function(t, e, i) {
        return null != t && (i.putShort(e),
        p.StringOutputStream.writeStringList(t, i),
        !0)
    }
    ,
    p.StringOutputStream.writeStringList = function(t, e) {
        if (null == t)
            return !1;
        e.put(p.SerializationTypes.LIST);
        var i = e.position();
        e.skip(4);
        var n = t.length;
        e.putShort(n);
        for (var r = 0; r < n; r++) {
            var o = t[r];
            null == o ? e.put(p.SerializationTypes.NULL_TYPE) : p.StringOutputStream.writeString(o, e)
        }
        return e.putIntAt(i, e.position() - i),
        !0
    }
    ,
    p.StringOutputStream.writeStringProperty = function(t, e, i) {
        return !p.Utils.isNull(t) && (i.putShort(e),
        p.StringOutputStream.writeString(t, i),
        !0)
    }
    ,
    p.StringOutputStream.writeString = function(t, e) {
        return !p.Utils.isNull(t) && (e.put(p.SerializationTypes.STRING),
        e.putString(t),
        !0)
    }
    ,
    p.StringOutputStream.writeDoubleProperty = function(t, e, i) {
        return !p.Utils.isNullDouble(t) && (i.putShort(e),
        p.StringOutputStream.writeDouble(t, i),
        !0)
    }
    ,
    p.StringOutputStream.writeDouble = function(t, e) {
        return !p.Utils.isNullDouble(t) && (e.put(p.SerializationTypes.DOUBLE),
        e.putDouble(t),
        !0)
    }
    ,
    p.StringOutputStream.writeIntegerProperty = function(t, e, i) {
        return !p.Utils.isNullInteger(t) && (i.putShort(e),
        p.StringOutputStream.writeInteger(t, i),
        !0)
    }
    ,
    p.StringOutputStream.writeInteger = function(t, e) {
        return !p.Utils.isNullInteger(t) && (e.put(p.SerializationTypes.INTEGER),
        e.putInt(t),
        !0)
    }
    ,
    p.StringOutputStream.writeDateProperty = function(t, e, i) {
        return !p.Utils.isNullDate(t) && (p.StringOutputStream.writeLongProperty(t.getTime(), e, i),
        !0)
    }
    ,
    p.StringOutputStream.writeLongProperty = function(t, e, i) {
        return !p.Utils.isNullLong(t) && (i.putShort(e),
        p.StringOutputStream.writeLong(t, i),
        !0)
    }
    ,
    p.StringOutputStream.writeLong = function(t, e) {
        return !p.Utils.isNullLong(t) && (e.put(p.SerializationTypes.LONG),
        e.putLong(t),
        !0)
    }
    ,
    p.StringOutputStream.writeByte = function(t, e) {
        return !p.Utils.isNullByte(t) && (e.put(p.SerializationTypes.BYTE),
        e.put(t),
        !0)
    }
    ,
    p.StringOutputStream.writeShortProperty = function(t, e, i) {
        return !p.Utils.isNullShort(t) && (i.putShort(e),
        p.StringOutputStream.writeShort(t, i),
        !0)
    }
    ,
    p.StringOutputStream.writeShort = function(t, e) {
        return !p.Utils.isNullShort(t) && (e.put(p.SerializationTypes.SHORT),
        e.putShort(t),
        !0)
    }
    ,
    p.StringOutputStream.writeFloatProperty = function(t, e, i) {
        return !p.Utils.isNullFloat(t) && (i.putShort(e),
        p.StringOutputStream.writeFloat(t, i),
        !0)
    }
    ,
    p.StringOutputStream.writeFloat = function(t, e) {
        return !p.Utils.isNullFloat(t) && (e.put(p.SerializationTypes.FLOAT),
        e.putFloat(t),
        !0)
    }
    ,
    p.StringOutputStream.writeBooleanProperty = function(t, e, i) {
        return !p.Utils.isNullBoolean(t) && (i.putShort(e),
        p.StringOutputStream.writeBoolean(t, i),
        !0)
    }
    ,
    p.StringOutputStream.writeBoolean = function(t, e) {
        return !p.Utils.isNullBoolean(t) && (e.put(p.SerializationTypes.BOOLEAN),
        1 == t ? e.put(1) : 0 == t && e.put(0),
        !0)
    }
    ,
    p.StringOutputStream.writeNMapProperty = function(t, e, i, n, r) {
        return !p.Utils.isNull(e) && (n.putShort(i),
        p.StringOutputStream.writeNMap(t, e, n, r),
        !0)
    }
    ,
    p.StringOutputStream.writeNMap = function(t, e, i, n) {
        if (p.Utils.isNull(e))
            return !1;
        i.put(p.SerializationTypes.NMAP);
        var r = i.position();
        i.skip(4),
        i.skip(2);
        for (var o = 0, s = e.keys(); s.hasNext(); ) {
            var a = s.next()
              , h = e.get(a);
            if (null != h) {
                p.StringOutputStream.writeString(a, i);
                var l = n.getSerializationType(a, h);
                if (l == p.SerializationTypes.NULL_TYPE)
                    i.put(p.SerializationTypes.NULL_TYPE);
                else if (l == p.SerializationTypes.OBJECT)
                    p.StringOutputStream.writeObject(t, h, i);
                else if (l == p.SerializationTypes.STRING)
                    p.StringOutputStream.writeString(h, i);
                else if (l == p.SerializationTypes.SHORT)
                    p.StringOutputStream.writeShort(h, i);
                else if (l == p.SerializationTypes.INTEGER)
                    p.StringOutputStream.writeInteger(h, i);
                else if (l == p.SerializationTypes.LONG)
                    p.StringOutputStream.writeLong(h, i);
                else if (l == p.SerializationTypes.FLOAT)
                    p.StringOutputStream.writeFloat(h, i);
                else if (l == p.SerializationTypes.DOUBLE)
                    p.StringOutputStream.writeDouble(h, i);
                else if (l == p.SerializationTypes.BOOLEAN)
                    p.StringOutputStream.writeBoolean(h, i);
                else if (l == p.SerializationTypes.NMAP)
                    p.StringOutputStream.writeNMap(t, h, i, n);
                else if (l == p.SerializationTypes.LIST) {
                    var u = n.getListSerializationType(a, h);
                    if (u == p.SerializationTypes.OBJECT) {
                        var c = h;
                        p.StringOutputStream.writeObjectList(t, c, i)
                    } else
                        u == p.SerializationTypes.STRING ? p.StringOutputStream.writeStringList(h, i) : u == p.SerializationTypes.SHORT ? p.StringOutputStream.writeShortList(h, i) : u == p.SerializationTypes.INTEGER ? p.StringOutputStream.writeIntegerList(h, i) : u == p.SerializationTypes.LONG ? p.StringOutputStream.writeLongList(h, i) : u == p.SerializationTypes.FLOAT ? p.StringOutputStream.writeFloatList(h, i) : u == p.SerializationTypes.DOUBLE ? p.StringOutputStream.writeDoubleList(h, i) : u == p.SerializationTypes.BOOLEAN ? p.StringOutputStream.writeBooleanList(h, i) : u == p.SerializationTypes.NULL_TYPE && i.put(p.SerializationTypes.NULL_TYPE)
                }
                o++
            }
        }
        return i.putShortAt(r, o),
        i.putIntAt(r, i.position() - r),
        !0
    }
    ,
    p.ConnectionStop = function() {}
    ,
    p.ConnectionStop.prototype = new p.Message,
    p.ConnectionStop.prototype.constructor = p.ConnectionStop,
    p.ConnectionStop.prototype.init = function() {
        return this
    }
    ,
    p.ConnectionStop.prototype.getSerializerID = function() {
        return 0
    }
    ,
    p.ConnectionStop.prototype.clone = function() {
        return (new p.ConnectionStop).init()
    }
    ,
    p.ConnectionStop.prototype.toString = function() {
        return ""
    }
    ,
    p.ConnectionStop.prototype.equals = function(t) {
        return !1
    }
    ,
    p.ConnectionStop.prototype.getDomainID = function() {
        return 0
    }
    ,
    p.ConnectionLost = function() {}
    ,
    p.ConnectionLost.prototype = new p.Message,
    p.ConnectionLost.prototype.constructor = p.ConnectionLost,
    p.ConnectionLost.prototype.init = function() {
        return this
    }
    ,
    p.ConnectionLost.prototype.getSerializerID = function() {
        return 0
    }
    ,
    p.ConnectionLost.prototype.clone = function() {
        return (new p.ConnectionLost).init()
    }
    ,
    p.ConnectionLost.prototype.toString = function() {
        return ""
    }
    ,
    p.ConnectionLost.prototype.equals = function(t) {
        return !1
    }
    ,
    p.ConnectionLost.prototype.getDomainID = function() {
        return 0
    }
    ,
    p.NError = function() {}
    ,
    p.NError.prototype.getMessage = function() {
        return this.errorMessage
    }
    ,
    p.NError.prototype.getCause = function() {
        return this.cause
    }
    ,
    p.NError.prototype.init = function(t, e) {
        return this.errorMessage = t,
        this.cause = e,
        this
    }
    ,
    p.NError.prototype.toString = function() {
        var t = "Error Message : " + this.errorMessage;
        return null != this.cause && (t += " cause : " + this.cause.toString()),
        t
    }
    ,
    p.InvalidVersion = function() {}
    ,
    p.InvalidVersion.prototype = new p.Message,
    p.InvalidVersion.prototype.constructor = p.InvalidVersion,
    p.InvalidVersion.prototype.init = function() {
        return this
    }
    ,
    p.InvalidVersion.prototype.getSerializerID = function() {
        return 0
    }
    ,
    p.InvalidVersion.prototype.clone = function() {
        var t = (new p.InvalidVersion).init();
        return null != this._MessageId && t.setMessageId(this._MessageId),
        null != this._RequestId && t.setRequestId(this._RequestId),
        t
    }
    ,
    p.InvalidVersion.prototype.toString = function() {
        var t = "";
        return t += "[InvalidVersion --\x3e ",
        null != this._MessageId && (t += "_MessageId=" + this._MessageId + "| "),
        null != this._RequestId && (t += "_RequestId=" + this._RequestId + "| "),
        t += "]"
    }
    ,
    p.InvalidVersion.prototype.equals = function(t) {
        return !1
    }
    ,
    p.InvalidVersion.prototype.getDomainID = function() {
        return 0
    }
    ,
    p.ConnectionReady = function() {}
    ,
    p.ConnectionReady.prototype = new p.Message,
    p.ConnectionReady.prototype.constructor = p.ConnectionReady,
    p.ConnectionReady.prototype.init = function() {
        return this
    }
    ,
    p.ConnectionReady.prototype.getSerializerID = function() {
        return 0
    }
    ,
    p.ConnectionReady.prototype.clone = function() {
        return (new p.ConnectionReady).init()
    }
    ,
    p.ConnectionReady.prototype.toString = function() {
        return ""
    }
    ,
    p.ConnectionReady.prototype.equals = function(t) {
        return !1
    }
    ,
    p.ConnectionReady.prototype.getDomainID = function() {
        return 0
    }
    ,
    p.SerializationTypes = function() {}
    ,
    p.SerializationTypes.prototype.init = function() {
        return this
    }
    ,
    p.SerializationTypes.NULL_TYPE = 0,
    p.SerializationTypes.OBJECT = 1,
    p.SerializationTypes.LIST = 2,
    p.SerializationTypes.BYTE = 10,
    p.SerializationTypes.INTEGER = 11,
    p.SerializationTypes.SHORT = 12,
    p.SerializationTypes.LONG = 13,
    p.SerializationTypes.FLOAT = 14,
    p.SerializationTypes.DOUBLE = 15,
    p.SerializationTypes.STRING = 16,
    p.SerializationTypes.CHAR = 17,
    p.SerializationTypes.BOOLEAN = 18,
    p.SerializationTypes.NMAP = 19,
    p.CompositeNDomainList = function() {}
    ,
    p.CompositeNDomainList.prototype = new p.NDomainList,
    p.CompositeNDomainList.prototype.constructor = p.CompositeNDomainList,
    p.CompositeNDomainList.prototype.init = function() {
        return this
    }
    ,
    p.CompositeNDomainList.prototype.setDomainLists = function(t) {
        for (var e = 0; e < t.length; e++) {
            var i = t[e];
            this.setDomainList(i.getDomains())
        }
    }
    ;
    var i = p.MemoryManagement = function() {}
    ;
    i.prototype.init = function() {
        return this
    }
    ,
    i.free = function() {}
    ,
    i.dupString = function(t) {
        return t
    }
    ,
    i._clone = function(t) {
        return t
    }
    ,
    (p.ByteBuffer = function() {}
    ).prototype.init = function() {
        return this
    }
    ;
    var n = p.ByteUtil = function() {}
    ;
    n.prototype.init = function() {
        return this
    }
    ,
    n.getBytes = function(t) {
        t = t.replace(/\r\n/g, "\n");
        for (var e = [], i = 0, n = 0; n < t.length; n++) {
            var r = t.charCodeAt(n);
            r < 128 ? e[i++] = r : (r < 2048 ? e[i++] = r >> 6 | 192 : (e[i++] = r >> 12 | 224,
            e[i++] = r >> 6 & 63 | 128),
            e[i++] = 63 & r | 128)
        }
        return e
    }
    ,
    n.getString = function(t) {
        for (var e = [], i = 0, n = 0; i < t.length; ) {
            var r = t[i++];
            if (r < 128)
                e[n++] = String.fromCharCode(r);
            else if (191 < r && r < 224) {
                var o = t[i++];
                e[n++] = String.fromCharCode((31 & r) << 6 | 63 & o)
            } else {
                o = t[i++];
                var s = t[i++];
                e[n++] = String.fromCharCode((15 & r) << 12 | (63 & o) << 6 | 63 & s)
            }
        }
        return e.join("")
    }
    ;
    var r = p.DefaultDynamicFieldResolver = function() {}
    ;
    r.prototype.init = function() {
        return this
    }
    ,
    r.prototype.getSerializationType = function(t, e) {
        return null == e ? p.SerializationTypes.NULL_TYPE : e instanceof p.Storable ? p.SerializationTypes.OBJECT : e instanceof p.NMap ? p.SerializationTypes.NMAP : "string" == typeof e ? p.SerializationTypes.STRING : "boolean" == typeof e ? p.SerializationTypes.BOOLEAN : "number" == typeof e ? e % 1 == 0 ? 2147483647 < e ? p.SerializationTypes.LONG : p.SerializationTypes.INTEGER : p.SerializationTypes.DOUBLE : Array.isArray(e) ? e.length <= 0 ? p.SerializationTypes.NULL_TYPE : p.SerializationTypes.LIST : p.SerializationTypes.NULL_TYPE
    }
    ,
    r.prototype.getListSerializationType = function(t, e) {
        var i = e[0];
        return this.getSerializationType(t, i)
    }
    ;
    var s = p.NamedDynamicFieldResolver = function() {
        this.typeByName = [],
        this.listTypeByName = []
    }
    ;
    s.prototype = new p.DefaultDynamicFieldResolver,
    s.constructor = p.NamedDynamicFieldResolver,
    s.prototype.init = function() {
        return this
    }
    ,
    s.prototype.registerField = function(t, e) {
        this.typeByName[t] = e
    }
    ,
    s.prototype.registerListField = function(t, e) {
        this.typeByName[t] = p.SerializationTypes.LIST,
        this.listTypeByName[t] = e
    }
    ,
    s.prototype.getSerializationType = function(t, e) {
        var i = this.typeByName[t];
        return null != i ? i : p.DefaultDynamicFieldResolver.prototype.getSerializationType.call(this, t, e)
    }
    ,
    s.prototype.getListSerializationType = function(t, e) {
        var i = this.listTypeByName[t];
        return null != i ? i : p.DefaultDynamicFieldResolver.prototype.getListSerializationType.call(this, t, e)
    }
    ;
    var a = p.StrBuilder = function() {}
    ;
    a.prototype.init = function(t) {
        return this.builder = new String(t),
        this._position = 0,
        this
    }
    ,
    a.prototype.substring = function(t, e) {
        return this.builder.substring(t, e)
    }
    ,
    a.prototype.appendString = function(t) {
        this.builder += t
    }
    ,
    a.prototype.length1 = function() {
        return this.builder.length
    }
    ,
    a.prototype.replace = function(t, e, i) {
        this.builder = this.builder.substring(0, t) + i + this.builder.substring(e)
    }
    ,
    a.prototype.insert = function(t, e) {
        this.builder = this.builder.substring(0, t) + e + this.builder.substring(t)
    }
    ,
    a.prototype.toString = function() {
        return this.builder
    }
    ;
    var h = p.NMap = function() {
        this.inner = []
    }
    ;
    h.prototype.init = function() {
        return this
    }
    ,
    h.prototype.put = function(t, e) {
        this.inner[t] = e
    }
    ,
    h.prototype.get = function(t) {
        return this.inner[t]
    }
    ,
    h.prototype.keys = function() {
        var e = Object.keys(this.inner)
          , i = 0;
        return {
            hasNext: function() {
                return i < e.length
            },
            next: function() {
                var t = e[i];
                return i++,
                t
            }
        }
    }
    ,
    h.prototype.clear = function() {
        this.inner = []
    }
    ,
    h.prototype.size = function() {
        return Object.keys(this.inner).length
    }
    ,
    h.prototype.clone = function() {
        return this
    }
    ,
    h.prototype.toString = function() {
        for (var t = "[", e = this.keys(); e.hasNext(); ) {
            var i = e.next();
            t += i + "=" + this.get(i) + ", "
        }
        return t += "]"
    }
    ;
    var p, u = p.Utils = function() {}
    ;
    u.prototype.init = function() {
        return this
    }
    ,
    u.NULL_INTEGER = null,
    u.NULL_SHORT = null,
    u.NULL_LONG = null,
    u.NULL_FLOAT = null,
    u.NULL_DOUBLE = null,
    u.NULL_BOOLEAN = null,
    u.NULL_BYTE = null,
    u.NULL_DATE = null,
    u.isNull = function(t) {
        return null == t
    }
    ,
    u.isNullInteger = function(t) {
        return null == t
    }
    ,
    u.isNullShort = function(t) {
        return null == t
    }
    ,
    u.isNullLong = function(t) {
        return null == t
    }
    ,
    u.isNullLong = function(t) {
        return null == t
    }
    ,
    u.isNullDouble = function(t) {
        return null == t
    }
    ,
    u.isNullFloat = function(t) {
        return null == t
    }
    ,
    u.isNullBoolean = function(t) {
        return null == t
    }
    ,
    u.isNullByte = function(t) {
        return null == t
    }
    ,
    u.isNullDate = function(t) {
        return null == t
    }
    ,
    p.nruntime.loadDeffered(),
    (p = t || {}).AbstractDisconnectedApi = function() {}
    ,
    p.AbstractDisconnectedApi.prototype.init = function() {
        return this
    }
    ,
    p.AbstractDisconnectedApi.prototype.fill = function(t) {}
    ,
    p.AbstractDisconnectedApi.prototype.setDisconnectedPlug = function(t) {
        (this.basicNuggetaPlug = t).addDomain(this.domain)
    }
    ,
    p.AbstractDisconnectedApi.prototype.request = function(t, e, i) {
        this.fill(t),
        this.basicNuggetaPlug.request(t, e, i)
    }
    ,
    p.AbstractDisconnectedApi.prototype.send = function(t) {
        this.fill(t),
        this.basicNuggetaPlug.sendMessage(t)
    }
    ,
    p.DisconnectedPlug = function() {
        this.domains = (new p.NDomainList).init(),
        this.endpoint = "",
        this.requestId = 0
    }
    ,
    p.DisconnectedPlug.prototype.init = function() {
        return this
    }
    ,
    p.DisconnectedPlug.prototype.encode = function(t) {
        var e = (new p.StrBuilder).init("")
          , i = (new p.StringStream).init(e);
        return p.StringOutputStream.writeObject(this.domains, t, i),
        i.toString()
    }
    ,
    p.DisconnectedPlug.prototype.decode = function(t) {
        var e = (new p.StrBuilder).init(t)
          , i = (new p.StringStream).init(e);
        return p.StringInputStream.readObject(this.domains, i)
    }
    ,
    p.DisconnectedPlug.prototype.addDomain = function(t) {
        return this.domains.addDomain(t),
        this
    }
    ,
    p.DisconnectedPlug.prototype.setEndpoint = function(t) {
        return this.endpoint = "//" + t + "/api",
        this
    }
    ,
    p.DisconnectedPlug.prototype.sendMessage = function(t) {
        var e = this.encode(t);
        this.post(e, function(t) {})
    }
    ,
    p.DisconnectedPlug.prototype.request = function(t, i, n) {
        var r = this
          , e = this.encode(t);
        this.post(e, function(t) {
            var e = r.decode(t);
            e instanceof p.NuggetaExceptionMessage ? n ? n(e) : console.error("serror: " + e) : i(e)
        }, function(t) {
            if (n) {
                var e = (new p.NuggetaExceptionMessage).init();
                e.setReason(t),
                n(e)
            } else
                console.error(t)
        })
    }
    ,
    p.DisconnectedPlug.prototype.post = function(t, e, i) {
        var n = new XMLHttpRequest;
        n.open("POST", this.endpoint),
        n.onreadystatechange = function() {
            4 == n.readyState && (200 == n.status ? (e(n.responseText),
            n.onreadystatechange = null) : i("Invalid status: " + n.status + ", text: " + n.responseText)),
            n.readyState <= 0 && (i("Invalid ready state: " + n.readyState),
            n.onreadystatechange = null)
        }
        ,
        n.setRequestHeader("Content-type", "application/x-www-form-urlencoded"),
        n.send(t)
    }
    ,
    (p = t || {}).FoldingNetworkConnection = function() {}
    ,
    p.FoldingNetworkConnection.prototype.init = function(t) {
        return this.connections = new Array,
        this.connection = null,
        this.connectionReadyListenerCollection = (new p.ConnectionReadyListenerCollection).init(),
        this.connectionLostListenerCollection = (new p.ConnectionLostListenerCollection).init(),
        this.connectionFailListenerCollection = (new p.ConnectionFailListenerCollection).init(),
        this.connectionInvalidVersionListenerCollection = (new p.ConnectionInvalidVersionDetectedListenerCollection).init(),
        this.log = p.NLoggerFactory.getLogger("FoldingNetworkConnection"),
        this.messageListener = t,
        this
    }
    ,
    p.FoldingNetworkConnection.prototype.start = function() {
        this.tryNextConnection()
    }
    ,
    p.FoldingNetworkConnection.prototype.tryNextConnection = function() {
        var t = this;
        0 != this.connections.length ? (null != this.connection && (this.connection.removeConnectionReadyListener(this.connectionReadyListener),
        this.connection.removeConnectionFailListener(this.connectionFailListener),
        this.connection.removeConnectionLostListener(this.connectionLostListener),
        this.connection.removeConnectionInvalidVersionDetectedListener(this.connectionInvalidVersionDetectedListener),
        p.MemoryManagement.free(this.connectionReadyListener),
        p.MemoryManagement.free(this.connectionFailListener),
        p.MemoryManagement.free(this.connectionLostListener),
        p.MemoryManagement.free(this.connectionInvalidVersionDetectedListener)),
        this.connection = this.connections[0],
        this.connections.splice(0, 1),
        this.connectionReadyListener = function() {
            t.connection.removeConnectionReadyListener(t.connectionReadyListener),
            t.connectionReadyListenerCollection.fireConnectionReady()
        }
        ,
        t.connection.addConnectionReadyListener(t.connectionReadyListener),
        t.connectionLostListener = function() {
            t.connection.removeConnectionLostListener(t.connectionLostListener),
            t.connectionLostListenerCollection.fireConnectionLost()
        }
        ,
        t.connection.addConnectionLostListener(t.connectionLostListener),
        t.connectionFailListener = function() {
            t.connection.removeConnectionFailListener(t.connectionFailListener),
            t.tryNextConnection()
        }
        ,
        t.connection.addConnectionFailListener(t.connectionFailListener),
        t.connectionInvalidVersionDetectedListener = function() {
            t.connection.removeConnectionInvalidVersionDetectedListener(t.connectionInvalidVersionDetectedListener),
            t.connectionInvalidVersionListenerCollection.fireInvalidVersionDetected()
        }
        ,
        t.connection.addConnectionInvalidVersionDetectedListener(t.connectionInvalidVersionDetectedListener),
        t.connection.start()) : t.connectionFailListenerCollection.fireConnectionFail()
    }
    ,
    p.FoldingNetworkConnection.prototype.stop = function() {
        null != this.connection && this.connection.stop()
    }
    ,
    p.FoldingNetworkConnection.prototype.sendMessage = function(t) {
        this.connection.sendMessage(t)
    }
    ,
    p.FoldingNetworkConnection.prototype.addConnection = function(t) {
        this.connections.push(t)
    }
    ,
    p.FoldingNetworkConnection.prototype.addConnectionReadyListener = function(t) {
        this.connectionReadyListenerCollection.add(t)
    }
    ,
    p.FoldingNetworkConnection.prototype.addConnectionLostListener = function(t) {
        this.connectionLostListenerCollection.add(t)
    }
    ,
    p.FoldingNetworkConnection.prototype.addConnectionFailListener = function(t) {
        this.connectionFailListenerCollection.add(t)
    }
    ,
    p.FoldingNetworkConnection.prototype.addConnectionInvalidVersionDetectedListener = function(t) {
        this.connectionInvalidVersionListenerCollection.add(t)
    }
    ,
    p.FoldingNetworkConnection.prototype.removeConnectionInvalidVersionDetectedListener = function(t) {
        this.connectionInvalidVersionListenerCollection.remove(t)
    }
    ,
    p.FoldingNetworkConnection.prototype.removeConnectionReadyListener = function(t) {
        this.connectionReadyListenerCollection.remove(t)
    }
    ,
    p.FoldingNetworkConnection.prototype.removeConnectionLostListener = function(t) {
        this.connectionLostListenerCollection.remove(t)
    }
    ,
    p.FoldingNetworkConnection.prototype.removeConnectionFailListener = function(t) {
        this.connectionFailListenerCollection.remove(t)
    }
    ,
    p.FoldingNetworkConnection.prototype.sendStopMessage = function(t, e) {
        this.connection.sendStopMessage(t, e)
    }
    ,
    p.FoldingNetworkConnection.prototype.onHeartBeat = function() {
        this.connection.onHeartBeat()
    }
    ,
    p.ConnectionLostListenerCollection = function() {}
    ,
    p.ConnectionLostListenerCollection.prototype.init = function() {
        return this.connectionLostListeners = new Array,
        this
    }
    ,
    p.ConnectionLostListenerCollection.prototype.fireConnectionLost = function() {
        for (var t = this.connectionLostListeners.length, e = 0; e < t; e++) {
            (0,
            this.connectionLostListeners[e])()
        }
    }
    ,
    p.ConnectionLostListenerCollection.prototype.getListeners = function() {
        return this.connectionLostListeners
    }
    ,
    p.ConnectionLostListenerCollection.prototype.add = function(t) {
        this.connectionLostListeners.push(t)
    }
    ,
    p.ConnectionLostListenerCollection.prototype.remove = function(t) {
        if (0 < this.connectionLostListeners.length) {
            var e = this.connectionLostListeners.indexOf(t);
            0 <= e && this.connectionLostListeners.splice(this.connectionLostListeners.indexOf(e), 1)
        }
    }
    ,
    p.AbstractConnectionManager = function() {}
    ,
    p.AbstractConnectionManager.prototype.init = function(t) {
        return this.connectionReadyListenerCollection = (new p.ConnectionReadyListenerCollection).init(),
        this.connectionLostListenerCollection = (new p.ConnectionLostListenerCollection).init(),
        this.connectionFailListenerCollection = (new p.ConnectionFailListenerCollection).init(),
        this.connectionInvalidVersionListenerCollection = (new p.ConnectionInvalidVersionDetectedListenerCollection).init(),
        this.name = "",
        this.forceStop = !1,
        this.name = t,
        this
    }
    ,
    p.AbstractConnectionManager.prototype.start = function(t) {
        this.connection = t,
        this.forceStop = !1
    }
    ,
    p.AbstractConnectionManager.prototype.sendMessage = function(t) {
        null != this.connection ? this.connection.sendMessage(t) : this.log.error("**************************** No connection available to sendMessage , did you wait for StartResponse before sending any message ? ")
    }
    ,
    p.AbstractConnectionManager.prototype.addConnectionReady = function(t) {
        this.connectionReadyListenerCollection.add(t)
    }
    ,
    p.AbstractConnectionManager.prototype.removeConnectionReadyListener = function(t) {
        this.connectionReadyListenerCollection.remove(t)
    }
    ,
    p.AbstractConnectionManager.prototype.addConnectionLost = function(t) {
        this.connectionLostListenerCollection.add(t)
    }
    ,
    p.AbstractConnectionManager.prototype.removeConnectionLostListener = function(t) {
        this.connectionLostListenerCollection.remove(t)
    }
    ,
    p.AbstractConnectionManager.prototype.addConnectionFail = function(t) {
        this.connectionFailListenerCollection.add(t)
    }
    ,
    p.AbstractConnectionManager.prototype.removeConnectionFailListener = function(t) {
        this.connectionFailListenerCollection.remove(t)
    }
    ,
    p.AbstractConnectionManager.prototype.addConnectionInvalidVersionDetected = function(t) {
        this.connectionInvalidVersionListenerCollection.add(t)
    }
    ,
    p.AbstractConnectionManager.prototype.removeConnectionInvalidVersionDetected = function(t) {
        this.connectionInvalidVersionListenerCollection.remove(t)
    }
    ,
    p.AbstractConnectionManager.prototype.stop = function() {
        this.forceStop = !0,
        null != this.connection && (this.connection.stop(),
        this.connection = null)
    }
    ,
    p.AbstractConnectionManager.prototype.isForceStopped = function() {
        return this.forceStop
    }
    ,
    p.AbstractConnectionManager.prototype.getConnection = function() {
        return this.connection
    }
    ,
    p.AbstractConnectionManager.prototype.sendStopMessage = function() {
        null != this.connection && this.connection.sendStopMessage((new p.StopPlugConnectionRequest).init(), (new p.StopPlugConnectionResponse).init())
    }
    ,
    p.ConnectionManager = function() {}
    ,
    p.ConnectionManager.prototype = new p.AbstractConnectionManager,
    p.ConnectionManager.prototype.constructor = p.ConnectionManager,
    p.ConnectionManager.prototype.init = function(t) {
        return this.started = !1,
        p.AbstractConnectionManager.prototype.init.call(this, t),
        this.log = p.NLoggerFactory.getLogger("ConnectionManager"),
        this
    }
    ,
    p.ConnectionManager.prototype.start = function(t) {
        p.AbstractConnectionManager.prototype.start.call(this, t),
        this.installConnectionListeners(this.connection),
        this.connection.start()
    }
    ,
    p.ConnectionManager.prototype.installConnectionListeners = function(t) {
        var e = this;
        t.addConnectionReadyListener(function() {
            e.started = !0,
            e.connectionReadyListenerCollection.fireConnectionReady()
        }),
        t.addConnectionLostListener(function() {
            e.started = !1,
            e.connectionLostListenerCollection.fireConnectionLost()
        }),
        t.addConnectionFailListener(function() {
            e.started = !1,
            e.connectionFailListenerCollection.fireConnectionFail()
        }),
        t.addConnectionInvalidVersionDetectedListener(function() {
            e.connectionInvalidVersionListenerCollection.fireInvalidVersionDetected()
        })
    }
    ,
    p.ConnectionManager.prototype.stop = function() {
        p.AbstractConnectionManager.prototype.stop.call(this),
        this.started = !1
    }
    ,
    p.ConnectionManager.prototype.isStarted = function() {
        return this.started
    }
    ,
    p.ConnectionManager.prototype.onHeartBeat = function() {
        null != this.connection && this.connection.onHeartBeat()
    }
    ,
    p.AbstractNetworkConnection = function() {}
    ,
    p.AbstractNetworkConnection.prototype.init = function(t, e, i) {
        var n = this;
        return this.connectionReadyListenerCollection = (new p.ConnectionReadyListenerCollection).init(),
        this.connectionFailListenerCollection = (new p.ConnectionFailListenerCollection).init(),
        this.connectionLostListenerCollection = (new p.ConnectionLostListenerCollection).init(),
        this.connectionInvalidVersionDetectedListenerCollection = (new p.ConnectionInvalidVersionDetectedListenerCollection).init(),
        this.connectionState = p.ConnectionState.INITIAL,
        this.domainList = e,
        this.messageListener = i,
        this.name = t,
        this.connectionLostHandler = function() {
            n.connectionState == p.ConnectionState.STARTED && n.connectionLostListenerCollection.fireConnectionLost(),
            n.connectionState == p.ConnectionState.STOPPING && n.tryStop()
        }
        ,
        n.connectionSendFailHandler = function() {
            n.connectionState == p.ConnectionState.STARTED && n.connectionLostListenerCollection.fireConnectionLost(),
            n.connectionState == p.ConnectionState.STOPPING && n.tryStop()
        }
        ,
        this
    }
    ,
    p.AbstractNetworkConnection.prototype.tryStop = function() {}
    ,
    p.AbstractNetworkConnection.prototype.addConnectionReadyListener = function(t) {
        this.connectionReadyListenerCollection.add(t)
    }
    ,
    p.AbstractNetworkConnection.prototype.removeConnectionReadyListener = function(t) {
        this.connectionReadyListenerCollection.remove(t)
    }
    ,
    p.AbstractNetworkConnection.prototype.addConnectionLostListener = function(t) {
        this.connectionLostListenerCollection.add(t)
    }
    ,
    p.AbstractNetworkConnection.prototype.removeConnectionLostListener = function(t) {
        this.connectionLostListenerCollection.remove(t)
    }
    ,
    p.AbstractNetworkConnection.prototype.addConnectionFailListener = function(t) {
        this.connectionFailListenerCollection.add(t)
    }
    ,
    p.AbstractNetworkConnection.prototype.removeConnectionFailListener = function(t) {
        this.connectionFailListenerCollection.remove(t)
    }
    ,
    p.AbstractNetworkConnection.prototype.addConnectionInvalidVersionDetectedListener = function(t) {
        this.connectionInvalidVersionDetectedListenerCollection.add(t)
    }
    ,
    p.AbstractNetworkConnection.prototype.removeConnectionInvalidVersionDetectedListener = function(t) {
        this.connectionInvalidVersionDetectedListenerCollection.remove(t)
    }
    ,
    p.AbstractNetworkConnection.prototype.start = function() {}
    ,
    p.AbstractNetworkConnection.prototype.stop = function() {}
    ,
    p.AbstractNetworkConnection.prototype.sendMessage = function(t) {}
    ,
    p.AbstractNetworkConnection.prototype.sendStopMessage = function(t, e) {}
    ,
    p.AbstractNetworkConnection.prototype.onHeartBeat = function() {}
    ,
    p.HttpConnection = function() {}
    ,
    p.HttpConnection.prototype = new p.AbstractNetworkConnection,
    p.HttpConnection.prototype.constructor = p.HttpConnection,
    p.HttpConnection.prototype.init = function(t, e, i, n, r, o, s) {
        null == p.HttpConnection.PROTOCOL && (p.HttpConnection.PROTOCOL = "x");
        return this.log = p.NLoggerFactory.getLogger("HttpConnection"),
        p.AbstractNetworkConnection.prototype.init.call(this, t, e, i),
        this.log = p.NLoggerFactory.getLogger("HttpConnection"),
        p.NHttpRequestImpl.isSecured() ? this.url = "https://" + n + ":" + o + s : this.url = "http://" + n + ":" + r + s,
        this
    }
    ,
    p.HttpConnection.prototype.start = function() {
        var e = this;
        if (this.connectionState == p.ConnectionState.INITIAL) {
            this.connectionState = p.ConnectionState.STARTING,
            this.network = (new p.Network).init(this.domainList, this.messageListener, this.connectionInvalidVersionDetectedListenerCollection, this.connectionLostListenerCollection);
            var t = (new p.NHttpRequestImpl).init()
              , i = p.NSystem.currentTimeMillis();
            t.setWithCredentials(!0),
            t.get(e.name, e.url + "?init=init&p=" + p.HttpConnection.PROTOCOL + "&id=" + i, function(t) {
                e.connectionState == p.ConnectionState.STARTING ? (e.sessionId = t,
                e.connectionState = p.ConnectionState.STARTED,
                e.connectionReadyListenerCollection.fireConnectionReady(),
                e.poll()) : e.log.error("invalid connection status")
            }, function() {
                e.connectionState == p.ConnectionState.STARTING ? e.connectionFailListenerCollection.fireConnectionFail() : e.log.error("invalid connection status")
            })
        }
    }
    ,
    p.HttpConnection.prototype.poll = function() {
        var i = this;
        if (this.connectionState == p.ConnectionState.STARTED) {
            var t = (new p.NHttpRequestImpl).init()
              , e = p.NSystem.currentTimeMillis();
            t.get(i.name, i.url + "?session_id=" + i.sessionId + "&id=" + e + "&p=" + p.HttpConnection.PROTOCOL + "&send=p", function(t) {
                try {
                    if (i.connectionState != p.ConnectionState.STARTED)
                        return;
                    var e = t;
                    if (null != e && 0 < e.length && "INVALID_SESSION_ID" == e)
                        return void i.connectionLostListenerCollection.fireConnectionLost();
                    i.network.onStrData(e),
                    i.poll()
                } catch (t) {
                    i.dead || (i.dead = !0,
                    i.log.debugCause("can't poll: ", t),
                    i.connectionLostListenerCollection.fireConnectionLost())
                }
            }, function() {
                i.connectionState == p.ConnectionState.STARTED && i.connectionLostListenerCollection.fireConnectionLost()
            })
        }
    }
    ,
    p.HttpConnection.prototype.stop = function() {
        this.connectionState != p.ConnectionState.STARTED ? (this.connectionState = p.ConnectionState.STOPPED,
        this.tryStop()) : this.connectionState != p.ConnectionState.STARTING ? (this.connectionState = p.ConnectionState.STOPPED,
        this.tryStop()) : this.log.error("invalid status " + this.connectionState)
    }
    ,
    p.HttpConnection.prototype.tryStop = function() {}
    ,
    p.HttpConnection.prototype.sendMessage = function(t) {
        this.connectionState == p.ConnectionState.STARTED && this._sendMessage(t)
    }
    ,
    p.HttpConnection.prototype.sendStopMessage = function(t, e) {
        this.connectionState = p.ConnectionState.STOPPING,
        this._sendMessage(t);
        try {
            this.messageListener(e)
        } catch (t) {
            this.log.errorCause("Error occured while processing message : ", t)
        }
    }
    ,
    p.HttpConnection.prototype._sendMessage = function(t) {
        var e = this
          , i = (new p.NHttpRequestImpl).init()
          , n = e.network.prepareStrPacket(t)
          , r = p.NSystem.currentTimeMillis();
        i.post(e.name, e.url + "?session_id=" + e.sessionId + "&id=" + r + "&p=" + p.HttpConnection.PROTOCOL + "&send=send", n, function(t) {}, function() {
            e.connectionState == p.ConnectionState.STARTED && e.connectionLostListenerCollection.fireConnectionLost()
        })
    }
    ,
    p.BasicNuggetaPlug = function() {}
    ,
    p.BasicNuggetaPlug.prototype.init = function() {
        null == p.BasicNuggetaPlug.logger && (p.BasicNuggetaPlug.logger = p.NLoggerFactory.getLogger("BasicNuggetaPlug"));
        return this.connectionManager = (new p.ConnectionManager).init("basic-plug"),
        this.messagesListeners = new Array,
        this.domainMessageListeners = new Array,
        this.messageCounter = 0,
        this.lastHeartBeatTime = 0,
        this.connectionFactory = (new p.ConnectionFactoryImpl).init(p.NConnectionConf.getLayers()),
        this
    }
    ,
    p.BasicNuggetaPlug.prototype.start = function() {
        var o = this;
        if (this.isStarted())
            p.BasicNuggetaPlug.logger.error("Error Cannot start ! Plug already started");
        else {
            this.lastHeartBeatTime = p.NSystem.currentTimeMillis();
            o.connectionManager.start(o.connectionFactory.newConnection("basic-plug", function(t) {
                if (o.connectionManager.onHeartBeat(),
                o.lastHeartBeatTime = p.NSystem.currentTimeMillis(),
                t instanceof p.HeartBeatRequest) {
                    var e = (new p.HeartBeatResponse).init();
                    return o.connectionManager.sendMessage(e),
                    p.MemoryManagement.free(t),
                    void p.MemoryManagement.free(e)
                }
                var i = t.getDomainID() + ""
                  , n = o.getDomainMessageListener(i);
                p.MemoryManagement.free(i),
                null != n && n(p.MemoryManagement._clone(t));
                for (var r = 0; r < o.messagesListeners.length; r++)
                    (0,
                    o.messagesListeners[r])(p.MemoryManagement._clone(t));
                p.MemoryManagement.free(t)
            }, o.url))
        }
    }
    ,
    p.BasicNuggetaPlug.prototype.getDomainMessageListener = function(t) {
        for (var e = 0; e < this.domainMessageListeners.length; e++) {
            var i = this.domainMessageListeners[e];
            if (t == i.getDomainId() + "")
                return i.getMessageListener()
        }
        return null
    }
    ,
    p.BasicNuggetaPlug.prototype.sendMessage = function(t) {
        var e = this.nextMessageId();
        return t.setMessageId(e),
        this.connectionManager.sendMessage(t),
        e
    }
    ,
    p.BasicNuggetaPlug.prototype.addMessageListener = function(t) {
        this.messagesListeners.push(t)
    }
    ,
    p.BasicNuggetaPlug.prototype.removeMessageListener = function(t) {
        this.messagesListeners.splice(this.messagesListeners.indexOf(t), 1)
    }
    ,
    p.BasicNuggetaPlug.prototype.addDomainMessageListener = function(t) {
        this.domainMessageListeners.push(t)
    }
    ,
    p.BasicNuggetaPlug.prototype.removeDomainMessageListener = function(t) {
        this.domainMessageListeners.splice(this.domainMessageListeners.indexOf(t), 1)
    }
    ,
    p.BasicNuggetaPlug.prototype.addDomain = function(t) {
        this.connectionFactory.addDomain(t)
    }
    ,
    p.BasicNuggetaPlug.prototype.stop = function() {
        this.connectionManager.stop()
    }
    ,
    p.BasicNuggetaPlug.prototype.nextMessageId = function() {
        if (null == this.prefixMessageId)
            return "" + this.messageCounter++;
        var t = this.prefixMessageId + "_"
          , e = t + this.messageCounter++;
        return p.MemoryManagement.free(t),
        e
    }
    ,
    p.BasicNuggetaPlug.prototype.setConnectionReadyListener = function(t) {
        this.connectionManager.addConnectionReady(t)
    }
    ,
    p.BasicNuggetaPlug.prototype.setConnectionLostListener = function(t) {
        this.connectionManager.addConnectionLost(t)
    }
    ,
    p.BasicNuggetaPlug.prototype.setConnectionFailListener = function(t) {
        this.connectionManager.addConnectionFail(t)
    }
    ,
    p.BasicNuggetaPlug.prototype.setConnectionInvalidVersionDetectedListener = function(t) {
        this.connectionManager.addConnectionInvalidVersionDetected(t)
    }
    ,
    p.BasicNuggetaPlug.prototype.sendStopMessage = function() {
        this.connectionManager.sendStopMessage()
    }
    ,
    p.BasicNuggetaPlug.prototype.setPrefixMessageId = function(t) {
        this.prefixMessageId = t
    }
    ,
    p.BasicNuggetaPlug.prototype.getUrl = function() {
        return this.url
    }
    ,
    p.BasicNuggetaPlug.prototype.setUrl = function(t) {
        this.url = t
    }
    ,
    p.BasicNuggetaPlug.prototype.isStarted = function() {
        return this.connectionManager.isStarted()
    }
    ,
    p.BasicNuggetaPlug.prototype.isConnectionUp = function() {
        var t = p.NSystem.currentTimeMillis()
          , e = 3 * p.BasicNuggetaPlug.HEATBEAT_TIMEOUT;
        return !(this.lastHeartBeatTime + e <= t)
    }
    ,
    p.BasicNuggetaPlug.HEATBEAT_TIMEOUT = 8e3,
    p.ConnectionListenerCollection = function() {}
    ,
    p.ConnectionListenerCollection.prototype.init = function() {
        return this.listeners = new Array,
        this
    }
    ,
    p.ConnectionListenerCollection.prototype.fireConnectionReady = function() {
        for (var t = this.listeners.length, e = 0; e < t; e++) {
            (0,
            this.listeners[e])(null)
        }
    }
    ,
    p.ConnectionListenerCollection.prototype.fireConnectionFail = function() {
        for (var t = this.listeners.length, e = 0; e < t; e++) {
            (0,
            this.listeners[e])(null)
        }
    }
    ,
    p.ConnectionListenerCollection.prototype.fireConnectionLost = function() {
        for (var t = this.listeners.length, e = 0; e < t; e++) {
            (0,
            this.listeners[e])(null)
        }
    }
    ,
    p.ConnectionListenerCollection.prototype.fireInvalidVersionDetected = function() {
        for (var t = this.listeners.length, e = 0; e < t; e++) {
            (0,
            this.listeners[e])(null)
        }
    }
    ,
    p.ConnectionListenerCollection.prototype.add = function(t) {
        this.listeners.push(t)
    }
    ,
    p.ConnectionListenerCollection.prototype.remove = function(t) {
        if (0 < this.listeners.length) {
            var e = this.listeners.indexOf(t);
            0 <= e && this.listeners.splice(this.listeners.indexOf(e), 1)
        }
    }
    ,
    p.ConnectionListenerCollection.prototype.getListeners = function() {
        return this.listeners
    }
    ,
    p.Pump = function() {}
    ,
    p.Pump.prototype.init = function(t) {
        return this.activePumpableMessages = new Array,
        this.times = new Array,
        this.timeOut = t,
        this
    }
    ,
    p.Pump.prototype.pump = function() {
        var t = new Array;
        this.checkCache(p.NSystem.currentTimeMillis());
        for (var e = 0; e < this.activePumpableMessages.length; e++) {
            var i = this.activePumpableMessages[e];
            t.push(i)
        }
        return this.activePumpableMessages.splice(0, this.activePumpableMessages.length),
        this.times.splice(0, this.times.length),
        t
    }
    ,
    p.Pump.prototype.add = function(t) {
        var e = p.NSystem.currentTimeMillis();
        this.checkCache(e),
        this.activePumpableMessages.push(t),
        this.times.push(e)
    }
    ,
    p.Pump.prototype.checkCache = function(t) {}
    ,
    p.ConnectionReadyListenerCollection = function() {}
    ,
    p.ConnectionReadyListenerCollection.prototype.init = function() {
        return this.connectionReadyListeners = new Array,
        this
    }
    ,
    p.ConnectionReadyListenerCollection.prototype.fireConnectionReady = function() {
        for (var t = this.connectionReadyListeners.length, e = 0; e < t; e++) {
            (0,
            this.connectionReadyListeners[e])()
        }
    }
    ,
    p.ConnectionReadyListenerCollection.prototype.getListeners = function() {
        return this.connectionReadyListeners
    }
    ,
    p.ConnectionReadyListenerCollection.prototype.add = function(t) {
        this.connectionReadyListeners.push(t)
    }
    ,
    p.ConnectionReadyListenerCollection.prototype.remove = function(t) {
        if (0 < this.connectionReadyListeners.length) {
            var e = this.connectionReadyListeners.indexOf(t);
            0 <= e && this.connectionReadyListeners.splice(this.connectionReadyListeners.indexOf(e), 1)
        }
    }
    ,
    p.ConnectionInvalidVersionDetectedListenerCollection = function() {}
    ,
    p.ConnectionInvalidVersionDetectedListenerCollection.prototype.init = function() {
        return this.connectionInvalidVersionDetectedListeners = new Array,
        this
    }
    ,
    p.ConnectionInvalidVersionDetectedListenerCollection.prototype.fireInvalidVersionDetected = function() {
        for (var t = this.connectionInvalidVersionDetectedListeners.length, e = 0; e < t; e++) {
            (0,
            this.connectionInvalidVersionDetectedListeners[e])()
        }
    }
    ,
    p.ConnectionInvalidVersionDetectedListenerCollection.prototype.getListeners = function() {
        return this.connectionInvalidVersionDetectedListeners
    }
    ,
    p.ConnectionInvalidVersionDetectedListenerCollection.prototype.add = function(t) {
        this.connectionInvalidVersionDetectedListeners.push(t)
    }
    ,
    p.ConnectionInvalidVersionDetectedListenerCollection.prototype.remove = function(t) {
        if (0 < this.connectionInvalidVersionDetectedListeners.length) {
            var e = this.connectionInvalidVersionDetectedListeners.indexOf(t);
            0 <= e && this.connectionInvalidVersionDetectedListeners.splice(this.connectionInvalidVersionDetectedListeners.indexOf(e), 1)
        }
    }
    ,
    p.WebSocketConnection = function() {}
    ,
    p.WebSocketConnection.prototype = new p.AbstractNetworkConnection,
    p.WebSocketConnection.prototype.constructor = p.WebSocketConnection,
    p.WebSocketConnection.prototype.init = function(t, e, i, n, r, o, s) {
        return this.log = p.NLoggerFactory.getLogger("WebSocketConnection"),
        p.AbstractNetworkConnection.prototype.init.call(this, t, e, i),
        p.NWebSocketImpl.isSecured() ? this.wsUrl = "wss://" + n + ":" + o + s : this.wsUrl = "ws://" + n + ":" + r + s,
        this
    }
    ,
    p.WebSocketConnection.prototype.start = function() {
        var e = this;
        if (this.connectionState == p.ConnectionState.INITIAL) {
            this.connectionState = p.ConnectionState.STARTING;
            try {
                this.network = (new p.Network).init(this.domainList, this.messageListener, this.connectionInvalidVersionDetectedListenerCollection, this.connectionLostListenerCollection),
                this.connectionReceivedHandler = function(t) {
                    e.connectionState != p.ConnectionState.STARTING && e.connectionState != p.ConnectionState.STARTED || e.network.onStrData(t)
                }
                ;
                e.webSocket = (new p.NWebSocketImpl).init(),
                e.webSocket.openConnection(e.name, e.wsUrl, function() {
                    e.connectionState = p.ConnectionState.STARTED,
                    e.connectionReadyListenerCollection.fireConnectionReady()
                }, e.connectionLostHandler, function() {
                    e.connectionState == p.ConnectionState.STARTING ? e.connectionFailListenerCollection.fireConnectionFail() : e.log.error("invalid connection status")
                }, e.connectionReceivedHandler)
            } catch (t) {
                e.log.errorCause("Can't connect to server  url: " + e.wsUrl, t),
                e.connectionFailListenerCollection.fireConnectionFail()
            }
        }
    }
    ,
    p.WebSocketConnection.prototype.sendMessage = function(t) {
        this.connectionState == p.ConnectionState.STARTED ? this._sendMessage(t) : this.log.error("Connection not started " + t)
    }
    ,
    p.WebSocketConnection.prototype._sendMessage = function(t) {
        var e = this.network.prepareStrPacket(t);
        this.webSocket.sendString(e, null, this.connectionSendFailHandler)
    }
    ,
    p.WebSocketConnection.prototype.sendStopMessage = function(t, e) {
        var i = this;
        this._response = e,
        this.connectionState = p.ConnectionState.STOPPING,
        this._sendMessage(t),
        this.webSocket.drain(function() {
            try {
                i.messageListener(i._response)
            } catch (t) {
                i.log.errorCause("Error occured while processing message : ", t)
            }
        })
    }
    ,
    p.WebSocketConnection.prototype.stop = function() {
        this.tryStop()
    }
    ,
    p.WebSocketConnection.prototype.tryStop = function() {
        try {
            this.webSocket.close()
        } catch (t) {}
    }
    ,
    p.NArrays = function() {}
    ,
    p.NArrays.prototype.init = function() {
        return this
    }
    ,
    p.AbstractNuggetaApi = function() {}
    ,
    p.AbstractNuggetaApi.prototype.init = function() {
        var e = this;
        return this.callbacks = new Array,
        this.requestCounter = 0,
        this._pump = (new p.Pump).init(1e4),
        this.messageListener = function(t) {
            t.getDomainID() == e.getDomain().getDomainId() ? e.pumpEnabled ? e._pump.add(t) : e.fireMessage(t) : p.MemoryManagement.free(t)
        }
        ,
        this
    }
    ,
    p.AbstractNuggetaApi.prototype.getDomain = function() {
        return null
    }
    ,
    p.AbstractNuggetaApi.prototype.getDispatcher = function() {
        return null
    }
    ,
    p.AbstractNuggetaApi.prototype.request = function(t, e) {
        return this.stackCallback(t, e),
        this.fill(t),
        this.basicNuggetaPlug.sendMessage(t)
    }
    ,
    p.AbstractNuggetaApi.prototype.send = function(t) {
        return this.fill(t),
        this.basicNuggetaPlug.sendMessage(t)
    }
    ,
    p.AbstractNuggetaApi.prototype.fill = function(t) {}
    ,
    p.AbstractNuggetaApi.prototype.stackCallback = function(t, e) {
        var i = this.nextRequestId();
        return t.setRequestId(i),
        this.callbacks[i] = e,
        t
    }
    ,
    p.AbstractNuggetaApi.prototype.executeCallback = function(t) {
        var e = t.getRequestId();
        if (null != e) {
            var i = this.callbacks[e];
            null != i && (delete this.callbacks[e],
            this.callHandler(t, i))
        }
        return t
    }
    ,
    p.AbstractNuggetaApi.prototype.callHandler = function(t, e) {}
    ,
    p.AbstractNuggetaApi.prototype.nextRequestId = function() {
        return "" + this.requestCounter++
    }
    ,
    p.AbstractNuggetaApi.prototype.setBasicNuggetaPlug = function(t) {
        this.basicNuggetaPlug = t
    }
    ,
    p.AbstractNuggetaApi.prototype.getDomainMessageListener = function() {
        if (null == this.domainMessageListener) {
            var t = this.getDomain().getDomainId() + "";
            this.domainMessageListener = (new p.DomainMessageListener).init(t, this.messageListener)
        }
        return this.domainMessageListener
    }
    ,
    p.AbstractNuggetaApi.prototype.enablePump = function(t) {
        this.pumpEnabled = t
    }
    ,
    p.AbstractNuggetaApi.prototype.pump = function() {
        for (var t = this.pumpAndGet(), e = 0; e < t.length; e++) {
            var i = t[e];
            p.MemoryManagement.free(i)
        }
        p.MemoryManagement.free(t)
    }
    ,
    p.AbstractNuggetaApi.prototype.pumpAndGet = function() {
        for (var t = this._pump.pump(), e = 0; e < t.length; e++) {
            var i = t[e]
              , n = p.MemoryManagement._clone(i);
            this.fireMessage(n)
        }
        return t
    }
    ,
    p.AbstractNuggetaApi.prototype.fireMessage = function(t) {
        null != t.getRequestId() ? this.executeCallback(t) : this.getDispatcher().fireMessage(t)
    }
    ,
    p.ConnectionState = function() {}
    ,
    p.ConnectionState.prototype.init = function() {
        return this
    }
    ,
    p.ConnectionState.INITIAL = 0,
    p.ConnectionState.STARTING = 1,
    p.ConnectionState.STARTED = 2,
    p.ConnectionState.STOPPING = 3,
    p.ConnectionState.STOPPED = 4,
    p.Byte2DArray = function() {}
    ,
    p.Byte2DArray.prototype.init = function() {
        return this
    }
    ,
    p.ConnectionFailListenerCollection = function() {}
    ,
    p.ConnectionFailListenerCollection.prototype.init = function() {
        return this.connectionFailListeners = new Array,
        this
    }
    ,
    p.ConnectionFailListenerCollection.prototype.fireConnectionFail = function() {
        for (var t = this.connectionFailListeners.length, e = 0; e < t; e++) {
            (0,
            this.connectionFailListeners[e])()
        }
    }
    ,
    p.ConnectionFailListenerCollection.prototype.getListeners = function() {
        return this.connectionFailListeners
    }
    ,
    p.ConnectionFailListenerCollection.prototype.add = function(t) {
        this.connectionFailListeners.push(t)
    }
    ,
    p.ConnectionFailListenerCollection.prototype.remove = function(t) {
        if (0 < this.connectionFailListeners.length) {
            var e = this.connectionFailListeners.indexOf(t);
            0 <= e && this.connectionFailListeners.splice(this.connectionFailListeners.indexOf(e), 1)
        }
    }
    ,
    p.AES = function() {}
    ,
    p.AES.prototype.init = function() {
        return this
    }
    ,
    p.NSystem = function() {}
    ,
    p.NSystem.prototype.init = function() {
        return this
    }
    ,
    p.NSystem.currentTimeMillis = function() {
        return 0
    }
    ,
    p.NLoggerFactory = function() {}
    ,
    p.NLoggerFactory.prototype.init = function() {
        return this
    }
    ,
    p.NLoggerFactory.getLogger = function(t) {
        return (new p.NLoggerImpl).init(t)
    }
    ,
    p.SocketConnection = function() {}
    ,
    p.SocketConnection.prototype = new p.AbstractNetworkConnection,
    p.SocketConnection.prototype.constructor = p.SocketConnection,
    p.SocketConnection.prototype.init = function(t, e, i, n, r) {
        return this.log = p.NLoggerFactory.getLogger("SocketConnection"),
        p.AbstractNetworkConnection.prototype.init.call(this, t, e, i),
        this.server = n,
        this.port = r,
        this
    }
    ,
    p.SocketConnection.prototype.start = function() {
        var e = this;
        if (this.connectionState == p.ConnectionState.INITIAL) {
            this.connectionState = p.ConnectionState.STARTING;
            try {
                this.network = (new p.Network).init(this.domainList, this.messageListener, this.connectionInvalidVersionDetectedListenerCollection, this.connectionLostListenerCollection),
                this.connectionReceivedHandler = function(t) {
                    e.connectionState != p.ConnectionState.STARTING && e.connectionState != p.ConnectionState.STARTED || (null != e.wsUrl ? e.network.onStrData(t) : e.network.onSingleData(t))
                }
                ;
                e.socket = (new p.NSocketImpl).init(),
                e.socket.openConnection(e.name, e.server, e.port, function() {
                    e.connectionState = p.ConnectionState.STARTED,
                    e.connectionReadyListenerCollection.fireConnectionReady()
                }, e.connectionLostHandler, function() {
                    e.connectionState == p.ConnectionState.STARTING ? e.connectionFailListenerCollection.fireConnectionFail() : e.log.error("invalid connection status")
                }, e.connectionReceivedHandler)
            } catch (t) {
                e.log.errorCause("Can't connect to server  url " + e.server + ":" + e.port, t),
                e.connectionFailListenerCollection.fireConnectionFail()
            }
        }
    }
    ,
    p.SocketConnection.prototype.sendMessage = function(t) {
        this.connectionState == p.ConnectionState.STARTED ? this._sendMessage(t) : this.log.error("Connection not started " + t)
    }
    ,
    p.SocketConnection.prototype._sendMessage = function(t) {
        if (null != this.wsUrl) {
            var e = this.network.prepareStrPacket(t);
            this.socket.sendString(e, null, this.connectionSendFailHandler)
        } else {
            var i = this.network.prepareBinPacket(t);
            this.socket.sendBytes(i.getByteBuffer(), null, this.connectionSendFailHandler),
            p.MemoryManagement.free(i)
        }
    }
    ,
    p.SocketConnection.prototype.sendStopMessage = function(t, e) {
        var i = this;
        this._response = e,
        this.connectionState != p.ConnectionState.STARTED && (this.log.error("Connection not started " + t),
        i.messageListener(this._response)),
        this.connectionState = p.ConnectionState.STOPPING,
        this._sendMessage(t),
        this.socket.drain(function() {
            try {
                i.messageListener(i._response)
            } catch (t) {
                i.log.errorCause("Error occured while processing message : ", t)
            }
        })
    }
    ,
    p.SocketConnection.prototype.stop = function() {
        this.tryStop()
    }
    ,
    p.SocketConnection.prototype.tryStop = function() {
        try {
            this.socket.close()
        } catch (t) {}
    }
    ,
    p.SocketConnection.prototype.onHeartBeat = function() {
        this.socket.onHeartBeat()
    }
    ,
    p.Network = function() {}
    ,
    p.Network.prototype.init = function(t, e, i, n) {
        return this.log = p.NLoggerFactory.getLogger("Network"),
        this._in = new Array,
        this._length = -1,
        this.HEADER_LENGTH = 10,
        this.domainList = t,
        this.messageListener = e,
        this.connectionInvalidVersionDetectedListenerCollection = i,
        this.connectionLostListenerCollection = n,
        this
    }
    ,
    p.Network.prototype.prepareBinPacket = function(t) {
        var e = p.ByteBuffer.allocate()
          , i = (new p.BinaryStream).init(e);
        i.skip(4),
        p.BinaryOutputStream.writeObject(this.domainList, t, i);
        var n = i.position() - 4;
        return i.putIntAt(0, n),
        e.flip(),
        i
    }
    ,
    p.Network.prototype.prepareStrPacket = function(t) {
        var e = (new p.StringStream).init((new p.StrBuilder).init(""));
        p.StringOutputStream.writeObject(this.domainList, t, e);
        var i = e.toString()
          , n = i.length;
        return p.Network.pad(n + "", this.HEADER_LENGTH) + i
    }
    ,
    p.Network.prototype.onData = function(t) {
        for (var e = 0; e < t.length; e++)
            this.onSingleData(t[e])
    }
    ,
    p.Network.prototype.onSingleData = function(t) {
        if (this._in.push(t),
        -1 == this._length) {
            if (4 == this._in.length) {
                for (var e = p.ByteBuffer.allocate(), i = 0; i < 4; i++)
                    e.put(this._in[i]);
                e.flip(),
                this._in.splice(0, this._in.length),
                this._length = e.getInt(),
                p.MemoryManagement.free(e)
            }
        } else if (this._in.length == this._length) {
            var n = p.ByteBuffer.allocate();
            for (i = 0; i < this._length; i++)
                n.put(this._in[i]);
            n.flip();
            var r = null;
            try {
                var o = (new p.BinaryStream).init(n);
                r = p.BinaryInputStream.readObject(this.domainList, o),
                p.MemoryManagement.free(o),
                this._in.splice(0, this._in.length),
                this._length = -1;
                try {
                    this.messageListener(r)
                } catch (t) {
                    this.log.errorCause("Error occured while processing message : " + r, t)
                }
            } catch (t) {
                this.log.errorCause("Can't read command ", t),
                this.connectionInvalidVersionDetectedListenerCollection.fireInvalidVersionDetected()
            }
        }
    }
    ,
    p.Network.pad = function(t, e) {
        for (var i = t.length; i < e; i++)
            t = "0" + t;
        return t
    }
    ,
    p.Network.prototype.onStrData = function(t) {
        for (var e = null; 0 < t.length; ) {
            var i = t.substring(0, this.HEADER_LENGTH)
              , n = parseFloat(i);
            t = t.substring(this.HEADER_LENGTH),
            e = (new p.StringStream).init((new p.StrBuilder).init(t.substring(0, n)));
            var r = null;
            try {
                r = p.StringInputStream.readObject(this.domainList, e),
                t = t.substring(n);
                try {
                    this.messageListener(r)
                } catch (t) {
                    this.log.errorCause("Error occured while processing message : " + r, t)
                }
            } catch (t) {
                return this.log.errorCause("Can't read command ", t),
                void this.connectionInvalidVersionDetectedListenerCollection.fireInvalidVersionDetected()
            }
        }
    }
    ,
    p.ConnectionFactoryImpl = function() {}
    ,
    p.ConnectionFactoryImpl.prototype.init = function(t) {
        return this.logger = p.NLoggerFactory.getLogger("ConnectionFactoryImpl"),
        this.domainList = (new p.NDomainList).init(),
        this.layers = t,
        this
    }
    ,
    p.ConnectionFactoryImpl.prototype.newConnection = function(t, e, i) {
        var n = i.split(":")
          , r = n[0]
          , o = parseFloat(n[1])
          , s = o + 1
          , a = s + 1
          , h = (new p.FoldingNetworkConnection).init(e);
        if (null != this.layers)
            for (var l = this.layers.split("/"), u = 0; u < l.length; u++) {
                var c = l[u];
                "sock" == c ? h.addConnection((new p.SocketConnection).init(t, this.domainList, e, r, o)) : "wsock" == c ? p.NWebSocketImpl.isSupported() && h.addConnection((new p.WebSocketConnection).init(t, this.domainList, e, r, s, a, "/nuggeta/")) : "http" == c ? h.addConnection((new p.HttpConnection).init(t, this.domainList, e, r, s, a, "/httpstream/")) : "greenlight" == c ? h.addConnection((new p.HttpConnection).init(t, this.domainList, e, r, 80, 443, "/" + s + "/httpstream/")) : this.logger.error("Unsupported network " + c)
            }
        else
            this.logger.error("No Layer defined ! using fallback http");
        return h
    }
    ,
    p.ConnectionFactoryImpl.prototype.addDomain = function(t) {
        this.domainList.addDomain(t)
    }
    ;
    var c = p.NSystem = function() {}
    ;
    c.prototype.init = function() {
        return this
    }
    ,
    c.currentTimeMillis = function() {
        return (new Date).getTime()
    }
    ;
    var d = p.NStorage = function() {}
    ;
    d.prototype.init = function() {
        this.lsSupport = !1;
        try {
            localStorage && (localStorage.setItem("testKey", "1"),
            localStorage.removeItem("testKey"),
            this.lsSupport = !0)
        } catch (t) {}
        return this
    }
    ,
    d.getItem = function(t) {
        return this.lsSupport ? localStorage[t] : this.readCookie(t)
    }
    ,
    d.setItem = function(t, e) {
        this.lsSupport ? localStorage[t] = e : this.createCookie(t, e, 30)
    }
    ,
    d.createCookie = function(t, e, i) {
        var n = new Date;
        n.setTime(n.getTime() + 24 * i * 60 * 60 * 1e3);
        var r = "; expires=" + n.toGMTString();
        document.cookie = t + "=" + e + r + "; path=/"
    }
    ,
    d.readCookie = function(t) {
        for (var e = t + "=", i = document.cookie.split(";"), n = 0, r = i.length; n < r; n++) {
            for (var o = i[n]; " " === o.charAt(0); )
                o = o.substring(1, o.length);
            if (0 === o.indexOf(e))
                return o.substring(e.length, o.length)
        }
        return null
    }
    ;
    var f = p.NAlert = function() {}
    ;
    f.prototype.init = function() {
        return this
    }
    ,
    f.prototype.show = function(t) {
        console.log(t)
    }
    ;
    var g = p.NLoggerImpl = function() {}
    ;
    g.prototype.init = function() {
        return this
    }
    ,
    g.prototype.errorCause = function(t, e) {
        var i = e.stack || e.stacktrace || e;
        console.log("[ERROR] " + t + ", " + i)
    }
    ,
    g.prototype.error = function(t) {
        console.log("[ERROR] " + t)
    }
    ,
    g.prototype.info = function(t) {
        console.log("[INFO] " + t)
    }
    ,
    g.prototype.infoCause = function(t, e) {
        var i = e.stack || e.stacktrace || e;
        console.log("[INFO] " + t + ", " + i)
    }
    ,
    g.prototype.debug = function(t) {
        console.log("[DEBUG] " + t)
    }
    ,
    g.prototype.debugCause = function(t, e) {
        var i = e.stack || e.stacktrace || e;
        console.log("[DEBUG] " + t + ", " + i)
    }
    ,
    g.prototype.warn = function(t) {
        console.log("[WARM] " + t)
    }
    ,
    g.prototype.warnCause = function(t, e) {
        var i = e.stack || e.stacktrace || e;
        console.log("[WARM] " + t + ", " + i)
    }
    ,
    g.prototype.isDebug = function() {
        return g.DEBUG
    }
    ,
    g.DEBUG = !1;
    var y = p.NConnectionConf = function() {}
    ;
    p.NConnectionConf.layers = "wsock/http",
    y.prototype.init = function() {
        return this
    }
    ,
    y.getLayers = function() {
        return p.NConnectionConf.layers
    }
    ,
    y.setLayers = function(t) {
        p.NConnectionConf.layers = t
    }
    ;
    var m = p.NHttpRequestImpl = function() {}
    ;
    p.NHttpRequestImpl.secured = "https:" == document.location.protocol,
    m.prototype.init = function() {
        return this.withCredentials = !1,
        this
    }
    ,
    m.isSecured = function() {
        return p.NHttpRequestImpl.secured
    }
    ,
    m.setSecured = function(t) {
        p.NHttpRequestImpl.secured = t
    }
    ,
    m.prototype.setWithCredentials = function(t) {
        this.withCredentials = t
    }
    ,
    m.prototype.get = function(t, e, i, n) {
        var r = this;
        this.id = t,
        this.initHTTPRequest(n),
        this.xhr_object && (r.xhr_object.open("GET", e, !0),
        r.xhr_object.onreadystatechange = function() {
            4 == r.xhr_object.readyState && (200 == r.xhr_object.status ? i(r.xhr_object.responseText) : n()),
            r.xhr_object.readyState <= 0 && n()
        }
        ,
        this.xhr_object.send(null))
    }
    ,
    m.prototype.post = function(t, e, i, n, r) {
        var o = this;
        this.id = t,
        this.initHTTPRequest(r),
        this.xhr_object && (o.xhr_object.open("POST", e, !0),
        o.xhr_object.onreadystatechange = function() {
            4 == o.xhr_object.readyState && (200 == o.xhr_object.status ? n(o.xhr_object.responseText) : r()),
            o.xhr_object.readyState <= 0 && r()
        }
        ,
        this.xhr_object.setRequestHeader("Content-type", "application/x-www-form-urlencoded"),
        this.xhr_object.send(i))
    }
    ,
    m.prototype.initHTTPRequest = function(t) {
        if (window.XMLHttpRequest)
            this.xhr_object = new XMLHttpRequest,
            this.withCredentials && (this.xhr_object.withCredentials = !0);
        else {
            if (!window.ActiveXObject)
                return void t();
            this.xhr_object = new ActiveXObject("Microsoft.XMLHTTP")
        }
    }
    ;
    var v = p.NUrlEncoder = function() {}
    ;
    v.prototype.init = function() {
        return this
    }
    ,
    v.encode = function(t, e) {
        return encodeURIComponent(t)
    }
    ,
    v.decode = function(t, e) {
        return decodeURIComponent(t)
    }
    ;
    var S = p.NWebSocketImpl = function() {}
    ;
    p.NWebSocketImpl.secured = "https:" == document.location.protocol,
    S.isSecured = function() {
        return p.NWebSocketImpl.secured
    }
    ,
    S.setSecured = function(t) {
        p.NWebSocketImpl.secured = t
    }
    ,
    p.NWebSocketImpl.connectTimeoutInMillis = 5e3,
    p.NWebSocketImpl.count = 0,
    S.getConnectTimeoutInMillis = function() {
        return p.NWebSocketImpl.connectTimeoutInMillis
    }
    ,
    S.setConnectTimeoutInMillis = function(t) {
        p.NWebSocketImpl.connectTimeoutInMillis = t
    }
    ,
    S.isSupported = function() {
        return "WebSocket"in window
    }
    ,
    S.prototype.init = function() {
        return this
    }
    ,
    S.prototype.openConnection = function(t, e, i, n, r, o) {
        var s = this;
        this.wsId = p.NWebSocketImpl.count++,
        this.connectionOpenedHandler = i,
        this.connectionLostHandler = n,
        this.connectionFailHandler = r,
        this.connectionReceivedHandler = o,
        this.log = p.NLoggerFactory.getLogger("WebSocket[" + t + "]"),
        s.log.debug("opening ws " + this.wsId + " : " + e);
        try {
            this.started = !1,
            this.closed = !1,
            this.wasClean = !1,
            this.receiveResponse = !1,
            this.connection = new WebSocket(e,"plug"),
            this.connection.onopen = function() {
                s.log.debug("onopen"),
                1 != s.closed ? (s.started = !0,
                s.receiveResponse = !0,
                s.wasClean = !1,
                i()) : s.log.debug("ws closed, will not open it. state: " + s.getDebugState())
            }
            ,
            this.connection.onerror = function(t) {
                1 != s.closed && (s.receiveResponse = !0,
                s.started ? (s.started = !1,
                n()) : r())
            }
            ,
            this.connection.onmessage = function(t) {
                t.data && o(t.data)
            }
            ,
            this.connection.onclose = function(t) {
                s.log.debug("ws onclose, state: " + s.getDebugState()),
                s.receiveResponse = !0,
                1 != s.closed && (1 != s.wasClean ? 1 != t.wasClean && (s.started ? (s.started = !1,
                n()) : r()) : s.wasClean = !1)
            }
            ,
            setTimeout(function() {
                s.receiveResponse || (s.log.error("ws connection timeout. state: " + s.getDebugState()),
                s.close(),
                r())
            }, S.connectTimeoutInMillis)
        } catch (t) {
            s.receiveResponse ? s.log.errorCause("fatal error in ws connection, state: " + s.getDebugState(), t) : (s.log.errorCause("failed to open ws connection, state: " + s.getDebugState(), t),
            s.closed = !0,
            r())
        }
        return this
    }
    ,
    S.prototype.getDebugState = function() {
        return "ws=" + this.wsId + ", readyState=" + (null == this.connection ? "null" : this.connection.readyState) + ", started=" + this.started + ", receiveResponse=" + this.receiveResponse + ", closed=" + this.closed + ", wasClean=" + this.wasClean
    }
    ,
    S.prototype.close = function() {
        this.closed = !0,
        this.wasClean = !0;
        try {
            this.connection.close()
        } catch (t) {
            this.log.errorCause("Fail to close ws, state: " + this.getDebugState(), t)
        }
    }
    ,
    S.prototype.sendString = function(t) {
        var e = this;
        try {
            e.connection.readyState == WebSocket.OPEN ? e.connection.send(t) : (e.log.error("error sending on closed websocket. state=" + e.getDebugState() + ", data=" + t),
            e.connectionLostHandler())
        } catch (t) {
            e.log.error("sendMessage error " + t.message),
            e.connectionLostHandler()
        }
    }
    ,
    S.prototype.drain = function(t) {
        t()
    }
    ;
    var x = p.Net = function() {}
      , b = null;
    x.prototype.init = function() {
        return this
    }
    ,
    x.openURL = function(t) {
        var e = 200
          , i = 200;
        screen && (e = screen.width / 2 - 600,
        i = screen.height / 2 - 400);
        var n = window.open(t, "_blank", "height=400,width=600,left=" + e + ",top=" + i);
        null == n || void 0 === n ? alert("Turn off your pop-up blocker!\n\nWe try to open the following url:\n" + t) : n.focus()
    }
    ,
    x.openWebView = function(t) {
        var e = parseInt(document.width) / 2 - 250
          , i = parseInt(screen.height) / 2 - 300;
        null == (b = window.open(t, "_blank", "left=" + e + ",top=" + i + "scrollbars=no,toolbar=no,menubar=no,location=no,height=300,width=500")) || void 0 === b ? alert("Turn off your pop-up blocker!\n\nWe try to open the following url:\n" + t) : b.focus()
    }
    ,
    x.closeWebView = function() {
        null != b && b.close()
    }
    ;
    var T = p.Platform = function() {}
    ;
    T.prototype.init = function() {
        return this
    }
    ,
    T.get = function() {
        return "HTML5:" + navigator.userAgent
    }
    ,
    T.isHTMLPlatform = function() {
        return !1
    }
    ;
    var _ = p.SecurityUtils = function() {}
    ;
    _.prototype.init = function() {
        return this
    }
    ,
    _.SHA1 = function(t) {
        return ""
    }
}(gs = window.gs || {}),
window.gs = gs,
(new ((gs = window.gs || {}) || {}).nruntime).load({
    domainID: 400,
    domainName: "ShipGs",
    nconstants: {
        AuthenticateStatus: {
            serializerID: 10002,
            values: [{
                value: -2,
                text: "INVALID_PARAMETERS"
            }, {
                value: -1,
                text: "INTERNAL_ERROR"
            }, {
                value: 0,
                text: "SUCCESS"
            }, {
                value: 1,
                text: "FAILED"
            }, {
                value: 2,
                text: "UNSUPPORTED_GAME_VERSION"
            }]
        },
        SaveAchievementStatus: {
            serializerID: 10005,
            values: [{
                value: -2,
                text: "INVALID_PARAMETERS"
            }, {
                value: -1,
                text: "INTERNAL_ERROR"
            }, {
                value: 0,
                text: "SUCCESS"
            }, {
                value: 1,
                text: "FAILED"
            }]
        },
        SaveIAPStatus: {
            serializerID: 10008,
            values: [{
                value: -2,
                text: "INVALID_PARAMETERS"
            }, {
                value: -1,
                text: "INTERNAL_ERROR"
            }, {
                value: 0,
                text: "SUCCESS"
            }, {
                value: 1,
                text: "FAILED"
            }]
        },
        GetPlayerByIdStatus: {
            serializerID: 10011,
            values: [{
                value: -2,
                text: "INVALID_PARAMETERS"
            }, {
                value: -1,
                text: "INTERNAL_ERROR"
            }, {
                value: 0,
                text: "SUCCESS"
            }, {
                value: 1,
                text: "FAILED"
            }]
        },
        GetPlayerByThirdPartyIdStatus: {
            serializerID: 10014,
            values: [{
                value: -2,
                text: "INVALID_PARAMETERS"
            }, {
                value: -1,
                text: "INTERNAL_ERROR"
            }, {
                value: 0,
                text: "SUCCESS"
            }, {
                value: 1,
                text: "FAILED"
            }]
        },
        FindScoresStatus: {
            serializerID: 10017,
            values: [{
                value: -2,
                text: "INVALID_PARAMETERS"
            }, {
                value: -1,
                text: "INTERNAL_ERROR"
            }, {
                value: 0,
                text: "SUCCESS"
            }, {
                value: 1,
                text: "FAILED"
            }]
        },
        GetBestScoresStatus: {
            serializerID: 10020,
            values: [{
                value: -2,
                text: "INVALID_PARAMETERS"
            }, {
                value: -1,
                text: "INTERNAL_ERROR"
            }, {
                value: 0,
                text: "SUCCESS"
            }, {
                value: 1,
                text: "FAILED"
            }]
        },
        SubmitScoreStatus: {
            serializerID: 10023,
            values: [{
                value: -2,
                text: "INVALID_PARAMETERS"
            }, {
                value: -1,
                text: "INTERNAL_ERROR"
            }, {
                value: 0,
                text: "SUCCESS"
            }, {
                value: 1,
                text: "FAILED"
            }]
        },
        GetAchievementsStatus: {
            serializerID: 10026,
            values: [{
                value: -2,
                text: "INVALID_PARAMETERS"
            }, {
                value: -1,
                text: "INTERNAL_ERROR"
            }, {
                value: 0,
                text: "SUCCESS"
            }, {
                value: 1,
                text: "FAILED"
            }]
        },
        SaveNotificationStatus: {
            serializerID: 10029,
            values: [{
                value: -2,
                text: "INVALID_PARAMETERS"
            }, {
                value: -1,
                text: "INTERNAL_ERROR"
            }, {
                value: 0,
                text: "SUCCESS"
            }, {
                value: 1,
                text: "FAILED"
            }]
        },
        FindNotificationsStatus: {
            serializerID: 10032,
            values: [{
                value: -2,
                text: "INVALID_PARAMETERS"
            }, {
                value: -1,
                text: "INTERNAL_ERROR"
            }, {
                value: 0,
                text: "SUCCESS"
            }, {
                value: 1,
                text: "FAILED"
            }]
        },
        TrackPlayerStatus: {
            serializerID: 10035,
            values: [{
                value: -2,
                text: "INVALID_PARAMETERS"
            }, {
                value: -1,
                text: "INTERNAL_ERROR"
            }, {
                value: 0,
                text: "SUCCESS"
            }]
        },
        CreatePlayerStatus: {
            serializerID: 10038,
            values: [{
                value: -2,
                text: "INVALID_PARAMETERS"
            }, {
                value: -1,
                text: "INTERNAL_ERROR"
            }, {
                value: 0,
                text: "SUCCESS"
            }, {
                value: 1,
                text: "FAILED"
            }]
        },
        SetFriendsStatus: {
            serializerID: 10041,
            values: [{
                value: -2,
                text: "INVALID_PARAMETERS"
            }, {
                value: -1,
                text: "INTERNAL_ERROR"
            }, {
                value: 0,
                text: "SUCCESS"
            }]
        },
        GetFriendsStatus: {
            serializerID: 10044,
            values: [{
                value: -2,
                text: "INVALID_PARAMETERS"
            }, {
                value: -1,
                text: "INTERNAL_ERROR"
            }, {
                value: 0,
                text: "SUCCESS"
            }]
        },
        GetStateStatus: {
            serializerID: 10047,
            values: [{
                value: -2,
                text: "INVALID_PARAMETERS"
            }, {
                value: -1,
                text: "INTERNAL_ERROR"
            }, {
                value: 0,
                text: "SUCCESS"
            }]
        },
        SubmitAdvProgressStatus: {
            serializerID: 10062,
            values: [{
                value: -2,
                text: "INVALID_PARAMETERS"
            }, {
                value: -1,
                text: "INTERNAL_ERROR"
            }, {
                value: 0,
                text: "SUCCESS"
            }]
        },
        GetAdvProgressStatus: {
            serializerID: 10065,
            values: [{
                value: -2,
                text: "INVALID_PARAMETERS"
            }, {
                value: -1,
                text: "INTERNAL_ERROR"
            }, {
                value: 0,
                text: "SUCCESS"
            }]
        },
        GetAdvFriendsProgressStatus: {
            serializerID: 10068,
            values: [{
                value: -2,
                text: "INVALID_PARAMETERS"
            }, {
                value: -1,
                text: "INTERNAL_ERROR"
            }, {
                value: 0,
                text: "SUCCESS"
            }]
        },
        GetAdvScoresStatus: {
            serializerID: 10071,
            values: [{
                value: -2,
                text: "INVALID_PARAMETERS"
            }, {
                value: -1,
                text: "INTERNAL_ERROR"
            }, {
                value: 0,
                text: "SUCCESS"
            }]
        },
        GetAdvFriendsScoresStatus: {
            serializerID: 10074,
            values: [{
                value: -2,
                text: "INVALID_PARAMETERS"
            }, {
                value: -1,
                text: "INTERNAL_ERROR"
            }, {
                value: 0,
                text: "SUCCESS"
            }]
        },
        SaveAdvProgressStatus: {
            serializerID: 10077,
            values: [{
                value: -2,
                text: "INVALID_PARAMETERS"
            }, {
                value: -1,
                text: "INTERNAL_ERROR"
            }, {
                value: 0,
                text: "SUCCESS"
            }]
        },
        FindStorablesStatus: {
            serializerID: 10092,
            values: [{
                value: -2,
                text: "INVALID_PARAMETERS"
            }, {
                value: -1,
                text: "INTERNAL_ERROR"
            }, {
                value: 0,
                text: "SUCCESS"
            }, {
                value: 1,
                text: "INVALID_QUERY"
            }]
        },
        SaveStorableStatus: {
            serializerID: 10095,
            values: [{
                value: -2,
                text: "INVALID_PARAMETERS"
            }, {
                value: -1,
                text: "INTERNAL_ERROR"
            }, {
                value: 0,
                text: "SUCCESS"
            }]
        },
        SaveStorableDiffStatus: {
            serializerID: 10098,
            values: [{
                value: -2,
                text: "INVALID_PARAMETERS"
            }, {
                value: -1,
                text: "INTERNAL_ERROR"
            }, {
                value: 0,
                text: "SUCCESS"
            }]
        },
        RemoveStorableStatus: {
            serializerID: 10101,
            values: [{
                value: -2,
                text: "INVALID_PARAMETERS"
            }, {
                value: -1,
                text: "INTERNAL_ERROR"
            }, {
                value: 0,
                text: "SUCCESS"
            }]
        },
        SaveStorablesStatus: {
            serializerID: 10104,
            values: [{
                value: -2,
                text: "INVALID_PARAMETERS"
            }, {
                value: -1,
                text: "INTERNAL_ERROR"
            }, {
                value: 0,
                text: "SUCCESS"
            }]
        },
        FindAndModifyStorablesStatus: {
            serializerID: 10107,
            values: [{
                value: -2,
                text: "INVALID_PARAMETERS"
            }, {
                value: -1,
                text: "INTERNAL_ERROR"
            }, {
                value: 0,
                text: "SUCCESS"
            }]
        },
        GetDuelChampionshipStatus: {
            serializerID: 10122,
            values: [{
                value: -2,
                text: "INVALID_PARAMETERS"
            }, {
                value: -1,
                text: "INTERNAL_ERROR"
            }, {
                value: 0,
                text: "SUCCESS"
            }]
        },
        SubmitDuelChampionshipScoreStatus: {
            serializerID: 10125,
            values: [{
                value: -2,
                text: "INVALID_PARAMETERS"
            }, {
                value: -1,
                text: "INTERNAL_ERROR"
            }, {
                value: 0,
                text: "SUCCESS"
            }]
        },
        GetBestServersStatus: {
            serializerID: 10152,
            values: [{
                value: -2,
                text: "INVALID_PARAMETERS"
            }, {
                value: -1,
                text: "INTERNAL_ERROR"
            }, {
                value: 0,
                text: "SUCCESS"
            }]
        },
        CreateRoomStatus: {
            serializerID: 10155,
            values: [{
                value: -2,
                text: "INVALID_PARAMETERS"
            }, {
                value: -1,
                text: "INTERNAL_ERROR"
            }, {
                value: 0,
                text: "SUCCESS"
            }]
        },
        SubscribeStatus: {
            serializerID: 10158,
            values: [{
                value: -2,
                text: "INVALID_PARAMETERS"
            }, {
                value: -1,
                text: "INTERNAL_ERROR"
            }, {
                value: 0,
                text: "SUCCESS"
            }]
        },
        PublishStatus: {
            serializerID: 10161,
            values: [{
                value: -2,
                text: "INVALID_PARAMETERS"
            }, {
                value: -1,
                text: "INTERNAL_ERROR"
            }, {
                value: 0,
                text: "SUCCESS"
            }]
        },
        UnsubscribeStatus: {
            serializerID: 10164,
            values: [{
                value: -2,
                text: "INVALID_PARAMETERS"
            }, {
                value: -1,
                text: "INTERNAL_ERROR"
            }, {
                value: 0,
                text: "SUCCESS"
            }]
        },
        PullStatus: {
            serializerID: 10167,
            values: [{
                value: -2,
                text: "INVALID_PARAMETERS"
            }, {
                value: -1,
                text: "INTERNAL_ERROR"
            }, {
                value: 0,
                text: "SUCCESS"
            }]
        },
        GetPublicRoomStatus: {
            serializerID: 10170,
            values: [{
                value: -2,
                text: "INVALID_PARAMETERS"
            }, {
                value: -1,
                text: "INTERNAL_ERROR"
            }, {
                value: 0,
                text: "SUCCESS"
            }]
        }
    },
    nobjects: {
        SStorable: {
            hierarchyDepth: 1e3,
            serializerID: 100,
            extendss: {
                domainID: "0",
                name: "Storable"
            },
            fields: {
                CreationDate: {
                    propertyId: 0,
                    primitive: !0,
                    type: "Long"
                },
                UpdateDate: {
                    propertyId: 1,
                    primitive: !0,
                    type: "Long"
                }
            }
        },
        SRequest: {
            hierarchyDepth: 2e3,
            serializerID: 101,
            extendss: {
                domainID: "0",
                name: "Message"
            },
            fields: {
                GameId: {
                    propertyId: 0,
                    primitive: !0,
                    type: "String"
                },
                GameVersion: {
                    propertyId: 1,
                    primitive: !0,
                    type: "Long"
                },
                PlayerId: {
                    propertyId: 2,
                    primitive: !0,
                    type: "String"
                },
                ShipVersion: {
                    propertyId: 3,
                    primitive: !0,
                    type: "Long"
                }
            }
        },
        SResponse: {
            hierarchyDepth: 2e3,
            serializerID: 102,
            extendss: {
                domainID: "0",
                name: "Message"
            },
            fields: {
                PendingMessages: {
                    propertyId: 0,
                    list: !0,
                    type: "Message",
                    domainID: "0",
                    reference: !0
                }
            }
        },
        SPlayer: {
            hierarchyDepth: 2e3,
            serializerID: 103,
            extendss: {
                domainID: "400",
                name: "SStorable"
            },
            fields: {
                Id: {
                    propertyId: 0,
                    primitive: !0,
                    type: "String"
                },
                PublisherId: {
                    propertyId: 1,
                    primitive: !0,
                    type: "String"
                },
                ThirdPartyId: {
                    propertyId: 2,
                    primitive: !0,
                    type: "String"
                },
                AccessToken: {
                    propertyId: 3,
                    primitive: !0,
                    type: "String"
                },
                Anonymous: {
                    propertyId: 4,
                    primitive: !0,
                    type: "Boolean"
                },
                Source: {
                    propertyId: 5,
                    primitive: !0,
                    type: "String"
                },
                Name: {
                    propertyId: 6,
                    primitive: !0,
                    type: "String"
                },
                Avatar: {
                    propertyId: 7,
                    primitive: !0,
                    type: "String"
                },
                Lang: {
                    propertyId: 8,
                    primitive: !0,
                    type: "String"
                },
                Email: {
                    propertyId: 9,
                    primitive: !0,
                    type: "String"
                },
                Country: {
                    propertyId: 10,
                    primitive: !0,
                    type: "String"
                },
                Birthday: {
                    propertyId: 11,
                    primitive: !0,
                    type: "Long"
                },
                Age: {
                    propertyId: 12,
                    primitive: !0,
                    type: "Integer"
                },
                Gender: {
                    propertyId: 13,
                    primitive: !0,
                    type: "String"
                },
                CustomData: {
                    propertyId: 14,
                    primitive: !0,
                    type: "String"
                },
                LastConnection: {
                    propertyId: 15,
                    primitive: !0,
                    type: "Long"
                },
                LastGift: {
                    propertyId: 16,
                    primitive: !0,
                    type: "Long"
                },
                ConsecutiveDays: {
                    propertyId: 17,
                    primitive: !0,
                    type: "Integer"
                },
                TotalDays: {
                    propertyId: 18,
                    primitive: !0,
                    type: "Integer"
                },
                Sounds: {
                    propertyId: 19,
                    primitive: !0,
                    type: "Long"
                },
                Tutorial: {
                    propertyId: 20,
                    primitive: !0,
                    type: "Long"
                },
                LastShare: {
                    propertyId: 21,
                    primitive: !0,
                    type: "Long"
                },
                LastInvite: {
                    propertyId: 22,
                    primitive: !0,
                    type: "Long"
                },
                LastDiscount: {
                    propertyId: 23,
                    primitive: !0,
                    type: "Long"
                },
                Wallet: {
                    propertyId: 24,
                    primitive: !0,
                    type: "Integer"
                },
                FortuneWheels: {
                    propertyId: 25,
                    primitive: !0,
                    type: "Integer"
                },
                Lifes: {
                    propertyId: 26,
                    primitive: !0,
                    type: "Integer"
                },
                LifeLastRecharge: {
                    propertyId: 27,
                    primitive: !0,
                    type: "Long"
                },
                VersionCreation: {
                    propertyId: 30,
                    primitive: !0,
                    type: "Long"
                },
                VersionLast: {
                    propertyId: 31,
                    primitive: !0,
                    type: "Long"
                }
            }
        },
        SPlayerAchievement: {
            hierarchyDepth: 2e3,
            serializerID: 104,
            extendss: {
                domainID: "400",
                name: "SStorable"
            },
            fields: {
                PlayerId: {
                    propertyId: 0,
                    primitive: !0,
                    type: "String"
                },
                AchievementId: {
                    propertyId: 1,
                    primitive: !0,
                    type: "String"
                },
                Progress: {
                    propertyId: 2,
                    primitive: !0,
                    type: "Integer"
                },
                Achieved: {
                    propertyId: 3,
                    primitive: !0,
                    type: "Boolean"
                },
                Collected: {
                    propertyId: 4,
                    primitive: !0,
                    type: "Boolean"
                }
            }
        },
        SScore: {
            hierarchyDepth: 2e3,
            serializerID: 105,
            extendss: {
                domainID: "400",
                name: "SStorable"
            },
            fields: {
                PlayerId: {
                    propertyId: 0,
                    primitive: !0,
                    type: "String"
                },
                PlayerName: {
                    propertyId: 1,
                    primitive: !0,
                    type: "String"
                },
                PlayerAvatar: {
                    propertyId: 2,
                    primitive: !0,
                    type: "String"
                },
                Value: {
                    propertyId: 3,
                    primitive: !0,
                    type: "Double"
                }
            }
        },
        SIAPTransaction: {
            hierarchyDepth: 2e3,
            serializerID: 106,
            extendss: {
                domainID: "400",
                name: "SStorable"
            },
            fields: {
                Id: {
                    propertyId: 0,
                    primitive: !0,
                    type: "String"
                },
                PlayerId: {
                    propertyId: 1,
                    primitive: !0,
                    type: "String"
                },
                PublisherId: {
                    propertyId: 2,
                    primitive: !0,
                    type: "String"
                },
                Source: {
                    propertyId: 3,
                    primitive: !0,
                    type: "String"
                },
                Status: {
                    propertyId: 4,
                    primitive: !0,
                    type: "Integer"
                },
                ItemId: {
                    propertyId: 5,
                    primitive: !0,
                    type: "String"
                },
                ItemType: {
                    propertyId: 6,
                    primitive: !0,
                    type: "String"
                },
                Price: {
                    propertyId: 7,
                    primitive: !0,
                    type: "Double"
                },
                Quantity: {
                    propertyId: 8,
                    primitive: !0,
                    type: "Integer"
                },
                TransactionInfo: {
                    propertyId: 9,
                    primitive: !0,
                    type: "String"
                },
                ExternalTransactionId: {
                    propertyId: 10,
                    primitive: !0,
                    type: "String"
                },
                ExternalCustomData: {
                    propertyId: 11,
                    primitive: !0,
                    type: "String"
                },
                ExternalItemId: {
                    propertyId: 12,
                    primitive: !0,
                    type: "String"
                },
                DiscountId: {
                    propertyId: 13,
                    primitive: !0,
                    type: "String"
                },
                InventoryQuantity: {
                    propertyId: 14,
                    primitive: !0,
                    type: "Integer"
                },
                CustomData: {
                    propertyId: 15,
                    primitive: !0,
                    type: "String"
                }
            }
        },
        SNotification: {
            hierarchyDepth: 2e3,
            serializerID: 107,
            extendss: {
                domainID: "400",
                name: "SStorable"
            },
            fields: {
                Id: {
                    propertyId: 0,
                    primitive: !0,
                    type: "String"
                },
                Kind: {
                    propertyId: 1,
                    primitive: !0,
                    type: "Integer"
                },
                TargetPlayerId: {
                    propertyId: 2,
                    primitive: !0,
                    type: "String"
                },
                TargetPublisherId: {
                    propertyId: 3,
                    primitive: !0,
                    type: "String"
                },
                TargetThirdPartyId: {
                    propertyId: 4,
                    primitive: !0,
                    type: "String"
                },
                SourcePlayerId: {
                    propertyId: 5,
                    primitive: !0,
                    type: "String"
                },
                SourcePlayerName: {
                    propertyId: 6,
                    primitive: !0,
                    type: "String"
                },
                SourcePlayerAvatar: {
                    propertyId: 7,
                    primitive: !0,
                    type: "String"
                },
                Text: {
                    propertyId: 8,
                    primitive: !0,
                    type: "String"
                },
                Image: {
                    propertyId: 9,
                    primitive: !0,
                    type: "String"
                },
                Tracked: {
                    propertyId: 10,
                    primitive: !0,
                    type: "Boolean"
                },
                Readed: {
                    propertyId: 11,
                    primitive: !0,
                    type: "Boolean"
                },
                RefId: {
                    propertyId: 12,
                    primitive: !0,
                    type: "String"
                },
                ScheduledDate: {
                    propertyId: 13,
                    primitive: !0,
                    type: "Long"
                },
                SendStatus: {
                    propertyId: 14,
                    primitive: !0,
                    type: "Integer"
                },
                SendDate: {
                    propertyId: 15,
                    primitive: !0,
                    type: "Long"
                },
                SendStatusText: {
                    propertyId: 16,
                    primitive: !0,
                    type: "String"
                },
                ExpirationDate: {
                    propertyId: 17,
                    primitive: !0,
                    type: "Long"
                },
                CustomData: {
                    propertyId: 18,
                    primitive: !0,
                    type: "String"
                }
            }
        },
        SPlayerActivityLog: {
            hierarchyDepth: 2e3,
            serializerID: 108,
            extendss: {
                domainID: "400",
                name: "SStorable"
            },
            fields: {
                PlayerId: {
                    propertyId: 0,
                    primitive: !0,
                    type: "String"
                },
                ThirdPartyId: {
                    propertyId: 1,
                    primitive: !0,
                    type: "String"
                },
                PublisherId: {
                    propertyId: 2,
                    primitive: !0,
                    type: "String"
                },
                Category: {
                    propertyId: 3,
                    primitive: !0,
                    type: "String"
                },
                Action: {
                    propertyId: 4,
                    primitive: !0,
                    type: "String"
                },
                Label: {
                    propertyId: 5,
                    primitive: !0,
                    type: "String"
                },
                Value: {
                    propertyId: 6,
                    primitive: !0,
                    type: "Double"
                },
                ClientId: {
                    propertyId: 7,
                    primitive: !0,
                    type: "String"
                },
                Source: {
                    propertyId: 8,
                    primitive: !0,
                    type: "String"
                },
                Version: {
                    propertyId: 9,
                    primitive: !0,
                    type: "Long"
                },
                Verbosity: {
                    propertyId: 10,
                    primitive: !0,
                    type: "Integer"
                }
            }
        },
        SPlayerOffer: {
            hierarchyDepth: 2e3,
            serializerID: 109,
            extendss: {
                domainID: "400",
                name: "SStorable"
            },
            fields: {
                PlayerId: {
                    propertyId: 0,
                    primitive: !0,
                    type: "String"
                },
                OfferId: {
                    propertyId: 1,
                    primitive: !0,
                    type: "String"
                },
                Status: {
                    propertyId: 3,
                    primitive: !0,
                    type: "Integer"
                },
                ExpirationDate: {
                    propertyId: 4,
                    primitive: !0,
                    type: "Long"
                },
                ItemId: {
                    propertyId: 5,
                    primitive: !0,
                    type: "String"
                },
                ItemQuantity: {
                    propertyId: 6,
                    primitive: !0,
                    type: "Integer"
                }
            }
        },
        SDiscount: {
            hierarchyDepth: 2e3,
            serializerID: 110,
            extendss: {
                domainID: "400",
                name: "SStorable"
            },
            fields: {
                Id: {
                    propertyId: 0,
                    primitive: !0,
                    type: "String"
                },
                StartDate: {
                    propertyId: 1,
                    primitive: !0,
                    type: "Long"
                },
                EndDate: {
                    propertyId: 2,
                    primitive: !0,
                    type: "Long"
                },
                ItemId: {
                    propertyId: 3,
                    primitive: !0,
                    type: "String"
                },
                Discount: {
                    propertyId: 4,
                    primitive: !0,
                    type: "Integer"
                },
                Promotion: {
                    propertyId: 5,
                    primitive: !0,
                    type: "String"
                }
            }
        },
        SCommunityMessage: {
            hierarchyDepth: 2e3,
            serializerID: 111,
            extendss: {
                domainID: "400",
                name: "SStorable"
            },
            fields: {
                Id: {
                    propertyId: 0,
                    primitive: !0,
                    type: "String"
                },
                PublisherId: {
                    propertyId: 1,
                    primitive: !0,
                    type: "String"
                },
                Lang: {
                    propertyId: 2,
                    primitive: !0,
                    type: "String"
                },
                Title: {
                    propertyId: 3,
                    primitive: !0,
                    type: "String"
                },
                Message: {
                    propertyId: 4,
                    primitive: !0,
                    type: "String"
                },
                ButtonTitle: {
                    propertyId: 5,
                    primitive: !0,
                    type: "String"
                },
                ExternalLink: {
                    propertyId: 6,
                    primitive: !0,
                    type: "String"
                },
                Image: {
                    propertyId: 7,
                    primitive: !0,
                    type: "String"
                },
                StartDate: {
                    propertyId: 8,
                    primitive: !0,
                    type: "Long"
                },
                EndDate: {
                    propertyId: 9,
                    primitive: !0,
                    type: "Long"
                }
            }
        },
        SAdvScore: {
            hierarchyDepth: 2e3,
            serializerID: 112,
            extendss: {
                domainID: "400",
                name: "SStorable"
            },
            fields: {
                PlayerId: {
                    propertyId: 1,
                    primitive: !0,
                    type: "String"
                },
                PlayerName: {
                    propertyId: 2,
                    primitive: !0,
                    type: "String"
                },
                PlayerAvatar: {
                    propertyId: 3,
                    primitive: !0,
                    type: "String"
                },
                Level: {
                    propertyId: 4,
                    primitive: !0,
                    type: "Integer"
                },
                Score: {
                    propertyId: 5,
                    primitive: !0,
                    type: "Double"
                },
                Stars: {
                    propertyId: 6,
                    primitive: !0,
                    type: "Integer"
                },
                TimeEllapsed: {
                    propertyId: 7,
                    primitive: !0,
                    type: "Long"
                },
                CompleteCount: {
                    propertyId: 8,
                    primitive: !0,
                    type: "Integer"
                },
                FailureCount: {
                    propertyId: 9,
                    primitive: !0,
                    type: "Integer"
                },
                CustomData: {
                    propertyId: 10,
                    primitive: !0,
                    type: "String"
                }
            }
        },
        SAdvProgress: {
            hierarchyDepth: 2e3,
            serializerID: 113,
            extendss: {
                domainID: "400",
                name: "SStorable"
            },
            fields: {
                PlayerId: {
                    propertyId: 1,
                    primitive: !0,
                    type: "String"
                },
                PlayerName: {
                    propertyId: 2,
                    primitive: !0,
                    type: "String"
                },
                PlayerAvatar: {
                    propertyId: 3,
                    primitive: !0,
                    type: "String"
                },
                Level: {
                    propertyId: 4,
                    primitive: !0,
                    type: "Integer"
                },
                Score: {
                    propertyId: 5,
                    primitive: !0,
                    type: "Integer"
                },
                Stars: {
                    propertyId: 6,
                    primitive: !0,
                    type: "Integer"
                },
                Mode: {
                    propertyId: 11,
                    primitive: !0,
                    type: "String"
                },
                CustomData: {
                    propertyId: 12,
                    primitive: !0,
                    type: "String"
                }
            }
        },
        SFriendList: {
            hierarchyDepth: 2e3,
            serializerID: 114,
            extendss: {
                domainID: "400",
                name: "SStorable"
            },
            fields: {
                PlayerId: {
                    propertyId: 0,
                    primitive: !0,
                    type: "String"
                },
                FriendIds: {
                    propertyId: 1,
                    list: !0,
                    type: "String",
                    primitive: !0
                }
            }
        },
        SDuelChampionship: {
            hierarchyDepth: 2e3,
            serializerID: 115,
            extendss: {
                domainID: "400",
                name: "SStorable"
            },
            fields: {
                Start: {
                    propertyId: 1,
                    primitive: !0,
                    type: "Long"
                },
                End: {
                    propertyId: 2,
                    primitive: !0,
                    type: "Long"
                },
                Open: {
                    propertyId: 3,
                    primitive: !0,
                    type: "Boolean"
                },
                Player1: {
                    propertyId: 4,
                    primitive: !0,
                    type: "String"
                },
                Player2: {
                    propertyId: 5,
                    primitive: !0,
                    type: "String"
                },
                P1Best: {
                    propertyId: 6,
                    primitive: !0,
                    type: "Double"
                },
                P2Best: {
                    propertyId: 7,
                    primitive: !0,
                    type: "Double"
                },
                CustomData: {
                    propertyId: 8,
                    primitive: !0,
                    type: "String"
                }
            }
        },
        SPlayerDuelStats: {
            hierarchyDepth: 2e3,
            serializerID: 116,
            extendss: {
                domainID: "400",
                name: "SStorable"
            },
            fields: {
                Id: {
                    propertyId: 0,
                    primitive: !0,
                    type: "String"
                },
                Player1: {
                    propertyId: 1,
                    primitive: !0,
                    type: "String"
                },
                Player2: {
                    propertyId: 2,
                    primitive: !0,
                    type: "String"
                },
                P1Victories: {
                    propertyId: 3,
                    primitive: !0,
                    type: "Integer"
                },
                P2Victories: {
                    propertyId: 4,
                    primitive: !0,
                    type: "Integer"
                },
                CustomData: {
                    propertyId: 5,
                    primitive: !0,
                    type: "String"
                }
            }
        },
        SPlayerProperty: {
            hierarchyDepth: 2e3,
            serializerID: 117,
            extendss: {
                domainID: "400",
                name: "SStorable"
            },
            fields: {
                PlayerId: {
                    propertyId: 0,
                    primitive: !0,
                    type: "String"
                },
                Key: {
                    propertyId: 1,
                    primitive: !0,
                    type: "String"
                },
                Value: {
                    propertyId: 3,
                    primitive: !0,
                    type: "Double"
                }
            }
        },
        SMessage: {
            hierarchyDepth: 2e3,
            serializerID: 120,
            extendss: {
                domainID: "0",
                name: "Message"
            },
            fields: {}
        },
        STextMessage: {
            hierarchyDepth: 3e3,
            serializerID: 121,
            extendss: {
                domainID: "400",
                name: "SMessage"
            },
            fields: {
                From: {
                    propertyId: 0,
                    primitive: !0,
                    type: "String"
                },
                Text: {
                    propertyId: 1,
                    primitive: !0,
                    type: "String"
                },
                Kind: {
                    propertyId: 2,
                    primitive: !0,
                    type: "Integer"
                },
                Topic: {
                    propertyId: 3,
                    primitive: !0,
                    type: "String"
                },
                TopicMessageId: {
                    propertyId: 4,
                    primitive: !0,
                    type: "Long"
                }
            }
        },
        SRoomParameters: {
            hierarchyDepth: 2e3,
            serializerID: 122,
            extendss: {
                domainID: "400",
                name: "SStorable"
            },
            fields: {
                HasMaster: {
                    propertyId: 0,
                    primitive: !0,
                    type: "Boolean"
                },
                Expiration: {
                    propertyId: 1,
                    primitive: !0,
                    type: "Long"
                },
                RoomId: {
                    propertyId: 2,
                    primitive: !0,
                    type: "String"
                },
                Public: {
                    propertyId: 3,
                    primitive: !0,
                    type: "Boolean"
                },
                Custom: {
                    propertyId: 4,
                    primitive: !0,
                    type: "String"
                }
            }
        },
        SPublishParameters: {
            hierarchyDepth: 2e3,
            serializerID: 123,
            extendss: {
                domainID: "400",
                name: "SStorable"
            },
            fields: {
                PersistState: {
                    propertyId: 0,
                    primitive: !0,
                    type: "Boolean"
                }
            }
        },
        SPullParameters: {
            hierarchyDepth: 2e3,
            serializerID: 124,
            extendss: {
                domainID: "400",
                name: "SStorable"
            },
            fields: {
                State: {
                    propertyId: 0,
                    primitive: !0,
                    type: "Boolean"
                }
            }
        },
        SRoomState: {
            hierarchyDepth: 2e3,
            serializerID: 125,
            extendss: {
                domainID: "400",
                name: "SStorable"
            },
            fields: {
                Players: {
                    propertyId: 0,
                    list: !0,
                    type: "SPlayerRoomState",
                    domainID: "400",
                    reference: !0
                },
                MasterId: {
                    propertyId: 1,
                    primitive: !0,
                    type: "String"
                }
            }
        },
        SPlayerRoomState: {
            hierarchyDepth: 2e3,
            serializerID: 126,
            extendss: {
                domainID: "400",
                name: "SStorable"
            },
            fields: {
                PlayerId: {
                    propertyId: 0,
                    primitive: !0,
                    type: "String"
                },
                Text: {
                    propertyId: 1,
                    primitive: !0,
                    type: "String"
                }
            }
        },
        AuthenticateRequest: {
            hierarchyDepth: 3e3,
            serializerID: 1e4,
            extendss: {
                domainID: "400",
                name: "SRequest"
            },
            fields: {
                context: {
                    propertyId: 0,
                    structure: !0,
                    type: "nmap"
                }
            }
        },
        AuthenticateResponse: {
            hierarchyDepth: 3e3,
            serializerID: 10001,
            extendss: {
                domainID: "400",
                name: "SResponse"
            },
            fields: {
                AuthenticateStatus: {
                    propertyId: -1,
                    reference: !0,
                    type: "AuthenticateStatus",
                    domainId: "400"
                },
                player: {
                    propertyId: 0,
                    reference: !0,
                    type: "SPlayer",
                    domainId: "400"
                },
                serverTime: {
                    propertyId: 1,
                    primitive: !0,
                    type: "Long"
                }
            }
        },
        SaveAchievementRequest: {
            hierarchyDepth: 3e3,
            serializerID: 10003,
            extendss: {
                domainID: "400",
                name: "SRequest"
            },
            fields: {
                achievement: {
                    propertyId: 0,
                    reference: !0,
                    type: "SPlayerAchievement",
                    domainId: "400"
                }
            }
        },
        SaveAchievementResponse: {
            hierarchyDepth: 3e3,
            serializerID: 10004,
            extendss: {
                domainID: "400",
                name: "SResponse"
            },
            fields: {
                SaveAchievementStatus: {
                    propertyId: -1,
                    reference: !0,
                    type: "SaveAchievementStatus",
                    domainId: "400"
                },
                achievement: {
                    propertyId: 0,
                    reference: !0,
                    type: "SPlayerAchievement",
                    domainId: "400"
                }
            }
        },
        SaveIAPRequest: {
            hierarchyDepth: 3e3,
            serializerID: 10006,
            extendss: {
                domainID: "400",
                name: "SRequest"
            },
            fields: {
                iap: {
                    propertyId: 0,
                    reference: !0,
                    type: "SIAPTransaction",
                    domainId: "400"
                }
            }
        },
        SaveIAPResponse: {
            hierarchyDepth: 3e3,
            serializerID: 10007,
            extendss: {
                domainID: "400",
                name: "SResponse"
            },
            fields: {
                SaveIAPStatus: {
                    propertyId: -1,
                    reference: !0,
                    type: "SaveIAPStatus",
                    domainId: "400"
                },
                iap: {
                    propertyId: 0,
                    reference: !0,
                    type: "SIAPTransaction",
                    domainId: "400"
                },
                message: {
                    propertyId: 1,
                    primitive: !0,
                    type: "String"
                }
            }
        },
        GetPlayerByIdRequest: {
            hierarchyDepth: 3e3,
            serializerID: 10009,
            extendss: {
                domainID: "400",
                name: "SRequest"
            },
            fields: {
                searchedPlayerId: {
                    propertyId: 0,
                    primitive: !0,
                    type: "String"
                }
            }
        },
        GetPlayerByIdResponse: {
            hierarchyDepth: 3e3,
            serializerID: 10010,
            extendss: {
                domainID: "400",
                name: "SResponse"
            },
            fields: {
                GetPlayerByIdStatus: {
                    propertyId: -1,
                    reference: !0,
                    type: "GetPlayerByIdStatus",
                    domainId: "400"
                },
                player: {
                    propertyId: 1,
                    reference: !0,
                    type: "SPlayer",
                    domainId: "400"
                }
            }
        },
        GetPlayerByThirdPartyIdRequest: {
            hierarchyDepth: 3e3,
            serializerID: 10012,
            extendss: {
                domainID: "400",
                name: "SRequest"
            },
            fields: {
                publisherId: {
                    propertyId: 0,
                    primitive: !0,
                    type: "String"
                },
                thirdPartyId: {
                    propertyId: 1,
                    primitive: !0,
                    type: "String"
                }
            }
        },
        GetPlayerByThirdPartyIdResponse: {
            hierarchyDepth: 3e3,
            serializerID: 10013,
            extendss: {
                domainID: "400",
                name: "SResponse"
            },
            fields: {
                GetPlayerByThirdPartyIdStatus: {
                    propertyId: -1,
                    reference: !0,
                    type: "GetPlayerByThirdPartyIdStatus",
                    domainId: "400"
                },
                player: {
                    propertyId: 1,
                    reference: !0,
                    type: "SPlayer",
                    domainId: "400"
                }
            }
        },
        FindScoresRequest: {
            hierarchyDepth: 3e3,
            serializerID: 10015,
            extendss: {
                domainID: "400",
                name: "SRequest"
            },
            fields: {
                leaderboardId: {
                    propertyId: 0,
                    primitive: !0,
                    type: "String"
                },
                query: {
                    propertyId: 1,
                    reference: !0,
                    type: "NuggetaQuery",
                    domainId: "0"
                }
            }
        },
        FindScoresResponse: {
            hierarchyDepth: 3e3,
            serializerID: 10016,
            extendss: {
                domainID: "400",
                name: "SResponse"
            },
            fields: {
                FindScoresStatus: {
                    propertyId: -1,
                    reference: !0,
                    type: "FindScoresStatus",
                    domainId: "400"
                },
                scores: {
                    propertyId: 2,
                    list: !0,
                    type: "SScore",
                    domainID: "400",
                    reference: !0
                }
            }
        },
        GetBestScoresRequest: {
            hierarchyDepth: 3e3,
            serializerID: 10018,
            extendss: {
                domainID: "400",
                name: "SRequest"
            },
            fields: {
                leaderboardId: {
                    propertyId: 0,
                    primitive: !0,
                    type: "String"
                },
                start: {
                    propertyId: 1,
                    primitive: !0,
                    type: "Integer"
                },
                limit: {
                    propertyId: 2,
                    primitive: !0,
                    type: "Integer"
                },
                includeRank: {
                    propertyId: 3,
                    primitive: !0,
                    type: "Boolean"
                },
                limitToFriends: {
                    propertyId: 4,
                    primitive: !0,
                    type: "Boolean"
                }
            }
        },
        GetBestScoresResponse: {
            hierarchyDepth: 3e3,
            serializerID: 10019,
            extendss: {
                domainID: "400",
                name: "SResponse"
            },
            fields: {
                GetBestScoresStatus: {
                    propertyId: -1,
                    reference: !0,
                    type: "GetBestScoresStatus",
                    domainId: "400"
                },
                scores: {
                    propertyId: 0,
                    list: !0,
                    type: "SScore",
                    domainID: "400",
                    reference: !0
                },
                myBest: {
                    propertyId: 1,
                    reference: !0,
                    type: "SScore",
                    domainId: "400"
                },
                myRank: {
                    propertyId: 2,
                    primitive: !0,
                    type: "Integer"
                }
            }
        },
        SubmitScoreRequest: {
            hierarchyDepth: 3e3,
            serializerID: 10021,
            extendss: {
                domainID: "400",
                name: "SRequest"
            },
            fields: {
                leaderboardId: {
                    propertyId: 0,
                    primitive: !0,
                    type: "String"
                },
                score: {
                    propertyId: 1,
                    reference: !0,
                    type: "SScore",
                    domainId: "400"
                }
            }
        },
        SubmitScoreResponse: {
            hierarchyDepth: 3e3,
            serializerID: 10022,
            extendss: {
                domainID: "400",
                name: "SResponse"
            },
            fields: {
                SubmitScoreStatus: {
                    propertyId: -1,
                    reference: !0,
                    type: "SubmitScoreStatus",
                    domainId: "400"
                },
                previousScore: {
                    propertyId: 0,
                    reference: !0,
                    type: "SScore",
                    domainId: "400"
                }
            }
        },
        GetAchievementsRequest: {
            hierarchyDepth: 3e3,
            serializerID: 10024,
            extendss: {
                domainID: "400",
                name: "SRequest"
            },
            fields: {}
        },
        GetAchievementsResponse: {
            hierarchyDepth: 3e3,
            serializerID: 10025,
            extendss: {
                domainID: "400",
                name: "SResponse"
            },
            fields: {
                GetAchievementsStatus: {
                    propertyId: -1,
                    reference: !0,
                    type: "GetAchievementsStatus",
                    domainId: "400"
                },
                achievements: {
                    propertyId: 0,
                    list: !0,
                    type: "SPlayerAchievement",
                    domainID: "400",
                    reference: !0
                }
            }
        },
        SaveNotificationRequest: {
            hierarchyDepth: 3e3,
            serializerID: 10027,
            extendss: {
                domainID: "400",
                name: "SRequest"
            },
            fields: {
                notification: {
                    propertyId: 0,
                    reference: !0,
                    type: "SNotification",
                    domainId: "400"
                }
            }
        },
        SaveNotificationResponse: {
            hierarchyDepth: 3e3,
            serializerID: 10028,
            extendss: {
                domainID: "400",
                name: "SResponse"
            },
            fields: {
                SaveNotificationStatus: {
                    propertyId: -1,
                    reference: !0,
                    type: "SaveNotificationStatus",
                    domainId: "400"
                },
                notification: {
                    propertyId: 0,
                    reference: !0,
                    type: "SNotification",
                    domainId: "400"
                }
            }
        },
        FindNotificationsRequest: {
            hierarchyDepth: 3e3,
            serializerID: 10030,
            extendss: {
                domainID: "400",
                name: "SRequest"
            },
            fields: {
                query: {
                    propertyId: 0,
                    reference: !0,
                    type: "NuggetaQuery",
                    domainId: "0"
                }
            }
        },
        FindNotificationsResponse: {
            hierarchyDepth: 3e3,
            serializerID: 10031,
            extendss: {
                domainID: "400",
                name: "SResponse"
            },
            fields: {
                FindNotificationsStatus: {
                    propertyId: -1,
                    reference: !0,
                    type: "FindNotificationsStatus",
                    domainId: "400"
                },
                notifications: {
                    propertyId: 0,
                    list: !0,
                    type: "SNotification",
                    domainID: "400",
                    reference: !0
                }
            }
        },
        TrackPlayerRequest: {
            hierarchyDepth: 3e3,
            serializerID: 10033,
            extendss: {
                domainID: "400",
                name: "SRequest"
            },
            fields: {
                Activity: {
                    propertyId: 0,
                    reference: !0,
                    type: "SPlayerActivityLog",
                    domainId: "400"
                }
            }
        },
        TrackPlayerResponse: {
            hierarchyDepth: 3e3,
            serializerID: 10034,
            extendss: {
                domainID: "400",
                name: "SResponse"
            },
            fields: {
                TrackPlayerStatus: {
                    propertyId: -1,
                    reference: !0,
                    type: "TrackPlayerStatus",
                    domainId: "400"
                }
            }
        },
        CreatePlayerRequest: {
            hierarchyDepth: 3e3,
            serializerID: 10036,
            extendss: {
                domainID: "400",
                name: "SRequest"
            },
            fields: {
                context: {
                    propertyId: 1,
                    structure: !0,
                    type: "nmap"
                }
            }
        },
        CreatePlayerResponse: {
            hierarchyDepth: 3e3,
            serializerID: 10037,
            extendss: {
                domainID: "400",
                name: "SResponse"
            },
            fields: {
                CreatePlayerStatus: {
                    propertyId: -1,
                    reference: !0,
                    type: "CreatePlayerStatus",
                    domainId: "400"
                },
                player: {
                    propertyId: 1,
                    reference: !0,
                    type: "SPlayer",
                    domainId: "400"
                }
            }
        },
        SetFriendsRequest: {
            hierarchyDepth: 3e3,
            serializerID: 10039,
            extendss: {
                domainID: "400",
                name: "SRequest"
            },
            fields: {
                friends: {
                    propertyId: 2,
                    list: !0,
                    type: "SPlayer",
                    domainID: "400",
                    reference: !0
                }
            }
        },
        SetFriendsResponse: {
            hierarchyDepth: 3e3,
            serializerID: 10040,
            extendss: {
                domainID: "400",
                name: "SResponse"
            },
            fields: {
                SetFriendsStatus: {
                    propertyId: -1,
                    reference: !0,
                    type: "SetFriendsStatus",
                    domainId: "400"
                }
            }
        },
        GetFriendsRequest: {
            hierarchyDepth: 3e3,
            serializerID: 10042,
            extendss: {
                domainID: "400",
                name: "SRequest"
            },
            fields: {
                searchedPlayerId: {
                    propertyId: 0,
                    primitive: !0,
                    type: "String"
                },
                start: {
                    propertyId: 1,
                    primitive: !0,
                    type: "Integer"
                },
                limit: {
                    propertyId: 2,
                    primitive: !0,
                    type: "Integer"
                }
            }
        },
        GetFriendsResponse: {
            hierarchyDepth: 3e3,
            serializerID: 10043,
            extendss: {
                domainID: "400",
                name: "SResponse"
            },
            fields: {
                GetFriendsStatus: {
                    propertyId: -1,
                    reference: !0,
                    type: "GetFriendsStatus",
                    domainId: "400"
                },
                friends: {
                    propertyId: 0,
                    list: !0,
                    type: "SPlayer",
                    domainID: "400",
                    reference: !0
                }
            }
        },
        GetStateRequest: {
            hierarchyDepth: 3e3,
            serializerID: 10045,
            extendss: {
                domainID: "400",
                name: "SRequest"
            },
            fields: {
                context: {
                    propertyId: 0,
                    structure: !0,
                    type: "nmap"
                },
                filter: {
                    propertyId: 1,
                    primitive: !0,
                    type: "Long"
                }
            }
        },
        GetStateResponse: {
            hierarchyDepth: 3e3,
            serializerID: 10046,
            extendss: {
                domainID: "400",
                name: "SResponse"
            },
            fields: {
                GetStateStatus: {
                    propertyId: -1,
                    reference: !0,
                    type: "GetStateStatus",
                    domainId: "400"
                },
                Storables: {
                    propertyId: 0,
                    list: !0,
                    type: "Storable",
                    domainID: "0",
                    reference: !0
                }
            }
        },
        SubmitAdvProgressRequest: {
            hierarchyDepth: 3e3,
            serializerID: 10060,
            extendss: {
                domainID: "400",
                name: "SRequest"
            },
            fields: {
                level: {
                    propertyId: 2,
                    primitive: !0,
                    type: "Integer"
                },
                score: {
                    propertyId: 3,
                    primitive: !0,
                    type: "Double"
                },
                stars: {
                    propertyId: 4,
                    primitive: !0,
                    type: "Integer"
                },
                timeEllapsed: {
                    propertyId: 5,
                    primitive: !0,
                    type: "Long"
                },
                completed: {
                    propertyId: 6,
                    primitive: !0,
                    type: "Boolean"
                },
                mode: {
                    propertyId: 7,
                    primitive: !0,
                    type: "String"
                },
                scoreCustomData: {
                    propertyId: 8,
                    reference: !0,
                    type: "SAdvScore",
                    domainId: "400"
                },
                progressCustomData: {
                    propertyId: 9,
                    reference: !0,
                    type: "SAdvProgress",
                    domainId: "400"
                }
            }
        },
        SubmitAdvProgressResponse: {
            hierarchyDepth: 3e3,
            serializerID: 10061,
            extendss: {
                domainID: "400",
                name: "SResponse"
            },
            fields: {
                SubmitAdvProgressStatus: {
                    propertyId: -1,
                    reference: !0,
                    type: "SubmitAdvProgressStatus",
                    domainId: "400"
                },
                myScore: {
                    propertyId: 1,
                    reference: !0,
                    type: "SAdvScore",
                    domainId: "400"
                },
                bestScores: {
                    propertyId: 2,
                    list: !0,
                    type: "SAdvScore",
                    domainID: "400",
                    reference: !0
                },
                newProgress: {
                    propertyId: 3,
                    reference: !0,
                    type: "SAdvProgress",
                    domainId: "400"
                }
            }
        },
        GetAdvProgressRequest: {
            hierarchyDepth: 3e3,
            serializerID: 10063,
            extendss: {
                domainID: "400",
                name: "SRequest"
            },
            fields: {
                mode: {
                    propertyId: 2,
                    primitive: !0,
                    type: "String"
                }
            }
        },
        GetAdvProgressResponse: {
            hierarchyDepth: 3e3,
            serializerID: 10064,
            extendss: {
                domainID: "400",
                name: "SResponse"
            },
            fields: {
                GetAdvProgressStatus: {
                    propertyId: -1,
                    reference: !0,
                    type: "GetAdvProgressStatus",
                    domainId: "400"
                },
                progress: {
                    propertyId: 1,
                    reference: !0,
                    type: "SAdvProgress",
                    domainId: "400"
                },
                scores: {
                    propertyId: 2,
                    list: !0,
                    type: "SAdvScore",
                    domainID: "400",
                    reference: !0
                }
            }
        },
        GetAdvFriendsProgressRequest: {
            hierarchyDepth: 3e3,
            serializerID: 10066,
            extendss: {
                domainID: "400",
                name: "SRequest"
            },
            fields: {
                levelMin: {
                    propertyId: 2,
                    primitive: !0,
                    type: "Integer"
                },
                levelMax: {
                    propertyId: 3,
                    primitive: !0,
                    type: "Integer"
                },
                mode: {
                    propertyId: 4,
                    primitive: !0,
                    type: "String"
                }
            }
        },
        GetAdvFriendsProgressResponse: {
            hierarchyDepth: 3e3,
            serializerID: 10067,
            extendss: {
                domainID: "400",
                name: "SResponse"
            },
            fields: {
                GetAdvFriendsProgressStatus: {
                    propertyId: -1,
                    reference: !0,
                    type: "GetAdvFriendsProgressStatus",
                    domainId: "400"
                },
                friendsProgress: {
                    propertyId: 1,
                    list: !0,
                    type: "SAdvProgress",
                    domainID: "400",
                    reference: !0
                }
            }
        },
        GetAdvScoresRequest: {
            hierarchyDepth: 3e3,
            serializerID: 10069,
            extendss: {
                domainID: "400",
                name: "SRequest"
            },
            fields: {
                levelMin: {
                    propertyId: 2,
                    primitive: !0,
                    type: "Integer"
                },
                levelMax: {
                    propertyId: 3,
                    primitive: !0,
                    type: "Integer"
                },
                mode: {
                    propertyId: 4,
                    primitive: !0,
                    type: "String"
                }
            }
        },
        GetAdvScoresResponse: {
            hierarchyDepth: 3e3,
            serializerID: 10070,
            extendss: {
                domainID: "400",
                name: "SResponse"
            },
            fields: {
                GetAdvScoresStatus: {
                    propertyId: -1,
                    reference: !0,
                    type: "GetAdvScoresStatus",
                    domainId: "400"
                },
                scores: {
                    propertyId: 1,
                    list: !0,
                    type: "SAdvScore",
                    domainID: "400",
                    reference: !0
                }
            }
        },
        GetAdvFriendsScoresRequest: {
            hierarchyDepth: 3e3,
            serializerID: 10072,
            extendss: {
                domainID: "400",
                name: "SRequest"
            },
            fields: {
                level: {
                    propertyId: 2,
                    primitive: !0,
                    type: "Integer"
                },
                mode: {
                    propertyId: 3,
                    primitive: !0,
                    type: "String"
                }
            }
        },
        GetAdvFriendsScoresResponse: {
            hierarchyDepth: 3e3,
            serializerID: 10073,
            extendss: {
                domainID: "400",
                name: "SResponse"
            },
            fields: {
                GetAdvFriendsScoresStatus: {
                    propertyId: -1,
                    reference: !0,
                    type: "GetAdvFriendsScoresStatus",
                    domainId: "400"
                },
                scores: {
                    propertyId: 1,
                    list: !0,
                    type: "SAdvScore",
                    domainID: "400",
                    reference: !0
                }
            }
        },
        SaveAdvProgressRequest: {
            hierarchyDepth: 3e3,
            serializerID: 10075,
            extendss: {
                domainID: "400",
                name: "SRequest"
            },
            fields: {
                mode: {
                    propertyId: 2,
                    primitive: !0,
                    type: "String"
                },
                progress: {
                    propertyId: 3,
                    reference: !0,
                    type: "SAdvProgress",
                    domainId: "400"
                }
            }
        },
        SaveAdvProgressResponse: {
            hierarchyDepth: 3e3,
            serializerID: 10076,
            extendss: {
                domainID: "400",
                name: "SResponse"
            },
            fields: {
                SaveAdvProgressStatus: {
                    propertyId: -1,
                    reference: !0,
                    type: "SaveAdvProgressStatus",
                    domainId: "400"
                },
                progress: {
                    propertyId: 1,
                    reference: !0,
                    type: "SAdvProgress",
                    domainId: "400"
                }
            }
        },
        FindStorablesRequest: {
            hierarchyDepth: 3e3,
            serializerID: 10090,
            extendss: {
                domainID: "400",
                name: "SRequest"
            },
            fields: {
                namespace: {
                    propertyId: 0,
                    primitive: !0,
                    type: "String"
                },
                query: {
                    propertyId: 1,
                    reference: !0,
                    type: "NuggetaQuery",
                    domainId: "0"
                }
            }
        },
        FindStorablesResponse: {
            hierarchyDepth: 3e3,
            serializerID: 10091,
            extendss: {
                domainID: "400",
                name: "SResponse"
            },
            fields: {
                FindStorablesStatus: {
                    propertyId: -1,
                    reference: !0,
                    type: "FindStorablesStatus",
                    domainId: "400"
                },
                storables: {
                    propertyId: 0,
                    list: !0,
                    type: "Storable",
                    domainID: "0",
                    reference: !0
                }
            }
        },
        SaveStorableRequest: {
            hierarchyDepth: 3e3,
            serializerID: 10093,
            extendss: {
                domainID: "400",
                name: "SRequest"
            },
            fields: {
                namespace: {
                    propertyId: 0,
                    primitive: !0,
                    type: "String"
                },
                storable: {
                    propertyId: 1,
                    reference: !0,
                    type: "Storable",
                    domainId: "0"
                }
            }
        },
        SaveStorableResponse: {
            hierarchyDepth: 3e3,
            serializerID: 10094,
            extendss: {
                domainID: "400",
                name: "SResponse"
            },
            fields: {
                SaveStorableStatus: {
                    propertyId: -1,
                    reference: !0,
                    type: "SaveStorableStatus",
                    domainId: "400"
                },
                storable: {
                    propertyId: 0,
                    reference: !0,
                    type: "Storable",
                    domainId: "0"
                }
            }
        },
        SaveStorableDiffRequest: {
            hierarchyDepth: 3e3,
            serializerID: 10096,
            extendss: {
                domainID: "400",
                name: "SRequest"
            },
            fields: {
                namespace: {
                    propertyId: 0,
                    primitive: !0,
                    type: "String"
                },
                storable: {
                    propertyId: 1,
                    reference: !0,
                    type: "Storable",
                    domainId: "0"
                }
            }
        },
        SaveStorableDiffResponse: {
            hierarchyDepth: 3e3,
            serializerID: 10097,
            extendss: {
                domainID: "400",
                name: "SResponse"
            },
            fields: {
                SaveStorableDiffStatus: {
                    propertyId: -1,
                    reference: !0,
                    type: "SaveStorableDiffStatus",
                    domainId: "400"
                },
                storable: {
                    propertyId: 0,
                    reference: !0,
                    type: "Storable",
                    domainId: "0"
                }
            }
        },
        RemoveStorableRequest: {
            hierarchyDepth: 3e3,
            serializerID: 10099,
            extendss: {
                domainID: "400",
                name: "SRequest"
            },
            fields: {
                namespace: {
                    propertyId: 0,
                    primitive: !0,
                    type: "String"
                },
                storableId: {
                    propertyId: 1,
                    primitive: !0,
                    type: "String"
                }
            }
        },
        RemoveStorableResponse: {
            hierarchyDepth: 3e3,
            serializerID: 10100,
            extendss: {
                domainID: "400",
                name: "SResponse"
            },
            fields: {
                RemoveStorableStatus: {
                    propertyId: -1,
                    reference: !0,
                    type: "RemoveStorableStatus",
                    domainId: "400"
                }
            }
        },
        SaveStorablesRequest: {
            hierarchyDepth: 3e3,
            serializerID: 10102,
            extendss: {
                domainID: "400",
                name: "SRequest"
            },
            fields: {
                namespace: {
                    propertyId: 0,
                    primitive: !0,
                    type: "String"
                },
                storables: {
                    propertyId: 1,
                    list: !0,
                    type: "Storable",
                    domainID: "0",
                    reference: !0
                }
            }
        },
        SaveStorablesResponse: {
            hierarchyDepth: 3e3,
            serializerID: 10103,
            extendss: {
                domainID: "400",
                name: "SResponse"
            },
            fields: {
                SaveStorablesStatus: {
                    propertyId: -1,
                    reference: !0,
                    type: "SaveStorablesStatus",
                    domainId: "400"
                },
                storables: {
                    propertyId: 0,
                    list: !0,
                    type: "Storable",
                    domainID: "0",
                    reference: !0
                }
            }
        },
        FindAndModifyStorablesRequest: {
            hierarchyDepth: 3e3,
            serializerID: 10105,
            extendss: {
                domainID: "400",
                name: "SRequest"
            },
            fields: {
                namespace: {
                    propertyId: 0,
                    primitive: !0,
                    type: "String"
                },
                filter: {
                    propertyId: 1,
                    reference: !0,
                    type: "NuggetaQuery",
                    domainId: "0"
                },
                update: {
                    propertyId: 2,
                    reference: !0,
                    type: "Storable",
                    domainId: "0"
                },
                upsert: {
                    propertyId: 3,
                    primitive: !0,
                    type: "Boolean"
                }
            }
        },
        FindAndModifyStorablesResponse: {
            hierarchyDepth: 3e3,
            serializerID: 10106,
            extendss: {
                domainID: "400",
                name: "SResponse"
            },
            fields: {
                FindAndModifyStorablesStatus: {
                    propertyId: -1,
                    reference: !0,
                    type: "FindAndModifyStorablesStatus",
                    domainId: "400"
                },
                storables: {
                    propertyId: 0,
                    list: !0,
                    type: "Storable",
                    domainID: "0",
                    reference: !0
                }
            }
        },
        GetDuelChampionshipRequest: {
            hierarchyDepth: 3e3,
            serializerID: 10120,
            extendss: {
                domainID: "400",
                name: "SRequest"
            },
            fields: {
                player1: {
                    propertyId: 1,
                    primitive: !0,
                    type: "String"
                },
                player2: {
                    propertyId: 2,
                    primitive: !0,
                    type: "String"
                }
            }
        },
        GetDuelChampionshipResponse: {
            hierarchyDepth: 3e3,
            serializerID: 10121,
            extendss: {
                domainID: "400",
                name: "SResponse"
            },
            fields: {
                GetDuelChampionshipStatus: {
                    propertyId: -1,
                    reference: !0,
                    type: "GetDuelChampionshipStatus",
                    domainId: "400"
                },
                current: {
                    propertyId: 1,
                    reference: !0,
                    type: "SDuelChampionship",
                    domainId: "400"
                },
                stats: {
                    propertyId: 2,
                    reference: !0,
                    type: "SPlayerDuelStats",
                    domainId: "400"
                }
            }
        },
        SubmitDuelChampionshipScoreRequest: {
            hierarchyDepth: 3e3,
            serializerID: 10123,
            extendss: {
                domainID: "400",
                name: "SRequest"
            },
            fields: {
                championshipId: {
                    propertyId: 1,
                    primitive: !0,
                    type: "String"
                },
                score: {
                    propertyId: 2,
                    primitive: !0,
                    type: "Double"
                }
            }
        },
        SubmitDuelChampionshipScoreResponse: {
            hierarchyDepth: 3e3,
            serializerID: 10124,
            extendss: {
                domainID: "400",
                name: "SResponse"
            },
            fields: {
                SubmitDuelChampionshipScoreStatus: {
                    propertyId: -1,
                    reference: !0,
                    type: "SubmitDuelChampionshipScoreStatus",
                    domainId: "400"
                },
                current: {
                    propertyId: 1,
                    reference: !0,
                    type: "SDuelChampionship",
                    domainId: "400"
                },
                stats: {
                    propertyId: 2,
                    reference: !0,
                    type: "SPlayerDuelStats",
                    domainId: "400"
                }
            }
        },
        GetBestServersRequest: {
            hierarchyDepth: 3e3,
            serializerID: 10150,
            extendss: {
                domainID: "400",
                name: "SRequest"
            },
            fields: {}
        },
        GetBestServersResponse: {
            hierarchyDepth: 3e3,
            serializerID: 10151,
            extendss: {
                domainID: "400",
                name: "SResponse"
            },
            fields: {
                GetBestServersStatus: {
                    propertyId: -1,
                    reference: !0,
                    type: "GetBestServersStatus",
                    domainId: "400"
                },
                servers: {
                    propertyId: 1,
                    list: !0,
                    type: "String",
                    primitive: !0
                }
            }
        },
        CreateRoomRequest: {
            hierarchyDepth: 3e3,
            serializerID: 10153,
            extendss: {
                domainID: "400",
                name: "SRequest"
            },
            fields: {
                parameters: {
                    propertyId: 0,
                    reference: !0,
                    type: "SRoomParameters",
                    domainId: "400"
                }
            }
        },
        CreateRoomResponse: {
            hierarchyDepth: 3e3,
            serializerID: 10154,
            extendss: {
                domainID: "400",
                name: "SResponse"
            },
            fields: {
                CreateRoomStatus: {
                    propertyId: -1,
                    reference: !0,
                    type: "CreateRoomStatus",
                    domainId: "400"
                },
                roomId: {
                    propertyId: 0,
                    primitive: !0,
                    type: "String"
                }
            }
        },
        SubscribeRequest: {
            hierarchyDepth: 3e3,
            serializerID: 10156,
            extendss: {
                domainID: "400",
                name: "SRequest"
            },
            fields: {
                topic: {
                    propertyId: 0,
                    primitive: !0,
                    type: "String"
                },
                parameters: {
                    propertyId: 1,
                    reference: !0,
                    type: "SRoomParameters",
                    domainId: "400"
                }
            }
        },
        SubscribeResponse: {
            hierarchyDepth: 3e3,
            serializerID: 10157,
            extendss: {
                domainID: "400",
                name: "SResponse"
            },
            fields: {
                SubscribeStatus: {
                    propertyId: -1,
                    reference: !0,
                    type: "SubscribeStatus",
                    domainId: "400"
                },
                members: {
                    propertyId: 0,
                    list: !0,
                    type: "String",
                    primitive: !0
                },
                totalMembers: {
                    propertyId: 1,
                    primitive: !0,
                    type: "Integer"
                }
            }
        },
        PublishRequest: {
            hierarchyDepth: 3e3,
            serializerID: 10159,
            extendss: {
                domainID: "400",
                name: "SRequest"
            },
            fields: {
                topic: {
                    propertyId: 0,
                    primitive: !0,
                    type: "String"
                },
                message: {
                    propertyId: 1,
                    reference: !0,
                    type: "STextMessage",
                    domainId: "400"
                },
                parameters: {
                    propertyId: 2,
                    reference: !0,
                    type: "SPublishParameters",
                    domainId: "400"
                }
            }
        },
        PublishResponse: {
            hierarchyDepth: 3e3,
            serializerID: 10160,
            extendss: {
                domainID: "400",
                name: "SResponse"
            },
            fields: {
                PublishStatus: {
                    propertyId: -1,
                    reference: !0,
                    type: "PublishStatus",
                    domainId: "400"
                }
            }
        },
        UnsubscribeRequest: {
            hierarchyDepth: 3e3,
            serializerID: 10162,
            extendss: {
                domainID: "400",
                name: "SRequest"
            },
            fields: {
                topic: {
                    propertyId: 0,
                    primitive: !0,
                    type: "String"
                }
            }
        },
        UnsubscribeResponse: {
            hierarchyDepth: 3e3,
            serializerID: 10163,
            extendss: {
                domainID: "400",
                name: "SResponse"
            },
            fields: {
                UnsubscribeStatus: {
                    propertyId: -1,
                    reference: !0,
                    type: "UnsubscribeStatus",
                    domainId: "400"
                }
            }
        },
        PullRequest: {
            hierarchyDepth: 3e3,
            serializerID: 10165,
            extendss: {
                domainID: "400",
                name: "SRequest"
            },
            fields: {
                topic: {
                    propertyId: 0,
                    primitive: !0,
                    type: "String"
                },
                parameters: {
                    propertyId: 1,
                    reference: !0,
                    type: "SPullParameters",
                    domainId: "400"
                }
            }
        },
        PullResponse: {
            hierarchyDepth: 3e3,
            serializerID: 10166,
            extendss: {
                domainID: "400",
                name: "SResponse"
            },
            fields: {
                PullStatus: {
                    propertyId: -1,
                    reference: !0,
                    type: "PullStatus",
                    domainId: "400"
                },
                state: {
                    propertyId: 0,
                    reference: !0,
                    type: "SRoomState",
                    domainId: "400"
                }
            }
        },
        GetPublicRoomRequest: {
            hierarchyDepth: 3e3,
            serializerID: 10168,
            extendss: {
                domainID: "400",
                name: "SRequest"
            },
            fields: {
                parameters: {
                    propertyId: 0,
                    reference: !0,
                    type: "SStorable",
                    domainId: "400"
                }
            }
        },
        GetPublicRoomResponse: {
            hierarchyDepth: 3e3,
            serializerID: 10169,
            extendss: {
                domainID: "400",
                name: "SResponse"
            },
            fields: {
                GetPublicRoomStatus: {
                    propertyId: -1,
                    reference: !0,
                    type: "GetPublicRoomStatus",
                    domainId: "400"
                },
                topics: {
                    propertyId: 0,
                    list: !0,
                    type: "String",
                    primitive: !0
                },
                membersCount: {
                    propertyId: 1,
                    list: !0,
                    type: "Integer",
                    primitive: !0
                }
            }
        }
    },
    methods: {
        authenticate: {
            parameters: ["context"]
        },
        saveAchievement: {
            parameters: ["achievement"]
        },
        saveIAP: {
            parameters: ["iap"]
        },
        getPlayerById: {
            parameters: ["searchedPlayerId"]
        },
        getPlayerByThirdPartyId: {
            parameters: ["publisherId", "thirdPartyId"]
        },
        findScores: {
            parameters: ["leaderboardId", "query"]
        },
        getBestScores: {
            parameters: ["leaderboardId", "start", "limit", "includeRank", "limitToFriends"]
        },
        submitScore: {
            parameters: ["leaderboardId", "score"]
        },
        getAchievements: {
            parameters: []
        },
        saveNotification: {
            parameters: ["notification"]
        },
        findNotifications: {
            parameters: ["query"]
        },
        trackPlayer: {
            parameters: ["Activity"]
        },
        createPlayer: {
            parameters: ["context"]
        },
        setFriends: {
            parameters: ["friends"]
        },
        getFriends: {
            parameters: ["searchedPlayerId", "start", "limit"]
        },
        getState: {
            parameters: ["context", "filter"]
        },
        submitAdvProgress: {
            parameters: ["level", "score", "stars", "timeEllapsed", "completed", "mode", "scoreCustomData", "progressCustomData"]
        },
        getAdvProgress: {
            parameters: ["mode"]
        },
        getAdvFriendsProgress: {
            parameters: ["levelMin", "levelMax", "mode"]
        },
        getAdvScores: {
            parameters: ["levelMin", "levelMax", "mode"]
        },
        getAdvFriendsScores: {
            parameters: ["level", "mode"]
        },
        saveAdvProgress: {
            parameters: ["mode", "progress"]
        },
        findStorables: {
            parameters: ["namespace", "query"]
        },
        saveStorable: {
            parameters: ["namespace", "storable"]
        },
        saveStorableDiff: {
            parameters: ["namespace", "storable"]
        },
        removeStorable: {
            parameters: ["namespace", "storableId"]
        },
        saveStorables: {
            parameters: ["namespace", "storables"]
        },
        findAndModifyStorables: {
            parameters: ["namespace", "filter", "update", "upsert"]
        },
        getDuelChampionship: {
            parameters: ["player1", "player2"]
        },
        submitDuelChampionshipScore: {
            parameters: ["championshipId", "score"]
        },
        getBestServers: {
            parameters: []
        },
        createRoom: {
            parameters: ["parameters"]
        },
        subscribe: {
            parameters: ["topic", "parameters"]
        },
        publish: {
            parameters: ["topic", "message", "parameters"]
        },
        unsubscribe: {
            parameters: ["topic"]
        },
        pull: {
            parameters: ["topic", "parameters"]
        },
        getPublicRoom: {
            parameters: ["parameters"]
        }
    }
}),
window.gs = gs;
"use strict";
!function(r) {
    var t = function() {
        function t(t, e, i) {
            if (this.id = t,
            this.config = e,
            this._available = !1,
            this._available = this.isAvailable(),
            this.id = t + "-" + e.gameId + e.publisher,
            this._available) {
                var n = localStorage.getItem(this.id);
                this._cacheData = r.json.parse(n, i)
            } else
                this._cacheData = i
        }
        return t.prototype.isAvailable = function() {
            try {
                return localStorage.setItem("test123456789", "test123456789"),
                localStorage.removeItem("test123456789"),
                !0
            } catch (t) {
                return !1
            }
        }
        ,
        t.prototype.get = function() {
            return this._cacheData
        }
        ,
        t.prototype.save = function() {
            this._available && localStorage.setItem(this.id, JSON.stringify(this._cacheData))
        }
        ,
        t
    }();
    r.LocalCache = t
}(ship || (ship = {})),
function(o) {
    var t = function() {
        function t() {
            this.width = .95,
            this.height = .7,
            this.destroyed = !1,
            this.onResizeBound = this.onResize.bind(this)
        }
        return t.prototype.onResize = function() {
            var t = o.util.getWindowSize()
              , e = t.width * this.width
              , i = t.height * this.height
              , n = (t.width - e) / 2
              , r = (t.height - i) / 2;
            this.main.style.width = e + "px",
            this.main.style.height = i + "px",
            this.main.style.left = n + "px",
            this.main.style.top = r + "px"
        }
        ,
        t.prototype.build = function() {
            o.util.getResizehandlers().add(this.onResizeBound),
            this.overlay = document.createElement("div"),
            this.overlay.style.position = "absolute",
            this.overlay.style.zIndex = "15",
            this.overlay.style.top = "0",
            this.overlay.style.left = "0",
            this.overlay.style.right = "0",
            this.overlay.style.bottom = "0",
            this.overlay.style.backgroundColor = "rgba(0, 0, 0, 0.7)",
            this.main = document.createElement("div"),
            this.main.style.position = "relative",
            this.main.style.backgroundColor = "white",
            this.overlay.appendChild(this.main),
            document.body.appendChild(this.overlay)
        }
        ,
        t.prototype.afterBuild = function() {}
        ,
        t.prototype.use3RowLayout = function() {
            var t = new o.DOMVerticalLayout;
            t.getElement().style.width = "100%",
            t.getElement().style.height = "100%",
            this.main.appendChild(t.getElement());
            var e = document.createElement("div")
              , i = document.createElement("div")
              , n = document.createElement("div");
            t.add(e).style.textAlign = "center";
            var r = t.add(i);
            return r.style.height = "100%",
            r.style.textAlign = "center",
            r.style.verticalAlign = "middle",
            t.add(n).style.textAlign = "center",
            {
                header: e,
                body: i,
                footer: n
            }
        }
        ,
        t.prototype.addCloseButton = function() {
            var t = this
              , e = document.createElement("div");
            return e.innerHTML = "<b>X</b>",
            e.style.fontSize = "35px",
            e.style.position = "absolute",
            e.style.top = "0px",
            e.style.right = "10px",
            e.style.cursor = "pointer",
            this.main.appendChild(e),
            e.onclick = function() {
                t.manualClose()
            }
            ,
            e
        }
        ,
        t.prototype.setAutoClose = function() {
            var t = this;
            this.overlay.onclick = function() {
                t.manualClose()
            }
            ,
            this.main.onclick = function(t) {
                t.stopPropagation()
            }
        }
        ,
        t.prototype.setContent = function(t) {
            this.main.appendChild(t)
        }
        ,
        t.prototype.show = function() {
            this.build(),
            this.onResize(),
            this.afterBuild()
        }
        ,
        t.prototype.close0 = function() {
            this.destroyed = !0,
            this.overlay.parentElement.removeChild(this.overlay),
            o.util.getResizehandlers().remove(this.onResizeBound)
        }
        ,
        t.prototype.manualClose = function() {
            this.close0()
        }
        ,
        t.prototype.close = function() {
            this.close0()
        }
        ,
        t
    }();
    o.DOMPopup = t
}(ship || (ship = {})),
function(t) {
    var e = function() {
        function t() {
            this.table = document.createElement("table")
        }
        return t.prototype.getElement = function() {
            return this.table
        }
        ,
        t.prototype.add = function(t) {
            var e = document.createElement("tr")
              , i = document.createElement("td");
            return this.table.appendChild(e),
            e.appendChild(i),
            null != t && i.appendChild(t),
            i
        }
        ,
        t
    }();
    t.DOMVerticalLayout = e
}(ship || (ship = {})),
function(r) {
    var t = function() {
        function t(t) {
            this.gs = t,
            this._authCompleteHandler = new r.Handlers,
            this._authComplete = !1,
            this._updates = [],
            this._saveScheduled = !1
        }
        return t.prototype._onAuthenticationComplete = function(t) {
            this._player = t,
            this._authComplete = !0,
            this._saveToCache(),
            this._authCompleteHandler.fire()
        }
        ,
        t.prototype.onAuthenticationComplete = function(t) {
            this._authComplete ? t() : this._authCompleteHandler.once(t)
        }
        ,
        t.prototype.getPlayer = function(e) {
            if (this._authComplete)
                e(this._player);
            else {
                var i = this
                  , n = !1;
                setTimeout(function() {
                    if (!n) {
                        n = !0,
                        r.logger.warn("No player data loaded after 1000ms.");
                        var t = i._getPlayer();
                        e(t)
                    }
                }, 1e3),
                this._authCompleteHandler.once(function() {
                    if (!n) {
                        n = !0;
                        var t = i._getPlayer();
                        e(t)
                    }
                })
            }
        }
        ,
        t.prototype.savePlayerDiff = function(t) {
            if (null == this._player && this._getPlayer(),
            r.json.merge(t, this._player),
            this._updates.push(t),
            !this._saveScheduled) {
                var e = this;
                this._saveScheduled = !0,
                setTimeout(function() {
                    e._saveScheduled = !1,
                    e._doSaveDiff()
                }, 50)
            }
        }
        ,
        t.prototype._doSaveDiff = function() {
            var t = this
              , e = !0;
            if (this.gs.isPlayerAuthenticated() ? null == this._player.getStoreId() && (e = !1) : e = !1,
            this._saveToCache(),
            e) {
                var i = this._getAllPendingUpdates();
                if (this._updates = [],
                !this.gs.disabled) {
                    var n = new gs.SaveStorableDiffRequest;
                    n.setNamespace("players"),
                    n.setStorable(i),
                    this.gs.sendRequest(n, function() {}, function() {
                        t._updates.splice(0, 0, i),
                        t._rescheduleSave()
                    })
                }
            } else
                this._rescheduleSave()
        }
        ,
        t.prototype._rescheduleSave = function() {
            var t = this;
            setTimeout(function() {
                t.savePlayerDiff(new gs.SPlayer)
            }, 5e3)
        }
        ,
        t.prototype._getAllPendingUpdates = function() {
            var t = new gs.SPlayer;
            null != this._player.getStoreId() && t.setStoreId(this._player.getStoreId());
            for (var e = 0; e < this._updates.length; e++)
                r.json.merge(this._updates[e], t);
            return t
        }
        ,
        t.prototype.savePlayerDiffAndFlush = function(t, e) {
            var i = !0;
            if (this.gs.isPlayerAuthenticated() ? null == this._player.getStoreId() && (i = !1) : i = !1,
            !i)
                return r.logger.error("Unable to flush un-identified player"),
                void e(null);
            r.json.merge(t, this._player),
            this._saveToCache(),
            t.setStoreId(this._player.getStoreId()),
            this.gs.shipapi.saveStorableDiffRequest("players", t, function(t) {
                e(t.getStorable())
            })
        }
        ,
        t.prototype._getPlayer = function() {
            if (null == this._player) {
                var t = this.gs.getCache().get();
                if (null == t.player)
                    this._player = this._newPlayer();
                else
                    try {
                        this._player = this.gs.decode(t.player)
                    } catch (t) {
                        r.logger.error("Failed to read player data", t),
                        this._player = this._newPlayer()
                    }
            }
            return this._player
        }
        ,
        t.prototype._newPlayer = function() {
            var t = new gs.SPlayer;
            return t.setId("na"),
            t.setThirdPartyId("na"),
            t.setPublisherId(r.Ship.get().config.publisher),
            t
        }
        ,
        t.prototype._saveToCache = function() {
            var t = this.gs.encode(this._player)
              , e = this.gs.getCache().get();
            if (e.player = t,
            0 < this._updates.length) {
                var i = this._getAllPendingUpdates()
                  , n = this.gs.encode(i);
                e.player0 = n
            } else
                e.player0 = null;
            this.gs.getCache().save()
        }
        ,
        t
    }();
    r.PlayerManager = t
}(ship || (ship = {})),
function(t) {
    var e = function() {
        function t(t) {
            this.gs = t
        }
        return t.prototype._onAuthenticationComplete = function(t) {}
        ,
        t.prototype.submitScore = function(t, e) {
            var i = this.getBestScore(t);
            if (!(null != i && e <= i) && (this._cacheNewBest(t, e),
            this.gs.isPlayerAuthenticated() && !this.gs.disableNetwork)) {
                var n = new gs.SScore;
                n.setValue(e),
                this.gs.shipapi.submitScoreRequest(t, n, function(t) {})
            }
        }
        ,
        t.prototype.getBestScore = function(t) {
            var e = this.gs.getCache().get();
            return null == e.scores || null == e.scores[t] ? 0 : e.scores[t]
        }
        ,
        t.prototype.getScores = function(t, e, i, n) {
            void 0 === i && (i = 0),
            void 0 === n && (n = 20),
            this.gs.shipapi.getBestScoresRequest(t, i, n, !0, !1, function(t) {
                e(t)
            })
        }
        ,
        t.prototype._cacheNewBest = function(t, e) {
            var i = this.gs.getCache().get();
            null == i.scores && (i.scores = {}),
            i.scores[t] = e,
            this.gs.getCache().save()
        }
        ,
        t
    }();
    t.ScoreManager = e
}(ship || (ship = {})),
function(u) {
    function o(t) {
        if (null == t)
            return null;
        for (var e = 0, i = t.split("."), n = 2; 0 <= n; n--)
            if (i.length > n) {
                var r = parseInt(i[n]);
                0 == n ? r *= 1e4 : 1 == n && (r *= 100),
                e += r
            }
        return e
    }
    u.getVersionAsLong = o;
    var t = function() {
        function r() {
            this.disabled = !1,
            this._authenticated = !1;
            var e = r._INSTANCE = this
              , t = u.Ship.get().config
              , i = o(t.gameVersion);
            this._versionId = i,
            this._gameId = t.gameId,
            this._cache = new u.LocalCache("gs",t,{}),
            this._plug = (new gs.DisconnectedPlug).init(),
            this._plug.setEndpoint(t.gsUrl),
            this._plug.addDomain((new gs.NuggetaCoreDomain).init()),
            this.shipapi = (new gs.ShipGsDisconnectedApi).init(),
            this.shipapi.fill = function(t) {
                t instanceof gs.SRequest && (t.setGameId(e._gameId),
                t.setGameVersion(e._versionId),
                t.setPlayerId(e._playerId))
            }
            ,
            this.shipapi.setDisconnectedPlug(this._plug),
            this._scoreManager = new u.ScoreManager(this),
            this._playerManager = new u.PlayerManager(this);
            var n = this.getCachedPlayerId();
            null != n && (this._playerId = n),
            u.util.patchGs(),
            this._plug.addDomain((new gs.ShipGsServerDomain).init())
        }
        return r.prototype.onAuthenticationComplete = function(t) {
            this._playerId = t.getId(),
            this._player = t,
            this._authenticated = !0,
            this._scoreManager._onAuthenticationComplete(t),
            this._playerManager._onAuthenticationComplete(t)
        }
        ,
        r.prototype.sendRequest = function(t, e, i) {
            t.setGameId(this._gameId),
            t.setGameVersion(this._versionId),
            t.setPlayerId(this._playerId),
            this._plug.request(t, e, i)
        }
        ,
        r.prototype.trackPlayer = function(t, e, i, n, r) {
            if (!this.disabled) {
                var o = u.Ship.get().config
                  , s = this.getCachedThirdPartyId()
                  , a = this.getCachedPlayerId()
                  , h = null != this._player ? this._player.getSource() : null
                  , l = new gs.SPlayerActivityLog;
                l.setAction(i),
                l.setCategory(e),
                l.setLabel(n),
                l.setPlayerId(a),
                l.setPublisherId(o.publisher),
                l.setSource(h),
                l.setThirdPartyId(s),
                l.setValue(r),
                l.setVerbosity(t),
                l.setVersion(this._versionId),
                this.shipapi.trackPlayerRequest(l, function(t) {})
            }
        }
        ,
        r.get = function() {
            return this._INSTANCE
        }
        ,
        r.prototype.encode = function(t) {
            return this._plug.encode(t)
        }
        ,
        r.prototype.decode = function(t) {
            return this._plug.decode(t)
        }
        ,
        r.prototype.isPlayerAuthenticated = function() {
            return this._authenticated
        }
        ,
        r.prototype.isReady = function() {
            return null != this._playerId
        }
        ,
        r.prototype.getCache = function() {
            return this._cache
        }
        ,
        r.prototype.getCachedThirdPartyId = function() {
            if (null != this._player && null != this._player.getThirdPartyId() && "na" != this._player.getThirdPartyId())
                return this._player.getThirdPartyId();
            var t = this._readPlayerCache();
            return null != t && "na" != t.getThirdPartyId() ? t.getThirdPartyId() : null
        }
        ,
        r.prototype.getCachedPlayerId = function() {
            if (null != this._player && null != this._player.getId() && "na" != this._player.getId())
                return this._player.getId();
            var t = this._readPlayerCache();
            return null != t && "na" != t.getId() ? t.getId() : null
        }
        ,
        r.prototype._readPlayerCache = function() {
            var t = this._cache.get();
            return null == t.player ? null : this.decode(t.player)
        }
        ,
        Object.defineProperty(r.prototype, "playerManager", {
            get: function() {
                return this._playerManager
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(r.prototype, "scoreManager", {
            get: function() {
                return this._scoreManager
            },
            enumerable: !0,
            configurable: !0
        }),
        r.prototype.safeInt = function(t) {
            return null == t ? 0 : t
        }
        ,
        r.prototype.getBooster = function(t) {
            var e = this.playerManager._getPlayer();
            return t == u.ItemType.Coin ? this.safeInt(e.getWallet()) : t == u.ItemType.FortuneWheel ? this.safeInt(e.getFortuneWheels()) : t == u.ItemType.Life ? this.safeInt(e.getLifes()) : (t == u.ItemType.Premium || u.logger.error("No mapping found for item type: " + t.name),
            0)
        }
        ,
        r.prototype.disableNetwork = function() {
            this._plug.request = function(e, t, i) {
                u.logger.error("Network disable. Will not send " + e),
                setTimeout(function() {
                    if (i) {
                        var t = new gs.NuggetaExceptionMessage;
                        t.setReason("Network disable. Message ignored: " + e.getDomainID + "/" + e.getSerializerID),
                        i(t)
                    }
                }, 50)
            }
            ,
            this.disabled = !0
        }
        ,
        r
    }();
    u.ShipGs = t
}(ship || (ship = {})),
function(t) {
    var e = function() {
        function i(t, e) {
            this.name = t,
            this.id = e,
            i.valuesById[e + ""] = this,
            i.valuesByName[t] = this,
            i.all.push(this)
        }
        return i.fromValue = function(t) {
            return i.valuesById[t + ""]
        }
        ,
        i.fromName = function(t) {
            return i.valuesByName[t]
        }
        ,
        i.valuesById = {},
        i.valuesByName = {},
        i.all = [],
        i.Coin = new i("Coin",-1),
        i.FortuneWheel = new i("FortuneWheel",-2),
        i.Life = new i("Life",-3),
        i.Premium = new i("Premium",-4),
        i
    }();
    t.ItemType = e
}(ship || (ship = {})),
function(t) {
    var e = function() {
        function t() {}
        return t.PENDING = 1,
        t.STARTED = 2,
        t.ABORTED = 3,
        t.FAILED = 4,
        t.VALIDATED = 5,
        t.COMPLETE = 6,
        t
    }();
    t.SIAPTransactionStatus = e
}(ship || (ship = {})),
function(e) {
    var t = function() {
        function t() {
            this.gs = e.ShipGs.get(),
            this.ship = e.Ship.get()
        }
        return t.prototype.canShowInterstitial = function() {
            return !1
        }
        ,
        t.prototype.showInterstitial = function(t) {
            t(!1)
        }
        ,
        t.prototype.canShowRewardedVideo = function() {
            return !1
        }
        ,
        t.prototype.showRewardedVideo = function(t) {
            t(!1)
        }
        ,
        t
    }();
    e.DefaultAdsManager = t
}(ship || (ship = {})),
function(e) {
    var t = function() {
        function t() {
            this.ship = e.Ship.get()
        }
        return t.prototype.submitMissions = function(t, e) {}
        ,
        t
    }();
    e.DefaultApiMissionManager = t
}(ship || (ship = {})),
function(i) {
    var t = function() {
        function t() {
            this.ship = i.Ship.get()
        }
        return t.prototype.submitHighscore = function(t, e) {
            i.Ship.get().gs.scoreManager.submitScore(e, t)
        }
        ,
        t
    }();
    i.DefaultApiScoreManager = t
}(ship || (ship = {})),
function(i) {
    var t = function() {
        function t() {
            this.gs = i.ShipGs.get(),
            this.ship = i.Ship.get()
        }
        return t.prototype.authenticate = function(t) {
            t(null)
        }
        ,
        t.prototype.saveServerTime = function(t) {
            if (null != t.getServerTime()) {
                var e = Date.now() - t.getServerTime();
                i.util.serverTimeDiff = e
            }
        }
        ,
        t
    }();
    i.DefaultAuthenticationManager = t
}(ship || (ship = {})),
function(e) {
    var t = function() {
        function t() {
            this.gs = e.ShipGs.get(),
            this.ship = e.Ship.get()
        }
        return t.prototype.startGame = function(t) {
            e.logger.debug("Start game"),
            t()
        }
        ,
        t.prototype.endGame = function(t) {
            e.logger.debug("End game"),
            t()
        }
        ,
        t
    }();
    e.DefaultGameActionManager = t
}(ship || (ship = {})),
function(o) {
    var t = function() {
        function t() {
            this.packageById = {},
            this.gs = o.ShipGs.get(),
            this.ship = o.Ship.get(),
            this._loadPackages()
        }
        return t.prototype.buildItemPurchase = function(t) {
            var e = this.packageById[t];
            return {
                itemId: t,
                price: e.price,
                quantity: e.quantity,
                name: null,
                customData: null,
                discountId: null,
                externalProductId: null
            }
        }
        ,
        t.prototype.startIAP = function(t, e) {
            var i = this.packageById[t.itemId]
              , n = this.gs.getBooster(i.type)
              , r = new gs.SIAPTransaction;
            r.setDiscountId(t.discountId),
            r.setExternalItemId(t.externalProductId),
            r.setItemId(t.itemId),
            r.setItemType(i.type.name),
            r.setPrice(t.price),
            r.setQuantity(t.quantity),
            r.setInventoryQuantity(n),
            r.setStatus(o.SIAPTransactionStatus.PENDING),
            this.gs.shipapi.saveIAPRequest(r, function(t) {
                t.getSaveIAPStatus() == gs.SaveIAPStatus.SUCCESS && e(t.getIap())
            })
        }
        ,
        t.prototype.getDiscountPrice = function(t, e) {
            return e <= 0 || 100 <= e ? t : t - t * e / 100
        }
        ,
        t.prototype.getPackageById = function(t) {
            return this.packageById[t]
        }
        ,
        t.prototype._loadPackages = function() {
            if (null == this.ship.config.packages || this.ship.config.packages.length <= 0)
                o.logger.debug("No item packages.");
            else
                for (var t = 0; t < this.ship.config.packages.length; t++) {
                    var e = this.ship.config.packages[t];
                    this.packageById[e.id] = e
                }
        }
        ,
        t.prototype.continueIAP = function(t) {
            var e = new gs.SIAPTransaction;
            e.setId(t.getId()),
            e.setStatus(o.SIAPTransactionStatus.STARTED),
            this.gs.shipapi.saveIAPRequest(e, function(t) {})
        }
        ,
        t
    }();
    o.DefaultIAPManager = t
}(ship || (ship = {})),
function(e) {
    var t = function() {
        function t() {
            this._readyFired = !1,
            (t.INSTANCE = this).ship = e.Ship.get(),
            this.apiScoreManager = new e.DefaultApiScoreManager,
            this.apiMissionManager = new e.DefaultApiMissionManager
        }
        return t.get = function() {
            return this.INSTANCE
        }
        ,
        t.prototype.setReadyCallback = function(t) {
            this._readyCb = t
        }
        ,
        t.prototype.fireReady = function() {
            null != this._readyCb ? null != this._readyFired ? this._readyCb() : e.logger.error("PublisherService.readyCb already called") : e.logger.error("PublisherService.readyCb is null")
        }
        ,
        t.prototype.getAuthenticationManager = function() {
            return this.authenticationManager
        }
        ,
        t.prototype.getShareManager = function() {
            return this.shareManager
        }
        ,
        t.prototype.getIAPManager = function() {
            return this.iapManager
        }
        ,
        t.prototype.getGameActionManager = function() {
            return this.gameActionManager
        }
        ,
        t.prototype.getAdsManager = function() {
            return this.adsManager
        }
        ,
        t.prototype.getApiScoreManager = function() {
            return this.apiScoreManager
        }
        ,
        t.prototype.getApiMissionManager = function() {
            return this.apiMissionManager
        }
        ,
        t
    }();
    e.DefaultPublisherService = t
}(ship || (ship = {})),
function(h) {
    var t = function() {
        function t() {
            this.uploadedImages = {},
            this.uploadingImages = {},
            this.gs = h.ShipGs.get(),
            this.ship = h.Ship.get()
        }
        return t.prototype.share = function(t, e, i) {
            h.logger.error("Share not implemented"),
            i({
                count: 0,
                imageUrl: null
            })
        }
        ,
        t.prototype.isB64Image = function(t) {
            return null != t && (0 != t.indexOf("http") && 0 != t.indexOf("//"))
        }
        ,
        t.prototype.uploadImage = function(t, e, i, n) {
            var r = this.uploadedImages[t];
            if (null == r) {
                var o = this.uploadingImages[t];
                if (null != o && 1 == o)
                    return h.logger.error("Image " + t + " already uploading."),
                    void n();
                this.doUploadImage(t, e, i, n)
            } else
                i(r)
        }
        ,
        t.prototype.doUploadImage = function(r, t, o, s) {
            this.uploadingImages[r] = !0;
            try {
                var a = this
                  , e = "//" + this.ship.config.serverUrl + "/s/image/upload"
                  , i = "img=" + encodeURIComponent(t);
                h.XHR.post(e, i, function(t, e) {
                    if (a.uploadingImages[r] = null,
                    200 == e) {
                        var i = h.json.parse(t, null);
                        if (null != i && "ok" == i.status) {
                            var n = i.url;
                            a.uploadedImages[r] = n,
                            o(n)
                        } else
                            s()
                    } else
                        s()
                })
            } catch (t) {
                h.logger.error("Error occured while uploadind image id:" + r, t),
                s()
            }
        }
        ,
        t
    }();
    h.DefaultShareManager = t
}(ship || (ship = {})),
function(t) {
    var e = function() {};
    (ship || (ship = {})).ItemPurchase = e
}(),
function(o) {
    var t = function() {
        function n(t, e) {
            this.config = t,
            this._loadingProgress = -1,
            this._readyCalled = !1,
            this._isReady = !1,
            this._lastStartTime = Date.now(),
            (n._INSTANCE = this).gs = null == e ? new o.ShipGs : e,
            this._progressListener = new o.Handlers,
            this._service = this.createService(t.publisher);
            var i = this;
            this._service.setReadyCallback(function() {
                i._isReady = !0,
                null != i._readyCallback && (i._readyCalled = !0,
                i._readyCallback())
            }),
            this._apiReporter = new o.ApiReporter,
            this._activityTracker = new o.ActivityTracker,
            o.logger.debug("Start " + t.publisher + " authentication."),
            this._service.getAuthenticationManager().authenticate(function(t) {
                o.logger.debug("Authentication complete. " + t.getId()),
                i.gs.onAuthenticationComplete(t),
                i._apiReporter._onAuthenticationComplete(t),
                i._activityTracker._onAuthenticationComplete(t),
                i._checkApiImplemented()
            }),
            o.initErrorTracker()
        }
        return n.get = function() {
            return this._INSTANCE
        }
        ,
        Object.defineProperty(n.prototype, "service", {
            get: function() {
                return this._service
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(n.prototype, "shareManager", {
            get: function() {
                return this._service.getShareManager()
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(n.prototype, "iapManager", {
            get: function() {
                return this._service.getIAPManager()
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(n.prototype, "adsManager", {
            get: function() {
                return this._service.getAdsManager()
            },
            enumerable: !0,
            configurable: !0
        }),
        n.prototype.createService = function(t) {
            var e = "DummyPublisherService";
            null != this.config.customData && null != this.config.customData.publisherServiceClass ? e = this.config.customData.publisherServiceClass : "okru" == t ? e = "OkRuPublisherService" : "facebook" == t ? e = "FacebookPublisherService" : "fbmessenger" == t ? e = "FBMessengerPublisherService" : "external" == t ? e = "ExternalPublisherService" : "vk" == t ? e = "VkPublisherService" : "gd" == t ? e = "GdPublisherService" : "lagged" == t && (e = "LaggedPublisherService");
            var i = Object.create(o[e].prototype);
            return i.constructor.apply(i),
            i
        }
        ,
        n.prototype._muteSound = function(t) {
            null != this._muteSoundCallback ? this._muteSoundCallback(t) : o.logger.error("No toggle sound callback. Check your api impl.")
        }
        ,
        n.prototype._checkApiImplemented = function() {
            null == this._muteSoundCallback && this._apiReporter.reportListenerMissing("onMuteSound")
        }
        ,
        n.prototype.getRessourceUrl = function(t) {
            var e = null == t ? this.config.publisher : t;
            return "//" + this.config.resourcesUrl + "/" + this.config.gameId + "/" + e + "/resources"
        }
        ,
        n.prototype.onReady = function(t) {
            this._isReady ? (this._readyCalled = !0,
            t()) : this._readyCallback = t
        }
        ,
        n.prototype.setLoadingProgress = function(t) {
            this._progressListener.fire(t),
            this._loadingProgress = t
        }
        ,
        n.prototype.onMuteSound = function(t) {
            this._muteSoundCallback = t
        }
        ,
        n.prototype.startGame = function(t) {
            var e = this;
            this._readyCalled || this._apiReporter.reportListenerMissing("onReady"),
            this._loadingProgress < 0 && this._apiReporter.reportAPICallMissing("setLoadingProgress"),
            this._activityTracker.onStartGame(),
            this._apiReporter.onStartGame(),
            this.service.getGameActionManager().startGame(function() {
                e.track(o.TrackingLevel.INFO, "game", "started"),
                e._lastStartTime = Date.now(),
                t()
            })
        }
        ,
        n.prototype.endGame = function(e, i) {
            var n = this;
            this._apiReporter.onEndGame(e),
            this.service.getGameActionManager().endGame(function() {
                var t = Math.round(Date.now() - n._lastStartTime) / 1e3;
                n.track(o.TrackingLevel.INFO, "game", "ended", null, t),
                e && (n.track(o.TrackingLevel.INFO, "game", "started"),
                n._lastStartTime = Date.now()),
                i()
            })
        }
        ,
        n.prototype.track = function(t, e, i, n, r) {
            o.TRACKING_LEVEL < t || this.gs.trackPlayer(t, e, i, n, r)
        }
        ,
        n.prototype.getActivityTracker = function() {
            return this._activityTracker
        }
        ,
        n
    }();
    o.Ship = t
}(ship || (ship = {})),
function(o) {
    var s, t;
    function a(t, e) {
        return null == e ? t + ":na" : t + ":" + e
    }
    (t = s = o.TrackingLevel || (o.TrackingLevel = {}))[t.MANDATORY = 0] = "MANDATORY",
    t[t.INFO = 1] = "INFO",
    t[t.DEBUG = 2] = "DEBUG",
    o.UETRACKER_READY = !1,
    o.TRACKING_LEVEL = s.INFO,
    o.initErrorTracker = function() {
        window.addEventListener("error", function(t) {
            var e = "n/a";
            null != t.error && null != t.error.message ? e = t.error.message : null != t.message && (e = t.message),
            e += ", ",
            e += a("filename", t.filename) + ", ",
            e += a("lineno", t.lineno) + ", ";
            var i = (e += a("colno", t.colno) + ", ").toLowerCase()
              , n = (o.Ship.get().config,
            null)
              , r = !0;
            return -1 < i.indexOf("script error") ? r = !(n = "Script Error") : n = e,
            r && o.Ship.get().track(s.MANDATORY, "error", "uncaught error", n),
            !1
        }),
        o.UETRACKER_READY = !0,
        o.logger.addErrorListener(function(t, e) {
            o.Ship.get().track(s.MANDATORY, "error", "error", t)
        })
    }
}(ship || (ship = {})),
function(s) {
    var t = function() {
        function t() {
            this._gameStarted = 0,
            this._retentionSended = !1,
            this._retentionMetric = null,
            this._startTime = Date.now()
        }
        return t.prototype._onAuthenticationComplete = function(t) {
            this._player = t;
            var e = new Date(this._player.getCreationDate())
              , i = new Date(Date.UTC(e.getUTCFullYear(), e.getUTCMonth(), e.getUTCDate())).getTime()
              , n = s.util.serverTime()
              , r = (n - i) / 864e5;
            if ((r = Math.floor(r)) < 0)
                s.logger.error("Negative day diff beetween creation and connection date for #" + this._player.getId() + ", creationDate: " + i + ", connectionTime: " + n);
            else {
                this._retentionMetric = "d" + r;
                var o = this;
                0 == r ? setTimeout(function() {
                    o._sendRetention()
                }, 6e4) : o._sendRetention()
            }
        }
        ,
        t.prototype.onStartGame = function() {
            this._gameStarted++,
            5 <= this._gameStarted && null != this._retentionMetric && this._sendRetention()
        }
        ,
        t.prototype._sendRetention = function() {
            if (!this._retentionSended && null != this._retentionMetric && !s.ShipGs.get().disabled) {
                this._retentionSended = !0;
                var t = new gs.SPlayerProperty;
                t.setPlayerId(this._player.getId()),
                t.setKey(this._retentionMetric);
                var e = new gs.NuggetaQuery;
                e.setQuery("$WHERE PlayerId='" + this._player.getId() + "' $AND Key='" + this._retentionMetric + "'"),
                e.setLimit(1),
                s.ShipGs.get().shipapi.findAndModifyStorablesRequest("retentions", e, t, !0, function(t) {})
            }
        }
        ,
        t
    }();
    s.ActivityTracker = t
}(ship || (ship = {})),
function(i) {
    var t = function() {
        function t() {
            this._dummy = !1,
            this._gameStarted = 0,
            this._gameEnded = 0,
            this._firstEnGameChecked = !1,
            this._lastStart = 0,
            this._startTime = Date.now(),
            this._dummy = "dummy" == i.Ship.get().config.publisher
        }
        return t.prototype._onAuthenticationComplete = function(t) {
            var e = this;
            setTimeout(function() {
                e._checkGameStarted()
            }, 12e4),
            setTimeout(function() {
                e._checkGameEnded()
            }, 24e4)
        }
        ,
        t.prototype.reportListenerMissing = function(t) {
            i.logger.warn("No ship listener provided: " + t)
        }
        ,
        t.prototype.reportAPICallMissing = function(t) {
            i.logger.warn("Ship API not called: " + t)
        }
        ,
        t.prototype.onStartGame = function() {
            this._gameStarted++;
            var t = Date.now()
              , e = t - this._lastStart;
            e < 5e3 && i.logger.warn("Game already started " + e + " ms ago."),
            this._lastStart = t
        }
        ,
        t.prototype.onEndGame = function(t) {
            this._gameEnded++,
            t && (this._gameStarted++,
            this._lastStart = Date.now()),
            this._firstEnGameChecked || this._checkFirstEndGame()
        }
        ,
        t.prototype._checkGameStarted = function() {
            if (!(0 < this._gameStarted)) {
                var t = (Date.now() - this._startTime) / 1e3;
                i.logger.warn("No game started after " + t + " seconds.")
            }
        }
        ,
        t.prototype._checkGameEnded = function() {
            if (!(0 < this._gameEnded)) {
                var t = (Date.now() - this._startTime) / 1e3;
                i.logger.warn("No game ended after " + t + " seconds.")
            }
        }
        ,
        t.prototype._checkFirstEndGame = function() {
            if (this._firstEnGameChecked = !0,
            "dummy" == i.Ship.get().config.publisher && (null != window.DUST || null != window.h5ge))
                try {
                    Error.stackTraceLimit = 50;
                    var t = new Error;
                    t.stackTraceLimit = 50,
                    t.stack.indexOf("ImmediateClick") < 0 && i.logger.error("endGame must be called by user-gesture (ie: onImmediateClick)")
                } catch (t) {
                    i.logger.error("Faild to do first error check", t)
                }
        }
        ,
        t
    }();
    i.ApiReporter = t
}(ship || (ship = {})),
function(t) {
    (t.util || (t.util = {})).patchGs = function() {
        (new (window.gs || {} || {}).nruntime).load({
            domainID: 401,
            domainName: "ShipGsServer",
            nobjects: {
                SResourceUrl: {
                    hierarchyDepth: 2e3,
                    serializerID: 201,
                    extendss: {
                        domainID: "400",
                        name: "SStorable"
                    },
                    fields: {
                        Id: {
                            propertyId: 0,
                            primitive: !0,
                            type: "String"
                        },
                        Name: {
                            propertyId: 1,
                            primitive: !0,
                            type: "String"
                        },
                        RelativePath: {
                            propertyId: 2,
                            primitive: !0,
                            type: "String"
                        },
                        MimeType: {
                            propertyId: 3,
                            primitive: !0,
                            type: "String"
                        },
                        Width: {
                            propertyId: 4,
                            primitive: !0,
                            type: "String"
                        },
                        Height: {
                            propertyId: 5,
                            primitive: !0,
                            type: "String"
                        }
                    }
                },
                SProduct: {
                    hierarchyDepth: 2e3,
                    serializerID: 203,
                    extendss: {
                        domainID: "400",
                        name: "SStorable"
                    },
                    fields: {
                        Id: {
                            propertyId: 0,
                            primitive: !0,
                            type: "String"
                        },
                        PublisherId: {
                            propertyId: 1,
                            primitive: !0,
                            type: "String"
                        },
                        Locale: {
                            propertyId: 2,
                            primitive: !0,
                            type: "String"
                        },
                        Title: {
                            propertyId: 3,
                            primitive: !0,
                            type: "String"
                        },
                        Description: {
                            propertyId: 4,
                            primitive: !0,
                            type: "String"
                        },
                        Image: {
                            propertyId: 5,
                            reference: !0,
                            type: "SResourceUrl",
                            domainId: "401"
                        },
                        Price: {
                            propertyId: 6,
                            primitive: !0,
                            type: "Double"
                        }
                    }
                }
            }
        })
    }
}(ship || (ship = {})),
function(t) {
    var e = function() {
        function t() {
            this.handlers = [],
            this.onces = []
        }
        return Object.defineProperty(t.prototype, "length", {
            get: function() {
                return this.handlers.length
            },
            enumerable: !0,
            configurable: !0
        }),
        t.prototype.once = function(t) {
            return this.onces.push(t),
            t
        }
        ,
        t.prototype.add = function(t) {
            return this.handlers.push(t),
            t
        }
        ,
        t.prototype.remove = function(t) {
            for (var e = -1, i = 0; i < this.handlers.length; i++)
                if (this.handlers[i] == t) {
                    e = i;
                    break
                }
            -1 < e && this.handlers.splice(e, 1)
        }
        ,
        t.prototype.clear = function() {
            0 < this.handlers.length && this.handlers.splice(0, this.handlers.length),
            0 < this.onces.length && this.onces.splice(0, this.onces.length)
        }
        ,
        t.prototype.fire = function(e) {
            var i = this;
            this.handlers.forEach(function(t) {
                t.apply(i, [e])
            }),
            0 < this.onces.length && (this.onces.forEach(function(t) {
                t.apply(i, [e])
            }),
            this.onces.splice(0, this.onces.length))
        }
        ,
        t
    }();
    t.Handlers = e
}(ship || (ship = {})),
function(n) {
    var t;
    (t = n.json || (n.json = {})).parse = function(e, i) {
        if (null == e)
            return i;
        try {
            return JSON.parse(e)
        } catch (t) {
            return n.logger.error("failed to decode: " + e),
            i
        }
    }
    ,
    t.merge = function t(e, i) {
        for (var n in e) {
            var r = e[n]
              , o = typeof r;
            "function" !== o && (n in i && "object" === o ? t(r, i[n]) : i[n] = r)
        }
    }
}(ship || (ship = {})),
function(n) {
    !function(t) {
        function i() {
            var t = window.navigator.languages
              , e = t ? t[0] : null;
            return -1 !== (e = e || window.navigator.language || window.navigator.browserLanguage || window.navigator.userLanguage).indexOf("-") && (e = e.split("-")[0]),
            -1 !== e.indexOf("_") && (e = e.split("_")[0]),
            e = e.toLowerCase()
        }
        t.resolveGameLang = function() {
            var t = n.Ship.get().config.defaultLocale;
            if (null != t && "autodetect" != t)
                return t;
            var e = i();
            return null != e ? e : "en"
        }
        ,
        t.detectBrowserLang = i
    }(n.lang || (n.lang = {}))
}(ship || (ship = {})),
function(n) {
    (n.util || (n.util = {})).loadJs = function(e, t) {
        var i = document.createElement("script");
        i.type = "text/javascript",
        i.readyState ? i.onreadystatechange = function() {
            "loaded" !== i.readyState && "complete" !== i.readyState || (i.onreadystatechange = null,
            t())
        }
        : i.onload = function() {
            t()
        }
        ,
        i.onerror = function(t) {
            n.logger.error("Failed to load script " + e + "! " + t)
        }
        ,
        i.src = e,
        document.getElementsByTagName("head")[0].appendChild(i)
    }
}(ship || (ship = {})),
function(t) {
    var s, a = [], n = [];
    function r(t, e, i) {
        var n = a[0]
          , r = document.createElement("div");
        if (r.innerHTML = "<b>" + t + "</b>: " + e + (null == i ? "" : ", " + i),
        s.insertBefore(r, n),
        a.splice(0, 0, r),
        n = r,
        8 < a.length) {
            var o = a[a.length - 1];
            a.splice(a.length - 1, 1),
            s.removeChild(o)
        }
    }
    t.logger = {
        debug: function(t) {
            console && console.debug(t),
            null != s && r("debug", t)
        },
        info: function(t) {
            console && console.info(t),
            null != s && r("info", t)
        },
        warn: function(t) {
            console && console.warn(t),
            null != s && r("warn", t)
        },
        error: function(t, e) {
            console && console.error(t, e),
            null != s && r("error", t, e);
            for (var i = 0; i < n.length; i++) {
                (0,
                n[i])(t, e)
            }
        },
        addErrorListener: function(t) {
            n.push(t)
        }
    },
    t.enableDomConsole = function() {
        var t = document.createElement("div");
        t.style.background = "white",
        t.style.fontSize = "10px",
        t.style.fontFamily = "Consolas, monaco, monospace",
        t.style.position = "absolute",
        t.style.top = "0",
        t.style.zIndex = "11",
        document.body.appendChild(t);
        var e = document.createElement("div");
        t.appendChild(e),
        a.push(e),
        s = t
    }
}(ship || (ship = {})),
function(o) {
    !function(t) {
        var e, i = !1;
        function n() {
            var t = r();
            e.fire(t),
            i = !1
        }
        function r() {
            return {
                width: window.innerWidth,
                height: window.innerHeight
            }
        }
        t.getResizehandlers = function() {
            return null == e && null == e && (e = new o.Handlers,
            window.addEventListener("resize", function() {
                i || (i = !0,
                setTimeout(function() {
                    n()
                }, 250))
            }),
            window.addEventListener("deviceOrientation", function() {
                i || (i = !0,
                setTimeout(function() {
                    n()
                }, 250))
            })),
            e
        }
        ,
        t.getWindowSize = r
    }(o.util || (o.util = {}))
}(ship || (ship = {})),
function(t) {
    var e;
    (e = t.util || (t.util = {})).serverTimeDiff = 0,
    e.serverTime = function() {
        return Date.now() - e.serverTimeDiff
    }
}(ship || (ship = {})),
function(t) {
    !function(t) {
        var s = null;
        function i() {
            s = {};
            var t = window.location.search;
            if (t)
                for (var e = (t = t.substr(1)).split("&"), i = 0; i < e.length; i++) {
                    var n = e[i].split("=")
                      , r = n[0]
                      , o = n[1];
                    o = decodeURIComponent(o.replace(/\+/g, " ")),
                    s[r] = o
                }
            return s
        }
        t.getUrlParameters = function(t) {
            return null == s && i(),
            s[t]
        }
        ,
        t.addUrlParameters = function(t, e) {
            null == s && i(),
            s[t] = e
        }
        ,
        t.deserializeQuery = function(t) {
            var e = {};
            if (null == t || 0 == t.length)
                return e;
            for (var i = t.split("&"), n = 0; n < i.length; n++) {
                var r = i[n].split("=");
                if (2 == r.length) {
                    var o = decodeURIComponent(r[0])
                      , s = decodeURIComponent(r[1]);
                    e[o] = s
                }
            }
            return e
        }
    }(t.util || (t.util = {}))
}(ship || (ship = {})),
function(r) {
    var t = function() {
        function t() {}
        return t.get = function(t, e, i) {
            var n = new XMLHttpRequest;
            n.open("get", t, !0);
            n.onerror = function(t) {
                r.logger.warn("get error: " + n.statusText),
                i && i(null, n.status)
            }
            ,
            n.onload = function() {
                i && i(n.responseText, n.status)
            }
            ,
            n.send()
        }
        ,
        t.post = function(t, e, i) {
            var n = new XMLHttpRequest;
            n.open("post", t, !0),
            n.setRequestHeader("Content-Type", "application/x-www-form-urlencoded; charset=UTF-8");
            n.onerror = function(t) {
                i && i(null, n.status)
            }
            ,
            n.onload = function() {
                i && i(n.responseText, n.status)
            }
            ,
            n.send(e)
        }
        ,
        t
    }();
    r.XHR = t
}(ship || (ship = {}));
var ship, commonts, shipuidust;
__extends = this && this.__extends || function() {
    var n = Object.setPrototypeOf || {
        __proto__: []
    }instanceof Array && function(t, e) {
        t.__proto__ = e
    }
    || function(t, e) {
        for (var i in e)
            e.hasOwnProperty(i) && (t[i] = e[i])
    }
    ;
    return function(t, e) {
        function i() {
            this.constructor = t
        }
        n(t, e),
        t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype,
        new i)
    }
}();
!function(r) {
    var t = function(t) {
        function e() {
            return t.call(this) || this
        }
        return __extends(e, t),
        e.prototype.canShowInterstitial = function() {
            return !0
        }
        ,
        e.prototype.showInterstitial = function(e) {
            var t = r.Ship.get().config
              , i = t.customData.showAdsArg1
              , n = t.customData.showAdsArg2;


            if (adcnt > 0) {
                if (typeof prerollStart === 'undefined') {
                    console.log('skip ad, prerollStart not found');
                    e(true);
                } else {
                    LaggedAPI.APIAds.show('interstitial', 'evolution', 'evolution-game.png', function(response) {
                        if (response.success) {
                            adcnt = -65;
                            console.log('ad finished');
                        } else {
                            console.log('ad error, continue');
                        }
                        e(true);
                    });
                }
            } else {
                e(true);
            }

        }
        ,
        e
    }(r.DefaultAdsManager);
    r.LaggedAdsManager = t
}(ship || (ship = {})),
function(t) {
    var e = function() {
        function t(t, e) {
            this.gaTrackingCode = t,
            this.pageName = e,
            console.debug("Init analytics : " + t + " - " + e),
            this.appendGaTrackingCode()
        }
        return t.prototype.appendGaTrackingCode = function() {
            try {
                var t = document.createElement("script");
                document.head.appendChild(t)
            } catch (t) {
                console.error("Error appending google analytics"),
                console.error(t)
            }
        }
        ,
        t.prototype.sendEvent = function(t, e, i, n) {
            var r = {
                hitType: "event",
                eventCategory: t,
                eventAction: e
            };
            null != i && (r.eventLabel = i),
            null != n && (r.eventValue = n),
            this._send0(r)
        }
        ,
        t.prototype._send0 = function(e) {
            try {
                ga("send", e)
            } catch (t) {
                console.error("Failed to send event : " + JSON.stringify(e), t)
            }
        }
        ,
        t
    }();
    t.LaggedAnalyticsManager = e
}(ship || (ship = {})),
function(t) {
    var e = function() {
        function t() {}
        return t.prototype.submitMissions = function(t, e) {
            LaggedAPI.Achievements.save(t, function(t) {
                t.success ? console.log("achievement saved") : console.log(t.errormsg),
                e && e(t)
            })
        }
        ,
        t
    }();
    t.LaggedApiMissionManager = e
}(ship || (ship = {})),
function(n) {
    var t = function() {
        function t() {}
        return t.prototype.submitHighscore = function(t, e) {
            if (t > n.Ship.get().gs.scoreManager.getBestScore(e)) {
                var i = {
                    score: t,
                    board: n.Ship.get().config.customData.submitScoreBoard
                };
                LaggedAPI.Scores.save(i, function(t) {
                    t.success ? console.log("high score saved") : console.log(t.errormsg)
                })
            }
        }
        ,
        t
    }();
    n.LaggedApiScoreManager = t
}(ship || (ship = {})),
function(i) {
    var t = function(t) {
        function e() {
            return t.call(this) || this
        }
        return __extends(e, t),
        e.prototype.authenticate = function(t) {
            i.logger.info("lagged auth"),
            t(this.gs.playerManager._getPlayer())
        }
        ,
        e
    }(i.DefaultAuthenticationManager);
    i.LaggedAuthenticationManager = t
}(ship || (ship = {})),
function(i) {
    var t = function(t) {
        function e() {
            return t.call(this) || this
        }
        return __extends(e, t),
        e.prototype.startGame = function(e) {
            this.ship.service.analyticsManager.sendEvent("game", "startGame");
            var t = this.ship.service.getAdsManager();
            0 == t.canShowInterstitial() ? e() : t.showInterstitial(function(t) {
                i.logger.debug("Start game. Ads displayed: " + t),
                e()
            })
        }
        ,
        e.prototype.endGame = function(e) {
            var t = this.ship.service.getAdsManager();
            0 == t.canShowInterstitial() ? e() : t.showInterstitial(function(t) {
                i.logger.debug("End game. Ads displayed: " + t),
                e()
            })
        }
        ,
        e
    }(i.DefaultGameActionManager);
    i.LaggedGameActionManager = t
}(ship || (ship = {})),
function(t) {
    var e = function(t) {
        function e() {
            return null !== t && t.apply(this, arguments) || this
        }
        return __extends(e, t),
        e.prototype.formatPrice = function(t) {
            return t + " $"
        }
        ,
        e.prototype.buyItem = function(t, e, i) {
            throw new Error("IAP not supported.")
        }
        ,
        e
    }(t.DefaultIAPManager);
    t.LaggedIAPManager = e
}(ship || (ship = {})),
function(d) {
    var t = function(o) {
        function t() {
            var t = o.call(this) || this;
            t.paymentSdkLoaded = !1;
            var e = t;
            d.logger.info("init LaggedPublisherService");
            var i = d.Ship.get().config;
            d.Ship.get().gs.disableNetwork(),
            t.authenticationManager = new d.LaggedAuthenticationManager,
            t.shareManager = new d.DefaultShareManager,
            t.iapManager = new d.LaggedIAPManager,
            t.gameActionManager = new d.LaggedGameActionManager,
            t.adsManager = new d.LaggedAdsManager,
            t.analyticsManager = new d.LaggedAnalyticsManager(i.customData.gaTrackingCode,i.customData.gaPageName),
            t.apiScoreManager = new d.LaggedApiScoreManager,
            t.apiMissionManager = new d.LaggedApiMissionManager;
            var n = i.customData.initArg1
              , r = i.customData.initArg2;
            return d.util.loadJs("./onlagged.js", function() {
                LaggedAPI.init(n, r),
                e.fireReady()
            }),
            t
        }
        return __extends(t, o),
        t.prototype.openInfoPopup = function() {
            var t = d.Ship.get().config.customData.infoPopup;
            if (t) {
                this.analyticsManager.sendEvent("infopopup", "opened");
                var e = this;
                try {
                    var i = t.targetUrl
                      , n = t.targetUrlTarget || "blank"
                      , r = t.bgImgSrc
                      , o = t.closeBtnImgSrc
                      , s = t.closeBtnTop
                      , a = t.closeBtnLeft
                      , h = new d.DOMPopup
                      , l = document.createElement("img");
                    l.src = r;
                    var u = document.createElement("a");
                    u.href = i,
                    u.target = n,
                    u.appendChild(l),
                    u.onclick = function() {
                        e.analyticsManager.sendEvent("infopopup", "clicked")
                    }
                    ;
                    var c = document.createElement("div");
                    c.style.display = "inline-flex",
                    c.style.margin = "0",
                    c.style.position = "absolute",
                    c.style.top = "50%",
                    c.style.left = "50%",
                    c.style.transform = "translate(-50%, -50%)",
                    c.appendChild(u);
                    var p = document.createElement("img");
                    p.src = o,
                    p.style.position = "absolute",
                    p.style.top = s,
                    p.style.left = a,
                    p.onclick = function(t) {
                        t.stopImmediatePropagation(),
                        t.stopPropagation(),
                        h.close(),
                        e.analyticsManager.sendEvent("infopopup", "closed")
                    }
                    ,
                    c.appendChild(p),
                    h.show(),
                    h.setContent(c),
                    h.main.style.backgroundColor = null
                } catch (t) {
                    console.error(t)
                }
            }
        }
        ,
        t.prototype.submitHighscore = function(t) {
            console.log("Update your game by using scoremanager"),
            this.apiScoreManager.submitHighscore(t, null)
        }
        ,
        t
    }(d.DefaultPublisherService);
    d.LaggedPublisherService = t
}(ship || (ship = {})),
function(t) {
    var e = function() {
        function t() {}
        return t.shuffle = function(t) {
            var e, i, n;
            for (n = t.length - 1; 0 < n; n--)
                e = Math.floor(Math.random() * (n + 1)),
                i = t[n],
                t[n] = t[e],
                t[e] = i
        }
        ,
        t
    }();
    t.Utils = e
}(commonts || (commonts = {})),
function(t) {
    var e = function() {
        function t(t, e) {
            this.callback = t,
            this.context = e
        }
        return t.prototype.execute = function() {
            for (var t = [], e = 0; e < arguments.length; e++)
                t[e] = arguments[e];
            this.callback.apply(this.context, t)
        }
        ,
        t
    }();
    t.ContextualCallback = e
}(commonts || (commonts = {})),
function(n) {
    var t = function() {
        function t() {
            this._handlers = [],
            this._onces = []
        }
        return Object.defineProperty(t.prototype, "length", {
            get: function() {
                return this._handlers.length + this._onces.length
            },
            enumerable: !0,
            configurable: !0
        }),
        t.prototype.once = function(t, e) {
            var i = new n.ContextualCallback(t,e);
            this._onces.push(i)
        }
        ,
        t.prototype.add = function(t, e) {
            var i = new n.ContextualCallback(t,e);
            return this._handlers.push(i),
            i
        }
        ,
        t.prototype.remove = function(t) {
            for (var e = -1, i = 0; i < this._handlers.length; i++)
                if (this._handlers[i].callback == t) {
                    e = i;
                    break
                }
            -1 < e && this._handlers.splice(e, 1)
        }
        ,
        t.prototype.removeCtx = function(t) {
            var e = this._handlers.indexOf(t);
            -1 < e && this._handlers.splice(e, 1)
        }
        ,
        t.prototype.removeIdx = function(t) {
            return this._handlers.splice(t, 1)[0]
        }
        ,
        t.prototype.clear = function() {
            0 < this._handlers.length && this._handlers.splice(0, this._handlers.length),
            0 < this._onces.length && this._onces.splice(0, this._onces.length)
        }
        ,
        t.prototype.fire = function() {
            for (var e = [], t = 0; t < arguments.length; t++)
                e[t] = arguments[t];
            this._handlers.forEach(function(t) {
                t.callback.apply(t.context, e)
            }),
            0 < this._onces.length && (this._onces.forEach(function(t) {
                t.callback.apply(t.context, e)
            }),
            this._onces.splice(0, this._onces.length))
        }
        ,
        t
    }();
    n.HandlerCollection = t
}(commonts || (commonts = {})),
function(t) {
    var e = function() {
        function t(t) {
            this.size = t,
            this._data = [],
            this._resolved = [];
            for (var e = 0; e < t; e++)
                this._resolved[e] = !1
        }
        return t.prototype.resolve = function(t, e) {
            this._data[t] = e,
            this._resolved[t] = !0,
            this.allDone() && this.onComplete(this._data)
        }
        ,
        t.prototype.allDone = function() {
            for (var t = 0; t < this._resolved.length; t++)
                if (!this._resolved[t])
                    return !1;
            return !0
        }
        ,
        t
    }();
    t.WaitQueue = e
}(commonts || (commonts = {})),
function(t) {
    var e, i;
    e = t.crosspromo || (t.crosspromo = {}),
    i = function() {
        function i(t, e) {
            this.cursor = 0,
            this.delayBetweenImage = 10,
            this._delayTime = 0,
            i.INSTANCE = this
        }
        return i.get = function() {
            return this.INSTANCE
        }
        ,
        i.prototype.setDelayTimeImage = function(t) {
            this.delayBetweenImage = Math.max(.5, t)
        }
        ,
        i.prototype.setImageConf = function(t) {
            console.log("imagesConf count " + t.length);
            for (var e = t ? t.length : 0, i = [], n = 0; n < e; n++)
                i.push(t[n].imageUrl);
            this.imageUrlTab = i,
            this.imageConfTab = t,
            0 < this.imageConfTab.length && this.onChange(0)
        }
        ,
        i.prototype.build = function(t, e) {}
        ,
        i.prototype.onChange = function(t) {
            var e = this.imageConfTab[t];
        }
        ,
        i.prototype.updateShow = function(t) {
            var e = this.imageConfTab.length;
            if (0 < e) {
                var i = .001 * t;
                this._delayTime >= this.delayBetweenImage ? (this._delayTime = this.delayBetweenImage - this._delayTime,
                this.cursor = this.cursor >= e - 1 ? 0 : this.cursor + 1,
                console.log("Change image " + this.cursor),
                this.onChange(this.cursor)) : this._delayTime += 1 * i
            }
        }
        ,
        i.prototype.show = function() {
            0 != this.imageConfTab.length && (DUST.Game.get().addUpdatable(this),
            document.getElementById("crosspromoBar").style.display = "block")
        }
        ,
        i.prototype.hide = function() {
            DUST.Game.get().removeUpdatable(this),
            document.getElementById("crosspromoBar").style.display = "none"
        }
        ,
        i.prototype.update = function(t) {
            this.updateShow(t)
        }
        ,
        i
    }(),
    e.Diaporama = i
}(shipuidust || (shipuidust = {})),
function(t) {
    var e, i;
    e = t.crosspromo || (t.crosspromo = {}),
    i = function() {
        function r() {}
        return r.getByGameId = function(t) {
            if (null == r.promoByGameId) {
                r.promoByGameId = new DUST.HashMap;
                for (var e = 0; e < r.ALL_GAME_PROMO_LIST.length; e++) {
                    var i = r.ALL_GAME_PROMO_LIST[e];
                    r.promoByGameId.put(i.gameId, i)
                }
            }
            return r.promoByGameId.get(t)
        }
        ,
        r.getGamePromotedList = function() {
            if (null == r.promotedGameList) {
                for (var t = [r.WORDS_CHALLENGE], e = [], i = 0; i < t.length; i++) {
                    var n = t[i];
                    e.push(n.gameId)
                }
                commonts.Utils.shuffle(e),
                r.promotedGameList = e
            }
            return r.promotedGameList
        }
        ,
        r.MEGAYATZ = {
            gameId: "megayatz",
            externalNamespace: "megayatz",
            facebookNamespace: "megayatz"
        },
        r.BLOCKS_2 = {
            gameId: "blocks2",
            externalNamespace: "blocks2",
            facebookNamespace: "blockspuzzle"
        },
        r.DARTS_2 = {
            gameId: "darts2",
            externalNamespace: "darts2",
            facebookNamespace: "dartsclub"
        },
        r.WORDS_CHALLENGE = {
            gameId: "uniwordsity2",
            externalNamespace: "uniwordsity2",
            facebookNamespace: "wordschallenge",
            gameUrl: "https://itunes.apple.com/us/app/uniwordsity/id1440743073"
        },
        r.MAHJONG = {
            gameId: "mahjong",
            externalNamespace: "mahjong",
            okruNamespace: "mahjongking",
            facebookNamespace: "mahjong-king"
        },
        r.BUBBLE_SHOOTER = {
            gameId: "zuma",
            externalNamespace: "bubbledefence",
            okruNamespace: "3yma",
            facebookNamespace: "bubbledefence"
        },
        r.SNAKE = {
            gameId: "snake",
            externalNamespace: "snake",
            okruNamespace: "supersnake",
            facebookNamespace: "supersnakegame"
        },
        r.GOLD_RUSH = {
            gameId: "slot",
            externalNamespace: "slot",
            okruNamespace: "zolotayalihoradka",
            facebookNamespace: "battlewheel"
        },
        r.TETRAQUEST = {
            gameId: "tetraquest",
            externalNamespace: "ttq",
            okruNamespace: "tetraquest",
            facebookNamespace: "tetraquest"
        },
        r.PHOTOPUZZLE = {
            gameId: "imgpzl",
            externalNamespace: "imgpzl",
            okruNamespace: "photozagadki",
            facebookNamespace: "image_puzzle"
        },
        r.SUDOKU = {
            gameId: "numbers",
            externalNamespace: "numbers",
            okruNamespace: "supersudoku",
            facebookNamespace: "numbersquest"
        },
        r.TENNIS = {
            gameId: "tennis",
            externalNamespace: "tennis"
        },
        r.ALL_GAME_PROMO_LIST = [],
        r.promoByGameId = null,
        r.promotedGameList = null,
        r
    }(),
    e.GamesPromoOffline = i
}(shipuidust || (shipuidust = {})),
function(t) {
    var e, i;
    e = t.crosspromo || (t.crosspromo = {}),
    i = function() {
        function t(t) {
            this._initialized = !1,
            this._initializedHandlers = new commonts.HandlerCollection
        }
        return t.get = function() {
            return t.INSTANCE
        }
        ,
        t.prototype.isReady = function() {
            return this._initialized
        }
        ,
        t.prototype.init = function() {
            var i = this
              , t = ship.Ship.get().config
              , e = "./crosspromo.json";
            ship.XHR.get(e, null, function(t, e) {
                if (200 != e)
                    console.error("Failed to load crosspromo.conf: status=" + e + " data=" + t);
                else
                    try {
                        i.remoteCrossPromoConf = JSON.parse(t)
                    } catch (t) {
                        console.error("Failed to parsed crosspromo.conf: " + t)
                    }
                i.onInitCompleted()
            })
        }
        ,
        t.prototype.hasMoreGames = function() {
            return !1
        }
        ,
        t.prototype.moreGames = function() {}
        ,
        t.prototype.isPromoSupported = function(t) {
            return null != this.remoteCrossPromoConf || null != t.externalNamespace
        }
        ,
        t.prototype.getGameUrl = function(t) {
            return t.gameUrl
        }
        ,
        t.prototype.getCrossPromoConfs = function(t) {
            void 0 === t && (t = null);
            ship.Ship.get().config;
            var e = [];
            if (null != this.remoteCrossPromoConf && this.remoteCrossPromoConf.enabled) {
                ship.lang.resolveGameLang();
                for (var i = this.remoteCrossPromoConf.games, n = 0; n < i.length; n++) {
                    var r = i[n];
                    if (r.assets && 0 < r.assets.length && "img" == r.assets[0].type) {
                        var o = this.getDiaporamaImage(r);
                        null != o && e.push(o)
                    }
                }
            }
            return commonts.Utils.shuffle(e),
            e
        }
        ,
        t.prototype.getDiaporamaImage = function(t) {
            var e = ship.lang.resolveGameLang();
            ship.Ship.get().config;
            -1 == this.remoteCrossPromoConf.defaultSupportedLangs.indexOf(e) && (e = this.remoteCrossPromoConf.defaultLang);
            var i = this.getAssetUrl(e, t.assets[0])
              , n = t.targetUrl;
            return {
                imageUrl: i,
                callBack: function() {
                    ship.Ship.get().track(ship.TrackingLevel.INFO, t.assets[0].uri, "crosspromo", t.shortName),
                    window.open(n, "_blank")
                },
                targetUrl: n
            }
        }
        ,
        t.prototype.getAssetUrl = function(t, e) {
            var i = ship.Ship.get().config;
            return i.resourcesUrl + "/" + i.publisher + "/crosspromo/" + t + "/" + t + "_" + e.uri
        }
        ,
        t.prototype.getImageUrl = function(t, e, i, n) {
            return ship.Ship.get().config.resourcesUrl + "/crosspromo/" + t + "/" + i + "/" + n.shortName + "_" + i + e
        }
        ,
        t.prototype.onInitCompleted = function() {
            this._initialized = !0,
            this._initializedHandlers.fire()
        }
        ,
        t.prototype.waitInitializationComplete = function(t) {
            this._initialized ? t() : this._initializedHandlers.once(function() {
                t()
            })
        }
        ,
        t
    }(),
    e.DefaultPromotionManager = i
}(shipuidust || (shipuidust = {}));
var GAME;
__extends = this && this.__extends || function() {
    var n = Object.setPrototypeOf || {
        __proto__: []
    }instanceof Array && function(t, e) {
        t.__proto__ = e
    }
    || function(t, e) {
        for (var i in e)
            e.hasOwnProperty(i) && (t[i] = e[i])
    }
    ;
    return function(t, e) {
        function i() {
            this.constructor = t
        }
        n(t, e),
        t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype,
        new i)
    }
}();
!function(r) {
    var e = function(e) {
        function n() {
            var t = e.call(this, r.GAMECONFIG.gameId, 624, 1040) || this;
            return (n._INSTANCE = t).askedlang = !1,
            t
        }
        return __extends(n, e),
        n.get = function() {
            return n._INSTANCE
        }
        ,
        n.prototype.onCreate = function() {
            r.si = new ship.Ship(r.GAMECONFIG);
            var e = this
              , t = ["game/assets/images/mobile/game-0.json", "game/assets/unpacked/background_gameplay.jpg"];
            1 == this.deviceManager.os.desktop && (t = ["game/assets/images/desktop/game-0.json", "game/assets/unpacked/background_gameplay.jpg"]);
            var i = new DUST.DefaultPreLoadingScene(this,t,function() {
                DUST.FontLoader.loadAll(r.fonts.fonts),
                r.si.onReady(function() {
                    var t = new r.MenuScene;
                    e.switchScene(t)
                }),
                e.initCrosspromo()
            }
            );
            this.switchScene(i),
            r.si.onMuteSound(function(t) {
                t ? DUST.Game.get().audioManager.mute() : DUST.Game.get().audioManager.unmute()
            })
        }
        ,
        n.prototype.initCrosspromo = function() {
            var i = new shipuidust.crosspromo.DefaultPromotionManager(null);
            i._initializedHandlers.add(function() {
                var t = i.getCrossPromoConfs()
                  , e = new shipuidust.crosspromo.Diaporama(300,200);
                e.setDelayTimeImage(5),
                e.setImageConf(t),
                n.get().getCurrentOrPendingScene()instanceof r.MenuScene ? shipuidust.crosspromo.Diaporama.get().show() : shipuidust.crosspromo.Diaporama.get().hide()
            }, this),
            i.init()
        }
        ,
        n
    }(DUST.Game);
    r.Game = e,
    window.setTimeout(function() {
        var t = {};
        t.level = JL.getDebugLevel(),
        JL.__.setOptions(t),
        (new e).start()
    }, 100)
}(GAME || (GAME = {})),
function(t) {
    var e = function() {
        function t() {}
        return t.ANIM_PLAY = ["playShine/play0001.png", "playShine/play0002.png", "playShine/play0003.png", "playShine/play0004.png", "playShine/play0005.png", "playShine/play0006.png", "playShine/play0007.png", "playShine/play0008.png", "playShine/play0009.png", "playShine/play0010.png", "hud/empty.png"],
        t
    }();
    t.ANIMS = e
}(GAME || (GAME = {})),
function(t) {
    var e;
    (e = t.factory || (t.factory = {})).newText = function(t, e, i) {
        return void 0 === e && (e = 40),
        void 0 === i && (i = "text"),
        new DUST.BitmapText(t,{
            font: e + "px " + i
        })
    }
    ,
    e.newNumber = function(t, e, i) {
        return void 0 === e && (e = 80),
        void 0 === i && (i = "numbers"),
        new DUST.BitmapText(t,{
            font: e + "px " + i
        })
    }
}(GAME || (GAME = {})),
function(t) {
    var e = function() {
        function e() {
            e.INSTANCE = this,
            e.audioManager = t.Game.get().audioManager,
            e.load()
        }
        return e.load = function() {
            var t = new DUST.LOADER.PixiAssetLoader;
            t.add("game/assets/sounds/sounds.json", "game/assets/sounds/sounds.json"),
            t.load(null, function() {
                e.ready = !0,
                e.sound = DUST.AudioManager.getInstance().getSoundSprite("sounds")
            })
        }
        ,
        e.get = function() {
            if (null == e.INSTANCE)
                new e;
            return e.INSTANCE
        }
        ,
        e.play = function(t, e) {
            this.ready && this.sound.play(t, function() {
                e && e()
            })
        }
        ,
        e.ready = !1,
        e
    }();
    t.SoundManager = e
}(GAME || (GAME = {})),
function(t) {
    !function(t) {
        t.fonts = [];
        t.fonts.push({
            face: "text",
            size: 40,
            lineHeight: 48,
            chars: [{
                id: 106,
                x: 2,
                y: 2,
                width: 16,
                height: 48,
                xoffset: 0,
                yoffset: 6,
                xadvance: 16
            }, {
                id: 124,
                x: 20,
                y: 2,
                width: 7,
                height: 48,
                xoffset: 0,
                yoffset: 6,
                xadvance: 7
            }, {
                id: 93,
                x: 29,
                y: 2,
                width: 14,
                height: 46,
                xoffset: 0,
                yoffset: 6,
                xadvance: 15
            }, {
                id: 1092,
                x: 45,
                y: 2,
                width: 35,
                height: 46,
                xoffset: 0,
                yoffset: 8,
                xadvance: 36
            }, {
                id: 91,
                x: 82,
                y: 2,
                width: 14,
                height: 46,
                xoffset: 0,
                yoffset: 6,
                xadvance: 15
            }, {
                id: 311,
                x: 98,
                y: 2,
                width: 23,
                height: 45,
                xoffset: 0,
                yoffset: 6,
                xadvance: 23
            }, {
                id: 199,
                x: 123,
                y: 2,
                width: 29,
                height: 45,
                xoffset: 0,
                yoffset: 8,
                xadvance: 29
            }, {
                id: 280,
                x: 154,
                y: 2,
                width: 23,
                height: 45,
                xoffset: 0,
                yoffset: 8,
                xadvance: 23
            }, {
                id: 1049,
                x: 179,
                y: 2,
                width: 29,
                height: 45,
                xoffset: 0,
                yoffset: 0,
                xadvance: 29
            }, {
                id: 255,
                x: 210,
                y: 2,
                width: 24,
                height: 45,
                xoffset: 0,
                yoffset: 10,
                xadvance: 25
            }, {
                id: 209,
                x: 236,
                y: 2,
                width: 29,
                height: 45,
                xoffset: 0,
                yoffset: 0,
                xadvance: 29
            }, {
                id: 211,
                x: 267,
                y: 2,
                width: 32,
                height: 45,
                xoffset: 0,
                yoffset: 1,
                xadvance: 32
            }, {
                id: 201,
                x: 301,
                y: 2,
                width: 23,
                height: 44,
                xoffset: 0,
                yoffset: 1,
                xadvance: 23
            }, {
                id: 125,
                x: 326,
                y: 2,
                width: 15,
                height: 44,
                xoffset: 0,
                yoffset: 6,
                xadvance: 15
            }, {
                id: 323,
                x: 343,
                y: 2,
                width: 29,
                height: 44,
                xoffset: 0,
                yoffset: 2,
                xadvance: 29
            }, {
                id: 200,
                x: 374,
                y: 2,
                width: 23,
                height: 44,
                xoffset: 0,
                yoffset: 1,
                xadvance: 23
            }, {
                id: 291,
                x: 399,
                y: 2,
                width: 24,
                height: 44,
                xoffset: 0,
                yoffset: 10,
                xadvance: 24
            }, {
                id: 123,
                x: 425,
                y: 2,
                width: 15,
                height: 44,
                xoffset: 0,
                yoffset: 6,
                xadvance: 15
            }, {
                id: 262,
                x: 442,
                y: 2,
                width: 29,
                height: 44,
                xoffset: 0,
                yoffset: 1,
                xadvance: 29
            }, {
                id: 192,
                x: 473,
                y: 2,
                width: 31,
                height: 44,
                xoffset: 0,
                yoffset: 1,
                xadvance: 31
            }, {
                id: 346,
                x: 506,
                y: 2,
                width: 25,
                height: 44,
                xoffset: 0,
                yoffset: 2,
                xadvance: 25
            }, {
                id: 350,
                x: 533,
                y: 2,
                width: 25,
                height: 44,
                xoffset: 0,
                yoffset: 8,
                xadvance: 25
            }, {
                id: 214,
                x: 560,
                y: 2,
                width: 32,
                height: 44,
                xoffset: 0,
                yoffset: 1,
                xadvance: 32
            }, {
                id: 196,
                x: 594,
                y: 2,
                width: 31,
                height: 44,
                xoffset: 0,
                yoffset: 1,
                xadvance: 31
            }, {
                id: 377,
                x: 627,
                y: 2,
                width: 23,
                height: 44,
                xoffset: 0,
                yoffset: 1,
                xadvance: 24
            }, {
                id: 41,
                x: 652,
                y: 2,
                width: 13,
                height: 43,
                xoffset: 0,
                yoffset: 6,
                xadvance: 14
            }, {
                id: 325,
                x: 667,
                y: 2,
                width: 29,
                height: 43,
                xoffset: 0,
                yoffset: 8,
                xadvance: 29
            }, {
                id: 376,
                x: 698,
                y: 2,
                width: 29,
                height: 43,
                xoffset: 0,
                yoffset: 2,
                xadvance: 30
            }, {
                id: 40,
                x: 729,
                y: 2,
                width: 13,
                height: 43,
                xoffset: 0,
                yoffset: 6,
                xadvance: 14
            }, {
                id: 203,
                x: 744,
                y: 2,
                width: 23,
                height: 43,
                xoffset: 0,
                yoffset: 2,
                xadvance: 23
            }, {
                id: 316,
                x: 769,
                y: 2,
                width: 14,
                height: 43,
                xoffset: 0,
                yoffset: 8,
                xadvance: 14
            }, {
                id: 1025,
                x: 785,
                y: 2,
                width: 23,
                height: 43,
                xoffset: 0,
                yoffset: 2,
                xadvance: 23
            }, {
                id: 206,
                x: 810,
                y: 2,
                width: 9,
                height: 43,
                xoffset: 0,
                yoffset: 2,
                xadvance: 9
            }, {
                id: 220,
                x: 821,
                y: 2,
                width: 26,
                height: 43,
                xoffset: 0,
                yoffset: 3,
                xadvance: 26
            }, {
                id: 310,
                x: 849,
                y: 2,
                width: 27,
                height: 43,
                xoffset: 0,
                yoffset: 8,
                xadvance: 27
            }, {
                id: 381,
                x: 878,
                y: 2,
                width: 23,
                height: 43,
                xoffset: 0,
                yoffset: 3,
                xadvance: 24
            }, {
                id: 315,
                x: 903,
                y: 2,
                width: 19,
                height: 43,
                xoffset: 0,
                yoffset: 8,
                xadvance: 20
            }, {
                id: 212,
                x: 924,
                y: 2,
                width: 32,
                height: 43,
                xoffset: 0,
                yoffset: 2,
                xadvance: 32
            }, {
                id: 379,
                x: 958,
                y: 2,
                width: 23,
                height: 42,
                xoffset: 0,
                yoffset: 3,
                xadvance: 24
            }, {
                id: 256,
                x: 983,
                y: 2,
                width: 31,
                height: 42,
                xoffset: 0,
                yoffset: 3,
                xadvance: 31
            }, {
                id: 352,
                x: 2,
                y: 54,
                width: 25,
                height: 42,
                xoffset: 0,
                yoffset: 3,
                xadvance: 25
            }, {
                id: 260,
                x: 29,
                y: 54,
                width: 31,
                height: 42,
                xoffset: 0,
                yoffset: 8,
                xadvance: 31
            }, {
                id: 217,
                x: 62,
                y: 54,
                width: 26,
                height: 42,
                xoffset: 0,
                yoffset: 3,
                xadvance: 26
            }, {
                id: 274,
                x: 90,
                y: 54,
                width: 23,
                height: 42,
                xoffset: 0,
                yoffset: 3,
                xadvance: 23
            }, {
                id: 218,
                x: 115,
                y: 54,
                width: 26,
                height: 42,
                xoffset: 0,
                yoffset: 3,
                xadvance: 26
            }, {
                id: 268,
                x: 143,
                y: 54,
                width: 29,
                height: 42,
                xoffset: 0,
                yoffset: 3,
                xadvance: 29
            }, {
                id: 205,
                x: 174,
                y: 54,
                width: 8,
                height: 42,
                xoffset: 0,
                yoffset: 3,
                xadvance: 9
            }, {
                id: 290,
                x: 184,
                y: 54,
                width: 29,
                height: 42,
                xoffset: -1,
                yoffset: 8,
                xadvance: 29
            }, {
                id: 202,
                x: 215,
                y: 54,
                width: 23,
                height: 42,
                xoffset: 0,
                yoffset: 3,
                xadvance: 23
            }, {
                id: 194,
                x: 240,
                y: 54,
                width: 31,
                height: 42,
                xoffset: 0,
                yoffset: 3,
                xadvance: 31
            }, {
                id: 362,
                x: 273,
                y: 54,
                width: 26,
                height: 41,
                xoffset: 0,
                yoffset: 5,
                xadvance: 26
            }, {
                id: 207,
                x: 301,
                y: 54,
                width: 9,
                height: 41,
                xoffset: 0,
                yoffset: 3,
                xadvance: 9
            }, {
                id: 1062,
                x: 312,
                y: 54,
                width: 33,
                height: 41,
                xoffset: 0,
                yoffset: 8,
                xadvance: 33
            }, {
                id: 1065,
                x: 347,
                y: 54,
                width: 47,
                height: 41,
                xoffset: 0,
                yoffset: 8,
                xadvance: 48
            }, {
                id: 298,
                x: 396,
                y: 54,
                width: 12,
                height: 41,
                xoffset: 0,
                yoffset: 3,
                xadvance: 12
            }, {
                id: 81,
                x: 410,
                y: 54,
                width: 32,
                height: 41,
                xoffset: 0,
                yoffset: 8,
                xadvance: 32
            }, {
                id: 219,
                x: 444,
                y: 54,
                width: 26,
                height: 40,
                xoffset: 0,
                yoffset: 5,
                xadvance: 26
            }, {
                id: 98,
                x: 472,
                y: 54,
                width: 24,
                height: 39,
                xoffset: 0,
                yoffset: 6,
                xadvance: 24
            }, {
                id: 92,
                x: 498,
                y: 54,
                width: 20,
                height: 39,
                xoffset: 0,
                yoffset: 7,
                xadvance: 21
            }, {
                id: 102,
                x: 520,
                y: 54,
                width: 21,
                height: 39,
                xoffset: 0,
                yoffset: 6,
                xadvance: 21
            }, {
                id: 1050,
                x: 543,
                y: 54,
                width: 27,
                height: 39,
                xoffset: 0,
                yoffset: 8,
                xadvance: 27
            }, {
                id: 1071,
                x: 572,
                y: 54,
                width: 23,
                height: 39,
                xoffset: 0,
                yoffset: 8,
                xadvance: 24
            }, {
                id: 107,
                x: 597,
                y: 54,
                width: 23,
                height: 39,
                xoffset: 0,
                yoffset: 6,
                xadvance: 23
            }, {
                id: 100,
                x: 622,
                y: 54,
                width: 24,
                height: 39,
                xoffset: 0,
                yoffset: 6,
                xadvance: 24
            }, {
                id: 104,
                x: 648,
                y: 54,
                width: 23,
                height: 39,
                xoffset: 0,
                yoffset: 6,
                xadvance: 24
            }, {
                id: 75,
                x: 673,
                y: 54,
                width: 27,
                height: 39,
                xoffset: 0,
                yoffset: 8,
                xadvance: 27
            }, {
                id: 82,
                x: 702,
                y: 54,
                width: 23,
                height: 39,
                xoffset: 0,
                yoffset: 8,
                xadvance: 24
            }, {
                id: 1058,
                x: 727,
                y: 54,
                width: 26,
                height: 38,
                xoffset: 0,
                yoffset: 8,
                xadvance: 26
            }, {
                id: 1046,
                x: 755,
                y: 54,
                width: 44,
                height: 38,
                xoffset: 0,
                yoffset: 8,
                xadvance: 45
            }, {
                id: 112,
                x: 801,
                y: 54,
                width: 22,
                height: 38,
                xoffset: 0,
                yoffset: 17,
                xadvance: 22
            }, {
                id: 84,
                x: 825,
                y: 54,
                width: 26,
                height: 38,
                xoffset: 0,
                yoffset: 8,
                xadvance: 26
            }, {
                id: 85,
                x: 853,
                y: 54,
                width: 26,
                height: 38,
                xoffset: 0,
                yoffset: 8,
                xadvance: 26
            }, {
                id: 1088,
                x: 881,
                y: 54,
                width: 22,
                height: 38,
                xoffset: 0,
                yoffset: 17,
                xadvance: 22
            }, {
                id: 38,
                x: 905,
                y: 54,
                width: 23,
                height: 38,
                xoffset: 0,
                yoffset: 8,
                xadvance: 24
            }, {
                id: 113,
                x: 930,
                y: 54,
                width: 23,
                height: 38,
                xoffset: 0,
                yoffset: 17,
                xadvance: 24
            }, {
                id: 1048,
                x: 955,
                y: 54,
                width: 29,
                height: 38,
                xoffset: 0,
                yoffset: 8,
                xadvance: 29
            }, {
                id: 86,
                x: 986,
                y: 54,
                width: 29,
                height: 38,
                xoffset: 0,
                yoffset: 8,
                xadvance: 29
            }, {
                id: 78,
                x: 2,
                y: 100,
                width: 29,
                height: 38,
                xoffset: 0,
                yoffset: 8,
                xadvance: 29
            }, {
                id: 87,
                x: 33,
                y: 100,
                width: 45,
                height: 38,
                xoffset: 0,
                yoffset: 7,
                xadvance: 46
            }, {
                id: 105,
                x: 80,
                y: 100,
                width: 10,
                height: 38,
                xoffset: 0,
                yoffset: 7,
                xadvance: 10
            }, {
                id: 121,
                x: 92,
                y: 100,
                width: 24,
                height: 38,
                xoffset: 0,
                yoffset: 17,
                xadvance: 25
            }, {
                id: 1041,
                x: 118,
                y: 100,
                width: 24,
                height: 38,
                xoffset: 0,
                yoffset: 7,
                xadvance: 24
            }, {
                id: 1061,
                x: 144,
                y: 100,
                width: 29,
                height: 38,
                xoffset: 0,
                yoffset: 8,
                xadvance: 29
            }, {
                id: 88,
                x: 175,
                y: 100,
                width: 29,
                height: 38,
                xoffset: 0,
                yoffset: 8,
                xadvance: 29
            }, {
                id: 83,
                x: 206,
                y: 100,
                width: 25,
                height: 37,
                xoffset: 0,
                yoffset: 8,
                xadvance: 25
            }, {
                id: 68,
                x: 233,
                y: 100,
                width: 27,
                height: 37,
                xoffset: 0,
                yoffset: 8,
                xadvance: 27
            }, {
                id: 80,
                x: 262,
                y: 100,
                width: 24,
                height: 37,
                xoffset: 0,
                yoffset: 8,
                xadvance: 24
            }, {
                id: 74,
                x: 288,
                y: 100,
                width: 23,
                height: 37,
                xoffset: 0,
                yoffset: 8,
                xadvance: 23
            }, {
                id: 65,
                x: 313,
                y: 100,
                width: 31,
                height: 37,
                xoffset: 0,
                yoffset: 8,
                xadvance: 31
            }, {
                id: 1051,
                x: 346,
                y: 100,
                width: 30,
                height: 37,
                xoffset: 0,
                yoffset: 8,
                xadvance: 30
            }, {
                id: 77,
                x: 378,
                y: 100,
                width: 34,
                height: 37,
                xoffset: 1,
                yoffset: 8,
                xadvance: 34
            }, {
                id: 79,
                x: 414,
                y: 100,
                width: 32,
                height: 37,
                xoffset: 0,
                yoffset: 8,
                xadvance: 32
            }, {
                id: 1047,
                x: 448,
                y: 100,
                width: 25,
                height: 37,
                xoffset: 0,
                yoffset: 8,
                xadvance: 25
            }, {
                id: 1053,
                x: 475,
                y: 100,
                width: 25,
                height: 37,
                xoffset: 0,
                yoffset: 8,
                xadvance: 26
            }, {
                id: 73,
                x: 502,
                y: 100,
                width: 8,
                height: 37,
                xoffset: 0,
                yoffset: 8,
                xadvance: 9
            }, {
                id: 1055,
                x: 512,
                y: 100,
                width: 26,
                height: 37,
                xoffset: 0,
                yoffset: 8,
                xadvance: 26
            }, {
                id: 72,
                x: 540,
                y: 100,
                width: 25,
                height: 37,
                xoffset: 0,
                yoffset: 8,
                xadvance: 26
            }, {
                id: 89,
                x: 567,
                y: 100,
                width: 29,
                height: 37,
                xoffset: 0,
                yoffset: 8,
                xadvance: 30
            }, {
                id: 66,
                x: 598,
                y: 100,
                width: 23,
                height: 37,
                xoffset: 0,
                yoffset: 8,
                xadvance: 23
            }, {
                id: 1045,
                x: 623,
                y: 100,
                width: 23,
                height: 37,
                xoffset: 0,
                yoffset: 8,
                xadvance: 23
            }, {
                id: 1044,
                x: 648,
                y: 100,
                width: 27,
                height: 37,
                xoffset: 0,
                yoffset: 8,
                xadvance: 27
            }, {
                id: 1043,
                x: 677,
                y: 100,
                width: 21,
                height: 37,
                xoffset: 0,
                yoffset: 8,
                xadvance: 21
            }, {
                id: 1056,
                x: 700,
                y: 100,
                width: 24,
                height: 37,
                xoffset: 0,
                yoffset: 8,
                xadvance: 24
            }, {
                id: 1057,
                x: 726,
                y: 100,
                width: 29,
                height: 37,
                xoffset: 0,
                yoffset: 8,
                xadvance: 29
            }, {
                id: 67,
                x: 757,
                y: 100,
                width: 29,
                height: 37,
                xoffset: 0,
                yoffset: 8,
                xadvance: 29
            }, {
                id: 69,
                x: 788,
                y: 100,
                width: 23,
                height: 37,
                xoffset: 0,
                yoffset: 8,
                xadvance: 23
            }, {
                id: 50,
                x: 813,
                y: 100,
                width: 24,
                height: 37,
                xoffset: 1,
                yoffset: 8,
                xadvance: 24
            }, {
                id: 223,
                x: 839,
                y: 100,
                width: 22,
                height: 37,
                xoffset: 0,
                yoffset: 8,
                xadvance: 23
            }, {
                id: 1042,
                x: 863,
                y: 100,
                width: 23,
                height: 37,
                xoffset: 0,
                yoffset: 8,
                xadvance: 23
            }, {
                id: 103,
                x: 888,
                y: 100,
                width: 24,
                height: 37,
                xoffset: 0,
                yoffset: 17,
                xadvance: 24
            }, {
                id: 1059,
                x: 914,
                y: 100,
                width: 25,
                height: 37,
                xoffset: 0,
                yoffset: 8,
                xadvance: 25
            }, {
                id: 1052,
                x: 941,
                y: 100,
                width: 34,
                height: 37,
                xoffset: 1,
                yoffset: 8,
                xadvance: 34
            }, {
                id: 1060,
                x: 977,
                y: 100,
                width: 30,
                height: 37,
                xoffset: 0,
                yoffset: 8,
                xadvance: 30
            }, {
                id: 1054,
                x: 2,
                y: 142,
                width: 32,
                height: 37,
                xoffset: 0,
                yoffset: 8,
                xadvance: 32
            }, {
                id: 1040,
                x: 36,
                y: 142,
                width: 31,
                height: 37,
                xoffset: 0,
                yoffset: 8,
                xadvance: 31
            }, {
                id: 51,
                x: 69,
                y: 142,
                width: 23,
                height: 37,
                xoffset: 0,
                yoffset: 8,
                xadvance: 23
            }, {
                id: 52,
                x: 94,
                y: 142,
                width: 23,
                height: 37,
                xoffset: 0,
                yoffset: 8,
                xadvance: 23
            }, {
                id: 287,
                x: 119,
                y: 142,
                width: 31,
                height: 37,
                xoffset: 0,
                yoffset: 8,
                xadvance: 32
            }, {
                id: 70,
                x: 152,
                y: 142,
                width: 20,
                height: 37,
                xoffset: 0,
                yoffset: 8,
                xadvance: 21
            }, {
                id: 36,
                x: 174,
                y: 142,
                width: 19,
                height: 37,
                xoffset: 1,
                yoffset: 8,
                xadvance: 20
            }, {
                id: 48,
                x: 195,
                y: 142,
                width: 27,
                height: 37,
                xoffset: 0,
                yoffset: 8,
                xadvance: 28
            }, {
                id: 35,
                x: 224,
                y: 142,
                width: 32,
                height: 37,
                xoffset: 0,
                yoffset: 8,
                xadvance: 32
            }, {
                id: 322,
                x: 258,
                y: 142,
                width: 16,
                height: 37,
                xoffset: 0,
                yoffset: 8,
                xadvance: 17
            }, {
                id: 54,
                x: 276,
                y: 142,
                width: 23,
                height: 37,
                xoffset: -1,
                yoffset: 8,
                xadvance: 22
            }, {
                id: 64,
                x: 301,
                y: 142,
                width: 33,
                height: 37,
                xoffset: 0,
                yoffset: 8,
                xadvance: 33
            }, {
                id: 1063,
                x: 336,
                y: 142,
                width: 25,
                height: 37,
                xoffset: 0,
                yoffset: 8,
                xadvance: 25
            }, {
                id: 1064,
                x: 363,
                y: 142,
                width: 41,
                height: 37,
                xoffset: 0,
                yoffset: 8,
                xadvance: 42
            }, {
                id: 108,
                x: 406,
                y: 142,
                width: 14,
                height: 37,
                xoffset: 0,
                yoffset: 8,
                xadvance: 14
            }, {
                id: 53,
                x: 422,
                y: 142,
                width: 21,
                height: 37,
                xoffset: 0,
                yoffset: 8,
                xadvance: 21
            }, {
                id: 47,
                x: 445,
                y: 142,
                width: 21,
                height: 37,
                xoffset: 0,
                yoffset: 8,
                xadvance: 21
            }, {
                id: 1066,
                x: 468,
                y: 142,
                width: 27,
                height: 37,
                xoffset: 0,
                yoffset: 8,
                xadvance: 27
            }, {
                id: 1067,
                x: 497,
                y: 142,
                width: 33,
                height: 37,
                xoffset: 0,
                yoffset: 8,
                xadvance: 34
            }, {
                id: 1068,
                x: 532,
                y: 142,
                width: 24,
                height: 37,
                xoffset: 0,
                yoffset: 8,
                xadvance: 24
            }, {
                id: 1069,
                x: 558,
                y: 142,
                width: 29,
                height: 37,
                xoffset: 1,
                yoffset: 8,
                xadvance: 29
            }, {
                id: 1070,
                x: 589,
                y: 142,
                width: 41,
                height: 37,
                xoffset: 0,
                yoffset: 8,
                xadvance: 42
            }, {
                id: 63,
                x: 632,
                y: 142,
                width: 20,
                height: 37,
                xoffset: 1,
                yoffset: 8,
                xadvance: 21
            }, {
                id: 321,
                x: 654,
                y: 142,
                width: 22,
                height: 37,
                xoffset: 0,
                yoffset: 8,
                xadvance: 23
            }, {
                id: 37,
                x: 678,
                y: 142,
                width: 38,
                height: 37,
                xoffset: 0,
                yoffset: 8,
                xadvance: 38
            }, {
                id: 33,
                x: 718,
                y: 142,
                width: 10,
                height: 37,
                xoffset: 0,
                yoffset: 8,
                xadvance: 10
            }, {
                id: 57,
                x: 730,
                y: 142,
                width: 22,
                height: 37,
                xoffset: 0,
                yoffset: 8,
                xadvance: 22
            }, {
                id: 56,
                x: 754,
                y: 142,
                width: 21,
                height: 37,
                xoffset: 0,
                yoffset: 8,
                xadvance: 22
            }, {
                id: 286,
                x: 777,
                y: 142,
                width: 31,
                height: 37,
                xoffset: 0,
                yoffset: 8,
                xadvance: 32
            }, {
                id: 55,
                x: 810,
                y: 142,
                width: 22,
                height: 37,
                xoffset: 0,
                yoffset: 8,
                xadvance: 23
            }, {
                id: 76,
                x: 834,
                y: 142,
                width: 19,
                height: 37,
                xoffset: 0,
                yoffset: 8,
                xadvance: 20
            }, {
                id: 90,
                x: 855,
                y: 142,
                width: 23,
                height: 37,
                xoffset: 0,
                yoffset: 8,
                xadvance: 24
            }, {
                id: 49,
                x: 880,
                y: 142,
                width: 15,
                height: 37,
                xoffset: 0,
                yoffset: 8,
                xadvance: 15
            }, {
                id: 1091,
                x: 897,
                y: 142,
                width: 24,
                height: 37,
                xoffset: 0,
                yoffset: 17,
                xadvance: 24
            }, {
                id: 241,
                x: 923,
                y: 142,
                width: 21,
                height: 36,
                xoffset: 0,
                yoffset: 9,
                xadvance: 22
            }, {
                id: 1073,
                x: 946,
                y: 142,
                width: 22,
                height: 36,
                xoffset: 0,
                yoffset: 8,
                xadvance: 22
            }, {
                id: 71,
                x: 970,
                y: 142,
                width: 29,
                height: 36,
                xoffset: -1,
                yoffset: 8,
                xadvance: 29
            }, {
                id: 249,
                x: 2,
                y: 183,
                width: 22,
                height: 36,
                xoffset: 0,
                yoffset: 10,
                xadvance: 22
            }, {
                id: 351,
                x: 26,
                y: 183,
                width: 19,
                height: 36,
                xoffset: 0,
                yoffset: 17,
                xadvance: 19
            }, {
                id: 263,
                x: 47,
                y: 183,
                width: 22,
                height: 35,
                xoffset: 0,
                yoffset: 10,
                xadvance: 22
            }, {
                id: 378,
                x: 71,
                y: 183,
                width: 19,
                height: 35,
                xoffset: 0,
                yoffset: 10,
                xadvance: 19
            }, {
                id: 347,
                x: 92,
                y: 183,
                width: 19,
                height: 35,
                xoffset: 0,
                yoffset: 10,
                xadvance: 19
            }, {
                id: 261,
                x: 113,
                y: 183,
                width: 23,
                height: 35,
                xoffset: 0,
                yoffset: 17,
                xadvance: 24
            }, {
                id: 250,
                x: 138,
                y: 183,
                width: 22,
                height: 35,
                xoffset: 0,
                yoffset: 10,
                xadvance: 22
            }, {
                id: 233,
                x: 162,
                y: 183,
                width: 21,
                height: 35,
                xoffset: 0,
                yoffset: 10,
                xadvance: 22
            }, {
                id: 1081,
                x: 185,
                y: 183,
                width: 20,
                height: 35,
                xoffset: 0,
                yoffset: 10,
                xadvance: 20
            }, {
                id: 228,
                x: 207,
                y: 183,
                width: 23,
                height: 35,
                xoffset: 0,
                yoffset: 11,
                xadvance: 24
            }, {
                id: 231,
                x: 232,
                y: 183,
                width: 22,
                height: 35,
                xoffset: 0,
                yoffset: 17,
                xadvance: 22
            }, {
                id: 243,
                x: 256,
                y: 183,
                width: 23,
                height: 35,
                xoffset: 0,
                yoffset: 10,
                xadvance: 23
            }, {
                id: 224,
                x: 281,
                y: 183,
                width: 23,
                height: 35,
                xoffset: 0,
                yoffset: 10,
                xadvance: 24
            }, {
                id: 59,
                x: 306,
                y: 183,
                width: 10,
                height: 35,
                xoffset: 0,
                yoffset: 13,
                xadvance: 10
            }, {
                id: 232,
                x: 318,
                y: 183,
                width: 21,
                height: 35,
                xoffset: 0,
                yoffset: 10,
                xadvance: 22
            }, {
                id: 353,
                x: 341,
                y: 183,
                width: 19,
                height: 34,
                xoffset: 0,
                yoffset: 12,
                xadvance: 19
            }, {
                id: 244,
                x: 362,
                y: 183,
                width: 23,
                height: 34,
                xoffset: 0,
                yoffset: 11,
                xadvance: 23
            }, {
                id: 235,
                x: 387,
                y: 183,
                width: 21,
                height: 34,
                xoffset: 0,
                yoffset: 11,
                xadvance: 22
            }, {
                id: 252,
                x: 410,
                y: 183,
                width: 22,
                height: 34,
                xoffset: 0,
                yoffset: 11,
                xadvance: 22
            }, {
                id: 246,
                x: 434,
                y: 183,
                width: 23,
                height: 34,
                xoffset: 0,
                yoffset: 11,
                xadvance: 23
            }, {
                id: 380,
                x: 459,
                y: 183,
                width: 19,
                height: 34,
                xoffset: 0,
                yoffset: 11,
                xadvance: 19
            }, {
                id: 1105,
                x: 480,
                y: 183,
                width: 21,
                height: 34,
                xoffset: 0,
                yoffset: 11,
                xadvance: 22
            }, {
                id: 324,
                x: 503,
                y: 183,
                width: 21,
                height: 34,
                xoffset: 0,
                yoffset: 10,
                xadvance: 22
            }, {
                id: 275,
                x: 526,
                y: 183,
                width: 21,
                height: 33,
                xoffset: 0,
                yoffset: 12,
                xadvance: 22
            }, {
                id: 269,
                x: 549,
                y: 183,
                width: 22,
                height: 33,
                xoffset: 0,
                yoffset: 12,
                xadvance: 22
            }, {
                id: 226,
                x: 573,
                y: 183,
                width: 23,
                height: 33,
                xoffset: 0,
                yoffset: 12,
                xadvance: 24
            }, {
                id: 234,
                x: 598,
                y: 183,
                width: 21,
                height: 33,
                xoffset: 0,
                yoffset: 12,
                xadvance: 22
            }, {
                id: 58,
                x: 621,
                y: 183,
                width: 9,
                height: 33,
                xoffset: 0,
                yoffset: 13,
                xadvance: 9
            }, {
                id: 238,
                x: 632,
                y: 183,
                width: 9,
                height: 33,
                xoffset: 0,
                yoffset: 12,
                xadvance: 9
            }, {
                id: 326,
                x: 643,
                y: 183,
                width: 21,
                height: 33,
                xoffset: 0,
                yoffset: 17,
                xadvance: 22
            }, {
                id: 251,
                x: 666,
                y: 183,
                width: 22,
                height: 33,
                xoffset: 0,
                yoffset: 12,
                xadvance: 22
            }, {
                id: 257,
                x: 690,
                y: 183,
                width: 23,
                height: 33,
                xoffset: 0,
                yoffset: 12,
                xadvance: 24
            }, {
                id: 116,
                x: 715,
                y: 183,
                width: 18,
                height: 33,
                xoffset: 0,
                yoffset: 12,
                xadvance: 18
            }, {
                id: 363,
                x: 735,
                y: 183,
                width: 22,
                height: 33,
                xoffset: 0,
                yoffset: 12,
                xadvance: 22
            }, {
                id: 382,
                x: 759,
                y: 183,
                width: 19,
                height: 33,
                xoffset: 0,
                yoffset: 12,
                xadvance: 19
            }, {
                id: 239,
                x: 780,
                y: 183,
                width: 9,
                height: 32,
                xoffset: 0,
                yoffset: 13,
                xadvance: 9
            }, {
                id: 237,
                x: 791,
                y: 183,
                width: 9,
                height: 32,
                xoffset: 0,
                yoffset: 13,
                xadvance: 9
            }, {
                id: 281,
                x: 802,
                y: 183,
                width: 21,
                height: 32,
                xoffset: 0,
                yoffset: 17,
                xadvance: 22
            }, {
                id: 299,
                x: 825,
                y: 183,
                width: 9,
                height: 32,
                xoffset: 0,
                yoffset: 12,
                xadvance: 10
            }, {
                id: 1094,
                x: 836,
                y: 183,
                width: 25,
                height: 31,
                xoffset: 0,
                yoffset: 17,
                xadvance: 25
            }, {
                id: 1103,
                x: 863,
                y: 183,
                width: 17,
                height: 30,
                xoffset: 0,
                yoffset: 17,
                xadvance: 17
            }, {
                id: 1097,
                x: 882,
                y: 183,
                width: 34,
                height: 30,
                xoffset: 0,
                yoffset: 17,
                xadvance: 35
            }, {
                id: 115,
                x: 918,
                y: 183,
                width: 19,
                height: 29,
                xoffset: 0,
                yoffset: 17,
                xadvance: 19
            }, {
                id: 1090,
                x: 939,
                y: 183,
                width: 18,
                height: 29,
                xoffset: 0,
                yoffset: 17,
                xadvance: 19
            }, {
                id: 1082,
                x: 959,
                y: 183,
                width: 19,
                height: 29,
                xoffset: 0,
                yoffset: 17,
                xadvance: 19
            }, {
                id: 1079,
                x: 980,
                y: 183,
                width: 18,
                height: 28,
                xoffset: 0,
                yoffset: 17,
                xadvance: 19
            }, {
                id: 1080,
                x: 1e3,
                y: 183,
                width: 20,
                height: 28,
                xoffset: 0,
                yoffset: 17,
                xadvance: 20
            }, {
                id: 1089,
                x: 2,
                y: 223,
                width: 22,
                height: 28,
                xoffset: 0,
                yoffset: 17,
                xadvance: 22
            }, {
                id: 1083,
                x: 26,
                y: 223,
                width: 25,
                height: 28,
                xoffset: 0,
                yoffset: 17,
                xadvance: 25
            }, {
                id: 1072,
                x: 53,
                y: 223,
                width: 23,
                height: 28,
                xoffset: 0,
                yoffset: 17,
                xadvance: 24
            }, {
                id: 1086,
                x: 78,
                y: 223,
                width: 23,
                height: 28,
                xoffset: 0,
                yoffset: 17,
                xadvance: 23
            }, {
                id: 1087,
                x: 103,
                y: 223,
                width: 19,
                height: 28,
                xoffset: 0,
                yoffset: 17,
                xadvance: 20
            }, {
                id: 1093,
                x: 124,
                y: 223,
                width: 23,
                height: 28,
                xoffset: 0,
                yoffset: 17,
                xadvance: 23
            }, {
                id: 1084,
                x: 149,
                y: 223,
                width: 25,
                height: 28,
                xoffset: 0,
                yoffset: 17,
                xadvance: 25
            }, {
                id: 1085,
                x: 176,
                y: 223,
                width: 18,
                height: 28,
                xoffset: 0,
                yoffset: 17,
                xadvance: 19
            }, {
                id: 1076,
                x: 196,
                y: 223,
                width: 20,
                height: 28,
                xoffset: 0,
                yoffset: 17,
                xadvance: 20
            }, {
                id: 1074,
                x: 218,
                y: 223,
                width: 17,
                height: 28,
                xoffset: 0,
                yoffset: 17,
                xadvance: 18
            }, {
                id: 1101,
                x: 237,
                y: 223,
                width: 21,
                height: 28,
                xoffset: 0,
                yoffset: 17,
                xadvance: 21
            }, {
                id: 1095,
                x: 260,
                y: 223,
                width: 19,
                height: 28,
                xoffset: 0,
                yoffset: 17,
                xadvance: 19
            }, {
                id: 1096,
                x: 281,
                y: 223,
                width: 29,
                height: 28,
                xoffset: 0,
                yoffset: 17,
                xadvance: 30
            }, {
                id: 1100,
                x: 312,
                y: 223,
                width: 17,
                height: 28,
                xoffset: 0,
                yoffset: 17,
                xadvance: 17
            }, {
                id: 1098,
                x: 331,
                y: 223,
                width: 19,
                height: 28,
                xoffset: 0,
                yoffset: 17,
                xadvance: 19
            }, {
                id: 1099,
                x: 352,
                y: 223,
                width: 25,
                height: 28,
                xoffset: 0,
                yoffset: 17,
                xadvance: 25
            }, {
                id: 1078,
                x: 379,
                y: 223,
                width: 31,
                height: 28,
                xoffset: 0,
                yoffset: 17,
                xadvance: 31
            }, {
                id: 1075,
                x: 412,
                y: 223,
                width: 15,
                height: 28,
                xoffset: 0,
                yoffset: 17,
                xadvance: 15
            }, {
                id: 122,
                x: 429,
                y: 223,
                width: 19,
                height: 28,
                xoffset: 0,
                yoffset: 17,
                xadvance: 19
            }, {
                id: 120,
                x: 450,
                y: 223,
                width: 23,
                height: 28,
                xoffset: 0,
                yoffset: 17,
                xadvance: 23
            }, {
                id: 119,
                x: 475,
                y: 223,
                width: 33,
                height: 28,
                xoffset: 0,
                yoffset: 17,
                xadvance: 34
            }, {
                id: 118,
                x: 510,
                y: 223,
                width: 20,
                height: 28,
                xoffset: 0,
                yoffset: 17,
                xadvance: 21
            }, {
                id: 117,
                x: 532,
                y: 223,
                width: 22,
                height: 28,
                xoffset: 0,
                yoffset: 17,
                xadvance: 22
            }, {
                id: 1102,
                x: 556,
                y: 223,
                width: 30,
                height: 28,
                xoffset: 0,
                yoffset: 17,
                xadvance: 31
            }, {
                id: 99,
                x: 588,
                y: 223,
                width: 22,
                height: 28,
                xoffset: 0,
                yoffset: 17,
                xadvance: 22
            }, {
                id: 114,
                x: 612,
                y: 223,
                width: 18,
                height: 28,
                xoffset: 0,
                yoffset: 17,
                xadvance: 19
            }, {
                id: 111,
                x: 632,
                y: 223,
                width: 23,
                height: 28,
                xoffset: 0,
                yoffset: 17,
                xadvance: 23
            }, {
                id: 97,
                x: 657,
                y: 223,
                width: 23,
                height: 28,
                xoffset: 0,
                yoffset: 17,
                xadvance: 24
            }, {
                id: 109,
                x: 682,
                y: 223,
                width: 33,
                height: 28,
                xoffset: 0,
                yoffset: 17,
                xadvance: 33
            }, {
                id: 43,
                x: 717,
                y: 223,
                width: 22,
                height: 28,
                xoffset: 0,
                yoffset: 17,
                xadvance: 23
            }, {
                id: 1077,
                x: 741,
                y: 223,
                width: 21,
                height: 27,
                xoffset: 0,
                yoffset: 17,
                xadvance: 22
            }, {
                id: 110,
                x: 764,
                y: 223,
                width: 21,
                height: 27,
                xoffset: 0,
                yoffset: 17,
                xadvance: 22
            }, {
                id: 101,
                x: 787,
                y: 223,
                width: 21,
                height: 27,
                xoffset: 0,
                yoffset: 17,
                xadvance: 22
            }, {
                id: 61,
                x: 810,
                y: 223,
                width: 15,
                height: 20,
                xoffset: 0,
                yoffset: 20,
                xadvance: 15
            }, {
                id: 44,
                x: 827,
                y: 223,
                width: 12,
                height: 20,
                xoffset: 0,
                yoffset: 30,
                xadvance: 12
            }, {
                id: 34,
                x: 841,
                y: 223,
                width: 14,
                height: 19,
                xoffset: 0,
                yoffset: 6,
                xadvance: 15
            }, {
                id: 39,
                x: 857,
                y: 223,
                width: 7,
                height: 17,
                xoffset: 0,
                yoffset: 6,
                xadvance: 8
            }, {
                id: 42,
                x: 866,
                y: 223,
                width: 11,
                height: 17,
                xoffset: 0,
                yoffset: 7,
                xadvance: 12
            }, {
                id: 46,
                x: 879,
                y: 223,
                width: 9,
                height: 16,
                xoffset: 0,
                yoffset: 29,
                xadvance: 9
            }, {
                id: 45,
                x: 890,
                y: 223,
                width: 15,
                height: 14,
                xoffset: 0,
                yoffset: 23,
                xadvance: 16
            }, {
                id: 94,
                x: 907,
                y: 223,
                width: 14,
                height: 14,
                xoffset: 0,
                yoffset: 6,
                xadvance: 15
            }, {
                id: 95,
                x: 923,
                y: 223,
                width: 23,
                height: 12,
                xoffset: 0,
                yoffset: 39,
                xadvance: 23
            }, {
                id: 775,
                x: 948,
                y: 223,
                width: 5,
                height: 11,
                xoffset: -5,
                yoffset: 8,
                xadvance: 0
            }, {
                id: 32,
                x: 0,
                y: 0,
                width: 0,
                height: 0,
                xoffset: -5,
                yoffset: 8,
                xadvance: 11
            }]
        });
        t.fonts.push({
            face: "numbers",
            size: 80,
            lineHeight: 96,
            chars: [{
                id: 49,
                x: 2,
                y: 2,
                width: 37,
                height: 74,
                xoffset: 1,
                yoffset: 1,
                xadvance: 30
            }, {
                id: 50,
                x: 41,
                y: 2,
                width: 56,
                height: 75,
                xoffset: 1,
                yoffset: 0,
                xadvance: 49
            }, {
                id: 51,
                x: 99,
                y: 2,
                width: 53,
                height: 75,
                xoffset: 1,
                yoffset: 1,
                xadvance: 46
            }, {
                id: 52,
                x: 154,
                y: 2,
                width: 53,
                height: 75,
                xoffset: 1,
                yoffset: 0,
                xadvance: 46
            }, {
                id: 53,
                x: 209,
                y: 2,
                width: 51,
                height: 74,
                xoffset: 0,
                yoffset: 1,
                xadvance: 43
            }, {
                id: 54,
                x: 262,
                y: 2,
                width: 52,
                height: 75,
                xoffset: -1,
                yoffset: 1,
                xadvance: 45
            }, {
                id: 55,
                x: 316,
                y: 2,
                width: 52,
                height: 74,
                xoffset: 1,
                yoffset: 1,
                xadvance: 45
            }, {
                id: 56,
                x: 370,
                y: 2,
                width: 50,
                height: 76,
                xoffset: 1,
                yoffset: 0,
                xadvance: 43
            }, {
                id: 57,
                x: 422,
                y: 2,
                width: 51,
                height: 75,
                xoffset: 1,
                yoffset: 0,
                xadvance: 44
            }, {
                id: 48,
                x: 475,
                y: 2,
                width: 62,
                height: 75,
                xoffset: 1,
                yoffset: 0,
                xadvance: 56
            }, {
                id: 32,
                x: 0,
                y: 0,
                width: 0,
                height: 0,
                xoffset: 1,
                yoffset: 0,
                xadvance: 22
            }]
        })
    }(t.fonts || (t.fonts = {}))
}(GAME || (GAME = {})),
(GAME || (GAME = {})).GAMECONFIG = {
    publisher: "lagged",
    gameId: "merge",
    gameVersion: "0.1.3",
    defaultLocale: "autodetect",
    customData: {
        gaTrackingCode: "UA-132892696-1",
        gaPageName: "evolution",
        infoPopup: {
            targetUrl: "https://gamebuilt.com/games.html",
            bgImgSrc: "https://gamebuilt.com/ext/gd/infopopup_300x200.png",
            closeBtnImgSrc: "https://gamebuilt.com/ext/gd/close_30x30.png",
            closeBtnTop: "5px",
            closeBtnLeft: "5px"
        },
        hideLeaderboardButton: !0,
        initArg1: "evolutionn_gmae_viin",
        initArg2: "lagdevaF3001",
        showAdsArg1: "evolution",
        showAdsArg2: "evolution-game.png",
        submitScoreBoard: "evoluting_gmam_hbnnrdsmvt"
    },
    gsUrl: "gs.snapgame.io/ship-01",
    serverUrl: "undefined",
    resourcesUrl: "https://games.gamebuilt.com/merge/",
    packages: []
},
function(t) {
    DUST.I18N.setAvailableLocales(["en", "fr", "ru"]),
    DUST.I18N.setDefaultLocale("en");
    var e = function() {
        function t() {}
        return t.TAP_TO_PLAY = "TAP_TO_PLAY",
        t.SCORE = "SCORE",
        t.BEST = "BEST",
        t.GAME_OVER = "GAME_OVER",
        t.NEW_BEST = "NEW_BEST",
        t.SELECT_LANGAGE = "SELECT_LANGAGE",
        t
    }();
    t.I18NK = e;
    DUST.I18N.registerTranslation("fr", {
        TAP_TO_PLAY: "Cliquer pour jouer",
        SCORE: "Score",
        BEST: "Record",
        GAME_OVER: "Partie Terminée!",
        NEW_BEST: "NOUVEAU RECORD!",
        SELECT_LANGAGE: "Choix de la langue"
    });
    DUST.I18N.registerTranslation("en", {
        TAP_TO_PLAY: "Tap to play",
        SCORE: "Score",
        BEST: "Best",
        GAME_OVER: "Game over!",
        NEW_BEST: "NEW BEST!",
        SELECT_LANGAGE: "Select language"
    });
    DUST.I18N.registerTranslation("ru", {
        TAP_TO_PLAY: "Нажмите, чтобы играть",
        SCORE: "Очки",
        BEST: "Рекорд",
        GAME_OVER: "Игра окончена!",
        NEW_BEST: "НОВЫЙ РЕКОРД!",
        SELECT_LANGAGE: "Выбрать язык"
    })
}(GAME || (GAME = {})),
function(n) {
    var t = function() {
        function i() {}
        return i.getBlankTexture = function() {
            if (null == this._blankSpriteTexture) {
                var t = new DUST.Graphics;
                t.beginFill(n.Param.WHITE, 1),
                t.drawRect(0, 0, 1, 1),
                t.endFill(),
                this._blankSpriteTexture = t.generateTextureWithId("MyPixelGenerated")
            }
            return this._blankSpriteTexture
        }
        ,
        i.getCroppedSprite = function(t) {
            var e = DUST.Texture.fromFrame(t)
              , i = e._texture.crop
              , n = new DUST.Rectangle(i.x,i.y,i.width,i.height)
              , r = new DUST.Texture(e,n);
            return DUST.Sprite.fromTexture(r)
        }
        ,
        i.cloneArrayOfArray = function(t) {
            for (var e = [], i = 0; i < t.length; i++)
                e[i] = t[i].slice(0);
            return e
        }
        ,
        i.getTimeMilli = function() {
            var t = -1
              , e = n.System.getTimeStamp();
            return null == e || e != e ? console.error("pb with getTimeStamp result") : t = e,
            t
        }
        ,
        i.getTimeSec = function() {
            var t = -1
              , e = i.getTimeMilli();
            return -1 != e && (t = Math.floor(.001 * e)),
            t
        }
        ,
        i.getDay = function() {
            var t = -1
              , e = i.getTimeMilli();
            return -1 != e && (t = n.System.getDayNumber(e)),
            t
        }
        ,
        i
    }();
    n.Helpers = t
}(GAME || (GAME = {})),
function(t) {
    var e = function(t) {
        function e() {
            return null !== t && t.apply(this, arguments) || this
        }
        return __extends(e, t),
        e
    }(DUST.I18N);
    t.I18N = e
}(GAME || (GAME = {})),
function(t) {
    var e;
    (e = t.STATES || (t.STATES = {}))[e.WAIT = 0] = "WAIT",
    e[e.TRANS_MERGE = 1] = "TRANS_MERGE",
    e[e.TRANS_CHUTE = 2] = "TRANS_CHUTE",
    e[e.FINISH = 3] = "FINISH";
    var i = function() {
        function t() {}
        return t.RED = 16711680,
        t.GREEN = 65280,
        t.BLUE = 255,
        t.DARKBLUE = 187,
        t.LIGHTBLUE = 8947967,
        t.YELLOW = 16776960,
        t.WHITE = 16777215,
        t.BLACK = 0,
        t.DARKGRAY = 4473924,
        t.GRAY = 8947848,
        t.LIGHTGRAY = 12303291,
        t.PLAY_ANIM_INTERVAL = 2,
        t.LITTLE_INTERVAL = .2,
        t.MINUTES_POUR_DEMANDER_LA_LANGUE = 5,
        t.GRID_SIZE_WIDTH = 5,
        t.GRID_SIZE_HEIGHT = 5,
        t.ELEMENT_SIZE = 120,
        t.MARGE_BETWEEN_ELEMENTS = 4,
        t.MARGE_LEFT = 4,
        t.MARGE_TOP = 4,
        t.PIXEL_BY_SEC_MOVING_MERGE = 1e3,
        t.PIXEL_BY_SEC_MOVING_DROP = 2e3,
        t.MAX_AT_START = 3,
        t.TOTAL_MONSTERS = 12,
        t.DECAL_MONSTERS = 12,
        t.MIN_TIME_BETWEEN_BLINK = 3,
        t.MAX_TIME_BETWEEN_BLINK = 30,
        t.BLINK_DURATION = .2,
        t.DECALAGE_BORD_BEST_SCORE = 10,
        t.DECALAGE_BORD_BT_REPLAY = 10,
        t.NB_CONFET = 150,
        t.APPARITION_TIME = 500,
        t.FALL_PIXEL_MAX = 200,
        t.ROTATION_MAX = Math.PI,
        t.SCALEX_SPEED_MAX = 1,
        t.SCALEY_SPEED_MAX = 1,
        t.SCORE_UNLOCKING_MONSTER = [0, 0, 0, 10, 20, 40, 80, 160, 320, 640, 1280, 2560],
        t.PURPLE_BG = 6226351,
        t.PURPLE_HUD = 7552158,
        t.RED_BG = 9240619,
        t.RED_HUD = 9583189,
        t.BLUE_BG = 13710,
        t.BLUE_HUD = 3759249,
        t.GREEN_BG = 22071,
        t.GREEN_HUD = 1996361,
        t.BROWN_BG = 5906944,
        t.BROWN_HUD = 8603692,
        t
    }();
    t.Param = i
}(GAME || (GAME = {})),
function(d) {
    var t = function(c) {
        function p() {
            var t = c.call(this, d.Game.get()) || this;
            d.SoundManager.get();
            var e = p._INSTANCE = t
              , i = d.Game.get().bounds;
            t.paused = !1;
            new d.Grid,
            new d.Gameplay;
            var n = DUST.Sprite.fromFrame("game/assets/unpacked/background_gameplay.jpg");
            t.globalCont = new DUST.Container(934,1040),
            t.globalCont.x = -155,
            t.globalCont.addChild(n);
            var r = d.Param.PURPLE_BG
              , o = d.Param.PURPLE_HUD;
            switch (DUST.Random.intInRange(1, 5)) {
            case 2:
                r = d.Param.RED_BG,
                o = d.Param.RED_HUD;
                break;
            case 3:
                r = d.Param.BLUE_BG,
                o = d.Param.BLUE_HUD;
                break;
            case 4:
                r = d.Param.GREEN_BG,
                o = d.Param.GREEN_HUD;
                break;
            case 5:
                r = d.Param.BROWN_BG,
                o = d.Param.BROWN_HUD
            }
            n.tint = r,
            t.phoneCont = new DUST.Container(624,1040),
            t.phoneCont.x = 155,
            t.globalCont.addChild(t.phoneCont),
            t.gameplayCont = new d.GameplayContainer(624,624,o),
            t.gameplayCont.x = 0,
            t.gameplayCont.y = (i.height - t.gameplayCont.height) / 2,
            t.phoneCont.addChild(t.gameplayCont),
            t.displayCont = new d.DisplayContainer(624,208,o),
            t.displayCont.x = 0,
            t.displayCont.y = i.height - t.displayCont.height,
            t.phoneCont.addChild(t.displayCont),
            t.scoreCont = new d.ScoreContainer(624,208),
            t.scoreCont.x = 0,
            t.scoreCont.y = 0,
            t.phoneCont.addChild(t.scoreCont),
            t.effectsCont = new d.TopContainer(624,1040),
            t.effectsCont.x = 0,
            t.effectsCont.y = 0,
            t.phoneCont.addChild(t.effectsCont);
            var s = DUST.ImageButton.fromFrames("hud/button_small.png", "hud/button_small_pressed.png", "hud/button_small_hover.png")
              , a = DUST.Sprite.fromFrame("hud/icon_restart.png");
            s.setIcon(a),
            t.phoneCont.addChild(s),
            s.x = d.Param.DECALAGE_BORD_BT_REPLAY,
            s.y = 0 + d.Param.DECALAGE_BORD_BT_REPLAY,
            s.onClick(function() {
                e.restart()
            }),
            t.container.addChild(t.globalCont),
            t.loosepopupShown = !1,
            t.bt_tuto = DUST.ImageButton.fromFrames("hud/button_small.png", "hud/button_small_pressed.png", "hud/button_small_hover.png");
            var h = DUST.Sprite.fromFrame("hud/icon_tutorial.png");
            t.bt_tuto.setIcon(h),
            t.bt_tuto.x = t.phoneCont.width - t.bt_tuto.width - d.Param.DECALAGE_BORD_BT_REPLAY,
            t.bt_tuto.y = t.phoneCont.height - t.bt_tuto.height - d.Param.DECALAGE_BORD_BT_REPLAY - 40,
            t.phoneCont.addChild(t.bt_tuto),
            t.bt_tuto.onClick(function() {
                e.tuto()
            });
            var l = DUST.ImageButton.fromFrames("hud/button_small.png", "hud/button_small_pressed.png", "hud/button_small_hover.png")
              , u = DUST.Sprite.fromFrame("hud/icon_home.png");
            return l.setIcon(u),
            t.phoneCont.addChild(l),
            l.x = t.phoneCont.width - l.width - d.Param.DECALAGE_BORD_BT_REPLAY,
            l.y = 0 + d.Param.DECALAGE_BORD_BT_REPLAY,
            l.onClick(function() {
                var t = new d.MenuScene;
                d.Game.get().switchScene(t, !0, !0)
            }),
            shipuidust.crosspromo.Diaporama.get().hide(),
            t
        }
        return __extends(p, c),
        p.get = function() {
            return p._INSTANCE
        }
        ,
        p.prototype.update = function(t) {
            c.prototype.update.call(this, t);
            var e = d.Gameplay.get();
            0 == this.paused && (e.state == d.STATES.FINISH && (this.showLoose(),
            this.loosePopup.update(t)),
            e.state == d.STATES.TRANS_CHUTE && e.updateChute(t),
            e.state == d.STATES.TRANS_MERGE && e.updateMerge(t),
            e.state == d.STATES.WAIT && this.updateControls())
        }
        ,
        p.prototype.updateControls = function() {
            for (var t = d.Game.get().inputManager.mouse.position.x - this.gameplayCont.x, e = d.Game.get().inputManager.mouse.position.y - this.gameplayCont.y, i = !1, n = -1, r = -1, o = d.Game.get().inputManager.mouse.isJustUp, s = 0; s < d.Param.GRID_SIZE_WIDTH; s++)
                for (var a = 0; a < d.Param.GRID_SIZE_HEIGHT; a++) {
                    var h = !0;
                    t < d.Param.MARGE_LEFT + (d.Param.ELEMENT_SIZE + d.Param.MARGE_BETWEEN_ELEMENTS) * s && (h = !1),
                    t > d.Param.MARGE_LEFT + (d.Param.ELEMENT_SIZE + d.Param.MARGE_BETWEEN_ELEMENTS) * s + d.Param.ELEMENT_SIZE && (h = !1),
                    e < d.Param.MARGE_TOP + (d.Param.ELEMENT_SIZE + d.Param.MARGE_BETWEEN_ELEMENTS) * a && (h = !1),
                    e > d.Param.MARGE_TOP + (d.Param.ELEMENT_SIZE + d.Param.MARGE_BETWEEN_ELEMENTS) * a + d.Param.ELEMENT_SIZE && (h = !1),
                    1 == h && (i = !0,
                    n = s,
                    r = a)
                }
            1 == i ? (d.Gameplay.get().actualselectedCase(n, r),
            1 == o && d.Gameplay.get().releaseOnCase(n, r)) : d.Gameplay.get().clearSelection()
        }
        ,
        p.prototype.render = function(t) {
            c.prototype.render.call(this, t),
            d.Gameplay.get().state != d.STATES.WAIT && this.gameplayCont.render(t)
        }
        ,
        p.prototype.onShow = function() {
            d.Grid.get().init(),
            this.gameplayCont.renderSimple(),
            d.DisplayContainer.get().render(d.Param.MAX_AT_START),
            d.ScoreContainer.get().updateScore(d.Gameplay.get().score)
        }
        ,
        p.prototype.showLoose = function() {
            if (0 == this.loosepopupShown) {
                this.loosePopup = new d.LoosePopup;
                var t = d.Gameplay.get().score
                  , e = !1;
                d.Gameplay.get().bestScore < t && (d.Gameplay.get().bestScore = t,
                e = !0),
                this.loosePopup.isBest(e),
                this.loosePopup.updateScore(d.Gameplay.get().score),
                this.loosePopup.maxMob(d.Gameplay.get().ActualMax),
                this.loosePopup.show(),
                this.loosepopupShown = !0
            }
        }
        ,
        p.prototype.restart = function() {
            d.si.endGame(!0, function() {
                var t = new p;
                d.Game.get().switchScene(t)
            })
        }
        ,
        p.prototype.tuto = function() {
            new d.TutoPopup(this.resumeFromTuto,this).show(),
            this.pause()
        }
        ,
        p.prototype.resumeFromTuto = function() {
            var t = this;
            null != this.littleTimer && this.littleTimer.cancel(),
            this.littleTimer = DUST.TimeManager.get().createTimer(1e3 * d.Param.LITTLE_INTERVAL, function() {
                t.resume()
            }, this),
            this.littleTimer.start()
        }
        ,
        p.prototype.pause = function() {
            this.paused = !0
        }
        ,
        p.prototype.resume = function() {
            this.paused = !1
        }
        ,
        p
    }(DUST.Scene);
    d.GameplayScene = t
}(GAME || (GAME = {})),
function(y) {
    var t = function(f) {
        function g() {
            var e = f.call(this, y.Game.get()) || this;
            g._INSTANCE = e,
            y.SoundManager.get();
            var t = y.Game.get().bounds
              , i = e
              , n = DUST.Sprite.fromFrame("game/assets/unpacked/background_gameplay.jpg");
            e.globalCont = new DUST.Container(934,1040),
            e.globalCont.x = -155,
            e.globalCont.addChild(n);
            var r = y.Param.PURPLE_BG;
            y.Param.PURPLE_HUD;
            switch (DUST.Random.intInRange(1, 5)) {
            case 2:
                r = y.Param.RED_BG,
                y.Param.RED_HUD;
                break;
            case 3:
                r = y.Param.BLUE_BG,
                y.Param.BLUE_HUD;
                break;
            case 4:
                r = y.Param.GREEN_BG,
                y.Param.GREEN_HUD;
                break;
            case 5:
                r = y.Param.BROWN_BG,
                y.Param.BROWN_HUD
            }
            n.tint = r;
            var o = DUST.Sprite.fromFrame("hud/main_shadow.png");
            934 < o.width && (o.scaleXY = 934 / o.width),
            o.x = (e.globalCont.width - o.width) / 2,
            o.y = e.globalCont.height - o.height,
            e.globalCont.addChild(o);
            var s = DUST.Sprite.fromFrame("hud/main_bottom.png");
            934 < s.width && (s.scaleXY = 934 / s.width),
            s.x = (e.globalCont.width - s.width) / 2,
            s.y = e.globalCont.height - s.height,
            e.globalCont.addChild(s);
            var a = DUST.Sprite.fromFrame("hud/logo.png");
            a.x = (e.globalCont.width - a.width) / 2,
            a.y = 80,
            e.globalCont.addChild(a),
            e.phoneCont = new DUST.Container(624,1040),
            e.phoneCont.x = 155,
            e.globalCont.addChild(e.phoneCont);
            var h = DUST.ImageButton.fromFrames("hud/button_play.png", "hud/button_play_pressed.png", "hud/button_play_hover.png");
            e.phoneCont.addChild(h),
            h.x = (t.width - h.width) / 2,
            h.y = (t.height - h.height) / 2,
            e.anim = DUST.Animation.fromFrames(y.ANIMS.ANIM_PLAY, "bt_play"),
            e.anim.x = h.x,
            e.anim.y = h.y,
            e.anim.animationSpeed = .33,
            e.phoneCont.addChild(e.anim),
            e.scheduleAnim(),
            e.TapText = y.factory.newText(y.I18N.get(y.I18NK.TAP_TO_PLAY)),
            e.TapText.setPivotToCenter(),
            e.TapText.x = t.width / 2,
            e.TapText.y = t.height / 2 + 200,
            e.phoneCont.addChild(e.TapText);
            var l = DUST.TweenManager.get().create(e.TapText);
            l.to({
                alpha: .2,
                scaleXY: .98
            }, 500, DUST.Easing.EaseIn),
            l.to({
                alpha: 1,
                scaleXY: 1.02
            }, 500, DUST.Easing.EaseIn),
            l.delay(300),
            l.repeat(-1),
            l.start(),
            e.TapText.detachListener.once(function() {
                l.stop()
            }),
            e.container.addChild(e.globalCont),
            h.onClick(function() {
                y.SoundManager.play("select"),
                i.launch()
            }),
            e.globalCont.onClick(function() {
                y.SoundManager.play("select"),
                i.launch()
            }),
            ship.ShipGs.get().playerManager.getPlayer(function(t) {
                DUST.I18N.setLocale(t.getLang()),
                e.refreshText()
            }),
            e.bestCont = new DUST.Container;
            y.Param.DECALAGE_BORD_BEST_SCORE;
            e.txtBest = y.factory.newText(y.I18N.get(y.I18NK.BEST) + " : "),
            e.txtBest.scaleXY = .5,
            e.bestCont.addChild(e.txtBest),
            e.best = 0;
            var u = ship.ShipGs.get().scoreManager.getBestScore("best") || 0;
            null != u && (e.best = u),
            e.scoreTxtBest = y.factory.newNumber(e.best.toString()),
            e.scoreTxtBest.scaleXY = .5,
            e.scoreTxtBest.x = e.txtBest.width + 10,
            e.bestCont.addChild(e.scoreTxtBest),
            e.txtBest.y = (e.scoreTxtBest.height - e.txtBest.height) / 2,
            e.bestCont.setPivotToCenter(),
            e.bestCont.x = e.phoneCont.width / 2,
            e.bestCont.y = 340,
            e.phoneCont.addChild(e.bestCont),
            0 == e.best && (e.bestCont.visible = !1),
            e.bt_tuto = DUST.ImageButton.fromFrames("hud/button_small.png", "hud/button_small_pressed.png", "hud/button_small_hover.png");
            var c = DUST.Sprite.fromFrame("hud/icon_tutorial.png");
            if (e.bt_tuto.setIcon(c),
            e.bt_tuto.x = y.Param.DECALAGE_BORD_BT_REPLAY,
            e.bt_tuto.y = y.Param.DECALAGE_BORD_BT_REPLAY,
            e.phoneCont.addChild(e.bt_tuto),
            e.bt_tuto.onClick(function() {
                i.tuto()
            }),
            "gd" == y.GAMECONFIG.publisher)
                try {
                    var p = ship.Ship.get().service
                      , d = DUST.Sprite.fromImage("https://gamebuilt.com/ext/gd/info_icon.png", !0);
                    d.onLoaded(function() {
                        d.scaleXY = .5,
                        d.x = 10,
                        d.y = y.Game.get().height - d.height - 10,
                        d.onClick(function() {
                            p.openInfoPopup()
                        })
                    }),
                    e.phoneCont.addChild(d)
                } catch (t) {
                    console.error(t)
                }
            return e.addVersion(),
            e.addFPSLogger(),
            e
        }
        return __extends(g, f),
        g.get = function() {
            return g._INSTANCE
        }
        ,
        g.prototype.launch = function() {
            y.si.startGame(function() {
                var t = new y.GameplayScene;
                y.Game.get().switchScene(t, !0, !0)
            })
        }
        ,
        g.prototype.scheduleAnim = function() {
            var t = this;
            this.cancelAnim(),
            null != this.animTimer && this.animTimer.cancel(),
            this.animTimer = DUST.TimeManager.get().createTimer(1e3 * y.Param.PLAY_ANIM_INTERVAL, function() {
                t.playAnim()
            }, this),
            this.animTimer.start()
        }
        ,
        g.prototype.cancelAnim = function() {
            null != this.animTimer && this.animTimer.cancel()
        }
        ,
        g.prototype.playAnim = function() {
            this.anim.play(),
            this.scheduleAnim()
        }
        ,
        g.prototype.update = function(t) {
            f.prototype.update.call(this, t)
        }
        ,
        g.prototype.render = function(t) {
            f.prototype.render.call(this, t)
        }
        ,
        g.prototype.onShow = function() {
            var e = 0;
            ship.ShipGs.get().playerManager.getPlayer(function(t) {
                e = t.getCreationDate()
            });
            var t = y.Helpers.getTimeMilli() - e;
            (t < 0 && (t = 0),
            t / 1e3 < 60 * y.Param.MINUTES_POUR_DEMANDER_LA_LANGUE) && (0 == this.best && (new y.LangagePopup).show())
        }
        ,
        g.prototype.addVersion = function() {
            var t = y.factory.newText(y.GAMECONFIG.gameVersion);
            t.scaleXY = .5,
            t.alpha = .7,
            t.tint = y.Param.BLACK,
            t.y = this.phoneCont.height - .5 * t.textHeight,
            t.x = this.phoneCont.width - .5 * t.textWidth,
            this.version = t,
            this.phoneCont.addChild(this.version)
        }
        ,
        g.prototype.refreshText = function() {
            this.TapText.text = y.I18N.get(y.I18NK.TAP_TO_PLAY),
            this.TapText.setPivotToCenter();
            var t = y.Game.get().bounds;
            this.TapText.x = t.width / 2,
            null != this.bt_lang && (this.bt_lang.visible = !1,
            this.bt_lang.removeSelf());
            var e = "hud/language_en.png"
              , i = "hud/language_en_pressed.png"
              , n = "hud/language_en_hover.png";
            "fr" == DUST.I18N.locale ? (e = "hud/language_fr.png",
            i = "hud/language_fr_pressed.png",
            n = "hud/language_fr_hover.png") : "ru" == DUST.I18N.locale && (e = "hud/language_ru.png",
            i = "hud/language_ru_pressed.png",
            n = "hud/language_ru_hover.png"),
            this.bt_lang = DUST.ImageButton.fromFrames(e, i, n),
            this.bt_lang.x = this.phoneCont.width - this.bt_lang.width - y.Param.DECALAGE_BORD_BT_REPLAY,
            this.bt_lang.y = 0 + y.Param.DECALAGE_BORD_BT_REPLAY,
            this.bt_lang.onClick(function() {
                (new y.LangagePopup).show()
            }),
            this.phoneCont.addChild(this.bt_lang)
        }
        ,
        g.prototype.tuto = function() {
            (new y.TutoPopup).show()
        }
        ,
        g.prototype.addFPSLogger = function() {
            if ("dummy" == ship.Ship.get().config.publisher) {
                var t = y.Game.get()
                  , e = !1
                  , i = 0
                  , n = 0
                  , r = new DUST.Container(50,50);
                r.x = t.bounds.width - 50,
                r.y = t.bounds.height - 50,
                r.onClick(function() {
                    if (!e && (0 < n && 1e3 < Date.now() - i && (n = 0),
                    n++,
                    i = Date.now(),
                    3 <= n)) {
                        var t = new DUST.FPSLogger(y.Game.get());
                        t.outputUI = !0,
                        t.outputConsole = !1,
                        t.container.x = -155,
                        t.container.y = 0,
                        t.start(),
                        e = !0
                    }
                }),
                t.layers.sceneHUD.addChild(r)
            }
        }
        ,
        g
    }(DUST.Scene);
    y.MenuScene = t
}(GAME || (GAME = {})),
function(p) {
    var t = function() {
        function c() {
            this.state = p.STATES.WAIT,
            (c._INSTANCE = this).ActualSelectedCaseX = -1,
            this.ActualSelectedCaseY = -1,
            this.ActualMax = p.Param.MAX_AT_START,
            this.score = 0,
            this.bestScore = ship.ShipGs.get().scoreManager.getBestScore("best") || 0
        }
        return c.get = function() {
            return c._INSTANCE
        }
        ,
        c.prototype.actualselectedCase = function(t, e) {
            var i = !1;
            this.ActualSelectedCaseX != t && (i = !0),
            this.ActualSelectedCaseY != e && (i = !0),
            this.ActualSelectedCaseX = t,
            this.ActualSelectedCaseY = e,
            1 == i && (p.Grid.get().cleanHighlights(),
            this.updateSelection())
        }
        ,
        c.prototype.releaseOnCase = function(t, e) {
            1 < p.Grid.get().actualSelectionSize && (this.state = p.STATES.TRANS_MERGE)
        }
        ,
        c.prototype.updateSelection = function() {
            p.Grid.get().cleanHighlights();
            var t = -1;
            -1 != this.ActualSelectedCaseX && -1 != this.ActualSelectedCaseY && (null != p.Grid.get().cases[this.ActualSelectedCaseX][this.ActualSelectedCaseY].actualElement ? t = p.Grid.get().cases[this.ActualSelectedCaseX][this.ActualSelectedCaseY].actualElement.value : console.error("notGood emptyCase when player can choose...")),
            -1 != t && p.Grid.get().updateSelection(this.ActualSelectedCaseX, this.ActualSelectedCaseY),
            p.GameplayContainer.get().render(-1)
        }
        ,
        c.prototype.clearSelection = function() {
            p.Grid.get().cleanHighlights(),
            this.ActualSelectedCaseX = -1,
            this.ActualSelectedCaseY = -1
        }
        ,
        c.prototype.updateMerge = function(t) {
            if (0 == p.Grid.get().actualSelectionMaxDist) {
                for (var e = p.Grid.get().actualSelectionSize, i = (s = p.Grid.get().elements).length - 1; 0 <= i; i--)
                    if (0 == s[i].distFromChoice && 0 == s[i].needRemove) {
                        var n = new DUST.Point(s[i].actualPosition.x * (p.Param.ELEMENT_SIZE + p.Param.MARGE_BETWEEN_ELEMENTS) + p.Param.MARGE_LEFT + p.Param.ELEMENT_SIZE / 2,s[i].actualPosition.y * (p.Param.ELEMENT_SIZE + p.Param.MARGE_BETWEEN_ELEMENTS) + p.Param.MARGE_TOP + p.Param.ELEMENT_SIZE / 2);
                        new p.ScoreEffect(n,s[i].value,p.GameplayContainer.get());
                        if (e *= s[i].value,
                        s[i].value++,
                        s[i].needRefresh = !0,
                        s[i].value > this.ActualMax) {
                            this.ActualMax = s[i].value,
                            p.DisplayContainer.get().render(this.ActualMax),
                            this.score += p.Param.SCORE_UNLOCKING_MONSTER[this.ActualMax - 1];
                            var r = this.getMissionId(this.ActualMax - 1);
                            null != r && ship.Ship.get().service.getApiMissionManager().submitMissions([r], null)
                        }
                    }
                c.get().score += e,
                p.ScoreContainer.get().updateScore(c.get().score),
                p.Grid.get().reinitSelection(),
                p.Grid.get().manageDrop();
                var o = p.Grid.get().checkLoose();
                c.get().state = 1 == o ? p.STATES.FINISH : p.STATES.TRANS_CHUTE
            } else {
                var s, a = p.Grid.get().actualSelectionMaxDist, h = !1;
                for (i = (s = p.Grid.get().elements).length - 1; 0 <= i; i--)
                    if (s[i].distFromChoice == a) {
                        if (s[i].actualPosition.x == s[i].wantedPosition.x && s[i].actualPosition.y == s[i].wantedPosition.y) {
                            s[i].wantedPosition = p.Grid.get().computeWantedPosition(s[i].actualPosition);
                            n = new DUST.Point(s[i].actualPosition.x * (p.Param.ELEMENT_SIZE + p.Param.MARGE_BETWEEN_ELEMENTS) + p.Param.MARGE_LEFT + p.Param.ELEMENT_SIZE / 2,s[i].actualPosition.y * (p.Param.ELEMENT_SIZE + p.Param.MARGE_BETWEEN_ELEMENTS) + p.Param.MARGE_TOP + p.Param.ELEMENT_SIZE / 2),
                            new p.ScoreEffect(n,s[i].value,p.GameplayContainer.get())
                        }
                        var l = p.Param.ELEMENT_SIZE + p.Param.MARGE_BETWEEN_ELEMENTS
                          , u = !0;
                        s[i].actualPosition.x < s[i].wantedPosition.x && (u = !1,
                        s[i].offsetX += p.Param.PIXEL_BY_SEC_MOVING_MERGE * t / 1e3,
                        s[i].offsetX >= l && (s[i].offsetX = l,
                        u = !0)),
                        s[i].actualPosition.x > s[i].wantedPosition.x && (u = !1,
                        s[i].offsetX -= p.Param.PIXEL_BY_SEC_MOVING_MERGE * t / 1e3,
                        s[i].offsetX <= -l && (s[i].offsetX = -l,
                        u = !0)),
                        s[i].actualPosition.y < s[i].wantedPosition.y && (u = !1,
                        s[i].offsetY += p.Param.PIXEL_BY_SEC_MOVING_MERGE * t / 1e3,
                        s[i].offsetY >= l && (s[i].offsetY = l,
                        u = !0)),
                        s[i].actualPosition.y > s[i].wantedPosition.y && (u = !1,
                        s[i].offsetY -= p.Param.PIXEL_BY_SEC_MOVING_MERGE * t / 1e3,
                        s[i].offsetY <= -l && (s[i].offsetY = -l,
                        u = !0)),
                        1 == u ? (p.Grid.get().cases[s[i].actualPosition.x][s[i].actualPosition.y].actualElement = null,
                        s[i].actualPosition = new DUST.Point(s[i].wantedPosition.x,s[i].wantedPosition.y),
                        s[i].wantedPosition = new DUST.Point(s[i].actualPosition.x,s[i].actualPosition.y),
                        s[i].offsetX = 0,
                        s[i].offsetY = 0,
                        s[i].distFromChoice--,
                        s[i].needRemove = !0) : h = !0
                    }
                if (0 == h) {
                    p.Grid.get().actualSelectionMaxDist--;
                    p.Grid.get().actualSelectionSize;
                    this.clearSelection()
                }
            }
        }
        ,
        c.prototype.getMissionId = function(t) {
            switch (t) {
            case 5:
                return "evolutionn_gmschh_va001";
            case 6:
                return "evolutionn_gmschh_va002";
            case 7:
                return "evolutionn_gmschh_va003";
            case 8:
                return "evolutionn_gmschh_va004";
            case 9:
                return "evolutionn_gmschh_va005";
            case 10:
                return "evolutionn_gmschh_va006";
            case 11:
                return "evolutionn_gmschh_va007"
            }
            return null
        }
        ,
        c.prototype.updateChute = function(t) {
            for (var e = !1, i = (r = p.Grid.get().elements).length - 1; 0 <= i; i--)
                r[i].actualPosition.y != r[i].wantedPosition.y && (e = !0);
            if (0 == e) {
                this.clearSelection(),
                p.Grid.get().reinitSelection();
                var n = p.Grid.get().checkLoose();
                c.get().state = 1 == n ? p.STATES.FINISH : p.STATES.WAIT
            } else {
                var r;
                for (i = (r = p.Grid.get().elements).length - 1; 0 <= i; i--)
                    if (r[i].actualPosition.y != r[i].wantedPosition.y) {
                        var o = (r[i].wantedPosition.y - r[i].actualPosition.y) * p.Param.ELEMENT_SIZE + p.Param.MARGE_BETWEEN_ELEMENTS
                          , s = !1;
                        r[i].offsetY += p.Param.PIXEL_BY_SEC_MOVING_DROP * t / 1e3,
                        r[i].offsetY >= o && (r[i].offsetY = o,
                        s = !0),
                        1 == s && (p.Grid.get().cases[r[i].wantedPosition.x][r[i].wantedPosition.y].actualElement = r[i],
                        r[i].actualPosition = new DUST.Point(r[i].wantedPosition.x,r[i].wantedPosition.y),
                        r[i].wantedPosition = new DUST.Point(r[i].actualPosition.x,r[i].actualPosition.y),
                        r[i].offsetX = 0,
                        r[i].offsetY = 0)
                    }
            }
        }
        ,
        c.prototype.render = function(t) {}
        ,
        c
    }();
    p.Gameplay = t
}(GAME || (GAME = {})),
function(t) {
    var e = function() {
        function t(t, e) {
            this.position = new DUST.Point(t,e),
            this.actualElement = null,
            this.highlighted = !1
        }
        return t.prototype.update = function(t) {}
        ,
        t.prototype.render = function(t) {}
        ,
        t.prototype.onShow = function() {}
        ,
        t
    }();
    t.Case = e
}(GAME || (GAME = {})),
function(r) {
    var t = function() {
        function t(t) {
            this.position = null != t ? t : new DUST.Point(DUST.Random.intInRange(10, 924),DUST.Random.intInRange(-800, 0));
            var e = "gameplay/confetti_1.png";
            switch (DUST.Random.intInRange(1, 3)) {
            case 2:
                e = "gameplay/confetti_2.png";
                break;
            case 3:
                e = "gameplay/confetti_3.png"
            }
            this.sprite = DUST.Sprite.fromFrame(e);
            var i = 11604231;
            switch (DUST.Random.intInRange(1, 4)) {
            case 2:
                i = 2601472;
                break;
            case 3:
                i = 16751872;
                break;
            case 4:
                i = 3431400
            }
            this.sprite.tint = i,
            this.sprite.setPivotToCenter(),
            this.sprite.rotation = DUST.Random.inRange(0, 1) * Math.PI,
            this.sprite.scaleX = DUST.Random.inRange(0, 1),
            this.sprite.scaleY = DUST.Random.inRange(0, 1),
            this.sprite.setPosition(this.position),
            this.sprite.alpha = 0,
            r.LoosePopup.get().animCont.addChild(this.sprite),
            this.rotateSpeed = DUST.Random.inRange(.2, 1),
            this.scaleXSpeed = DUST.Random.inRange(.2, 1),
            this.scaleYSpeed = DUST.Random.inRange(.2, 1),
            this.fallSpeed = DUST.Random.inRange(.5, 1);
            var n = DUST.TweenManager.get().create(this.sprite);
            n.to({
                alpha: 1
            }, r.Param.APPARITION_TIME, DUST.Easing.EaseIn),
            n.start()
        }
        return t.prototype.update = function(t) {
            this.sprite.y += this.fallSpeed * r.Param.FALL_PIXEL_MAX * t / 1e3,
            1100 < this.sprite.y && (this.sprite.y = -50),
            this.sprite.rotation += this.rotateSpeed * r.Param.ROTATION_MAX * t / 1e3,
            this.sprite.scaleX += this.scaleXSpeed * r.Param.SCALEX_SPEED_MAX * t / 1e3,
            0 < this.scaleXSpeed ? 1 < this.sprite.scaleX && (this.scaleXSpeed = -this.scaleXSpeed,
            this.sprite.scaleX = 1 - (this.sprite.scaleX - 1)) : this.sprite.scaleX < -1 && (this.scaleXSpeed = -this.scaleXSpeed,
            this.sprite.scaleX = -1 - (this.sprite.scaleX + 1)),
            this.sprite.scaleY += this.scaleYSpeed * r.Param.SCALEY_SPEED_MAX * t / 1e3,
            0 < this.scaleYSpeed ? 1 < this.sprite.scaleY && (this.scaleYSpeed = -this.scaleYSpeed,
            this.sprite.scaleY = 1 - (this.sprite.scaleY - 1)) : this.sprite.scaleY < -1 && (this.scaleYSpeed = -this.scaleYSpeed,
            this.sprite.scaleY = -1 - (this.sprite.scaleY + 1))
        }
        ,
        t.prototype.render = function(t) {}
        ,
        t.prototype.onShow = function() {}
        ,
        t
    }();
    r.Confetti = t
}(GAME || (GAME = {})),
function(r) {
    var t = function() {
        function t(t, e, i) {
            this.value = t,
            this.actualPosition = new DUST.Point(e,i),
            this.wantedPosition = new DUST.Point(e,i),
            this.offsetX = 0,
            this.offsetY = 0,
            this.needRemove = !1,
            this.needRefresh = !1,
            this.reinitSelection()
        }
        return t.prototype.updateContainer = function(t) {
            var e = null
              , i = null
              , n = this.value;
            switch (null != t && (n = t),
            n) {
            case 1:
                e = "gameplay/case_01.png",
                i = "gameplay/case_01_eyes.png";
                break;
            case 2:
                e = "gameplay/case_02.png",
                i = "gameplay/case_02_eyes.png";
                break;
            case 3:
                e = "gameplay/case_03.png",
                i = "gameplay/case_03_eyes.png";
                break;
            case 4:
                e = "gameplay/case_04.png",
                i = "gameplay/case_04_eyes.png";
                break;
            case 5:
                e = "gameplay/case_05.png",
                i = "gameplay/case_05_eyes.png";
                break;
            case 6:
                e = "gameplay/case_06.png",
                i = "gameplay/case_06_eyes.png";
                break;
            case 7:
                e = "gameplay/case_07.png",
                i = "gameplay/case_07_eyes.png";
                break;
            case 8:
                e = "gameplay/case_08.png",
                i = "gameplay/case_08_eyes.png";
                break;
            case 9:
                e = "gameplay/case_09.png",
                i = "gameplay/case_09_eyes.png";
                break;
            case 10:
                e = "gameplay/case_10.png",
                i = "gameplay/case_10_eyes.png";
                break;
            case 11:
                e = "gameplay/case_11.png",
                i = "gameplay/case_11_eyes.png";
                break;
            case 12:
                e = "gameplay/case_12.png",
                i = "gameplay/case_12_eyes.png"
            }
            null != e && (1 == this.needRefresh && (null != this.sprite && (this.sprite.removeSelf(),
            this.sprite = null),
            null != this.shadow && (this.shadow.removeSelf(),
            this.shadow = null),
            null != this.blink && (this.blink.removeSelf(),
            this.blink = null),
            this.container.removeSelf(),
            this.container = null,
            this.needRefresh = !1),
            null == this.container && (this.container = new DUST.Container(r.Param.ELEMENT_SIZE,r.Param.ELEMENT_SIZE),
            this.shadow = DUST.Sprite.fromFrame("gameplay/shadow.png"),
            this.shadow.x = 5,
            this.shadow.y = 90,
            this.container.addChild(this.shadow),
            this.sprite = DUST.Sprite.fromFrame(e),
            this.container.addChild(this.sprite),
            this.blink = DUST.Sprite.fromFrame(i),
            this.blink.visible = !1,
            this.container.addChild(this.blink),
            r.GameplayContainer.get().addChild(this.container),
            this.scheduleBlink()),
            this.container.x = this.actualPosition.x * (r.Param.ELEMENT_SIZE + r.Param.MARGE_BETWEEN_ELEMENTS) + r.Param.MARGE_LEFT + this.offsetX,
            this.container.y = this.actualPosition.y * (r.Param.ELEMENT_SIZE + r.Param.MARGE_BETWEEN_ELEMENTS) + r.Param.MARGE_TOP + this.offsetY,
            this.container.y -= r.Param.DECAL_MONSTERS)
        }
        ,
        t.prototype.select = function() {
            this.selectioned = !0
        }
        ,
        t.prototype.setDist = function(t) {
            this.distFromChoice = t
        }
        ,
        t.prototype.reinitSelection = function() {
            this.selectioned = !1,
            this.distFromChoice = -1
        }
        ,
        t.prototype.scheduleBlink = function() {
            var t = this;
            this.cancelBlink(),
            null != this.blinkTimer && this.blinkTimer.cancel();
            var e = 1e3 * DUST.Random.intInRange(r.Param.MIN_TIME_BETWEEN_BLINK, r.Param.MAX_TIME_BETWEEN_BLINK) + DUST.Random.intInRange(0, 999);
            this.blinkTimer = DUST.TimeManager.get().createTimer(e, function() {
                t.playBlink()
            }, this),
            this.blinkTimer.start()
        }
        ,
        t.prototype.scheduleBlinkEnd = function() {
            var t = this;
            this.cancelBlink(),
            null != this.blinkTimer && this.blinkTimer.cancel();
            var e = 1e3 * r.Param.BLINK_DURATION;
            this.blinkTimer = DUST.TimeManager.get().createTimer(e, function() {
                t.endBlink()
            }, this),
            this.blinkTimer.start()
        }
        ,
        t.prototype.cancelBlink = function() {
            null != this.blinkTimer && this.blinkTimer.cancel()
        }
        ,
        t.prototype.playBlink = function() {
            this.blink.visible = !0,
            this.scheduleBlinkEnd()
        }
        ,
        t.prototype.endBlink = function() {
            this.blink.visible = !1,
            this.scheduleBlink()
        }
        ,
        t.prototype.update = function(t) {}
        ,
        t.prototype.render = function(t) {}
        ,
        t.prototype.onShow = function() {}
        ,
        t.prototype.onHide = function() {
            this.cancelBlink()
        }
        ,
        t
    }();
    r.Element = t
}(GAME || (GAME = {})),
function(h) {
    var t = function() {
        function a() {
            (a._INSTANCE = this).cases = [[null, null, null, null, null], [null, null, null, null, null], [null, null, null, null, null], [null, null, null, null, null], [null, null, null, null, null]];
            for (var t = 0; t < h.Param.GRID_SIZE_WIDTH; t++)
                for (var e = 0; e < h.Param.GRID_SIZE_HEIGHT; e++)
                    this.cases[e][t] = new h.Case(t,e);
            this.actualSelectionSize = 0,
            this.actualSelectionMaxDist = 0,
            this.needAnOtherTurn = !1
        }
        return a.get = function() {
            return a._INSTANCE
        }
        ,
        a.prototype.update = function(t) {}
        ,
        a.prototype.render = function(t) {}
        ,
        a.prototype.onShow = function() {}
        ,
        a.prototype.init = function() {
            this.elements = [];
            for (var t = 0; t < h.Param.GRID_SIZE_WIDTH; t++)
                for (var e = 0; e < h.Param.GRID_SIZE_HEIGHT; e++) {
                    var i = DUST.Random.intInRange(1, h.Gameplay.get().ActualMax)
                      , n = new h.Element(i,t,e);
                    this.cases[t][e].actualElement = n,
                    this.elements.push(n)
                }
        }
        ,
        a.prototype.checkLoose = function() {
            for (var t = !0, e = 0; e < h.Param.GRID_SIZE_WIDTH; e++)
                for (var i = 0; i < h.Param.GRID_SIZE_HEIGHT; i++) {
                    var n = -1;
                    if (null != this.cases[e][i].actualElement && (n = this.cases[e][i].actualElement.value),
                    0 < e)
                        if (null != a.get().cases[e - 1][i].actualElement)
                            a.get().cases[e - 1][i].actualElement.value == n && (t = !1);
                    if (e < h.Param.GRID_SIZE_WIDTH - 1)
                        if (null != a.get().cases[e + 1][i].actualElement)
                            a.get().cases[e + 1][i].actualElement.value == n && (t = !1);
                    if (0 < i)
                        if (null != a.get().cases[e][i - 1].actualElement)
                            a.get().cases[e][i - 1].actualElement.value == n && (t = !1);
                    if (i < h.Param.GRID_SIZE_HEIGHT - 1)
                        if (null != a.get().cases[e][i + 1].actualElement)
                            a.get().cases[e][i + 1].actualElement.value == n && (t = !1)
                }
            return t
        }
        ,
        a.prototype.reinitneedAnOtherTurn = function() {
            this.needAnOtherTurn = !1
        }
        ,
        a.prototype.reinitSelection = function() {
            for (var t = 0; t < h.Param.GRID_SIZE_WIDTH; t++)
                for (var e = 0; e < h.Param.GRID_SIZE_HEIGHT; e++)
                    null != this.cases[e][t].actualElement && this.cases[e][t].actualElement.reinitSelection()
        }
        ,
        a.prototype.updateSelection = function(t, e) {
            this.actualSelectionSize = 0,
            this.actualSelectionMaxDist = 0,
            this.cleanHighlights(),
            this.reinitSelection();
            var i = this.cases[t][e].actualElement.value;
            this.reinitneedAnOtherTurn();
            var n = 0;
            if (this.cases[t][e].actualElement.setDist(n),
            this.testSel(t, e, i, n),
            1 == this.needAnOtherTurn) {
                for (; 1 == this.needAnOtherTurn; ) {
                    this.reinitneedAnOtherTurn(),
                    n++;
                    for (var r = 0; r < h.Param.GRID_SIZE_WIDTH; r++)
                        for (var o = 0; o < h.Param.GRID_SIZE_HEIGHT; o++)
                            this.testSel(r, o, i, n)
                }
                this.actualSelectionMaxDist = n
            } else
                this.cleanHighlights()
        }
        ,
        a.prototype.testSel = function(t, e, i, n) {
            var r = !0;
            if (t < 0 && (r = !1),
            t >= h.Param.GRID_SIZE_WIDTH && (r = !1),
            e < 0 && (r = !1),
            e >= h.Param.GRID_SIZE_HEIGHT && (r = !1),
            null == this.cases[t][e].actualElement && (r = !1),
            1 == r && this.cases[t][e].actualElement.distFromChoice == n && this.cases[t][e].actualElement.value == i) {
                this.actualSelectionSize++,
                this.cases[t][e].actualElement.select(),
                this.Highlight(t, e);
                var o = !1;
                if (0 < t)
                    if (null != a.get().cases[t - 1][e].actualElement)
                        if (-1 == a.get().cases[t - 1][e].actualElement.distFromChoice)
                            a.get().cases[t - 1][e].actualElement.value == i && (o = !0,
                            this.cases[t - 1][e].actualElement.setDist(n + 1));
                if (t < h.Param.GRID_SIZE_WIDTH - 1)
                    if (null != a.get().cases[t + 1][e].actualElement)
                        if (-1 == a.get().cases[t + 1][e].actualElement.distFromChoice)
                            a.get().cases[t + 1][e].actualElement.value == i && (o = !0,
                            this.cases[t + 1][e].actualElement.setDist(n + 1));
                if (0 < e)
                    if (null != a.get().cases[t][e - 1].actualElement)
                        if (-1 == a.get().cases[t][e - 1].actualElement.distFromChoice)
                            a.get().cases[t][e - 1].actualElement.value == i && (o = !0,
                            this.cases[t][e - 1].actualElement.setDist(n + 1));
                if (e < h.Param.GRID_SIZE_HEIGHT - 1)
                    if (null != a.get().cases[t][e + 1].actualElement)
                        if (-1 == a.get().cases[t][e + 1].actualElement.distFromChoice)
                            a.get().cases[t][e + 1].actualElement.value == i && (o = !0,
                            this.cases[t][e + 1].actualElement.setDist(n + 1));
                1 == o && (this.needAnOtherTurn = !0)
            }
        }
        ,
        a.prototype.computeWantedPosition = function(t) {
            var e = new DUST.Point(t.x,t.y);
            if (null != this.cases[t.x][t.y].actualElement) {
                var i = this.cases[t.x][t.y].actualElement.distFromChoice - 1
                  , n = !1;
                0 < t.x && null != this.cases[t.x - 1][t.y].actualElement && this.cases[t.x - 1][t.y].actualElement.distFromChoice == i && ("left",
                e.x--,
                n = !0),
                t.x < h.Param.GRID_SIZE_WIDTH - 1 && 0 == n && null != this.cases[t.x + 1][t.y].actualElement && this.cases[t.x + 1][t.y].actualElement.distFromChoice == i && ("right",
                e.x++,
                n = !0),
                0 < t.y && 0 == n && null != this.cases[t.x][t.y - 1].actualElement && this.cases[t.x][t.y - 1].actualElement.distFromChoice == i && ("top",
                e.y--,
                n = !0),
                t.y < h.Param.GRID_SIZE_HEIGHT - 1 && 0 == n && null != this.cases[t.x][t.y + 1].actualElement && this.cases[t.x][t.y + 1].actualElement.distFromChoice == i && ("bottom",
                e.y++,
                n = !0)
            }
            return e
        }
        ,
        a.prototype.manageDrop = function(t) {
            if (void 0 === t && (t = !1),
            t) {
                for (var e = 0; e < h.Param.GRID_SIZE_WIDTH; e++)
                    for (var i = h.Param.GRID_SIZE_HEIGHT - 1; 0 < i; i--)
                        if (null == this.cases[e][i].actualElement)
                            for (var n = i - 1; 0 <= n; n--)
                                if (null != this.cases[e][n].actualElement) {
                                    this.cases[e][i].actualElement = this.cases[e][n].actualElement,
                                    this.cases[e][i].actualElement.actualPosition = new DUST.Point(e,i),
                                    this.cases[e][i].actualElement.wantedPosition = new DUST.Point(e,i),
                                    this.cases[e][n].actualElement = null;
                                    break
                                }
                for (e = 0; e < h.Param.GRID_SIZE_WIDTH; e++)
                    for (i = h.Param.GRID_SIZE_HEIGHT - 1; 0 <= i; i--)
                        if (null == this.cases[e][i].actualElement)
                            for (var r = a.get().elements, o = 0; o < r.length; o++)
                                if (1 == r[o].needRemove) {
                                    var s = this.manageRandom();
                                    r[o].value = s,
                                    r[o].actualPosition.x = e,
                                    r[o].actualPosition.y = i,
                                    r[o].wantedPosition.x = e,
                                    r[o].wantedPosition.y = i,
                                    this.cases[e][i].actualElement = r[o],
                                    r[o].needRemove = !1,
                                    r[o].needRefresh = !0;
                                    break
                                }
            } else {
                for (e = 0; e < h.Param.GRID_SIZE_WIDTH; e++)
                    for (i = h.Param.GRID_SIZE_HEIGHT - 1; 0 < i; i--)
                        if (null == this.cases[e][i].actualElement)
                            for (n = i - 1; 0 <= n; n--)
                                if (null != this.cases[e][n].actualElement) {
                                    this.cases[e][i].actualElement = this.cases[e][n].actualElement,
                                    this.cases[e][i].actualElement.wantedPosition = new DUST.Point(e,i),
                                    this.cases[e][n].actualElement = null;
                                    break
                                }
                for (e = 0; e < h.Param.GRID_SIZE_WIDTH; e++)
                    for (i = h.Param.GRID_SIZE_HEIGHT - 1; 0 <= i; i--)
                        if (null == this.cases[e][i].actualElement)
                            for (r = a.get().elements,
                            o = 0; o < r.length; o++)
                                if (1 == r[o].needRemove) {
                                    s = this.manageRandom();
                                    r[o].value = s,
                                    r[o].actualPosition.x = e,
                                    r[o].actualPosition.y = i - 5,
                                    r[o].wantedPosition.x = e,
                                    r[o].wantedPosition.y = i,
                                    this.cases[e][i].actualElement = r[o],
                                    r[o].needRemove = !1,
                                    r[o].needRefresh = !0;
                                    break
                                }
            }
        }
        ,
        a.prototype.manageRandom = function() {
            return DUST.Random.intInRange(1, h.Gameplay.get().ActualMax - 1)
        }
        ,
        a.prototype.manageFill = function() {
            for (var t = a.get().elements, e = t.length - 1; 0 <= e; e--)
                t[e].needRemove && t.splice(e, 1)
        }
        ,
        a.prototype.cleanHighlights = function() {
            for (var t = 0; t < h.Param.GRID_SIZE_WIDTH; t++)
                for (var e = 0; e < h.Param.GRID_SIZE_HEIGHT; e++)
                    this.cases[e][t].highlighted = !1;
            h.GameplayContainer.get().render(-1)
        }
        ,
        a.prototype.Highlight = function(t, e) {
            this.cases[t][e].highlighted = !0
        }
        ,
        a
    }();
    h.Grid = t
}(GAME || (GAME = {})),
function(o) {
    var t = function() {
        function t(t, e, i) {
            null != t ? this.position = t : console.error("Wrong position");
            var n = "";
            n = 0 < e ? "+" + e : "-" + e,
            this.text = o.factory.newText(n),
            this.text.setPivotToCenter(),
            this.text.setPosition(t),
            this.text.x += i.x,
            this.text.y += i.y,
            o.TopContainer.get().container.addChild(this.text);
            var r = DUST.TweenManager.get().create(this.text);
            r.to({
                scaleXY: 1.2
            }, o.Param.APPARITION_TIME / 2, DUST.Easing.EaseIn),
            r.to({
                y: t.y - 100,
                alpha: 0
            }, o.Param.APPARITION_TIME, DUST.Easing.EaseIn),
            r.start(),
            r.onComplete = this.destroy.bind(this)
        }
        return t.prototype.update = function(t) {}
        ,
        t.prototype.render = function(t) {}
        ,
        t.prototype.onShow = function() {}
        ,
        t.prototype.destroy = function() {
            this.text.removeSelf(),
            this.text.destroy()
        }
        ,
        t
    }();
    o.ScoreEffect = t
}(GAME || (GAME = {})),
function(d) {
    var t = function(c) {
        function p(t, e, i) {
            var n = c.call(this, t, e) || this;
            p._INSTANCE = n;
            var r = DUST.Sprite.fromFrame("unlock/unlock_bg.png");
            r.x = d.Param.DECALAGE_BORD_BT_REPLAY,
            r.y = (n.height - r.height) / 2,
            r.tint = i,
            n.addChild(r),
            n.elementsCont = new DUST.Container(r.width,r.height),
            r.addChild(n.elementsCont),
            n.effectsCont = new DUST.Container(r.width,r.height),
            r.addChild(n.effectsCont),
            n.elemShadows = [],
            n.elemSprites = [];
            for (var o = 0; o < d.Param.TOTAL_MONSTERS; o++) {
                var s = null
                  , a = null;
                switch (o + 1) {
                case 1:
                    s = "unlock/unlock1_2.png",
                    a = "unlock/unlock1.png";
                    break;
                case 2:
                    s = "unlock/unlock2_2.png",
                    a = "unlock/unlock2.png";
                    break;
                case 3:
                    s = "unlock/unlock3_2.png",
                    a = "unlock/unlock3.png";
                    break;
                case 4:
                    s = "unlock/unlock4_2.png",
                    a = "unlock/unlock4.png";
                    break;
                case 5:
                    s = "unlock/unlock5_2.png",
                    a = "unlock/unlock5.png";
                    break;
                case 6:
                    s = "unlock/unlock6_2.png",
                    a = "unlock/unlock6.png";
                    break;
                case 7:
                    s = "unlock/unlock7_2.png",
                    a = "unlock/unlock7.png";
                    break;
                case 8:
                    s = "unlock/unlock8_2.png",
                    a = "unlock/unlock8.png";
                    break;
                case 9:
                    s = "unlock/unlock9_2.png",
                    a = "unlock/unlock9.png";
                    break;
                case 10:
                    s = "unlock/unlock10_2.png",
                    a = "unlock/unlock10.png";
                    break;
                case 11:
                    s = "unlock/unlock11_2.png",
                    a = "unlock/unlock11.png";
                    break;
                case 12:
                    s = "unlock/unlock12_2.png",
                    a = "unlock/unlock12.png"
                }
                n.elemShadows[o] = DUST.Sprite.fromFrame(s),
                n.elemSprites[o] = DUST.Sprite.fromFrame(a),
                n.elemShadows[o].setPivotToCenter(),
                n.elemSprites[o].setPivotToCenter();
                var h = 50 + o % 6 * 75
                  , l = 0;
                o >= d.Param.TOTAL_MONSTERS / 2 && (l = 1);
                var u = 10 + 85 * l;
                n.elemShadows[o].x = h,
                n.elemShadows[o].y = u,
                n.elemSprites[o].x = h,
                n.elemSprites[o].y = u,
                n.elemSprites[o].visible = !1
            }
            for (o = 0; o < d.Param.TOTAL_MONSTERS; o++)
                n.elementsCont.addChild(n.elemShadows[o]);
            for (o = 0; o < d.Param.TOTAL_MONSTERS; o++)
                n.elementsCont.addChild(n.elemSprites[o]);
            return n.needScore = -1,
            n
        }
        return __extends(p, c),
        p.get = function() {
            return p._INSTANCE
        }
        ,
        p.prototype.update = function(t) {}
        ,
        p.prototype.render = function(t) {
            for (var e = 0; e < d.Param.TOTAL_MONSTERS; e++)
                e < t && (this.elemSprites[e].visible = !0,
                this.elemShadows[e].visible = !1);
            if (3 < t) {
                this.elemSprites[t - 1].scaleXY = 3,
                this.elemShadows[t - 1].visible = !1;
                var i = DUST.TweenManager.get().create(this.elemSprites[t - 1]);
                i.to({
                    scaleXY: 1
                }, d.Param.APPARITION_TIME, DUST.Easing.EaseIn),
                i.start(),
                i.onComplete = this.addScore.bind(this),
                this.needScore = t
            }
        }
        ,
        p.prototype.addScore = function() {
            if (-1 != this.needScore) {
                var t = new DUST.Point(this.elemSprites[this.needScore - 1].x,this.elemSprites[this.needScore - 1].y)
                  , e = new DUST.Point(p.get().x + p.get().elementsCont.x + this.elemSprites[this.needScore - 1].width,p.get().y + p.get().elementsCont.y);
                new d.ScoreEffect(t,d.Param.SCORE_UNLOCKING_MONSTER[this.needScore - 1],e);
                this.needScore = -1
            }
        }
        ,
        p.prototype.onShow = function() {}
        ,
        p
    }(DUST.Container);
    d.DisplayContainer = t
}(GAME || (GAME = {})),
function(u) {
    var t = function(h) {
        function l(t, e, i) {
            var n = h.call(this, t, e) || this;
            l._INSTANCE = n;
            var r = DUST.Sprite.fromFrame("gameplay/grille.png");
            r.tint = i,
            n.addChildAt(r, 0),
            n.highlightCont = new DUST.Container(t,e),
            n.addChildAt(n.highlightCont, 1),
            n.elementsCont = new DUST.Container(t,e),
            n.addChildAt(n.elementsCont, 2),
            n.highlights = [[null, null, null, null, null], [null, null, null, null, null], [null, null, null, null, null], [null, null, null, null, null], [null, null, null, null, null]];
            for (var o = 0; o < u.Param.GRID_SIZE_WIDTH; o++)
                for (var s = 0; s < u.Param.GRID_SIZE_HEIGHT; s++) {
                    var a = DUST.Sprite.fromFrame("gameplay/highlight.png");
                    a.x = o * (u.Param.ELEMENT_SIZE + u.Param.MARGE_BETWEEN_ELEMENTS) + u.Param.MARGE_LEFT,
                    a.y = s * (u.Param.ELEMENT_SIZE + u.Param.MARGE_BETWEEN_ELEMENTS) + u.Param.MARGE_TOP,
                    a.visible = !1,
                    n.highlights[o][s] = a,
                    n.highlightCont.addChild(n.highlights[o][s])
                }
            return n.effectsCont = new DUST.Container(t,e),
            n.addChild(n.effectsCont),
            n
        }
        return __extends(l, h),
        l.get = function() {
            return l._INSTANCE
        }
        ,
        l.prototype.update = function(t) {}
        ,
        l.prototype.setHUDTint = function(t) {}
        ,
        l.prototype.renderSimple = function() {
            for (var t = u.Grid.get().elements, e = 0; e < t.length; e++)
                t[e].updateContainer()
        }
        ,
        l.prototype.render = function(t) {
            this.renderSimple();
            for (var e = 0; e < u.Param.GRID_SIZE_HEIGHT; e++)
                for (var i = 0; i < u.Param.GRID_SIZE_WIDTH; i++) {
                    var n = u.Grid.get().cases[i][e].highlighted;
                    this.highlights[i][e].visible = 1 == n
                }
        }
        ,
        l.prototype.onShow = function() {}
        ,
        l
    }(DUST.Container);
    u.GameplayContainer = t
}(GAME || (GAME = {})),
function(l) {
    var t = function(a) {
        function h(t, e) {
            var i = a.call(this, t, e) || this;
            (h._INSTANCE = i).bg = new DUST.Container(624,208),
            i.addChild(i.bg);
            var n = l.factory.newText(l.I18N.get(l.I18NK.SCORE));
            n.y = 50,
            n.centerX = t / 2,
            i.bg.addChild(n),
            i.scoreTxt = l.factory.newNumber("0"),
            i.scoreTxt.y = 100,
            i.scoreTxt.centerX = t / 2,
            i.bg.addChild(i.scoreTxt),
            i.bestCont = new DUST.Container;
            l.Param.DECALAGE_BORD_BEST_SCORE;
            var r = l.factory.newText(l.I18N.get(l.I18NK.BEST) + " : ");
            r.scaleXY = .5,
            i.bestCont.addChild(r);
            var o = 0
              , s = l.Gameplay.get().bestScore;
            return null != s && (o = s),
            i.scoreTxtBest = l.factory.newNumber(o.toString()),
            i.scoreTxtBest.scaleXY = .5,
            i.scoreTxtBest.x = r.width + 10,
            i.bestCont.addChild(i.scoreTxtBest),
            r.y = (i.scoreTxtBest.height - r.height) / 2,
            i.bestCont.setPivotToCenter(),
            i.bestCont.x = i.bg.width / 2,
            i.bestCont.y = i.bestCont.height / 2 + l.Param.DECALAGE_BORD_BEST_SCORE,
            i.bg.addChild(i.bestCont),
            0 == o && (i.bestCont.visible = !1),
            i
        }
        return __extends(h, a),
        h.prototype.updateScore = function(t) {
            this.scoreTxt.text = t.toString(),
            this.scoreTxt.centerX = this.width / 2;
            var e = l.Gameplay.get().bestScore
        }
        ,
        h.get = function() {
            return h._INSTANCE
        }
        ,
        h.prototype.update = function(t) {}
        ,
        h.prototype.render = function(t) {}
        ,
        h.prototype.onShow = function() {}
        ,
        h
    }(DUST.Container);
    l.ScoreContainer = t
}(GAME || (GAME = {})),
function(t) {
    var e = function(n) {
        function r(t, e) {
            var i = n.call(this, t, e) || this;
            return (r._INSTANCE = i).container = new DUST.Container(t,e),
            i.addChild(i.container),
            i
        }
        return __extends(r, n),
        r.get = function() {
            return r._INSTANCE
        }
        ,
        r.prototype.update = function(t) {}
        ,
        r.prototype.render = function(t) {}
        ,
        r.prototype.onShow = function() {}
        ,
        r
    }(DUST.Container);
    t.TopContainer = e
}(GAME || (GAME = {})),
function(s) {
    var t = function(r) {
        function o() {
            var t = r.call(this) || this;
            t.saveToProfile = !0,
            (o._INSTANCE = t).bg = new DUST.Container(934,1040),
            t.bg.x = -155,
            t.addChild(t.bg),
            t.popup = DUST.Sprite.fromFrame("hud/popup_small.png"),
            t.bgPopup = new DUST.Container(t.popup.width,t.popup.height),
            t.bgPopup.x = (934 - t.popup.width) / 2,
            t.bgPopup.y = (1040 - t.popup.height) / 2,
            t.bgPopup.addChild(t.popup),
            t.bg.addChild(t.bgPopup);
            var e = s.factory.newText(s.I18N.get(s.I18NK.SELECT_LANGAGE));
            e.y = 50,
            e.centerX = t.bgPopup.width / 2,
            t.bgPopup.addChild(e);
            t.bt_en = DUST.ImageButton.fromFrames("hud/language_en.png", "hud/language_en_pressed.png", "hud/language_en_hover.png");
            var i = (t.popup.width - 3 * t.bt_en.width) / 4;
            t.bt_en.x = i,
            t.bt_en.y = 130,
            t.bgPopup.addChild(t.bt_en),
            t.bt_fr = DUST.ImageButton.fromFrames("hud/language_fr.png", "hud/language_fr_pressed.png", "hud/language_fr_hover.png"),
            t.bt_fr.x = t.bt_en.x + t.bt_en.width + i,
            t.bt_fr.y = 130,
            t.bgPopup.addChild(t.bt_fr),
            t.bt_ru = DUST.ImageButton.fromFrames("hud/language_ru.png", "hud/language_ru_pressed.png", "hud/language_ru_hover.png"),
            t.bt_ru.x = t.bt_fr.x + t.bt_fr.width + i,
            t.bt_ru.y = 130,
            t.bgPopup.addChild(t.bt_ru);
            var n = t;
            return t.bt_en.onClick(function() {
                n.onLangSelected("en"),
                n.close(),
                s.MenuScene.get().refreshText(),
                s.Game.get().askedlang = !0
            }),
            t.bt_fr.onClick(function() {
                n.onLangSelected("fr"),
                n.close(),
                s.MenuScene.get().refreshText(),
                s.Game.get().askedlang = !0
            }),
            t.bt_ru.onClick(function() {
                n.onLangSelected("ru"),
                n.close(),
                s.MenuScene.get().refreshText(),
                s.Game.get().askedlang = !0
            }),
            t.bg.onClick(function() {}),
            t
        }
        return __extends(o, r),
        o.get = function() {
            return o._INSTANCE
        }
        ,
        o.prototype.update = function(t) {}
        ,
        o.prototype.render = function(t) {}
        ,
        o.prototype.onClickEn = function() {}
        ,
        o.prototype.onLangSelected = function(i) {
            if (this.saveToProfile) {
                DUST.I18N.setLocale(i);
                var n = ship.ShipGs.get().playerManager;
                n.getPlayer(function(t) {
                    t.setLang(i);
                    var e = new gs.SPlayer;
                    e.setLang(i),
                    n.savePlayerDiff(e)
                })
            }
        }
        ,
        o
    }(DUST.Popup);
    s.LangagePopup = t
}(GAME || (GAME = {})),
function(h) {
    var t = function(s) {
        function a() {
            var t = s.call(this) || this;
            (a._INSTANCE = t).bg = new DUST.Container(934,1040),
            t.bg.x = -155,
            t.addChild(t.bg),
            t.animCont = new DUST.Container(934,1040),
            t.bg.addChild(t.animCont),
            t.popup = DUST.Sprite.fromFrame("hud/popup_big.png"),
            t.bgPopup = new DUST.Container(t.popup.width,t.popup.height),
            t.bgPopup.x = (934 - t.popup.width) / 2,
            t.bgPopup.y = (1040 - t.popup.height) / 2,
            t.bgPopup.addChild(t.popup),
            t.bg.addChild(t.bgPopup);
            var e = h.factory.newText(h.I18N.get(h.I18NK.GAME_OVER));
            e.y = 50,
            e.centerX = t.bgPopup.width / 2,
            t.bgPopup.addChild(e);
            var i = h.factory.newText(h.I18N.get(h.I18NK.SCORE));
            i.y = 150,
            i.centerX = t.bgPopup.width / 2,
            t.bgPopup.addChild(i),
            t.scoreTxt = h.factory.newNumber("0"),
            t.scoreTxt.y = 200,
            t.scoreTxt.centerX = t.bgPopup.width / 2,
            t.bgPopup.addChild(t.scoreTxt);
            var n = DUST.ImageButton.fromFrames("hud/button_small.png", "hud/button_small_pressed.png", "hud/button_small_hover.png")
              , r = DUST.Sprite.fromFrame("hud/icon_restart.png");
            n.setIcon(r),
            n.scaleXY = 1.2,
            n.x = 300,
            n.y = 400;
            var o = t;
            return n.onClick(function() {
                o.restart()
            }),
            t.bgPopup.addChild(n),
            t.isBestScore = !1,
            t.confet = [],
            shipuidust.crosspromo.Diaporama.get().show(),
            t
        }
        return __extends(a, s),
        a.prototype.updateScore = function(t) {
            this.scoreTxt.text = t.toString(),
            this.scoreTxt.centerX = this.bgPopup.width / 2
        }
        ,
        a.prototype.isBest = function(t) {
            if (1 == t) {
                ship.Ship.get().service.getApiScoreManager().submitHighscore(h.Gameplay.get().bestScore, "best"),
                ship.ShipGs.get().scoreManager.submitScore("best", h.Gameplay.get().bestScore);
                var e = h.factory.newText(h.I18N.get(h.I18NK.NEW_BEST));
                e.setPivotToCenter(),
                e.y = this.bgPopup.y + 320 + e.height / 2,
                e.x = this.bg.width / 2,
                e.scaleXY = 3,
                this.bg.addChild(e);
                var i = DUST.TweenManager.get().create(e);
                i.to({
                    scaleXY: 1
                }, h.Param.APPARITION_TIME, DUST.Easing.EaseIn),
                i.start(),
                this.isBestScore = !0;
                for (var n = 0; n < h.Param.NB_CONFET; n++)
                    this.confet[n] = new h.Confetti
            } else {
                var r = h.factory.newText(h.I18N.get(h.I18NK.BEST) + " : " + h.Gameplay.get().bestScore.toString());
                r.y = 320,
                r.centerX = this.bgPopup.width / 2,
                this.bgPopup.addChild(r)
            }
        }
        ,
        a.prototype.maxMob = function(t) {
            var e = null;
            switch (t) {
            case 1:
                e = "gameplay/case_01.png";
                break;
            case 2:
                e = "gameplay/case_02.png";
                break;
            case 3:
                e = "gameplay/case_03.png";
                break;
            case 4:
                e = "gameplay/case_04.png";
                break;
            case 5:
                e = "gameplay/case_05.png";
                break;
            case 6:
                e = "gameplay/case_06.png";
                break;
            case 7:
                e = "gameplay/case_07.png";
                break;
            case 8:
                e = "gameplay/case_08.png";
                break;
            case 9:
                e = "gameplay/case_09.png";
                break;
            case 10:
                e = "gameplay/case_10.png";
                break;
            case 11:
                e = "gameplay/case_11.png";
                break;
            case 12:
                e = "gameplay/case_12.png"
            }
            if (null != e) {
                var i = new DUST.Container(h.Param.ELEMENT_SIZE,h.Param.ELEMENT_SIZE)
                  , n = DUST.Sprite.fromFrame("gameplay/shadow.png");
                n.x = 5,
                n.y = 90,
                i.addChild(n);
                var r = DUST.Sprite.fromFrame(e);
                i.addChild(r),
                i.y = 420,
                i.x = 100,
                this.bgPopup.addChild(i)
            }
        }
        ,
        a.get = function() {
            return a._INSTANCE
        }
        ,
        a.prototype.update = function(t) {
            if (1 == this.isBestScore)
                for (var e = 0; e < h.Param.NB_CONFET; e++)
                    this.confet[e].update(t)
        }
        ,
        a.prototype.render = function(t) {}
        ,
        a.prototype.onShow = function() {}
        ,
        a.prototype.restart = function() {
            this.close(),
            this.isBestScore = !1,
            h.si.endGame(!0, function() {
                var t = new h.GameplayScene;
                h.Game.get().switchScene(t)
            })
        }
        ,
        a.prototype.goToHome = function() {
            this.close(),
            this.isBestScore = !1,
            h.si.endGame(!1, function() {
                var t = new h.MenuScene;
                h.Game.get().switchScene(t)
            })
        }
        ,
        a
    }(DUST.Popup);
    h.LoosePopup = t
}(GAME || (GAME = {})),
function(t) {
    var e = function(r) {
        function o(t, e) {
            var i = r.call(this) || this
              , n = o._INSTANCE = i;
            return i.bg = new DUST.Container(934,1040),
            i.bg.x = -155,
            i.addChild(i.bg),
            i.popup = DUST.Sprite.fromFrame("hud/popup_small.png"),
            i.bgPopup = new DUST.Container(i.popup.width,i.popup.height),
            i.bgPopup.x = (934 - i.popup.width) / 2,
            i.bgPopup.y = (1040 - i.popup.height) / 2,
            i.bgPopup.addChild(i.popup),
            i.bg.addChild(i.bgPopup),
            i.tuto = DUST.Sprite.fromFrame("hud/tutorial.png"),
            i.tuto.x = (i.bgPopup.width - i.tuto.width) / 2,
            i.tuto.y = (i.bgPopup.height - i.tuto.height) / 2,
            i.popup.addChild(i.tuto),
            i.bg.onImmediateClick(function() {
                n.close(),
                null != t && (null != e ? t.apply(e, null) : t.apply(n, null))
            }),
            i
        }
        return __extends(o, r),
        o.get = function() {
            return o._INSTANCE
        }
        ,
        o.prototype.update = function(t) {}
        ,
        o.prototype.render = function(t) {}
        ,
        o
    }(DUST.Popup);
    t.TutoPopup = e
}(GAME || (GAME = {}));
/*! howler.js v2.1.1 | (c) 2013-2018, James Simpson of GoldFire Studios | MIT License | howlerjs.com */
!function() {
    "use strict";
    var e = function() {
        this.init()
    };
    e.prototype = {
        init: function() {
            var e = this || n;
            return e._counter = 1e3,
            e._html5AudioPool = [],
            e.html5PoolSize = 10,
            e._codecs = {},
            e._howls = [],
            e._muted = !1,
            e._volume = 1,
            e._canPlayEvent = "canplaythrough",
            e._navigator = "undefined" != typeof window && window.navigator ? window.navigator : null,
            e.masterGain = null,
            e.noAudio = !1,
            e.usingWebAudio = !0,
            e.autoSuspend = !0,
            e.ctx = null,
            e.autoUnlock = !0,
            e._setup(),
            e
        },
        volume: function(e) {
            var o = this || n;
            if (e = parseFloat(e),
            o.ctx || _(),
            void 0 !== e && e >= 0 && e <= 1) {
                if (o._volume = e,
                o._muted)
                    return o;
                o.usingWebAudio && o.masterGain.gain.setValueAtTime(e, n.ctx.currentTime);
                for (var t = 0; t < o._howls.length; t++)
                    if (!o._howls[t]._webAudio)
                        for (var r = o._howls[t]._getSoundIds(), a = 0; a < r.length; a++) {
                            var u = o._howls[t]._soundById(r[a]);
                            u && u._node && (u._node.volume = u._volume * e)
                        }
                return o
            }
            return o._volume
        },
        mute: function(e) {
            var o = this || n;
            o.ctx || _(),
            o._muted = e,
            o.usingWebAudio && o.masterGain.gain.setValueAtTime(e ? 0 : o._volume, n.ctx.currentTime);
            for (var t = 0; t < o._howls.length; t++)
                if (!o._howls[t]._webAudio)
                    for (var r = o._howls[t]._getSoundIds(), a = 0; a < r.length; a++) {
                        var u = o._howls[t]._soundById(r[a]);
                        u && u._node && (u._node.muted = !!e || u._muted)
                    }
            return o
        },
        unload: function() {
            for (var e = this || n, o = e._howls.length - 1; o >= 0; o--)
                e._howls[o].unload();
            return e.usingWebAudio && e.ctx && void 0 !== e.ctx.close && (e.ctx.close(),
            e.ctx = null,
            _()),
            e
        },
        codecs: function(e) {
            return (this || n)._codecs[e.replace(/^x-/, "")]
        },
        _setup: function() {
            var e = this || n;
            if (e.state = e.ctx ? e.ctx.state || "suspended" : "suspended",
            e._autoSuspend(),
            !e.usingWebAudio)
                if ("undefined" != typeof Audio)
                    try {
                        var o = new Audio;
                        void 0 === o.oncanplaythrough && (e._canPlayEvent = "canplay")
                    } catch (n) {
                        e.noAudio = !0
                    }
                else
                    e.noAudio = !0;
            try {
                var o = new Audio;
                o.muted && (e.noAudio = !0)
            } catch (e) {}
            return e.noAudio || e._setupCodecs(),
            e
        },
        _setupCodecs: function() {
            var e = this || n
              , o = null;
            try {
                o = "undefined" != typeof Audio ? new Audio : null
            } catch (n) {
                return e
            }
            if (!o || "function" != typeof o.canPlayType)
                return e;
            var t = o.canPlayType("audio/mpeg;").replace(/^no$/, "")
              , r = e._navigator && e._navigator.userAgent.match(/OPR\/([0-6].)/g)
              , a = r && parseInt(r[0].split("/")[1], 10) < 33;
            return e._codecs = {
                mp3: !(a || !t && !o.canPlayType("audio/mp3;").replace(/^no$/, "")),
                mpeg: !!t,
                opus: !!o.canPlayType('audio/ogg; codecs="opus"').replace(/^no$/, ""),
                ogg: !!o.canPlayType('audio/ogg; codecs="vorbis"').replace(/^no$/, ""),
                oga: !!o.canPlayType('audio/ogg; codecs="vorbis"').replace(/^no$/, ""),
                wav: !!o.canPlayType('audio/wav; codecs="1"').replace(/^no$/, ""),
                aac: !!o.canPlayType("audio/aac;").replace(/^no$/, ""),
                caf: !!o.canPlayType("audio/x-caf;").replace(/^no$/, ""),
                m4a: !!(o.canPlayType("audio/x-m4a;") || o.canPlayType("audio/m4a;") || o.canPlayType("audio/aac;")).replace(/^no$/, ""),
                mp4: !!(o.canPlayType("audio/x-mp4;") || o.canPlayType("audio/mp4;") || o.canPlayType("audio/aac;")).replace(/^no$/, ""),
                weba: !!o.canPlayType('audio/webm; codecs="vorbis"').replace(/^no$/, ""),
                webm: !!o.canPlayType('audio/webm; codecs="vorbis"').replace(/^no$/, ""),
                dolby: !!o.canPlayType('audio/mp4; codecs="ec-3"').replace(/^no$/, ""),
                flac: !!(o.canPlayType("audio/x-flac;") || o.canPlayType("audio/flac;")).replace(/^no$/, "")
            },
            e
        },
        _unlockAudio: function() {
            var e = this || n
              , o = /iPhone|iPad|iPod|Android|BlackBerry|BB10|Silk|Mobi|Chrome|Safari/i.test(e._navigator && e._navigator.userAgent);
            if (!e._audioUnlocked && e.ctx && o) {
                e._audioUnlocked = !1,
                e.autoUnlock = !1,
                e._mobileUnloaded || 44100 === e.ctx.sampleRate || (e._mobileUnloaded = !0,
                e.unload()),
                e._scratchBuffer = e.ctx.createBuffer(1, 1, 22050);
                var t = function(n) {
                    for (var o = 0; o < e.html5PoolSize; o++) {
                        var r = new Audio;
                        r._unlocked = !0,
                        e._releaseHtml5Audio(r)
                    }
                    for (var o = 0; o < e._howls.length; o++)
                        if (!e._howls[o]._webAudio)
                            for (var a = e._howls[o]._getSoundIds(), u = 0; u < a.length; u++) {
                                var i = e._howls[o]._soundById(a[u]);
                                i && i._node && !i._node._unlocked && (i._node._unlocked = !0,
                                i._node.load())
                            }
                    e._autoResume();
                    var d = e.ctx.createBufferSource();
                    d.buffer = e._scratchBuffer,
                    d.connect(e.ctx.destination),
                    void 0 === d.start ? d.noteOn(0) : d.start(0),
                    "function" == typeof e.ctx.resume && e.ctx.resume(),
                    d.onended = function() {
                        d.disconnect(0),
                        e._audioUnlocked = !0,
                        document.removeEventListener("touchstart", t, !0),
                        document.removeEventListener("touchend", t, !0),
                        document.removeEventListener("click", t, !0);
                        for (var n = 0; n < e._howls.length; n++)
                            e._howls[n]._emit("unlock")
                    }
                };
                return document.addEventListener("touchstart", t, !0),
                document.addEventListener("touchend", t, !0),
                document.addEventListener("click", t, !0),
                e
            }
        },
        _obtainHtml5Audio: function() {
            var e = this || n;
            if (e._html5AudioPool.length)
                return e._html5AudioPool.pop();
            var o = (new Audio).play();
            return o && "undefined" != typeof Promise && (o instanceof Promise || "function" == typeof o.then) && o.catch(function() {
                console.warn("HTML5 Audio pool exhausted, returning potentially locked audio object.")
            }),
            new Audio
        },
        _releaseHtml5Audio: function(e) {
            var o = this || n;
            return e._unlocked && o._html5AudioPool.push(e),
            o
        },
        _autoSuspend: function() {
            var e = this;
            if (e.autoSuspend && e.ctx && void 0 !== e.ctx.suspend && n.usingWebAudio) {
                for (var o = 0; o < e._howls.length; o++)
                    if (e._howls[o]._webAudio)
                        for (var t = 0; t < e._howls[o]._sounds.length; t++)
                            if (!e._howls[o]._sounds[t]._paused)
                                return e;
                return e._suspendTimer && clearTimeout(e._suspendTimer),
                e._suspendTimer = setTimeout(function() {
                    e.autoSuspend && (e._suspendTimer = null,
                    e.state = "suspending",
                    e.ctx.suspend().then(function() {
                        e.state = "suspended",
                        e._resumeAfterSuspend && (delete e._resumeAfterSuspend,
                        e._autoResume())
                    }))
                }, 3e4),
                e
            }
        },
        _autoResume: function() {
            var e = this;
            if (e.ctx && void 0 !== e.ctx.resume && n.usingWebAudio)
                return "running" === e.state && e._suspendTimer ? (clearTimeout(e._suspendTimer),
                e._suspendTimer = null) : "suspended" === e.state ? (e.ctx.resume().then(function() {
                    e.state = "running";
                    for (var n = 0; n < e._howls.length; n++)
                        e._howls[n]._emit("resume")
                }),
                e._suspendTimer && (clearTimeout(e._suspendTimer),
                e._suspendTimer = null)) : "suspending" === e.state && (e._resumeAfterSuspend = !0),
                e
        }
    };
    var n = new e
      , o = function(e) {
        var n = this;
        if (!e.src || 0 === e.src.length)
            return void console.error("An array of source files must be passed with any new Howl.");
        n.init(e)
    };
    o.prototype = {
        init: function(e) {
            var o = this;
            return n.ctx || _(),
            o._autoplay = e.autoplay || !1,
            o._format = "string" != typeof e.format ? e.format : [e.format],
            o._html5 = e.html5 || !1,
            o._muted = e.mute || !1,
            o._loop = e.loop || !1,
            o._pool = e.pool || 5,
            o._preload = "boolean" != typeof e.preload || e.preload,
            o._rate = e.rate || 1,
            o._sprite = e.sprite || {},
            o._src = "string" != typeof e.src ? e.src : [e.src],
            o._volume = void 0 !== e.volume ? e.volume : 1,
            o._xhrWithCredentials = e.xhrWithCredentials || !1,
            o._duration = 0,
            o._state = "unloaded",
            o._sounds = [],
            o._endTimers = {},
            o._queue = [],
            o._playLock = !1,
            o._onend = e.onend ? [{
                fn: e.onend
            }] : [],
            o._onfade = e.onfade ? [{
                fn: e.onfade
            }] : [],
            o._onload = e.onload ? [{
                fn: e.onload
            }] : [],
            o._onloaderror = e.onloaderror ? [{
                fn: e.onloaderror
            }] : [],
            o._onplayerror = e.onplayerror ? [{
                fn: e.onplayerror
            }] : [],
            o._onpause = e.onpause ? [{
                fn: e.onpause
            }] : [],
            o._onplay = e.onplay ? [{
                fn: e.onplay
            }] : [],
            o._onstop = e.onstop ? [{
                fn: e.onstop
            }] : [],
            o._onmute = e.onmute ? [{
                fn: e.onmute
            }] : [],
            o._onvolume = e.onvolume ? [{
                fn: e.onvolume
            }] : [],
            o._onrate = e.onrate ? [{
                fn: e.onrate
            }] : [],
            o._onseek = e.onseek ? [{
                fn: e.onseek
            }] : [],
            o._onunlock = e.onunlock ? [{
                fn: e.onunlock
            }] : [],
            o._onresume = [],
            o._webAudio = n.usingWebAudio && !o._html5,
            void 0 !== n.ctx && n.ctx && n.autoUnlock && n._unlockAudio(),
            n._howls.push(o),
            o._autoplay && o._queue.push({
                event: "play",
                action: function() {
                    o.play()
                }
            }),
            o._preload && o.load(),
            o
        },
        load: function() {
            var e = this
              , o = null;
            if (n.noAudio)
                return void e._emit("loaderror", null, "No audio support.");
            "string" == typeof e._src && (e._src = [e._src]);
            for (var r = 0; r < e._src.length; r++) {
                var u, i;
                if (e._format && e._format[r])
                    u = e._format[r];
                else {
                    if ("string" != typeof (i = e._src[r])) {
                        e._emit("loaderror", null, "Non-string found in selected audio sources - ignoring.");
                        continue
                    }
                    u = /^data:audio\/([^;,]+);/i.exec(i),
                    u || (u = /\.([^.]+)$/.exec(i.split("?", 1)[0])),
                    u && (u = u[1].toLowerCase())
                }
                if (u || console.warn('No file extension was found. Consider using the "format" property or specify an extension.'),
                u && n.codecs(u)) {
                    o = e._src[r];
                    break
                }
            }
            return o ? (e._src = o,
            e._state = "loading",
            "https:" === window.location.protocol && "http:" === o.slice(0, 5) && (e._html5 = !0,
            e._webAudio = !1),
            new t(e),
            e._webAudio && a(e),
            e) : void e._emit("loaderror", null, "No codec support for selected audio sources.")
        },
        play: function(e, o) {
            var t = this
              , r = null;
            if ("number" == typeof e)
                r = e,
                e = null;
            else {
                if ("string" == typeof e && "loaded" === t._state && !t._sprite[e])
                    return null;
                if (void 0 === e && (e = "__default",
                !t._playLock)) {
                    for (var a = 0, u = 0; u < t._sounds.length; u++)
                        t._sounds[u]._paused && !t._sounds[u]._ended && (a++,
                        r = t._sounds[u]._id);
                    1 === a ? e = null : r = null
                }
            }
            var i = r ? t._soundById(r) : t._inactiveSound();
            if (!i)
                return null;
            if (r && !e && (e = i._sprite || "__default"),
            "loaded" !== t._state) {
                i._sprite = e,
                i._ended = !1;
                var d = i._id;
                return t._queue.push({
                    event: "play",
                    action: function() {
                        t.play(d)
                    }
                }),
                d
            }
            if (r && !i._paused)
                return o || t._loadQueue("play"),
                i._id;
            t._webAudio && n._autoResume();
            var _ = Math.max(0, i._seek > 0 ? i._seek : t._sprite[e][0] / 1e3)
              , s = Math.max(0, (t._sprite[e][0] + t._sprite[e][1]) / 1e3 - _)
              , l = 1e3 * s / Math.abs(i._rate)
              , c = t._sprite[e][0] / 1e3
              , f = (t._sprite[e][0] + t._sprite[e][1]) / 1e3
              , p = !(!i._loop && !t._sprite[e][2]);
            i._sprite = e,
            i._ended = !1;
            var m = function() {
                i._paused = !1,
                i._seek = _,
                i._start = c,
                i._stop = f,
                i._loop = p
            };
            if (_ >= f)
                return void t._ended(i);
            var v = i._node;
            if (t._webAudio) {
                var h = function() {
                    t._playLock = !1,
                    m(),
                    t._refreshBuffer(i);
                    var e = i._muted || t._muted ? 0 : i._volume;
                    v.gain.setValueAtTime(e, n.ctx.currentTime),
                    i._playStart = n.ctx.currentTime,
                    void 0 === v.bufferSource.start ? i._loop ? v.bufferSource.noteGrainOn(0, _, 86400) : v.bufferSource.noteGrainOn(0, _, s) : i._loop ? v.bufferSource.start(0, _, 86400) : v.bufferSource.start(0, _, s),
                    l !== 1 / 0 && (t._endTimers[i._id] = setTimeout(t._ended.bind(t, i), l)),
                    o || setTimeout(function() {
                        t._emit("play", i._id),
                        t._loadQueue()
                    }, 0)
                };
                "running" === n.state ? h() : (t._playLock = !0,
                t.once("resume", h),
                t._clearTimer(i._id))
            } else {
                var y = function() {
                    v.currentTime = _,
                    v.muted = i._muted || t._muted || n._muted || v.muted,
                    v.volume = i._volume * n.volume(),
                    v.playbackRate = i._rate;
                    try {
                        var r = v.play();
                        if (r && "undefined" != typeof Promise && (r instanceof Promise || "function" == typeof r.then) ? (t._playLock = !0,
                        m(),
                        r.then(function() {
                            t._playLock = !1,
                            v._unlocked = !0,
                            o || (t._emit("play", i._id),
                            t._loadQueue())
                        }).catch(function() {
                            t._playLock = !1,
                            t._emit("playerror", i._id, "Playback was unable to start. This is most commonly an issue on mobile devices and Chrome where playback was not within a user interaction."),
                            i._ended = !0,
                            i._paused = !0
                        })) : o || (t._playLock = !1,
                        m(),
                        t._emit("play", i._id),
                        t._loadQueue()),
                        v.playbackRate = i._rate,
                        v.paused)
                            return void t._emit("playerror", i._id, "Playback was unable to start. This is most commonly an issue on mobile devices and Chrome where playback was not within a user interaction.");
                        "__default" !== e || i._loop ? t._endTimers[i._id] = setTimeout(t._ended.bind(t, i), l) : (t._endTimers[i._id] = function() {
                            t._ended(i),
                            v.removeEventListener("ended", t._endTimers[i._id], !1)
                        }
                        ,
                        v.addEventListener("ended", t._endTimers[i._id], !1))
                    } catch (e) {
                        t._emit("playerror", i._id, e)
                    }
                }
                  , g = window && window.ejecta || !v.readyState && n._navigator.isCocoonJS;
                if (v.readyState >= 3 || g)
                    y();
                else {
                    t._playLock = !0;
                    var b = function() {
                        y(),
                        v.removeEventListener(n._canPlayEvent, b, !1)
                    };
                    v.addEventListener(n._canPlayEvent, b, !1),
                    t._clearTimer(i._id)
                }
            }
            return i._id
        },
        pause: function(e) {
            var n = this;
            if ("loaded" !== n._state || n._playLock)
                return n._queue.push({
                    event: "pause",
                    action: function() {
                        n.pause(e)
                    }
                }),
                n;
            for (var o = n._getSoundIds(e), t = 0; t < o.length; t++) {
                n._clearTimer(o[t]);
                var r = n._soundById(o[t]);
                if (r && !r._paused && (r._seek = n.seek(o[t]),
                r._rateSeek = 0,
                r._paused = !0,
                n._stopFade(o[t]),
                r._node))
                    if (n._webAudio) {
                        if (!r._node.bufferSource)
                            continue;
                        void 0 === r._node.bufferSource.stop ? r._node.bufferSource.noteOff(0) : r._node.bufferSource.stop(0),
                        n._cleanBuffer(r._node)
                    } else
                        isNaN(r._node.duration) && r._node.duration !== 1 / 0 || r._node.pause();
                arguments[1] || n._emit("pause", r ? r._id : null)
            }
            return n
        },
        stop: function(e, n) {
            var o = this;
            if ("loaded" !== o._state || o._playLock)
                return o._queue.push({
                    event: "stop",
                    action: function() {
                        o.stop(e)
                    }
                }),
                o;
            for (var t = o._getSoundIds(e), r = 0; r < t.length; r++) {
                o._clearTimer(t[r]);
                var a = o._soundById(t[r]);
                a && (a._seek = a._start || 0,
                a._rateSeek = 0,
                a._paused = !0,
                a._ended = !0,
                o._stopFade(t[r]),
                a._node && (o._webAudio ? a._node.bufferSource && (void 0 === a._node.bufferSource.stop ? a._node.bufferSource.noteOff(0) : a._node.bufferSource.stop(0),
                o._cleanBuffer(a._node)) : isNaN(a._node.duration) && a._node.duration !== 1 / 0 || (a._node.currentTime = a._start || 0,
                a._node.pause())),
                n || o._emit("stop", a._id))
            }
            return o
        },
        mute: function(e, o) {
            var t = this;
            if ("loaded" !== t._state || t._playLock)
                return t._queue.push({
                    event: "mute",
                    action: function() {
                        t.mute(e, o)
                    }
                }),
                t;
            if (void 0 === o) {
                if ("boolean" != typeof e)
                    return t._muted;
                t._muted = e
            }
            for (var r = t._getSoundIds(o), a = 0; a < r.length; a++) {
                var u = t._soundById(r[a]);
                u && (u._muted = e,
                u._interval && t._stopFade(u._id),
                t._webAudio && u._node ? u._node.gain.setValueAtTime(e ? 0 : u._volume, n.ctx.currentTime) : u._node && (u._node.muted = !!n._muted || e),
                t._emit("mute", u._id))
            }
            return t
        },
        volume: function() {
            var e, o, t = this, r = arguments;
            if (0 === r.length)
                return t._volume;
            if (1 === r.length || 2 === r.length && void 0 === r[1]) {
                t._getSoundIds().indexOf(r[0]) >= 0 ? o = parseInt(r[0], 10) : e = parseFloat(r[0])
            } else
                r.length >= 2 && (e = parseFloat(r[0]),
                o = parseInt(r[1], 10));
            var a;
            if (!(void 0 !== e && e >= 0 && e <= 1))
                return a = o ? t._soundById(o) : t._sounds[0],
                a ? a._volume : 0;
            if ("loaded" !== t._state || t._playLock)
                return t._queue.push({
                    event: "volume",
                    action: function() {
                        t.volume.apply(t, r)
                    }
                }),
                t;
            void 0 === o && (t._volume = e),
            o = t._getSoundIds(o);
            for (var u = 0; u < o.length; u++)
                (a = t._soundById(o[u])) && (a._volume = e,
                r[2] || t._stopFade(o[u]),
                t._webAudio && a._node && !a._muted ? a._node.gain.setValueAtTime(e, n.ctx.currentTime) : a._node && !a._muted && (a._node.volume = e * n.volume()),
                t._emit("volume", a._id));
            return t
        },
        fade: function(e, o, t, r) {
            var a = this;
            if ("loaded" !== a._state || a._playLock)
                return a._queue.push({
                    event: "fade",
                    action: function() {
                        a.fade(e, o, t, r)
                    }
                }),
                a;
            e = parseFloat(e),
            o = parseFloat(o),
            t = parseFloat(t),
            a.volume(e, r);
            for (var u = a._getSoundIds(r), i = 0; i < u.length; i++) {
                var d = a._soundById(u[i]);
                if (d) {
                    if (r || a._stopFade(u[i]),
                    a._webAudio && !d._muted) {
                        var _ = n.ctx.currentTime
                          , s = _ + t / 1e3;
                        d._volume = e,
                        d._node.gain.setValueAtTime(e, _),
                        d._node.gain.linearRampToValueAtTime(o, s)
                    }
                    a._startFadeInterval(d, e, o, t, u[i], void 0 === r)
                }
            }
            return a
        },
        _startFadeInterval: function(e, n, o, t, r, a) {
            var u = this
              , i = n
              , d = o - n
              , _ = Math.abs(d / .01)
              , s = Math.max(4, _ > 0 ? t / _ : t)
              , l = Date.now();
            e._fadeTo = o,
            e._interval = setInterval(function() {
                var r = (Date.now() - l) / t;
                l = Date.now(),
                i += d * r,
                i = Math.max(0, i),
                i = Math.min(1, i),
                i = Math.round(100 * i) / 100,
                u._webAudio ? e._volume = i : u.volume(i, e._id, !0),
                a && (u._volume = i),
                (o < n && i <= o || o > n && i >= o) && (clearInterval(e._interval),
                e._interval = null,
                e._fadeTo = null,
                u.volume(o, e._id),
                u._emit("fade", e._id))
            }, s)
        },
        _stopFade: function(e) {
            var o = this
              , t = o._soundById(e);
            return t && t._interval && (o._webAudio && t._node.gain.cancelScheduledValues(n.ctx.currentTime),
            clearInterval(t._interval),
            t._interval = null,
            o.volume(t._fadeTo, e),
            t._fadeTo = null,
            o._emit("fade", e)),
            o
        },
        loop: function() {
            var e, n, o, t = this, r = arguments;
            if (0 === r.length)
                return t._loop;
            if (1 === r.length) {
                if ("boolean" != typeof r[0])
                    return !!(o = t._soundById(parseInt(r[0], 10))) && o._loop;
                e = r[0],
                t._loop = e
            } else
                2 === r.length && (e = r[0],
                n = parseInt(r[1], 10));
            for (var a = t._getSoundIds(n), u = 0; u < a.length; u++)
                (o = t._soundById(a[u])) && (o._loop = e,
                t._webAudio && o._node && o._node.bufferSource && (o._node.bufferSource.loop = e,
                e && (o._node.bufferSource.loopStart = o._start || 0,
                o._node.bufferSource.loopEnd = o._stop)));
            return t
        },
        rate: function() {
            var e, o, t = this, r = arguments;
            if (0 === r.length)
                o = t._sounds[0]._id;
            else if (1 === r.length) {
                var a = t._getSoundIds()
                  , u = a.indexOf(r[0]);
                u >= 0 ? o = parseInt(r[0], 10) : e = parseFloat(r[0])
            } else
                2 === r.length && (e = parseFloat(r[0]),
                o = parseInt(r[1], 10));
            var i;
            if ("number" != typeof e)
                return i = t._soundById(o),
                i ? i._rate : t._rate;
            if ("loaded" !== t._state || t._playLock)
                return t._queue.push({
                    event: "rate",
                    action: function() {
                        t.rate.apply(t, r)
                    }
                }),
                t;
            void 0 === o && (t._rate = e),
            o = t._getSoundIds(o);
            for (var d = 0; d < o.length; d++)
                if (i = t._soundById(o[d])) {
                    t.playing(o[d]) && (i._rateSeek = t.seek(o[d]),
                    i._playStart = t._webAudio ? n.ctx.currentTime : i._playStart),
                    i._rate = e,
                    t._webAudio && i._node && i._node.bufferSource ? i._node.bufferSource.playbackRate.setValueAtTime(e, n.ctx.currentTime) : i._node && (i._node.playbackRate = e);
                    var _ = t.seek(o[d])
                      , s = (t._sprite[i._sprite][0] + t._sprite[i._sprite][1]) / 1e3 - _
                      , l = 1e3 * s / Math.abs(i._rate);
                    !t._endTimers[o[d]] && i._paused || (t._clearTimer(o[d]),
                    t._endTimers[o[d]] = setTimeout(t._ended.bind(t, i), l)),
                    t._emit("rate", i._id)
                }
            return t
        },
        seek: function() {
            var e, o, t = this, r = arguments;
            if (0 === r.length)
                o = t._sounds[0]._id;
            else if (1 === r.length) {
                var a = t._getSoundIds()
                  , u = a.indexOf(r[0]);
                u >= 0 ? o = parseInt(r[0], 10) : t._sounds.length && (o = t._sounds[0]._id,
                e = parseFloat(r[0]))
            } else
                2 === r.length && (e = parseFloat(r[0]),
                o = parseInt(r[1], 10));
            if (void 0 === o)
                return t;
            if ("loaded" !== t._state || t._playLock)
                return t._queue.push({
                    event: "seek",
                    action: function() {
                        t.seek.apply(t, r)
                    }
                }),
                t;
            var i = t._soundById(o);
            if (i) {
                if (!("number" == typeof e && e >= 0)) {
                    if (t._webAudio) {
                        var d = t.playing(o) ? n.ctx.currentTime - i._playStart : 0
                          , _ = i._rateSeek ? i._rateSeek - i._seek : 0;
                        return i._seek + (_ + d * Math.abs(i._rate))
                    }
                    return i._node.currentTime
                }
                var s = t.playing(o);
                s && t.pause(o, !0),
                i._seek = e,
                i._ended = !1,
                t._clearTimer(o),
                t._webAudio || !i._node || isNaN(i._node.duration) || (i._node.currentTime = e);
                var l = function() {
                    t._emit("seek", o),
                    s && t.play(o, !0)
                };
                if (s && !t._webAudio) {
                    var c = function() {
                        t._playLock ? setTimeout(c, 0) : l()
                    };
                    setTimeout(c, 0)
                } else
                    l()
            }
            return t
        },
        playing: function(e) {
            var n = this;
            if ("number" == typeof e) {
                var o = n._soundById(e);
                return !!o && !o._paused
            }
            for (var t = 0; t < n._sounds.length; t++)
                if (!n._sounds[t]._paused)
                    return !0;
            return !1
        },
        duration: function(e) {
            var n = this
              , o = n._duration
              , t = n._soundById(e);
            return t && (o = n._sprite[t._sprite][1] / 1e3),
            o
        },
        state: function() {
            return this._state
        },
        unload: function() {
            for (var e = this, o = e._sounds, t = 0; t < o.length; t++) {
                if (o[t]._paused || e.stop(o[t]._id),
                !e._webAudio) {
                    /MSIE |Trident\//.test(n._navigator && n._navigator.userAgent) || (o[t]._node.src = "data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA"),
                    o[t]._node.removeEventListener("error", o[t]._errorFn, !1),
                    o[t]._node.removeEventListener(n._canPlayEvent, o[t]._loadFn, !1),
                    n._releaseHtml5Audio(o[t]._node)
                }
                delete o[t]._node,
                e._clearTimer(o[t]._id)
            }
            var a = n._howls.indexOf(e);
            a >= 0 && n._howls.splice(a, 1);
            var u = !0;
            for (t = 0; t < n._howls.length; t++)
                if (n._howls[t]._src === e._src || e._src.indexOf(n._howls[t]._src) >= 0) {
                    u = !1;
                    break
                }
            return r && u && delete r[e._src],
            n.noAudio = !1,
            e._state = "unloaded",
            e._sounds = [],
            e = null,
            null
        },
        on: function(e, n, o, t) {
            var r = this
              , a = r["_on" + e];
            return "function" == typeof n && a.push(t ? {
                id: o,
                fn: n,
                once: t
            } : {
                id: o,
                fn: n
            }),
            r
        },
        off: function(e, n, o) {
            var t = this
              , r = t["_on" + e]
              , a = 0;
            if ("number" == typeof n && (o = n,
            n = null),
            n || o)
                for (a = 0; a < r.length; a++) {
                    var u = o === r[a].id;
                    if (n === r[a].fn && u || !n && u) {
                        r.splice(a, 1);
                        break
                    }
                }
            else if (e)
                t["_on" + e] = [];
            else {
                var i = Object.keys(t);
                for (a = 0; a < i.length; a++)
                    0 === i[a].indexOf("_on") && Array.isArray(t[i[a]]) && (t[i[a]] = [])
            }
            return t
        },
        once: function(e, n, o) {
            var t = this;
            return t.on(e, n, o, 1),
            t
        },
        _emit: function(e, n, o) {
            for (var t = this, r = t["_on" + e], a = r.length - 1; a >= 0; a--)
                r[a].id && r[a].id !== n && "load" !== e || (setTimeout(function(e) {
                    e.call(this, n, o)
                }
                .bind(t, r[a].fn), 0),
                r[a].once && t.off(e, r[a].fn, r[a].id));
            return t._loadQueue(e),
            t
        },
        _loadQueue: function(e) {
            var n = this;
            if (n._queue.length > 0) {
                var o = n._queue[0];
                o.event === e && (n._queue.shift(),
                n._loadQueue()),
                e || o.action()
            }
            return n
        },
        _ended: function(e) {
            var o = this
              , t = e._sprite;
            if (!o._webAudio && e._node && !e._node.paused && !e._node.ended && e._node.currentTime < e._stop)
                return setTimeout(o._ended.bind(o, e), 100),
                o;
            var r = !(!e._loop && !o._sprite[t][2]);
            if (o._emit("end", e._id),
            !o._webAudio && r && o.stop(e._id, !0).play(e._id),
            o._webAudio && r) {
                o._emit("play", e._id),
                e._seek = e._start || 0,
                e._rateSeek = 0,
                e._playStart = n.ctx.currentTime;
                var a = 1e3 * (e._stop - e._start) / Math.abs(e._rate);
                o._endTimers[e._id] = setTimeout(o._ended.bind(o, e), a)
            }
            return o._webAudio && !r && (e._paused = !0,
            e._ended = !0,
            e._seek = e._start || 0,
            e._rateSeek = 0,
            o._clearTimer(e._id),
            o._cleanBuffer(e._node),
            n._autoSuspend()),
            o._webAudio || r || o.stop(e._id, !0),
            o
        },
        _clearTimer: function(e) {
            var n = this;
            if (n._endTimers[e]) {
                if ("function" != typeof n._endTimers[e])
                    clearTimeout(n._endTimers[e]);
                else {
                    var o = n._soundById(e);
                    o && o._node && o._node.removeEventListener("ended", n._endTimers[e], !1)
                }
                delete n._endTimers[e]
            }
            return n
        },
        _soundById: function(e) {
            for (var n = this, o = 0; o < n._sounds.length; o++)
                if (e === n._sounds[o]._id)
                    return n._sounds[o];
            return null
        },
        _inactiveSound: function() {
            var e = this;
            e._drain();
            for (var n = 0; n < e._sounds.length; n++)
                if (e._sounds[n]._ended)
                    return e._sounds[n].reset();
            return new t(e)
        },
        _drain: function() {
            var e = this
              , n = e._pool
              , o = 0
              , t = 0;
            if (!(e._sounds.length < n)) {
                for (t = 0; t < e._sounds.length; t++)
                    e._sounds[t]._ended && o++;
                for (t = e._sounds.length - 1; t >= 0; t--) {
                    if (o <= n)
                        return;
                    e._sounds[t]._ended && (e._webAudio && e._sounds[t]._node && e._sounds[t]._node.disconnect(0),
                    e._sounds.splice(t, 1),
                    o--)
                }
            }
        },
        _getSoundIds: function(e) {
            var n = this;
            if (void 0 === e) {
                for (var o = [], t = 0; t < n._sounds.length; t++)
                    o.push(n._sounds[t]._id);
                return o
            }
            return [e]
        },
        _refreshBuffer: function(e) {
            var o = this;
            return e._node.bufferSource = n.ctx.createBufferSource(),
            e._node.bufferSource.buffer = r[o._src],
            e._panner ? e._node.bufferSource.connect(e._panner) : e._node.bufferSource.connect(e._node),
            e._node.bufferSource.loop = e._loop,
            e._loop && (e._node.bufferSource.loopStart = e._start || 0,
            e._node.bufferSource.loopEnd = e._stop || 0),
            e._node.bufferSource.playbackRate.setValueAtTime(e._rate, n.ctx.currentTime),
            o
        },
        _cleanBuffer: function(e) {
            var o = this
              , t = n._navigator && n._navigator.vendor.indexOf("Apple") >= 0;
            if (n._scratchBuffer && e.bufferSource && (e.bufferSource.onended = null,
            e.bufferSource.disconnect(0),
            t))
                try {
                    e.bufferSource.buffer = n._scratchBuffer
                } catch (e) {}
            return e.bufferSource = null,
            o
        }
    };
    var t = function(e) {
        this._parent = e,
        this.init()
    };
    t.prototype = {
        init: function() {
            var e = this
              , o = e._parent;
            return e._muted = o._muted,
            e._loop = o._loop,
            e._volume = o._volume,
            e._rate = o._rate,
            e._seek = 0,
            e._paused = !0,
            e._ended = !0,
            e._sprite = "__default",
            e._id = ++n._counter,
            o._sounds.push(e),
            e.create(),
            e
        },
        create: function() {
            var e = this
              , o = e._parent
              , t = n._muted || e._muted || e._parent._muted ? 0 : e._volume;
            return o._webAudio ? (e._node = void 0 === n.ctx.createGain ? n.ctx.createGainNode() : n.ctx.createGain(),
            e._node.gain.setValueAtTime(t, n.ctx.currentTime),
            e._node.paused = !0,
            e._node.connect(n.masterGain)) : (e._node = n._obtainHtml5Audio(),
            e._errorFn = e._errorListener.bind(e),
            e._node.addEventListener("error", e._errorFn, !1),
            e._loadFn = e._loadListener.bind(e),
            e._node.addEventListener(n._canPlayEvent, e._loadFn, !1),
            e._node.src = o._src,
            e._node.preload = "auto",
            e._node.volume = t * n.volume(),
            e._node.load()),
            e
        },
        reset: function() {
            var e = this
              , o = e._parent;
            return e._muted = o._muted,
            e._loop = o._loop,
            e._volume = o._volume,
            e._rate = o._rate,
            e._seek = 0,
            e._rateSeek = 0,
            e._paused = !0,
            e._ended = !0,
            e._sprite = "__default",
            e._id = ++n._counter,
            e
        },
        _errorListener: function() {
            var e = this;
            e._parent._emit("loaderror", e._id, e._node.error ? e._node.error.code : 0),
            e._node.removeEventListener("error", e._errorFn, !1)
        },
        _loadListener: function() {
            var e = this
              , o = e._parent;
            o._duration = Math.ceil(10 * e._node.duration) / 10,
            0 === Object.keys(o._sprite).length && (o._sprite = {
                __default: [0, 1e3 * o._duration]
            }),
            "loaded" !== o._state && (o._state = "loaded",
            o._emit("load"),
            o._loadQueue()),
            e._node.removeEventListener(n._canPlayEvent, e._loadFn, !1)
        }
    };
    var r = {}
      , a = function(e) {
        var n = e._src;
        if (r[n])
            return e._duration = r[n].duration,
            void d(e);
        if (/^data:[^;]+;base64,/.test(n)) {
            for (var o = atob(n.split(",")[1]), t = new Uint8Array(o.length), a = 0; a < o.length; ++a)
                t[a] = o.charCodeAt(a);
            i(t.buffer, e)
        } else {
            var _ = new XMLHttpRequest;
            _.open("GET", n, !0),
            _.withCredentials = e._xhrWithCredentials,
            _.responseType = "arraybuffer",
            _.onload = function() {
                var n = (_.status + "")[0];
                if ("0" !== n && "2" !== n && "3" !== n)
                    return void e._emit("loaderror", null, "Failed loading audio file with status: " + _.status + ".");
                i(_.response, e)
            }
            ,
            _.onerror = function() {
                e._webAudio && (e._html5 = !0,
                e._webAudio = !1,
                e._sounds = [],
                delete r[n],
                e.load())
            }
            ,
            u(_)
        }
    }
      , u = function(e) {
        try {
            e.send()
        } catch (n) {
            e.onerror()
        }
    }
      , i = function(e, o) {
        var t = function() {
            o._emit("loaderror", null, "Decoding audio data failed.")
        }
          , a = function(e) {
            e && o._sounds.length > 0 ? (r[o._src] = e,
            d(o, e)) : t()
        };
        "undefined" != typeof Promise && 1 === n.ctx.decodeAudioData.length ? n.ctx.decodeAudioData(e).then(a).catch(t) : n.ctx.decodeAudioData(e, a, t)
    }
      , d = function(e, n) {
        n && !e._duration && (e._duration = n.duration),
        0 === Object.keys(e._sprite).length && (e._sprite = {
            __default: [0, 1e3 * e._duration]
        }),
        "loaded" !== e._state && (e._state = "loaded",
        e._emit("load"),
        e._loadQueue())
    }
      , _ = function() {
        if (n.usingWebAudio) {
            try {
                "undefined" != typeof AudioContext ? n.ctx = new AudioContext : "undefined" != typeof webkitAudioContext ? n.ctx = new webkitAudioContext : n.usingWebAudio = !1
            } catch (e) {
                n.usingWebAudio = !1
            }
            n.ctx || (n.usingWebAudio = !1);
            var e = /iP(hone|od|ad)/.test(n._navigator && n._navigator.platform)
              , o = n._navigator && n._navigator.appVersion.match(/OS (\d+)_(\d+)_?(\d+)?/)
              , t = o ? parseInt(o[1], 10) : null;
            if (e && t && t < 9) {
                var r = /safari/.test(n._navigator && n._navigator.userAgent.toLowerCase());
                (n._navigator && n._navigator.standalone && !r || n._navigator && !n._navigator.standalone && !r) && (n.usingWebAudio = !1)
            }
            n.usingWebAudio && (n.masterGain = void 0 === n.ctx.createGain ? n.ctx.createGainNode() : n.ctx.createGain(),
            n.masterGain.gain.setValueAtTime(n._muted ? 0 : 1, n.ctx.currentTime),
            n.masterGain.connect(n.ctx.destination)),
            n._setup()
        }
    };
    "function" == typeof define && define.amd && define([], function() {
        return {
            Howler: n,
            Howl: o
        }
    }),
    "undefined" != typeof exports && (exports.Howler = n,
    exports.Howl = o),
    "undefined" != typeof window ? (window.HowlerGlobal = e,
    window.Howler = n,
    window.Howl = o,
    window.Sound = t) : "undefined" != typeof global && (global.HowlerGlobal = e,
    global.Howler = n,
    global.Howl = o,
    global.Sound = t)
}();
/*! Spatial Plugin */
!function() {
    "use strict";
    HowlerGlobal.prototype._pos = [0, 0, 0],
    HowlerGlobal.prototype._orientation = [0, 0, -1, 0, 1, 0],
    HowlerGlobal.prototype.stereo = function(e) {
        var n = this;
        if (!n.ctx || !n.ctx.listener)
            return n;
        for (var t = n._howls.length - 1; t >= 0; t--)
            n._howls[t].stereo(e);
        return n
    }
    ,
    HowlerGlobal.prototype.pos = function(e, n, t) {
        var r = this;
        return r.ctx && r.ctx.listener ? (n = "number" != typeof n ? r._pos[1] : n,
        t = "number" != typeof t ? r._pos[2] : t,
        "number" != typeof e ? r._pos : (r._pos = [e, n, t],
        void 0 !== r.ctx.listener.positionX ? (r.ctx.listener.positionX.setTargetAtTime(r._pos[0], Howler.ctx.currentTime, .1),
        r.ctx.listener.positionY.setTargetAtTime(r._pos[1], Howler.ctx.currentTime, .1),
        r.ctx.listener.positionZ.setTargetAtTime(r._pos[2], Howler.ctx.currentTime, .1)) : r.ctx.listener.setPosition(r._pos[0], r._pos[1], r._pos[2]),
        r)) : r
    }
    ,
    HowlerGlobal.prototype.orientation = function(e, n, t, r, o, i) {
        var a = this;
        if (!a.ctx || !a.ctx.listener)
            return a;
        var s = a._orientation;
        return n = "number" != typeof n ? s[1] : n,
        t = "number" != typeof t ? s[2] : t,
        r = "number" != typeof r ? s[3] : r,
        o = "number" != typeof o ? s[4] : o,
        i = "number" != typeof i ? s[5] : i,
        "number" != typeof e ? s : (a._orientation = [e, n, t, r, o, i],
        void 0 !== a.ctx.listener.forwardX ? (a.ctx.listener.forwardX.setTargetAtTime(e, Howler.ctx.currentTime, .1),
        a.ctx.listener.forwardY.setTargetAtTime(n, Howler.ctx.currentTime, .1),
        a.ctx.listener.forwardZ.setTargetAtTime(t, Howler.ctx.currentTime, .1),
        a.ctx.listener.upX.setTargetAtTime(e, Howler.ctx.currentTime, .1),
        a.ctx.listener.upY.setTargetAtTime(n, Howler.ctx.currentTime, .1),
        a.ctx.listener.upZ.setTargetAtTime(t, Howler.ctx.currentTime, .1)) : a.ctx.listener.setOrientation(e, n, t, r, o, i),
        a)
    }
    ,
    Howl.prototype.init = function(e) {
        return function(n) {
            var t = this;
            return t._orientation = n.orientation || [1, 0, 0],
            t._stereo = n.stereo || null,
            t._pos = n.pos || null,
            t._pannerAttr = {
                coneInnerAngle: void 0 !== n.coneInnerAngle ? n.coneInnerAngle : 360,
                coneOuterAngle: void 0 !== n.coneOuterAngle ? n.coneOuterAngle : 360,
                coneOuterGain: void 0 !== n.coneOuterGain ? n.coneOuterGain : 0,
                distanceModel: void 0 !== n.distanceModel ? n.distanceModel : "inverse",
                maxDistance: void 0 !== n.maxDistance ? n.maxDistance : 1e4,
                panningModel: void 0 !== n.panningModel ? n.panningModel : "HRTF",
                refDistance: void 0 !== n.refDistance ? n.refDistance : 1,
                rolloffFactor: void 0 !== n.rolloffFactor ? n.rolloffFactor : 1
            },
            t._onstereo = n.onstereo ? [{
                fn: n.onstereo
            }] : [],
            t._onpos = n.onpos ? [{
                fn: n.onpos
            }] : [],
            t._onorientation = n.onorientation ? [{
                fn: n.onorientation
            }] : [],
            e.call(this, n)
        }
    }(Howl.prototype.init),
    Howl.prototype.stereo = function(n, t) {
        var r = this;
        if (!r._webAudio)
            return r;
        if ("loaded" !== r._state)
            return r._queue.push({
                event: "stereo",
                action: function() {
                    r.stereo(n, t)
                }
            }),
            r;
        var o = void 0 === Howler.ctx.createStereoPanner ? "spatial" : "stereo";
        if (void 0 === t) {
            if ("number" != typeof n)
                return r._stereo;
            r._stereo = n,
            r._pos = [n, 0, 0]
        }
        for (var i = r._getSoundIds(t), a = 0; a < i.length; a++) {
            var s = r._soundById(i[a]);
            if (s) {
                if ("number" != typeof n)
                    return s._stereo;
                s._stereo = n,
                s._pos = [n, 0, 0],
                s._node && (s._pannerAttr.panningModel = "equalpower",
                s._panner && s._panner.pan || e(s, o),
                "spatial" === o ? void 0 !== s._panner.positionX ? (s._panner.positionX.setValueAtTime(n, Howler.ctx.currentTime),
                s._panner.positionY.setValueAtTime(0, Howler.ctx.currentTime),
                s._panner.positionZ.setValueAtTime(0, Howler.ctx.currentTime)) : s._panner.setPosition(n, 0, 0) : s._panner.pan.setValueAtTime(n, Howler.ctx.currentTime)),
                r._emit("stereo", s._id)
            }
        }
        return r
    }
    ,
    Howl.prototype.pos = function(n, t, r, o) {
        var i = this;
        if (!i._webAudio)
            return i;
        if ("loaded" !== i._state)
            return i._queue.push({
                event: "pos",
                action: function() {
                    i.pos(n, t, r, o)
                }
            }),
            i;
        if (t = "number" != typeof t ? 0 : t,
        r = "number" != typeof r ? -.5 : r,
        void 0 === o) {
            if ("number" != typeof n)
                return i._pos;
            i._pos = [n, t, r]
        }
        for (var a = i._getSoundIds(o), s = 0; s < a.length; s++) {
            var p = i._soundById(a[s]);
            if (p) {
                if ("number" != typeof n)
                    return p._pos;
                p._pos = [n, t, r],
                p._node && (p._panner && !p._panner.pan || e(p, "spatial"),
                void 0 !== p._panner.positionX ? (p._panner.positionX.setValueAtTime(n, Howler.ctx.currentTime),
                p._panner.positionY.setValueAtTime(t, Howler.ctx.currentTime),
                p._panner.positionZ.setValueAtTime(r, Howler.ctx.currentTime)) : p._panner.setPosition(n, t, r)),
                i._emit("pos", p._id)
            }
        }
        return i
    }
    ,
    Howl.prototype.orientation = function(n, t, r, o) {
        var i = this;
        if (!i._webAudio)
            return i;
        if ("loaded" !== i._state)
            return i._queue.push({
                event: "orientation",
                action: function() {
                    i.orientation(n, t, r, o)
                }
            }),
            i;
        if (t = "number" != typeof t ? i._orientation[1] : t,
        r = "number" != typeof r ? i._orientation[2] : r,
        void 0 === o) {
            if ("number" != typeof n)
                return i._orientation;
            i._orientation = [n, t, r]
        }
        for (var a = i._getSoundIds(o), s = 0; s < a.length; s++) {
            var p = i._soundById(a[s]);
            if (p) {
                if ("number" != typeof n)
                    return p._orientation;
                p._orientation = [n, t, r],
                p._node && (p._panner || (p._pos || (p._pos = i._pos || [0, 0, -.5]),
                e(p, "spatial")),
                void 0 !== p._panner.orientationX ? (p._panner.orientationX.setValueAtTime(n, Howler.ctx.currentTime),
                p._panner.orientationY.setValueAtTime(t, Howler.ctx.currentTime),
                p._panner.orientationZ.setValueAtTime(r, Howler.ctx.currentTime)) : p._panner.setOrientation(n, t, r)),
                i._emit("orientation", p._id)
            }
        }
        return i
    }
    ,
    Howl.prototype.pannerAttr = function() {
        var n, t, r, o = this, i = arguments;
        if (!o._webAudio)
            return o;
        if (0 === i.length)
            return o._pannerAttr;
        if (1 === i.length) {
            if ("object" != typeof i[0])
                return r = o._soundById(parseInt(i[0], 10)),
                r ? r._pannerAttr : o._pannerAttr;
            n = i[0],
            void 0 === t && (n.pannerAttr || (n.pannerAttr = {
                coneInnerAngle: n.coneInnerAngle,
                coneOuterAngle: n.coneOuterAngle,
                coneOuterGain: n.coneOuterGain,
                distanceModel: n.distanceModel,
                maxDistance: n.maxDistance,
                refDistance: n.refDistance,
                rolloffFactor: n.rolloffFactor,
                panningModel: n.panningModel
            }),
            o._pannerAttr = {
                coneInnerAngle: void 0 !== n.pannerAttr.coneInnerAngle ? n.pannerAttr.coneInnerAngle : o._coneInnerAngle,
                coneOuterAngle: void 0 !== n.pannerAttr.coneOuterAngle ? n.pannerAttr.coneOuterAngle : o._coneOuterAngle,
                coneOuterGain: void 0 !== n.pannerAttr.coneOuterGain ? n.pannerAttr.coneOuterGain : o._coneOuterGain,
                distanceModel: void 0 !== n.pannerAttr.distanceModel ? n.pannerAttr.distanceModel : o._distanceModel,
                maxDistance: void 0 !== n.pannerAttr.maxDistance ? n.pannerAttr.maxDistance : o._maxDistance,
                refDistance: void 0 !== n.pannerAttr.refDistance ? n.pannerAttr.refDistance : o._refDistance,
                rolloffFactor: void 0 !== n.pannerAttr.rolloffFactor ? n.pannerAttr.rolloffFactor : o._rolloffFactor,
                panningModel: void 0 !== n.pannerAttr.panningModel ? n.pannerAttr.panningModel : o._panningModel
            })
        } else
            2 === i.length && (n = i[0],
            t = parseInt(i[1], 10));
        for (var a = o._getSoundIds(t), s = 0; s < a.length; s++)
            if (r = o._soundById(a[s])) {
                var p = r._pannerAttr;
                p = {
                    coneInnerAngle: void 0 !== n.coneInnerAngle ? n.coneInnerAngle : p.coneInnerAngle,
                    coneOuterAngle: void 0 !== n.coneOuterAngle ? n.coneOuterAngle : p.coneOuterAngle,
                    coneOuterGain: void 0 !== n.coneOuterGain ? n.coneOuterGain : p.coneOuterGain,
                    distanceModel: void 0 !== n.distanceModel ? n.distanceModel : p.distanceModel,
                    maxDistance: void 0 !== n.maxDistance ? n.maxDistance : p.maxDistance,
                    refDistance: void 0 !== n.refDistance ? n.refDistance : p.refDistance,
                    rolloffFactor: void 0 !== n.rolloffFactor ? n.rolloffFactor : p.rolloffFactor,
                    panningModel: void 0 !== n.panningModel ? n.panningModel : p.panningModel
                };
                var c = r._panner;
                c ? (c.coneInnerAngle = p.coneInnerAngle,
                c.coneOuterAngle = p.coneOuterAngle,
                c.coneOuterGain = p.coneOuterGain,
                c.distanceModel = p.distanceModel,
                c.maxDistance = p.maxDistance,
                c.refDistance = p.refDistance,
                c.rolloffFactor = p.rolloffFactor,
                c.panningModel = p.panningModel) : (r._pos || (r._pos = o._pos || [0, 0, -.5]),
                e(r, "spatial"))
            }
        return o
    }
    ,
    Sound.prototype.init = function(e) {
        return function() {
            var n = this
              , t = n._parent;
            n._orientation = t._orientation,
            n._stereo = t._stereo,
            n._pos = t._pos,
            n._pannerAttr = t._pannerAttr,
            e.call(this),
            n._stereo ? t.stereo(n._stereo) : n._pos && t.pos(n._pos[0], n._pos[1], n._pos[2], n._id)
        }
    }(Sound.prototype.init),
    Sound.prototype.reset = function(e) {
        return function() {
            var n = this
              , t = n._parent;
            return n._orientation = t._orientation,
            n._stereo = t._stereo,
            n._pos = t._pos,
            n._pannerAttr = t._pannerAttr,
            n._stereo ? t.stereo(n._stereo) : n._pos ? t.pos(n._pos[0], n._pos[1], n._pos[2], n._id) : n._panner && (n._panner.disconnect(0),
            n._panner = void 0,
            t._refreshBuffer(n)),
            e.call(this)
        }
    }(Sound.prototype.reset);
    var e = function(e, n) {
        n = n || "spatial",
        "spatial" === n ? (e._panner = Howler.ctx.createPanner(),
        e._panner.coneInnerAngle = e._pannerAttr.coneInnerAngle,
        e._panner.coneOuterAngle = e._pannerAttr.coneOuterAngle,
        e._panner.coneOuterGain = e._pannerAttr.coneOuterGain,
        e._panner.distanceModel = e._pannerAttr.distanceModel,
        e._panner.maxDistance = e._pannerAttr.maxDistance,
        e._panner.refDistance = e._pannerAttr.refDistance,
        e._panner.rolloffFactor = e._pannerAttr.rolloffFactor,
        e._panner.panningModel = e._pannerAttr.panningModel,
        void 0 !== e._panner.positionX ? (e._panner.positionX.setValueAtTime(e._pos[0], Howler.ctx.currentTime),
        e._panner.positionY.setValueAtTime(e._pos[1], Howler.ctx.currentTime),
        e._panner.positionZ.setValueAtTime(e._pos[2], Howler.ctx.currentTime)) : e._panner.setPosition(e._pos[0], e._pos[1], e._pos[2]),
        void 0 !== e._panner.orientationX ? (e._panner.orientationX.setValueAtTime(e._orientation[0], Howler.ctx.currentTime),
        e._panner.orientationY.setValueAtTime(e._orientation[1], Howler.ctx.currentTime),
        e._panner.orientationZ.setValueAtTime(e._orientation[2], Howler.ctx.currentTime)) : e._panner.setOrientation(e._orientation[0], e._orientation[1], e._orientation[2])) : (e._panner = Howler.ctx.createStereoPanner(),
        e._panner.pan.setValueAtTime(e._stereo, Howler.ctx.currentTime)),
        e._panner.connect(e._node),
        e._paused || e._parent.pause(e._id, !0).play(e._id, !0)
    }
}();
