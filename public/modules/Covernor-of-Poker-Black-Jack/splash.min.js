/**
 * Combined by jsDelivr.
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
/*!
 * phaser-ads - version 2.2.2 
 * A Phaser plugin for providing nice ads integration in your phaser.io game
 *
 * OrangeGames
 * Build at 07-08-2017
 * Released under MIT License 
 */

var __extends = this && this.__extends ||
function() {
    var a = Object.setPrototypeOf || {
        __proto__: []
    }
    instanceof Array &&
    function(a, b) {
        a.__proto__ = b
    } ||
    function(a, b) {
        for (var c in b) b.hasOwnProperty(c) && (a[c] = b[c])
    };
    return function(b, c) {
        function d() {
            this.constructor = b
        }
        a(b, c),
        b.prototype = null === c ? Object.create(c) : (d.prototype = c.prototype, new d)
    }
} (),
PhaserAds; !
function(a) {
    var b; !
    function(a) {
        a[a.start = 0] = "start",
        a[a.firstQuartile = 1] = "firstQuartile",
        a[a.midPoint = 2] = "midPoint",
        a[a.thirdQuartile = 3] = "thirdQuartile",
        a[a.complete = 4] = "complete"
    } (b = a.AdEvent || (a.AdEvent = {}));
    var c = function(b) {
        function c(a, c) {
            var d = b.call(this, a, c) || this;
            return d.onContentPaused = new Phaser.Signal,
            d.onContentResumed = new Phaser.Signal,
            d.onAdProgression = new Phaser.Signal,
            d.onAdsDisabled = new Phaser.Signal,
            d.onAdClicked = new Phaser.Signal,
            d.onAdRewardGranted = new Phaser.Signal,
            d.onBannerShown = new Phaser.Signal,
            d.onBannerHidden = new Phaser.Signal,
            d.bannerActive = !1,
            d.provider = null,
            d.wasMuted = !1,
            Object.defineProperty(a, "ads", {
                value: d
            }),
            d
        }
        return __extends(c, b),
        c.prototype.setAdProvider = function(a) {
            this.provider = a,
            this.provider.setManager(this)
        },
        c.prototype.showAd = function() {
            for (var b = [], c = 0; c < arguments.length; c++) b[c] = arguments[c];
            if (null === this.provider) throw new Error("Can not request an ad without an provider, please attach an ad provider!");
            b[0] !== a.AdProvider.CocoonAdType.banner && (this.wasMuted = this.game.sound.mute, this.game.sound.mute = !0),
            this.provider.showAd.apply(this.provider, b)
        },
        c.prototype.preloadAd = function() {
            for (var a = [], b = 0; b < arguments.length; b++) a[b] = arguments[b];
            if (null === this.provider) throw new Error("Can not preload an ad without an provider, please attach an ad provider!");
            this.provider.preloadAd.apply(this.provider, a)
        },
        c.prototype.destroyAd = function() {
            for (var a = [], b = 0; b < arguments.length; b++) a[b] = arguments[b];
            if (null === this.provider) throw new Error("Can not destroy an ad without an provider, please attach an ad provider!");
            this.provider.destroyAd.apply(this.provider, a)
        },
        c.prototype.hideAd = function() {
            for (var a = [], b = 0; b < arguments.length; b++) a[b] = arguments[b];
            if (null === this.provider) throw new Error("Can not hide an ad without an provider, please attach an ad provider!");
            this.unMuteAfterAd(),
            this.provider.hideAd.apply(this.provider, a)
        },
        c.prototype.adsEnabled = function() {
            return this.provider.adsEnabled
        },
        c.prototype.unMuteAfterAd = function() {
            this.wasMuted || (this.game.sound.mute = !1)
        },
        c
    } (Phaser.Plugin);
    a.AdManager = c
} (PhaserAds || (PhaserAds = {}));
var PhaserAds; !
function(a) {
    var b; !
    function(a) {
        var b; !
        function(a) {
            a[a.AdMob = 0] = "AdMob",
            a[a.MoPub = 1] = "MoPub",
            a[a.Chartboost = 2] = "Chartboost",
            a[a.Heyzap = 3] = "Heyzap"
        } (b = a.CocoonProvider || (a.CocoonProvider = {}));
        var c; !
        function(a) {
            a[a.banner = 0] = "banner",
            a[a.interstitial = 1] = "interstitial",
            a[a.insentive = 2] = "insentive"
        } (c = a.CocoonAdType || (a.CocoonAdType = {}));
        var d = function() {
            function a(a, c, d) {
                if (this.adsEnabled = !1, this.banner = null, this.bannerShowable = !1, this.interstitial = null, this.interstitialShowable = !1, this.insentive = null, this.insentiveShowable = !1, (a.device.cordova || a.device.crosswalk) && Cocoon && Cocoon.Ad) {
                    switch (this.adsEnabled = !0, c) {
                    default:
                    case b.AdMob:
                        this.cocoonProvider = Cocoon.Ad.AdMob;
                        break;
                    case b.Chartboost:
                        this.cocoonProvider = Cocoon.Ad.Chartboost;
                        break;
                    case b.Heyzap:
                        this.cocoonProvider = Cocoon.Ad.Heyzap;
                        break;
                    case b.MoPub:
                        this.cocoonProvider = Cocoon.Ad.MoPub
                    }
                    this.cocoonProvider.configure(d)
                }
            }
            return a.prototype.setManager = function(a) {
                this.adManager = a
            },
            a.prototype.showAd = function(a) {
                if (!this.adsEnabled) return this.adManager.unMuteAfterAd(),
                void(a !== c.banner && this.adManager.onContentResumed.dispatch());
                if (a === c.banner) {
                    if (!this.bannerShowable || null === this.banner) return void this.adManager.unMuteAfterAd();
                    this.adManager.onBannerShown.dispatch(this.banner.width, this.banner.height),
                    this.adManager.bannerActive = !0,
                    this.banner.show()
                }
                if (a === c.interstitial) {
                    if (!this.interstitialShowable || null === this.interstitial) return this.adManager.unMuteAfterAd(),
                    void this.adManager.onContentResumed.dispatch(c.interstitial);
                    this.interstitial.show()
                }
                if (a === c.insentive) {
                    if (!this.insentiveShowable || null === this.insentive) return this.adManager.unMuteAfterAd(),
                    void this.adManager.onContentResumed.dispatch(c.insentive);
                    this.insentive.show()
                }
            },
            a.prototype.preloadAd = function(a, b, d) {
                var e = this;
                this.adsEnabled && (this.destroyAd(a), a === c.banner && (this.banner = this.cocoonProvider.createBanner(b), d && this.banner.setLayout(d), this.banner.on("load",
                function() {
                    e.bannerShowable = !0
                }), this.banner.on("fail",
                function() {
                    e.bannerShowable = !1,
                    e.banner = null
                }), this.banner.on("click",
                function() {
                    e.adManager.onAdClicked.dispatch(c.banner)
                }), this.banner.on("show",
                function() {}), this.banner.on("dismiss",
                function() {}), this.banner.load()), a === c.interstitial && (this.interstitial = this.cocoonProvider.createInterstitial(b), this.interstitial.on("load",
                function() {
                    e.interstitialShowable = !0
                }), this.interstitial.on("fail",
                function() {
                    e.interstitialShowable = !1,
                    e.interstitial = null
                }), this.interstitial.on("click",
                function() {
                    e.adManager.onAdClicked.dispatch(c.interstitial)
                }), this.interstitial.on("show",
                function() {
                    e.adManager.onContentPaused.dispatch(c.interstitial)
                }), this.interstitial.on("dismiss",
                function() {
                    e.adManager.unMuteAfterAd(),
                    e.adManager.onContentResumed.dispatch(c.interstitial),
                    e.interstitialShowable = !1,
                    e.interstitial = null
                }), this.interstitial.load()), a === c.insentive && (this.insentive = this.cocoonProvider.createRewardedVideo(b), this.insentive.on("load",
                function() {
                    e.insentiveShowable = !0
                }), this.insentive.on("fail",
                function() {
                    e.insentiveShowable = !1,
                    e.insentive = null
                }), this.insentive.on("click",
                function() {
                    e.adManager.onAdClicked.dispatch(c.insentive)
                }), this.insentive.on("show",
                function() {
                    e.adManager.onContentPaused.dispatch(c.insentive)
                }), this.insentive.on("dismiss",
                function() {
                    e.adManager.unMuteAfterAd(),
                    e.adManager.onContentResumed.dispatch(c.insentive),
                    e.insentiveShowable = !1,
                    e.insentive = null
                }), this.insentive.on("reward",
                function() {
                    e.adManager.unMuteAfterAd(),
                    e.adManager.onAdRewardGranted.dispatch(c.insentive),
                    e.insentiveShowable = !1,
                    e.insentive = null
                }), this.insentive.load()))
            },
            a.prototype.destroyAd = function(a) {
                if (this.adsEnabled) {
                    if (a === c.banner && null !== this.banner) {
                        try {
                            this.cocoonProvider.releaseBanner(this.banner)
                        } catch(a) {}
                        this.banner = null,
                        this.bannerShowable = !1
                    }
                    a === c.interstitial && null !== this.interstitial && (this.cocoonProvider.releaseInterstitial(this.interstitial), this.interstitial = null, this.interstitialShowable = !1)
                }
            },
            a.prototype.hideAd = function(a) {
                this.adsEnabled && (a === c.interstitial && null !== this.interstitial && this.interstitial.hide(), a === c.banner && null !== this.banner && (this.adManager.bannerActive && (this.adManager.bannerActive = !1, this.adManager.onBannerHidden.dispatch(this.banner.width, this.banner.height)), this.banner.hide()), a === c.insentive && null !== this.insentive && this.insentive.hide())
            },
            a
        } ();
        a.CocoonAds = d
    } (b = a.AdProvider || (a.AdProvider = {}))
} (PhaserAds || (PhaserAds = {}));
var PhaserAds; !
function(a) {
    var b; !
    function(a) {
        var b; !
        function(a) {
            a[a.Interstitial = 0] = "Interstitial",
            a[a.Video = 1] = "Video",
            a[a.Rewarded = 2] = "Rewarded",
            a[a.Banner = 3] = "Banner"
        } (b = a.HeyzapAdTypes || (a.HeyzapAdTypes = {}));
        var c = function() {
            function a(a, b) {
                var c = this;
                this.adsEnabled = !1,
                (a.device.cordova || a.device.crosswalk) && (this.adsEnabled = !0, HeyzapAds.start(b).then(function() {},
                function(a) {
                    c.adsEnabled = !1
                }))
            }
            return a.prototype.setManager = function(a) {
                this.adManager = a
            },
            a.prototype.showAd = function(a, c) {
                var d = this;
                switch (this.adsEnabled || (this.adManager.unMuteAfterAd(), this.adManager.onContentResumed.dispatch()), a) {
                case b.Interstitial:
                    HeyzapAds.InterstitialAd.addEventListener(HeyzapAds.InterstitialAd.Events.HIDE,
                    function() {
                        d.adManager.unMuteAfterAd(),
                        d.adManager.onContentResumed.dispatch(HeyzapAds.InterstitialAd.Events.HIDE)
                    }),
                    HeyzapAds.InterstitialAd.addEventListener(HeyzapAds.InterstitialAd.Events.SHOW_FAILED,
                    function() {
                        d.adManager.unMuteAfterAd(),
                        d.adManager.onContentResumed.dispatch(HeyzapAds.InterstitialAd.Events.SHOW_FAILED)
                    }),
                    HeyzapAds.InterstitialAd.addEventListener(HeyzapAds.InterstitialAd.Events.CLICKED,
                    function() {
                        d.adManager.onAdClicked.dispatch(HeyzapAds.InterstitialAd.Events.CLICKED)
                    }),
                    HeyzapAds.InterstitialAd.show().then(function() {
                        d.adManager.onContentPaused.dispatch()
                    },
                    function(a) {
                        d.adManager.unMuteAfterAd(),
                        d.adManager.onContentResumed.dispatch()
                    });
                    break;
                case b.Video:
                    HeyzapAds.VideoAd.addEventListener(HeyzapAds.VideoAd.Events.HIDE,
                    function() {
                        d.adManager.unMuteAfterAd(),
                        d.adManager.onContentResumed.dispatch(HeyzapAds.VideoAd.Events.HIDE)
                    }),
                    HeyzapAds.VideoAd.addEventListener(HeyzapAds.VideoAd.Events.SHOW_FAILED,
                    function() {
                        d.adManager.unMuteAfterAd(),
                        d.adManager.onContentResumed.dispatch(HeyzapAds.VideoAd.Events.SHOW_FAILED)
                    }),
                    HeyzapAds.VideoAd.addEventListener(HeyzapAds.VideoAd.Events.CLICKED,
                    function() {
                        d.adManager.onAdClicked.dispatch(HeyzapAds.VideoAd.Events.CLICKED)
                    }),
                    HeyzapAds.VideoAd.show().then(function() {
                        d.adManager.onContentPaused.dispatch()
                    },
                    function(a) {
                        d.adManager.unMuteAfterAd(),
                        d.adManager.onContentResumed.dispatch()
                    });
                    break;
                case b.Rewarded:
                    HeyzapAds.IncentivizedAd.addEventListener(HeyzapAds.IncentivizedAd.Events.HIDE,
                    function() {
                        d.adManager.unMuteAfterAd(),
                        d.adManager.onContentResumed.dispatch(HeyzapAds.IncentivizedAd.Events.HIDE)
                    }),
                    HeyzapAds.IncentivizedAd.addEventListener(HeyzapAds.IncentivizedAd.Events.SHOW_FAILED,
                    function() {
                        d.adManager.unMuteAfterAd(),
                        d.adManager.onContentResumed.dispatch(HeyzapAds.IncentivizedAd.Events.SHOW_FAILED)
                    }),
                    HeyzapAds.IncentivizedAd.addEventListener(HeyzapAds.IncentivizedAd.Events.CLICKED,
                    function() {
                        d.adManager.onAdClicked.dispatch(HeyzapAds.IncentivizedAd.Events.CLICKED)
                    }),
                    HeyzapAds.IncentivizedAd.show().then(function() {
                        d.adManager.onContentPaused.dispatch()
                    },
                    function(a) {
                        d.adManager.unMuteAfterAd(),
                        d.adManager.onContentResumed.dispatch()
                    });
                    break;
                case b.Banner:
                    HeyzapAds.BannerAd.show(c).then(function() {},
                    function(a) {})
                }
            },
            a.prototype.preloadAd = function(a) {
                this.adsEnabled && a === b.Rewarded && HeyzapAds.IncentivizedAd.fetch().then(function() {},
                function(a) {})
            },
            a.prototype.destroyAd = function(a) {
                this.adsEnabled && a === b.Banner && HeyzapAds.BannerAd.destroy().then(function() {},
                function(a) {})
            },
            a.prototype.hideAd = function(a) {
                this.adsEnabled && a === b.Banner && HeyzapAds.BannerAd.hide().then(function() {},
                function(a) {})
            },
            a
        } ();
        a.CordovaHeyzap = c
    } (b = a.AdProvider || (a.AdProvider = {}))
} (PhaserAds || (PhaserAds = {}));
var PhaserAds; !
function(a) {
    var b; !
    function(a) {
        var b; !
        function(a) {
            a[a.preroll = 0] = "preroll",
            a[a.midroll = 1] = "midroll"
        } (b = a.GameDistributionAdType || (a.GameDistributionAdType = {}));
        var c = function() {
            function a(a, b, c) {
                var d = this;
                this.adsEnabled = !0,
                this.areAdsEnabled(),
                this.settings = {
                    gameId: b,
                    userId: c,
                    resumeGame: function() {
                        d.adManager.unMuteAfterAd(),
                        d.adManager.onContentResumed.dispatch()
                    },
                    pauseGame: function() {
                        d.adManager.onContentPaused.dispatch()
                    },
                    onInit: function(a) {},
                    onError: function(a) {
                        d.adsEnabled = !1
                    }
                },
                window.GameDistribution = "gdApi",
                window.gdApi = window.gdApi ||
                function() { (window.gdApi.q = window.gdApi.q || []).push(arguments)
                },
                window.gdApi.l = Date.now(),
                function(a, b, c, d) {
                    var e = b.createElement(c),
                    f = b.getElementsByTagName(c)[0];
                    e.async = !0,
                    e.src = d,
                    f.parentNode.insertBefore(e, f)
                } (window, document, "script", "./api.js"),
                gdApi(this.settings)
            }
            return a.prototype.setManager = function(a) {
                this.adManager = a
            },
            a.prototype.showAd = function(a) {
                if (this.adsEnabled) {
                    if (gdApi && "undefined" == typeof gdApi.showBanner) return this.adsEnabled = !1,
                    this.adManager.unMuteAfterAd(),
                    void this.adManager.onContentResumed.dispatch();
                    gdApi.showBanner()
                } else this.adManager.unMuteAfterAd(),
                this.adManager.onContentResumed.dispatch()
            },
            a.prototype.preloadAd = function() {},
            a.prototype.destroyAd = function() {},
            a.prototype.hideAd = function() {},
            a.prototype.areAdsEnabled = function() {
                var a = this,
                b = document.createElement("div");
                b.innerHTML = "&nbsp;",
                b.className = "adsbox",
                b.style.position = "absolute",
                b.style.fontSize = "10px",
                document.body.appendChild(b);
                var c = function() {
                    var a = !0;
                    return 0 === b.offsetHeight && (a = !1),
                    b.parentNode.removeChild(b),
                    a
                };
                window.setTimeout(function() {
                    a.adsEnabled = c()
                },
                100)
            },
            a
        } ();
        a.GameDistributionAds = c
    } (b = a.AdProvider || (a.AdProvider = {}))
} (PhaserAds || (PhaserAds = {}));
var PhaserAds; !
function(a) {
    var b; !
    function(b) {
        var c = function() {
            function b(a, b) {
                this.adsManager = null,
                this.googleEnabled = !1,
                this.adsEnabled = !0,
                this.adTagUrl = "",
                this.adRequested = !1,
                this.adManager = null,
                this.resizeListener = null,
                this.areAdsEnabled(),
                "undefined" != typeof google && (this.googleEnabled = !0, this.gameContent = "string" == typeof a.parent ? document.getElementById(a.parent) : a.parent, this.gameContent.style.position = "absolute", this.gameContent.style.width = "100%", this.adContent = this.gameContent.parentNode.appendChild(document.createElement("div")), this.adContent.id = "phaser-ad-container", this.adContent.style.position = "absolute", this.adContent.style.zIndex = "9999", this.adContent.style.display = "none", this.adContent.style.top = "0", this.adContent.style.left = "0", this.adContent.style.width = "100%", this.adContent.style.height = "100%", this.adContent.style.overflow = "hidden", this.adTagUrl = b, this.game = a, this.adDisplay = new google.ima.AdDisplayContainer(this.adContent), google.ima.settings.setVpaidMode(google.ima.ImaSdkSettings.VpaidMode.ENABLED), google.ima.settings.setLocale("nl"), this.adLoader = new google.ima.AdsLoader(this.adDisplay), this.adLoader.addEventListener(google.ima.AdsManagerLoadedEvent.Type.ADS_MANAGER_LOADED, this.onAdManagerLoader, !1, this), this.adLoader.addEventListener(google.ima.AdErrorEvent.Type.AD_ERROR, this.onAdError, !1, this))
            }
            return b.prototype.setManager = function(a) {
                this.adManager = a
            },
            b.prototype.showAd = function(a) {
                if (!this.adRequested) {
                    if (this.adsEnabled || this.adManager.onAdsDisabled.dispatch(!0), !this.googleEnabled) return void this.onContentResumeRequested();
                    this.adDisplay.initialize();
                    var b = new google.ima.AdsRequest;
                    b.adTagUrl = this.adTagUrl + this.parseCustomParams(a);
                    var c = window.innerWidth,
                    d = window.innerHeight;
                    this.game.scale.isFullScreen && document.body.clientHeight < window.innerHeight && (d = document.body.clientHeight, c = document.body.clientWidth),
                    b.linearAdSlotWidth = c,
                    b.linearAdSlotHeight = d,
                    b.nonLinearAdSlotWidth = c,
                    b.nonLinearAdSlotHeight = d,
                    b.forceNonLinearFullSlot = !0;
                    try {
                        this.adRequested = !0,
                        this.adLoader.requestAds(b)
                    } catch(a) {
                        this.onContentResumeRequested()
                    }
                }
            },
            b.prototype.preloadAd = function() {},
            b.prototype.destroyAd = function() {},
            b.prototype.hideAd = function() {},
            b.prototype.onAdManagerLoader = function(a) {
                var b = this,
                c = new google.ima.AdsRenderingSettings;
                c.restoreCustomPlaybackStateOnAdBreakComplete = !0;
                var d = a.getAdsManager(this.gameContent, c);
                this.adsManager = d,
                d.addEventListener(google.ima.AdEvent.Type.CONTENT_PAUSE_REQUESTED, this.onContentPauseRequested, !1, this),
                d.addEventListener(google.ima.AdEvent.Type.CONTENT_RESUME_REQUESTED, this.onContentResumeRequested, !1, this),
                d.addEventListener(google.ima.AdErrorEvent.Type.AD_ERROR, this.onAdError, !1, this),
                [google.ima.AdEvent.Type.ALL_ADS_COMPLETED, google.ima.AdEvent.Type.CLICK, google.ima.AdEvent.Type.COMPLETE, google.ima.AdEvent.Type.FIRST_QUARTILE, google.ima.AdEvent.Type.LOADED, google.ima.AdEvent.Type.MIDPOINT, google.ima.AdEvent.Type.PAUSED, google.ima.AdEvent.Type.STARTED, google.ima.AdEvent.Type.THIRD_QUARTILE].forEach(function(a) {
                    d.addEventListener(a, b.onAdEvent, !1, b)
                });
                try {
                    this.adContent.style.display = "block";
                    var e = window.innerWidth,
                    f = window.innerHeight;
                    this.adsManager.init(e, f, google.ima.ViewMode.NORMAL),
                    this.adsManager.start(),
                    this.resizeListener = function() {
                        null !== b.adsManager && b.adsManager.resize(window.innerWidth, window.innerHeight, google.ima.ViewMode.NORMAL)
                    },
                    window.addEventListener("resize", this.resizeListener)
                } catch(a) {
                    this.onAdError(a)
                }
            },
            b.prototype.onAdEvent = function(b) {
                switch (b.type) {
                case google.ima.AdEvent.Type.CLICK:
                    this.adManager.onAdClicked.dispatch();
                    break;
                case google.ima.AdEvent.Type.LOADED:
                    this.adRequested = !1;
                    var c = b.getAd();
                    c.isLinear() || this.onContentResumeRequested();
                    break;
                case google.ima.AdEvent.Type.STARTED:
                    this.adManager.onAdProgression.dispatch(a.AdEvent.start);
                    break;
                case google.ima.AdEvent.Type.FIRST_QUARTILE:
                    this.adManager.onAdProgression.dispatch(a.AdEvent.firstQuartile);
                    break;
                case google.ima.AdEvent.Type.MIDPOINT:
                    this.adManager.onAdProgression.dispatch(a.AdEvent.midPoint);
                    break;
                case google.ima.AdEvent.Type.THIRD_QUARTILE:
                    this.adManager.onAdProgression.dispatch(a.AdEvent.thirdQuartile);
                    break;
                case google.ima.AdEvent.Type.COMPLETE:
                    this.adManager.onAdProgression.dispatch(a.AdEvent.complete);
                    break;
                case google.ima.AdEvent.Type.ALL_ADS_COMPLETED:
                    this.onContentResumeRequested()
                }
            },
            b.prototype.onAdError = function(a) {
                null !== this.adsManager && (this.adsManager.destroy(), this.adsManager = null, null !== this.resizeListener && (window.removeEventListener("resize", this.resizeListener), this.resizeListener = null)),
                this.adRequested && (this.adRequested = !1),
                this.onContentResumeRequested()
            },
            b.prototype.onContentPauseRequested = function() {
                this.adManager.onContentPaused.dispatch()
            },
            b.prototype.onContentResumeRequested = function() {
                return "undefined" == typeof google ? (this.adManager.unMuteAfterAd(), void this.adManager.onContentResumed.dispatch()) : (this.adContent.style.display = "none", this.adManager.unMuteAfterAd(), void this.adManager.onContentResumed.dispatch())
            },
            b.prototype.parseCustomParams = function(a) {
                if (void 0 !== a) {
                    var b = "";
                    for (var c in a) if (a.hasOwnProperty(c)) {
                        b.length > 0 && (b += "&");
                        var d = Array.isArray(a[c]) ? a[c].join(",") : a[c];
                        b += c + "=" + d
                    }
                    return "&cust_params=" + encodeURIComponent(b)
                }
                return ""
            },
            b.prototype.areAdsEnabled = function() {
                var a = this,
                b = document.createElement("div");
                b.innerHTML = "&nbsp;",
                b.className = "adsbox",
                b.style.position = "absolute",
                b.style.fontSize = "10px",
                document.body.appendChild(b);
                var c = function() {
                    var a = !0;
                    return 0 === b.offsetHeight && (a = !1),
                    b.parentNode.removeChild(b),
                    a
                };
                window.setTimeout(function() {
                    a.adsEnabled = c()
                },
                100)
            },
            b
        } ();
        b.Ima3 = c
    } (b = a.AdProvider || (a.AdProvider = {}))
} (PhaserAds || (PhaserAds = {}));;

/*!
 * phaser-cachebuster - version 2.0.0 
 * Simple Phaser plugin for adding a query parameter to assets URL's so that they can be 'cache busted'
 *
 * OrangeGames
 * Build at 20-12-2016
 * Released under MIT License 
 */

var __extends = this && this.__extends ||
function(a, b) {
    function c() {
        this.constructor = a
    }
    for (var d in b) b.hasOwnProperty(d) && (a[d] = b[d]);
    a.prototype = null === b ? Object.create(b) : (c.prototype = b.prototype, new c)
},
PhaserCachebuster; !
function(a) {
    var b = function(a) {
        function b(b, c) {
            var d = a.call(this, b, c) || this;
            return d.patchLoader(),
            d
        }
        return __extends(b, a),
        b.prototype.patchLoader = function() {
            Object.defineProperty(Phaser.Loader, "cacheBuster", {
                value: null
            }),
            Phaser.Loader.prototype.transformUrl = function(a, b) {
                return a ? (null !== this.cacheBuster && null === a.match(/^(data:)/) && (a += "?v=" + this.cacheBuster), a.match(/^(?:blob:|data:|http:\/\/|https:\/\/|\/\/)/) ? a: this.baseURL + b.path + a) : ""
            }
        },
        b
    } (Phaser.Plugin);
    a.CacheBuster = b
} (PhaserCachebuster || (PhaserCachebuster = {}));;

/*!
 * phaser-nineslice - version 2.0.1 
 * NineSlice plugin for Phaser.io!
 *
 * OrangeGames
 * Build at 03-07-2017
 * Released under MIT License 
 */

var __extends = this && this.__extends ||
function() {
    var a = Object.setPrototypeOf || {
        __proto__: []
    }
    instanceof Array &&
    function(a, b) {
        a.__proto__ = b
    } ||
    function(a, b) {
        for (var c in b) b.hasOwnProperty(c) && (a[c] = b[c])
    };
    return function(b, c) {
        function d() {
            this.constructor = b
        }
        a(b, c),
        b.prototype = null === c ? Object.create(c) : (d.prototype = c.prototype, new d)
    }
} (),
PhaserNineSlice; !
function(a) {
    var b = function(a) {
        function b(b, c, d, e, f, g, h, i) {
            var j = a.call(this, b, c, d, e, f) || this;
            return j.baseTexture = j.texture.baseTexture,
            j.baseFrame = j.texture.frame,
            null === f || i ? i || (i = b.cache.getNineSlice(e)) : i = b.cache.getNineSlice(f),
            void 0 === i ? j: (j.topSize = i.top, i.left ? j.leftSize = i.left: j.leftSize = j.topSize, i.right ? j.rightSize = i.right: j.rightSize = j.leftSize, i.bottom ? j.bottomSize = i.bottom: j.bottomSize = j.topSize, j.loadTexture(new Phaser.RenderTexture(j.game, j.localWidth, j.localHeight)), j.resize(g, h), j)
        }
        return __extends(b, a),
        b.prototype.renderTexture = function() {
            this.texture.resize(this.localWidth, this.localHeight, !0);
            var a = [0, this.leftSize, this.baseFrame.width - this.rightSize, this.baseFrame.width],
            b = [0, this.topSize, this.baseFrame.height - this.bottomSize, this.baseFrame.height],
            c = [0, this.leftSize, this.localWidth - this.rightSize, this.localWidth],
            d = [0, this.topSize, this.localHeight - this.bottomSize, this.localHeight];
            this.texture.clear();
            for (var e = 0; e < 3; e++) for (var f = 0; f < 3; f++) {
                var g = this.createTexturePart(a[f], b[e], a[f + 1] - a[f], b[e + 1] - b[e]);
                g.width = c[f + 1] - c[f],
                g.height = d[e + 1] - d[e],
                this.texture.renderXY(g, c[f], d[e])
            }
        },
        b.prototype.resize = function(a, b) {
            this.localWidth = a,
            this.localHeight = b,
            this.renderTexture()
        },
        b.prototype.destroy = function() {
            for (var b = [], c = 0; c < arguments.length; c++) b[c] = arguments[c];
            a.prototype.destroy.call(this, b[0]),
            this.texture.destroy(!0),
            this.texture = null,
            this.baseTexture = null,
            this.baseFrame = null
        },
        b.prototype.createTexturePart = function(a, b, c, d) {
            var e = new PIXI.Rectangle(this.baseFrame.x + this.texture.frame.x + a, this.baseFrame.y + this.texture.frame.y + b, Math.max(c, 1), Math.max(d, 1));
            return new Phaser.Sprite(this.game, 0, 0, new PIXI.Texture(this.baseTexture, e))
        },
        b
    } (Phaser.Sprite);
    a.NineSlice = b
} (PhaserNineSlice || (PhaserNineSlice = {}));
var PhaserNineSlice; !
function(a) {
    var b = function(b) {
        function c(a, c) {
            var d = b.call(this, a, c) || this;
            return d.addNineSliceCache(),
            d.addNineSliceFactory(),
            d.addNineSliceLoader(),
            d
        }
        return __extends(c, b),
        c.prototype.addNineSliceLoader = function() {
            Phaser.Loader.prototype.nineSlice = function(a, b, c, d, e, f) {
                var g = {
                    top: c
                };
                d && (g.left = d),
                e && (g.right = e),
                f && (g.bottom = f),
                this.addToFileList("image", a, b),
                this.game.cache.addNineSlice(a, g)
            }
        },
        c.prototype.addNineSliceFactory = function() {
            Phaser.GameObjectFactory.prototype.nineSlice = function(b, c, d, e, f, g, h) {
                void 0 === h && (h = this.world);
                var i = new a.NineSlice(this.game, b, c, d, e, f, g);
                return h.add(i)
            },
            Phaser.GameObjectCreator.prototype.nineSlice = function(b, c, d, e, f, g) {
                return new a.NineSlice(this.game, b, c, d, e, f, g)
            }
        },
        c.prototype.addNineSliceCache = function() {
            Phaser.Cache.prototype.nineSlice = {},
            Phaser.Cache.prototype.addNineSlice = function(a, b) {
                this.nineSlice[a] = b
            },
            Phaser.Cache.prototype.getNineSlice = function(a) {
                var b = this.nineSlice[a];
                return b
            }
        },
        c
    } (Phaser.Plugin);
    a.Plugin = b
} (PhaserNineSlice || (PhaserNineSlice = {}));;

/*!
 * phaser-spine - version 3.0.9 
 * Spine plugin for Phaser.io!
 *
 * OrangeGames
 * Build at 10-07-2017
 * Released under MIT License 
 */

var spine = {
    radDeg: 180 / Math.PI,
    degRad: Math.PI / 180,
    Float32Array: "undefined" == typeof Float32Array ? Array: Float32Array,
    Uint32Array: "undefined" == typeof Uint32Array ? Array: Uint32Array,
    Uint16Array: "undefined" == typeof Uint16Array ? Array: Uint16Array
};
spine.temp = new spine.Float32Array(2),
spine.BoneData = function(a, b) {
    this.name = a,
    this.parent = b
},
spine.BoneData.prototype = {
    length: 0,
    x: 0,
    y: 0,
    rotation: 0,
    scaleX: 1,
    scaleY: 1,
    inheritScale: !0,
    inheritRotation: !0
},
spine.BlendMode = {
    normal: 0,
    additive: 1,
    multiply: 2,
    screen: 3
},
spine.SlotData = function(a, b) {
    this.name = a,
    this.boneData = b
},
spine.SlotData.prototype = {
    r: 1,
    g: 1,
    b: 1,
    a: 1,
    attachmentName: null,
    blendMode: spine.BlendMode.normal
},
spine.IkConstraintData = function(a) {
    this.name = a,
    this.bones = []
},
spine.IkConstraintData.prototype = {
    target: null,
    bendDirection: 1,
    mix: 1
},
spine.TransformConstraintData = function(a) {
    this.name = a
},
spine.TransformConstraintData.prototype = {
    bone: null,
    target: null,
    translateMix: 1,
    x: 0,
    y: 0
},
spine.Bone = function(a, b, c) {
    this.data = a,
    this.skeleton = b,
    this.parent = c,
    this.setToSetupPose()
},
spine.Bone.yDown = !1,
spine.Bone.prototype = {
    x: 0,
    y: 0,
    rotation: 0,
    scaleX: 1,
    scaleY: 1,
    a: 0,
    b: 0,
    worldX: 0,
    c: 0,
    d: 0,
    worldY: 0,
    worldSignX: 1,
    worldSignY: 1,
    update: function() {
        this.updateWorldTransform(this.x, this.y, this.rotation, this.scaleX, this.scaleY)
    },
    updateWorldTransformWith: function() {
        this.updateWorldTransform(this.x, this.y, this.rotation, this.scaleX, this.scaleY)
    },
    updateWorldTransform: function(a, b, c, d, e) {
        this.appliedRotation = c,
        this.appliedScaleX = d,
        this.appliedScaleY = e,
        c *= spine.degRad;
        var f = Math.cos(c),
        g = Math.sin(c),
        h = f * d,
        i = -g * e,
        j = g * d,
        k = f * e,
        l = this.parent;
        if (!l) {
            var m = this.skeleton;
            return m.flipX && (a = -a, h = -h, i = -i),
            m.flipY != spine.Bone.yDown && (b = -b, j = -j, k = -k),
            this.a = h,
            this.b = i,
            this.c = j,
            this.d = k,
            this.worldX = a,
            this.worldY = b,
            this.worldSignX = d < 0 ? -1 : 1,
            void(this.worldSignY = e < 0 ? -1 : 1)
        }
        var n = l.a,
        o = l.b,
        p = l.c,
        q = l.d;
        if (this.worldX = n * a + o * b + l.worldX, this.worldY = p * a + q * b + l.worldY, this.worldSignX = l.worldSignX * (d < 0 ? -1 : 1), this.worldSignY = l.worldSignY * (e < 0 ? -1 : 1), this.data.inheritRotation && this.data.inheritScale) this.a = n * h + o * j,
        this.b = n * i + o * k,
        this.c = p * h + q * j,
        this.d = p * i + q * k;
        else {
            if (this.data.inheritRotation) {
                n = 1,
                o = 0,
                p = 0,
                q = 1;
                do {
                    c = l.appliedRotation * spine.degRad, f = Math.cos(c), g = Math.sin(c);
                    var r = n * f + o * g;
                    if (o = n * -g + o * f, n = r, r = p * f + q * g, q = p * -g + q * f, p = r, !l.data.inheritRotation) break;
                    l = l.parent
                } while ( l );
                this.a = n * h + o * j,
                this.b = n * i + o * k,
                this.c = p * h + q * j,
                this.d = p * i + q * k
            } else if (this.data.inheritScale) {
                n = 1,
                o = 0,
                p = 0,
                q = 1;
                do {
                    c = l.appliedRotation * spine.degRad, f = Math.cos(c), g = Math.sin(c);
                    var s = l.appliedScaleX,
                    t = l.appliedScaleY,
                    u = f * s,
                    v = -g * t,
                    w = g * s,
                    x = f * t,
                    r = n * u + o * w;
                    if (o = n * v + o * x, n = r, r = p * u + q * w, q = p * v + q * x, p = r, s < 0 && (c = -c), f = Math.cos( - c), g = Math.sin( - c), r = n * f + o * g, o = n * -g + o * f, n = r, r = p * f + q * g, q = p * -g + q * f, p = r, !l.data.inheritScale) break;
                    l = l.parent
                } while ( l );
                this.a = n * h + o * j,
                this.b = n * i + o * k,
                this.c = p * h + q * j,
                this.d = p * i + q * k
            } else this.a = h,
            this.b = i,
            this.c = j,
            this.d = k;
            this.skeleton.flipX && (this.a = -this.a, this.b = -this.b),
            this.skeleton.flipY != spine.Bone.yDown && (this.c = -this.c, this.d = -this.d)
        }
    },
    setToSetupPose: function() {
        var a = this.data;
        this.x = a.x,
        this.y = a.y,
        this.rotation = a.rotation,
        this.scaleX = a.scaleX,
        this.scaleY = a.scaleY
    },
    getWorldRotationX: function() {
        return Math.atan2(this.c, this.a) * spine.radDeg
    },
    getWorldRotationY: function() {
        return Math.atan2(this.d, this.b) * spine.radDeg
    },
    getWorldScaleX: function() {
        return Math.sqrt(this.a * this.a + this.b * this.b) * this.worldSignX
    },
    getWorldScaleY: function() {
        return Math.sqrt(this.c * this.c + this.d * this.d) * this.worldSignY
    },
    worldToLocal: function(a) {
        var b = a[0] - this.worldX,
        c = a[1] - this.worldY,
        d = this.a,
        e = this.b,
        f = this.c,
        g = this.d,
        h = 1 / (d * g - e * f);
        return a[0] = b * g * h - c * e * h,
        a[1] = c * d * h - b * f * h,
        a
    },
    localToWorld: function(a) {
        var b = a[0],
        c = a[1];
        return a[0] = b * this.a + c * this.b + this.worldX,
        a[1] = b * this.c + c * this.d + this.worldY,
        a
    }
},
spine.Slot = function(a, b) {
    this.data = a,
    this.bone = b,
    this.attachmentVertices = new spine.Float32Array,
    this.setToSetupPose()
},
spine.Slot.prototype = {
    r: 1,
    g: 1,
    b: 1,
    a: 1,
    _attachmentTime: 0,
    attachment: null,
    setAttachment: function(a) {
        this.attachment != a && (this.attachment = a, this._attachmentTime = this.bone.skeleton.time, this.attachmentVertices.length = 0)
    },
    setAttachmentTime: function(a) {
        this._attachmentTime = this.bone.skeleton.time - a
    },
    getAttachmentTime: function() {
        return this.bone.skeleton.time - this._attachmentTime
    },
    setToSetupPose: function() {
        var a = this.data;
        if (this.r = a.r, this.g = a.g, this.b = a.b, this.a = a.a, a.attachmentName) {
            for (var b = this.bone.skeleton.data.slots,
            c = 0,
            d = b.length; c < d; c++) if (b[c] == a) {
                this.attachment = null,
                this.setAttachment(this.bone.skeleton.getAttachmentBySlotIndex(c, a.attachmentName));
                break
            }
        } else this.setAttachment(null)
    }
},
spine.IkConstraint = function(a, b) {
    this.data = a,
    this.mix = a.mix,
    this.bendDirection = a.bendDirection,
    this.bones = [];
    for (var c = 0,
    d = a.bones.length; c < d; c++) this.bones[c] = b.findBone(a.bones[c].name);
    this.target = b.findBone(a.target.name)
},
spine.IkConstraint.prototype = {
    apply: function() {
        this.update()
    },
    update: function() {
        var a = this.target,
        b = this.bones;
        switch (b.length) {
        case 1:
            spine.IkConstraint.apply1(b[0], a.worldX, a.worldY, this.mix);
            break;
        case 2:
            spine.IkConstraint.apply2(b[0], b[1], a.worldX, a.worldY, this.bendDirection, this.mix)
        }
    }
},
spine.IkConstraint.apply1 = function(a, b, c, d) {
    var e = a.parent ? a.parent.getWorldRotationX() : 0,
    f = a.rotation,
    g = Math.atan2(c - a.worldY, b - a.worldX) * spine.radDeg - e;
    a.worldSignX != a.worldSignY != (a.skeleton.flipX != (a.skeleton.flipY != spine.Bone.yDown)) && (g = 360 - g),
    g > 180 ? g -= 360 : g < -180 && (g += 360),
    a.updateWorldTransform(a.x, a.y, f + (g - f) * d, a.appliedScaleX, a.appliedScaleY)
},
spine.IkConstraint.apply2 = function(a, b, c, d, e, f) {
    if (0 != f) {
        var g, h, i, j = a.x,
        k = a.y,
        l = a.appliedScaleX,
        m = a.appliedScaleY;
        l < 0 ? (l = -l, g = 180, i = -1) : (g = 0, i = 1),
        m < 0 && (m = -m, i = -i);
        var n = b.x,
        o = b.y,
        p = b.appliedScaleX,
        q = Math.abs(l - m) <= 1e-4;
        q || 0 == o || (b.worldX = a.a * n + a.worldX, b.worldY = a.c * n + a.worldY, o = 0),
        p < 0 ? (p = -p, h = 180) : h = 0;
        var r, s, t, u, v = a.parent;
        if (v) {
            var w = v.a,
            x = v.b,
            y = v.c,
            z = v.d,
            A = 1 / (w * z - x * y),
            B = v.worldX,
            C = v.worldY,
            D = c - B,
            E = d - C;
            r = (D * z - E * x) * A - j,
            s = (E * w - D * y) * A - k,
            D = b.worldX - B,
            E = b.worldY - C,
            t = (D * z - E * x) * A - j,
            u = (E * w - D * y) * A - k
        } else r = c - j,
        s = d - k,
        t = b.worldX - j,
        u = b.worldY - k;
        var F, G, H = Math.sqrt(t * t + u * u),
        I = b.data.length * p;
        a: if (q) {
            I *= l;
            var J = (r * r + s * s - H * H - I * I) / (2 * H * I);
            J < -1 ? J = -1 : J > 1 && (J = 1),
            G = Math.acos(J) * e;
            var w = H + I * J,
            K = I * Math.sin(G);
            F = Math.atan2(s * w - r * K, r * w + s * K)
        } else {
            var w = l * I,
            x = m * I,
            L = Math.atan2(s, r),
            M = w * w,
            N = x * x,
            O = H * H,
            P = r * r + s * s,
            Q = N * O + M * P - M * N,
            R = -2 * N * H,
            S = N - M,
            z = R * R - 4 * S * Q;
            if (z >= 0) {
                var T = Math.sqrt(z);
                R < 0 && (T = -T),
                T = -(R + T) / 2;
                var U = T / S,
                V = Q / T,
                W = Math.abs(U) < Math.abs(V) ? U: V;
                if (W * W <= P) {
                    var E = Math.sqrt(P - W * W) * e;
                    F = L - Math.atan2(E, W),
                    G = Math.atan2(E / m, (W - H) / l);
                    break a
                }
            }
            var X = 0,
            Y = Number.MAX_VALUE,
            Z = 0,
            $ = 0,
            _ = 0,
            aa = 0,
            ba = 0,
            ca = 0,
            D = H + w,
            da = D * D;
            da > aa && (_ = 0, aa = da, ba = D),
            D = H - w,
            da = D * D,
            da < Y && (X = Math.PI, Y = da, Z = D);
            var ea = Math.acos( - w * H / (M - N));
            D = w * Math.cos(ea) + H;
            var E = x * Math.sin(ea);
            da = D * D + E * E,
            da < Y && (X = ea, Y = da, Z = D, $ = E),
            da > aa && (_ = ea, aa = da, ba = D, ca = E),
            P <= (Y + aa) / 2 ? (F = L - Math.atan2($ * e, Z), G = X * e) : (F = L - Math.atan2(ca * e, ba), G = _ * e)
        }
        var fa = Math.atan2(o, n) * i;
        F = (F - fa) * spine.radDeg + g,
        G = (G + fa) * spine.radDeg * i + h,
        F > 180 ? F -= 360 : F < -180 && (F += 360),
        G > 180 ? G -= 360 : G < -180 && (G += 360);
        var ga = a.rotation;
        a.updateWorldTransform(j, k, ga + (F - ga) * f, a.appliedScaleX, a.appliedScaleY),
        ga = b.rotation,
        b.updateWorldTransform(n, o, ga + (G - ga) * f, b.appliedScaleX, b.appliedScaleY)
    }
},
spine.TransformConstraint = function(a, b) {
    this.data = a,
    this.translateMix = a.translateMix,
    this.x = a.x,
    this.y = a.y,
    this.bone = b.findBone(a.bone.name),
    this.target = b.findBone(a.target.name)
},
spine.TransformConstraint.prototype = {
    apply: function() {
        this.update()
    },
    update: function() {
        var a = this.translateMix;
        if (a > 0) {
            var b = spine.temp;
            b[0] = x,
            b[1] = y,
            this.target.localToWorld(b);
            var c = this.bone;
            c.worldX += (b[0] - c.worldX) * a,
            c.worldY += (b[1] - c.worldY) * a
        }
    }
},
spine.Skin = function(a) {
    this.name = a,
    this.attachments = {}
},
spine.Skin.prototype = {
    addAttachment: function(a, b, c) {
        this.attachments[a + ":" + b] = c
    },
    getAttachment: function(a, b) {
        return this.attachments[a + ":" + b]
    },
    _attachAll: function(a, b) {
        for (var c in b.attachments) {
            var d = c.indexOf(":"),
            e = parseInt(c.substring(0, d)),
            f = c.substring(d + 1),
            g = a.slots[e];
            if (g.attachment && g.attachment.name == f) {
                var h = this.getAttachment(e, f);
                h && g.setAttachment(h)
            }
        }
    }
},
spine.Animation = function(a, b, c) {
    this.name = a,
    this.timelines = b,
    this.duration = c
},
spine.Animation.prototype = {
    apply: function(a, b, c, d, e) {
        d && 0 != this.duration && (c %= this.duration, b > 0 && (b %= this.duration));
        for (var f = this.timelines,
        g = 0,
        h = f.length; g < h; g++) f[g].apply(a, b, c, e, 1)
    },
    mix: function(a, b, c, d, e, f) {
        d && 0 != this.duration && (c %= this.duration, b > 0 && (b %= this.duration));
        for (var g = this.timelines,
        h = 0,
        i = g.length; h < i; h++) g[h].apply(a, b, c, e, f)
    }
},
spine.Animation.binarySearch = function(a, b, c) {
    var d = 0,
    e = Math.floor(a.length / c) - 2;
    if (!e) return c;
    for (var f = e >>> 1;;) {
        if (a[(f + 1) * c] <= b ? d = f + 1 : e = f, d == e) return (d + 1) * c;
        f = d + e >>> 1
    }
},
spine.Animation.binarySearch1 = function(a, b) {
    var c = 0,
    d = a.length - 2;
    if (!d) return 1;
    for (var e = d >>> 1;;) {
        if (a[e + 1] <= b ? c = e + 1 : d = e, c == d) return c + 1;
        e = c + d >>> 1
    }
},
spine.Animation.linearSearch = function(a, b, c) {
    for (var d = 0,
    e = a.length - c; d <= e; d += c) if (a[d] > b) return d;
    return - 1
},
spine.Curves = function(a) {
    var b = 19 * (a - 1);
    this.curves = new spine.Float32Array(b),
    this.curves.length = b
},
spine.Curves.prototype = {
    setLinear: function(a) {
        this.curves[19 * a] = 0
    },
    setStepped: function(a) {
        this.curves[19 * a] = 1
    },
    setCurve: function(a, b, c, d, e) {
        var f = .1,
        g = f * f,
        h = g * f,
        i = 3 * f,
        j = 3 * g,
        k = 6 * g,
        l = 6 * h,
        m = 2 * -b + d,
        n = 2 * -c + e,
        o = 3 * (b - d) + 1,
        p = 3 * (c - e) + 1,
        q = b * i + m * j + o * h,
        r = c * i + n * j + p * h,
        s = m * k + o * l,
        t = n * k + p * l,
        u = o * l,
        v = p * l,
        w = 19 * a,
        x = this.curves;
        x[w++] = 2;
        for (var y = q,
        z = r,
        A = w + 19 - 1; w < A; w += 2) x[w] = y,
        x[w + 1] = z,
        q += s,
        r += t,
        s += u,
        t += v,
        y += q,
        z += r
    },
    getCurvePercent: function(a, b) {
        b = b < 0 ? 0 : b > 1 ? 1 : b;
        var c = this.curves,
        d = 19 * a,
        e = c[d];
        if (0 === e) return b;
        if (1 == e) return 0;
        d++;
        for (var f = 0,
        g = d,
        h = d + 19 - 1; d < h; d += 2) if (f = c[d], f >= b) {
            var i, j;
            return d == g ? (i = 0, j = 0) : (i = c[d - 2], j = c[d - 1]),
            j + (c[d + 1] - j) * (b - i) / (f - i)
        }
        var k = c[d - 1];
        return k + (1 - k) * (b - f) / (1 - f)
    }
},
spine.RotateTimeline = function(a) {
    this.curves = new spine.Curves(a),
    this.frames = new spine.Float32Array(2 * a),
    this.frames.length = 2 * a
},
spine.RotateTimeline.prototype = {
    boneIndex: 0,
    getFrameCount: function() {
        return this.frames.length / 2
    },
    setFrame: function(a, b, c) {
        a *= 2,
        this.frames[a] = b,
        this.frames[a + 1] = c
    },
    apply: function(a, b, c, d, e) {
        var f = this.frames;
        if (! (c < f[0])) {
            var g = a.bones[this.boneIndex];
            if (c >= f[f.length - 2]) {
                for (var h = g.data.rotation + f[f.length - 1] - g.rotation; h > 180;) h -= 360;
                for (; h < -180;) h += 360;
                return void(g.rotation += h * e)
            }
            var i = spine.Animation.binarySearch(f, c, 2),
            j = f[i - 1],
            k = f[i],
            l = 1 - (c - k) / (f[i - 2] - k);
            l = this.curves.getCurvePercent(i / 2 - 1, l);
            for (var h = f[i + 1] - j; h > 180;) h -= 360;
            for (; h < -180;) h += 360;
            for (h = g.data.rotation + (j + h * l) - g.rotation; h > 180;) h -= 360;
            for (; h < -180;) h += 360;
            g.rotation += h * e
        }
    }
},
spine.TranslateTimeline = function(a) {
    this.curves = new spine.Curves(a),
    this.frames = new spine.Float32Array(3 * a),
    this.frames.length = 3 * a
},
spine.TranslateTimeline.prototype = {
    boneIndex: 0,
    getFrameCount: function() {
        return this.frames.length / 3
    },
    setFrame: function(a, b, c, d) {
        a *= 3,
        this.frames[a] = b,
        this.frames[a + 1] = c,
        this.frames[a + 2] = d
    },
    apply: function(a, b, c, d, e) {
        var f = this.frames;
        if (! (c < f[0])) {
            var g = a.bones[this.boneIndex];
            if (c >= f[f.length - 3]) return g.x += (g.data.x + f[f.length - 2] - g.x) * e,
            void(g.y += (g.data.y + f[f.length - 1] - g.y) * e);
            var h = spine.Animation.binarySearch(f, c, 3),
            i = f[h - 2],
            j = f[h - 1],
            k = f[h],
            l = 1 - (c - k) / (f[h + -3] - k);
            l = this.curves.getCurvePercent(h / 3 - 1, l),
            g.x += (g.data.x + i + (f[h + 1] - i) * l - g.x) * e,
            g.y += (g.data.y + j + (f[h + 2] - j) * l - g.y) * e
        }
    }
},
spine.ScaleTimeline = function(a) {
    this.curves = new spine.Curves(a),
    this.frames = new spine.Float32Array(3 * a),
    this.frames.length = 3 * a
},
spine.ScaleTimeline.prototype = {
    boneIndex: 0,
    getFrameCount: function() {
        return this.frames.length / 3
    },
    setFrame: function(a, b, c, d) {
        a *= 3,
        this.frames[a] = b,
        this.frames[a + 1] = c,
        this.frames[a + 2] = d
    },
    apply: function(a, b, c, d, e) {
        var f = this.frames;
        if (! (c < f[0])) {
            var g = a.bones[this.boneIndex];
            if (c >= f[f.length - 3]) return g.scaleX += (g.data.scaleX * f[f.length - 2] - g.scaleX) * e,
            void(g.scaleY += (g.data.scaleY * f[f.length - 1] - g.scaleY) * e);
            var h = spine.Animation.binarySearch(f, c, 3),
            i = f[h - 2],
            j = f[h - 1],
            k = f[h],
            l = 1 - (c - k) / (f[h + -3] - k);
            l = this.curves.getCurvePercent(h / 3 - 1, l),
            g.scaleX += (g.data.scaleX * (i + (f[h + 1] - i) * l) - g.scaleX) * e,
            g.scaleY += (g.data.scaleY * (j + (f[h + 2] - j) * l) - g.scaleY) * e
        }
    }
},
spine.ColorTimeline = function(a) {
    this.curves = new spine.Curves(a),
    this.frames = new spine.Float32Array(5 * a),
    this.frames.length = 5 * a
},
spine.ColorTimeline.prototype = {
    slotIndex: 0,
    getFrameCount: function() {
        return this.frames.length / 5
    },
    setFrame: function(a, b, c, d, e, f) {
        a *= 5,
        this.frames[a] = b,
        this.frames[a + 1] = c,
        this.frames[a + 2] = d,
        this.frames[a + 3] = e,
        this.frames[a + 4] = f
    },
    apply: function(a, b, c, d, e) {
        var f = this.frames;
        if (! (c < f[0])) {
            var g, h, i, j;
            if (c >= f[f.length - 5]) {
                var k = f.length - 1;
                g = f[k - 3],
                h = f[k - 2],
                i = f[k - 1],
                j = f[k]
            } else {
                var l = spine.Animation.binarySearch(f, c, 5),
                m = f[l - 4],
                n = f[l - 3],
                o = f[l - 2],
                p = f[l - 1],
                q = f[l],
                r = 1 - (c - q) / (f[l - 5] - q);
                r = this.curves.getCurvePercent(l / 5 - 1, r),
                g = m + (f[l + 1] - m) * r,
                h = n + (f[l + 2] - n) * r,
                i = o + (f[l + 3] - o) * r,
                j = p + (f[l + 4] - p) * r
            }
            var s = a.slots[this.slotIndex];
            e < 1 ? (s.r += (g - s.r) * e, s.g += (h - s.g) * e, s.b += (i - s.b) * e, s.a += (j - s.a) * e) : (s.r = g, s.g = h, s.b = i, s.a = j)
        }
    }
},
spine.AttachmentTimeline = function(a) {
    this.curves = new spine.Curves(a),
    this.frames = new spine.Float32Array(a),
    this.frames.length = a,
    this.attachmentNames = [],
    this.attachmentNames.length = a
},
spine.AttachmentTimeline.prototype = {
    slotIndex: 0,
    getFrameCount: function() {
        return this.frames.length
    },
    setFrame: function(a, b, c) {
        this.frames[a] = b,
        this.attachmentNames[a] = c
    },
    apply: function(a, b, c, d, e) {
        var f = this.frames;
        if (c < f[0]) return void(b > c && this.apply(a, b, Number.MAX_VALUE, null, 0));
        b > c && (b = -1);
        var g = c >= f[f.length - 1] ? f.length - 1 : spine.Animation.binarySearch1(f, c) - 1;
        if (! (f[g] < b)) {
            var h = this.attachmentNames[g];
            a.slots[this.slotIndex].setAttachment(h ? a.getAttachmentBySlotIndex(this.slotIndex, h) : null)
        }
    }
},
spine.EventTimeline = function(a) {
    this.frames = new spine.Float32Array(a),
    this.frames.length = a,
    this.events = [],
    this.events.length = a
},
spine.EventTimeline.prototype = {
    getFrameCount: function() {
        return this.frames.length
    },
    setFrame: function(a, b) {
        this.frames[a] = b.time,
        this.events[a] = b
    },
    apply: function(a, b, c, d, e) {
        if (d) {
            var f = this.frames,
            g = f.length;
            if (b > c) this.apply(a, b, Number.MAX_VALUE, d, e),
            b = -1;
            else if (b >= f[g - 1]) return;
            if (! (c < f[0])) {
                var h;
                if (b < f[0]) h = 0;
                else {
                    h = spine.Animation.binarySearch1(f, b);
                    for (var i = f[h]; h > 0 && f[h - 1] == i;) h--
                }
                for (var j = this.events; h < g && c >= f[h]; h++) d[d.length] = j[h]
            }
        }
    }
},
spine.DrawOrderTimeline = function(a) {
    this.frames = new spine.Float32Array(a),
    this.frames.length = a,
    this.drawOrders = [],
    this.drawOrders.length = a
},
spine.DrawOrderTimeline.prototype = {
    getFrameCount: function() {
        return this.frames.length
    },
    setFrame: function(a, b, c) {
        this.frames[a] = b,
        this.drawOrders[a] = c
    },
    apply: function(a, b, c, d, e) {
        var f = this.frames;
        if (! (c < f[0])) {
            var g;
            g = c >= f[f.length - 1] ? f.length - 1 : spine.Animation.binarySearch1(f, c) - 1;
            var h = a.drawOrder,
            i = a.slots,
            j = this.drawOrders[g];
            if (j) for (var k = 0,
            l = j.length; k < l; k++) h[k] = a.slots[j[k]];
            else for (var k = 0,
            l = i.length; k < l; k++) h[k] = i[k]
        }
    }
},
spine.FfdTimeline = function(a) {
    this.curves = new spine.Curves(a),
    this.frames = new spine.Float32Array(a),
    this.frames.length = a,
    this.frameVertices = [],
    this.frameVertices.length = a
},
spine.FfdTimeline.prototype = {
    slotIndex: 0,
    attachment: 0,
    getFrameCount: function() {
        return this.frames.length
    },
    setFrame: function(a, b, c) {
        this.frames[a] = b,
        this.frameVertices[a] = c
    },
    apply: function(a, b, c, d, e) {
        var f = a.slots[this.slotIndex],
        g = f.attachment;
        if (g && (g == this.attachment || g.inheritFFD && g.parentMesh == this.attachment)) {
            var h = this.frames;
            if (! (c < h[0])) {
                var i = this.frameVertices,
                j = i[0].length,
                k = f.attachmentVertices;
                if (k.length != j && (f.attachmentVertices = k = new spine.Float32Array(j), e = 1), c >= h[h.length - 1]) {
                    var l = i[h.length - 1];
                    if (e < 1) for (var m = 0; m < j; m++) k[m] += (l[m] - k[m]) * e;
                    else for (var m = 0; m < j; m++) k[m] = l[m]
                } else {
                    var n = spine.Animation.binarySearch1(h, c),
                    o = h[n],
                    p = 1 - (c - o) / (h[n - 1] - o);
                    p = this.curves.getCurvePercent(n - 1, p < 0 ? 0 : p > 1 ? 1 : p);
                    var q = i[n - 1],
                    r = i[n];
                    if (e < 1) for (var m = 0; m < j; m++) {
                        var s = q[m];
                        k[m] += (s + (r[m] - s) * p - k[m]) * e
                    } else for (var m = 0; m < j; m++) {
                        var s = q[m];
                        k[m] = s + (r[m] - s) * p
                    }
                }
            }
        }
    }
},
spine.IkConstraintTimeline = function(a) {
    this.curves = new spine.Curves(a),
    this.frames = new spine.Float32Array(3 * a),
    this.frames.length = 3 * a
},
spine.IkConstraintTimeline.prototype = {
    ikConstraintIndex: 0,
    getFrameCount: function() {
        return this.frames.length / 3
    },
    setFrame: function(a, b, c, d) {
        a *= 3,
        this.frames[a] = b,
        this.frames[a + 1] = c,
        this.frames[a + 2] = d
    },
    apply: function(a, b, c, d, e) {
        var f = this.frames;
        if (! (c < f[0])) {
            var g = a.ikConstraints[this.ikConstraintIndex];
            if (c >= f[f.length - 3]) return g.mix += (f[f.length - 2] - g.mix) * e,
            void(g.bendDirection = f[f.length - 1]);
            var h = spine.Animation.binarySearch(f, c, 3),
            i = f[h + -2],
            j = f[h],
            k = 1 - (c - j) / (f[h + -3] - j);
            k = this.curves.getCurvePercent(h / 3 - 1, k);
            var l = i + (f[h + 1] - i) * k;
            g.mix += (l - g.mix) * e,
            g.bendDirection = f[h + -1]
        }
    }
},
spine.SkeletonData = function() {
    this.bones = [],
    this.slots = [],
    this.skins = [],
    this.events = [],
    this.animations = [],
    this.ikConstraints = [],
    this.transformConstraints = []
},
spine.SkeletonData.prototype = {
    name: null,
    defaultSkin: null,
    width: 0,
    height: 0,
    version: null,
    hash: null,
    findBone: function(a) {
        for (var b = this.bones,
        c = 0,
        d = b.length; c < d; c++) if (b[c].name == a) return b[c];
        return null
    },
    findBoneIndex: function(a) {
        for (var b = this.bones,
        c = 0,
        d = b.length; c < d; c++) if (b[c].name == a) return c;
        return - 1
    },
    findSlot: function(a) {
        for (var b = this.slots,
        c = 0,
        d = b.length; c < d; c++) if (b[c].name == a) return slot[c];
        return null
    },
    findSlotIndex: function(a) {
        for (var b = this.slots,
        c = 0,
        d = b.length; c < d; c++) if (b[c].name == a) return c;
        return - 1
    },
    findSkin: function(a) {
        for (var b = this.skins,
        c = 0,
        d = b.length; c < d; c++) if (b[c].name == a) return b[c];
        return null
    },
    findEvent: function(a) {
        for (var b = this.events,
        c = 0,
        d = b.length; c < d; c++) if (b[c].name == a) return b[c];
        return null
    },
    findAnimation: function(a) {
        for (var b = this.animations,
        c = 0,
        d = b.length; c < d; c++) if (b[c].name == a) return b[c];
        return null
    },
    findIkConstraint: function(a) {
        for (var b = this.ikConstraints,
        c = 0,
        d = b.length; c < d; c++) if (b[c].name == a) return b[c];
        return null
    },
    findTransformConstraints: function(a) {
        for (var b = this.transformConstraints,
        c = 0,
        d = b.length; c < d; c++) if (b[c].name == a) return b[c];
        return null
    }
},
spine.Skeleton = function(a) {
    this.data = a,
    this.bones = [];
    for (var b = 0,
    c = a.bones.length; b < c; b++) {
        var d = a.bones[b],
        e = d.parent ? this.bones[a.bones.indexOf(d.parent)] : null;
        this.bones[b] = new spine.Bone(d, this, e)
    }
    this.slots = [],
    this.drawOrder = [];
    for (var b = 0,
    c = a.slots.length; b < c; b++) {
        var f = a.slots[b],
        g = this.bones[a.bones.indexOf(f.boneData)],
        h = new spine.Slot(f, g);
        this.slots[b] = h,
        this.drawOrder[b] = h
    }
    this.ikConstraints = [];
    for (var b = 0,
    c = a.ikConstraints.length; b < c; b++) this.ikConstraints[b] = new spine.IkConstraint(a.ikConstraints[b], this);
    this.transformConstraints = [];
    for (var b = 0,
    c = a.transformConstraints.length; b < c; b++) this.transformConstraints[b] = new spine.TransformConstraint(a.transformConstraints[b], this);
    this.cache = [],
    this.updateCache()
},
spine.Skeleton.prototype = {
    x: 0,
    y: 0,
    skin: null,
    r: 1,
    g: 1,
    b: 1,
    a: 1,
    time: 0,
    flipX: !1,
    flipY: !1,
    updateCache: function() {
        var a = this.bones,
        b = this.cache,
        c = this.ikConstraints,
        d = this.transformConstraints,
        e = c.length,
        f = d.length;
        b.length = 0;
        for (var g = 0,
        h = a.length; g < h; g++) {
            var i = a[g];
            b[b.length] = i;
            for (var j = 0; j < e; j++) {
                var k = c[j];
                if (i == k.bones[k.bones.length - 1]) {
                    b[b.length] = k;
                    break
                }
            }
        }
        for (var g = 0; g < f; g++) for (var l = d[g], j = b.length - 1; j >= 0; j--) {
            var m = b[j];
            if (m == l.bone || m == l.target) {
                b.splice(j + 1, 0, l);
                break
            }
        }
    },
    updateWorldTransform: function() {
        for (var a = this.cache,
        b = 0,
        c = a.length; b < c; b++) a[b].update()
    },
    setToSetupPose: function() {
        this.setBonesToSetupPose(),
        this.setSlotsToSetupPose()
    },
    setBonesToSetupPose: function() {
        for (var a = this.bones,
        b = 0,
        c = a.length; b < c; b++) a[b].setToSetupPose();
        for (var d = this.ikConstraints,
        b = 0,
        c = d.length; b < c; b++) {
            var e = d[b];
            e.bendDirection = e.data.bendDirection,
            e.mix = e.data.mix
        }
        for (var f = this.transformConstraints,
        b = 0,
        c = f.length; b < c; b++) {
            var e = f[b];
            e.translateMix = e.data.translateMix,
            e.x = e.data.x,
            e.y = e.data.y
        }
    },
    setSlotsToSetupPose: function() {
        for (var a = this.slots,
        b = this.drawOrder,
        c = 0,
        d = a.length; c < d; c++) b[c] = a[c],
        a[c].setToSetupPose(c)
    },
    getRootBone: function() {
        return this.bones.length ? this.bones[0] : null
    },
    findBone: function(a) {
        for (var b = this.bones,
        c = 0,
        d = b.length; c < d; c++) if (b[c].data.name == a) return b[c];
        return null
    },
    findBoneIndex: function(a) {
        for (var b = this.bones,
        c = 0,
        d = b.length; c < d; c++) if (b[c].data.name == a) return c;
        return - 1
    },
    findSlot: function(a) {
        for (var b = this.slots,
        c = 0,
        d = b.length; c < d; c++) if (b[c].data.name == a) return b[c];
        return null
    },
    findSlotIndex: function(a) {
        for (var b = this.slots,
        c = 0,
        d = b.length; c < d; c++) if (b[c].data.name == a) return c;
        return - 1
    },
    setSkinByName: function(a) {
        var b = this.data.findSkin(a);
        if (!b) throw "Skin not found: " + a;
        this.setSkin(b)
    },
    setSkin: function(a) {
        if (a) if (this.skin) a._attachAll(this, this.skin);
        else for (var b = this.slots,
        c = 0,
        d = b.length; c < d; c++) {
            var e = b[c],
            f = e.data.attachmentName;
            if (f) {
                var g = a.getAttachment(c, f);
                g && e.setAttachment(g)
            }
        }
        this.skin = a
    },
    getAttachmentBySlotName: function(a, b) {
        return this.getAttachmentBySlotIndex(this.data.findSlotIndex(a), b)
    },
    getAttachmentBySlotIndex: function(a, b) {
        if (this.skin) {
            var c = this.skin.getAttachment(a, b);
            if (c) return c
        }
        return this.data.defaultSkin ? this.data.defaultSkin.getAttachment(a, b) : null
    },
    setAttachment: function(a, b) {
        for (var c = this.slots,
        d = 0,
        e = c.length; d < e; d++) {
            var f = c[d];
            if (f.data.name == a) {
                var g = null;
                if (b && (g = this.getAttachmentBySlotIndex(d, b), !g)) throw "Attachment not found: " + b + ", for slot: " + a;
                return void f.setAttachment(g)
            }
        }
        throw "Slot not found: " + a
    },
    findIkConstraint: function(a) {
        for (var b = this.ikConstraints,
        c = 0,
        d = b.length; c < d; c++) if (b[c].data.name == a) return b[c];
        return null
    },
    findTransformConstraint: function(a) {
        for (var b = this.transformConstraints,
        c = 0,
        d = b.length; c < d; c++) if (b[c].data.name == a) return b[c];
        return null
    },
    update: function(a) {
        this.time += a
    }
},
spine.EventData = function(a) {
    this.name = a
},
spine.EventData.prototype = {
    intValue: 0,
    floatValue: 0,
    stringValue: null
},
spine.Event = function(a, b) {
    this.time = a,
    this.data = b
},
spine.Event.prototype = {
    intValue: 0,
    floatValue: 0,
    stringValue: null
},
spine.AttachmentType = {
    region: 0,
    boundingbox: 1,
    mesh: 2,
    weightedmesh: 3,
    linkedmesh: 4,
    weightedlinkedmesh: 5
},
spine.RegionAttachment = function(a) {
    this.name = a,
    this.offset = new spine.Float32Array(8),
    this.offset.length = 8,
    this.uvs = new spine.Float32Array(8),
    this.uvs.length = 8
},
spine.RegionAttachment.prototype = {
    type: spine.AttachmentType.region,
    x: 0,
    y: 0,
    rotation: 0,
    scaleX: 1,
    scaleY: 1,
    width: 0,
    height: 0,
    r: 1,
    g: 1,
    b: 1,
    a: 1,
    path: null,
    rendererObject: null,
    regionOffsetX: 0,
    regionOffsetY: 0,
    regionWidth: 0,
    regionHeight: 0,
    regionOriginalWidth: 0,
    regionOriginalHeight: 0,
    setUVs: function(a, b, c, d, e) {
        var f = this.uvs;
        e ? (f[2] = a, f[3] = d, f[4] = a, f[5] = b, f[6] = c, f[7] = b, f[0] = c, f[1] = d) : (f[0] = a, f[1] = d, f[2] = a, f[3] = b, f[4] = c, f[5] = b, f[6] = c, f[7] = d)
    },
    updateOffset: function() {
        var a = this.width / this.regionOriginalWidth * this.scaleX,
        b = this.height / this.regionOriginalHeight * this.scaleY,
        c = -this.width / 2 * this.scaleX + this.regionOffsetX * a,
        d = -this.height / 2 * this.scaleY + this.regionOffsetY * b,
        e = c + this.regionWidth * a,
        f = d + this.regionHeight * b,
        g = this.rotation * spine.degRad,
        h = Math.cos(g),
        i = Math.sin(g),
        j = c * h + this.x,
        k = c * i,
        l = d * h + this.y,
        m = d * i,
        n = e * h + this.x,
        o = e * i,
        p = f * h + this.y,
        q = f * i,
        r = this.offset;
        r[0] = j - m,
        r[1] = l + k,
        r[2] = j - q,
        r[3] = p + k,
        r[4] = n - q,
        r[5] = p + o,
        r[6] = n - m,
        r[7] = l + o
    },
    computeVertices: function(a, b, c, d) {
        a += c.worldX,
        b += c.worldY;
        var e = c.a,
        f = c.b,
        g = c.c,
        h = c.d,
        i = this.offset;
        d[0] = i[0] * e + i[1] * f + a,
        d[1] = i[0] * g + i[1] * h + b,
        d[2] = i[2] * e + i[3] * f + a,
        d[3] = i[2] * g + i[3] * h + b,
        d[4] = i[4] * e + i[5] * f + a,
        d[5] = i[4] * g + i[5] * h + b,
        d[6] = i[6] * e + i[7] * f + a,
        d[7] = i[6] * g + i[7] * h + b
    }
},
spine.MeshAttachment = function(a) {
    this.name = a
},
spine.MeshAttachment.prototype = {
    type: spine.AttachmentType.mesh,
    vertices: null,
    uvs: null,
    regionUVs: null,
    triangles: null,
    hullLength: 0,
    r: 1,
    g: 1,
    b: 1,
    a: 1,
    path: null,
    inheritFFD: !0,
    parentMesh: null,
    rendererObject: null,
    regionU: 0,
    regionV: 0,
    regionU2: 0,
    regionV2: 0,
    regionRotate: !1,
    regionOffsetX: 0,
    regionOffsetY: 0,
    regionWidth: 0,
    regionHeight: 0,
    regionOriginalWidth: 0,
    regionOriginalHeight: 0,
    edges: null,
    width: 0,
    height: 0,
    updateUVs: function() {
        var a = this.regionU2 - this.regionU,
        b = this.regionV2 - this.regionV,
        c = this.regionUVs.length;
        if (this.uvs && this.uvs.length == c || (this.uvs = new spine.Float32Array(c)), this.regionRotate) for (var d = 0; d < c; d += 2) this.uvs[d] = this.regionU + this.regionUVs[d + 1] * a,
        this.uvs[d + 1] = this.regionV + b - this.regionUVs[d] * b;
        else for (var d = 0; d < c; d += 2) this.uvs[d] = this.regionU + this.regionUVs[d] * a,
        this.uvs[d + 1] = this.regionV + this.regionUVs[d + 1] * b
    },
    computeWorldVertices: function(a, b, c, d) {
        var e = c.bone;
        a += e.worldX,
        b += e.worldY;
        var f = e.a,
        g = e.b,
        h = e.c,
        i = e.d,
        j = this.vertices,
        k = j.length;
        c.attachmentVertices.length == k && (j = c.attachmentVertices);
        for (var l = 0; l < k; l += 2) {
            var m = j[l],
            n = j[l + 1];
            d[l] = m * f + n * g + a,
            d[l + 1] = m * h + n * i + b
        }
    },
    setParentMesh: function(a) {
        this.parentMesh = a,
        a && (this.vertices = a.vertices, this.regionUVs = a.regionUVs, this.triangles = a.triangles, this.hullLength = a.hullLength, this.edges = a.edges, this.width = a.width, this.height = a.height)
    }
},
spine.WeightedMeshAttachment = function(a) {
    this.name = a
},
spine.WeightedMeshAttachment.prototype = {
    type: spine.AttachmentType.weightedmesh,
    bones: null,
    weights: null,
    uvs: null,
    regionUVs: null,
    triangles: null,
    hullLength: 0,
    r: 1,
    g: 1,
    b: 1,
    a: 1,
    path: null,
    inheritFFD: !0,
    parentMesh: null,
    rendererObject: null,
    regionU: 0,
    regionV: 0,
    regionU2: 0,
    regionV2: 0,
    regionRotate: !1,
    regionOffsetX: 0,
    regionOffsetY: 0,
    regionWidth: 0,
    regionHeight: 0,
    regionOriginalWidth: 0,
    regionOriginalHeight: 0,
    edges: null,
    width: 0,
    height: 0,
    updateUVs: function(a, b, c, d, e) {
        var f = this.regionU2 - this.regionU,
        g = this.regionV2 - this.regionV,
        h = this.regionUVs.length;
        if (this.uvs && this.uvs.length == h || (this.uvs = new spine.Float32Array(h)), this.regionRotate) for (var i = 0; i < h; i += 2) this.uvs[i] = this.regionU + this.regionUVs[i + 1] * f,
        this.uvs[i + 1] = this.regionV + g - this.regionUVs[i] * g;
        else for (var i = 0; i < h; i += 2) this.uvs[i] = this.regionU + this.regionUVs[i] * f,
        this.uvs[i + 1] = this.regionV + this.regionUVs[i + 1] * g
    },
    computeWorldVertices: function(a, b, c, d) {
        var e, f, g, h, i, j, k, l = c.bone.skeleton.bones,
        m = this.weights,
        n = this.bones,
        o = 0,
        p = 0,
        q = 0,
        r = 0,
        s = n.length;
        if (c.attachmentVertices.length) for (var t = c.attachmentVertices; p < s; o += 2) {
            for (f = 0, g = 0, e = n[p++] + p; p < e; p++, q += 3, r += 2) h = l[n[p]],
            i = m[q] + t[r],
            j = m[q + 1] + t[r + 1],
            k = m[q + 2],
            f += (i * h.a + j * h.b + h.worldX) * k,
            g += (i * h.c + j * h.d + h.worldY) * k;
            d[o] = f + a,
            d[o + 1] = g + b
        } else for (; p < s; o += 2) {
            for (f = 0, g = 0, e = n[p++] + p; p < e; p++, q += 3) h = l[n[p]],
            i = m[q],
            j = m[q + 1],
            k = m[q + 2],
            f += (i * h.a + j * h.b + h.worldX) * k,
            g += (i * h.c + j * h.d + h.worldY) * k;
            d[o] = f + a,
            d[o + 1] = g + b
        }
    },
    setParentMesh: function(a) {
        this.parentMesh = a,
        a && (this.bones = a.bones, this.weights = a.weights, this.regionUVs = a.regionUVs, this.triangles = a.triangles, this.hullLength = a.hullLength, this.edges = a.edges, this.width = a.width, this.height = a.height)
    }
},
spine.BoundingBoxAttachment = function(a) {
    this.name = a,
    this.vertices = new spine.Float32Array
},
spine.BoundingBoxAttachment.prototype = {
    type: spine.AttachmentType.boundingbox,
    computeWorldVertices: function(a, b, c, d) {
        a += c.worldX,
        b += c.worldY;
        for (var e = c.a,
        f = c.b,
        g = c.c,
        h = c.d,
        i = this.vertices,
        j = 0,
        k = i.length; j < k; j += 2) {
            var l = i[j],
            m = i[j + 1];
            d[j] = l * e + m * f + a,
            d[j + 1] = l * g + m * h + b
        }
    }
},
spine.AnimationStateData = function(a) {
    this.skeletonData = a,
    this.animationToMixTime = {}
},
spine.AnimationStateData.prototype = {
    defaultMix: 0,
    setMixByName: function(a, b, c) {
        var d = this.skeletonData.findAnimation(a);
        if (!d) throw "Animation not found: " + a;
        var e = this.skeletonData.findAnimation(b);
        if (!e) throw "Animation not found: " + b;
        this.setMix(d, e, c)
    },
    setMix: function(a, b, c) {
        this.animationToMixTime[a.name + ":" + b.name] = c
    },
    getMix: function(a, b) {
        var c = a.name + ":" + b.name;
        return this.animationToMixTime.hasOwnProperty(c) ? this.animationToMixTime[c] : this.defaultMix
    }
},
spine.TrackEntry = function() {},
spine.TrackEntry.prototype = {
    next: null,
    previous: null,
    animation: null,
    loop: !1,
    delay: 0,
    time: 0,
    lastTime: -1,
    endTime: 0,
    timeScale: 1,
    mixTime: 0,
    mixDuration: 0,
    mix: 1,
    onStart: null,
    onEnd: null,
    onComplete: null,
    onEvent: null
},
spine.AnimationState = function(a) {
    this.data = a,
    this.tracks = [],
    this.events = []
},
spine.AnimationState.prototype = {
    onStart: null,
    onEnd: null,
    onComplete: null,
    onEvent: null,
    timeScale: 1,
    update: function(a) {
        a *= this.timeScale;
        for (var b = 0; b < this.tracks.length; b++) {
            var c = this.tracks[b];
            if (c) {
                if (c.time += a * c.timeScale, c.previous) {
                    var d = a * c.previous.timeScale;
                    c.previous.time += d,
                    c.mixTime += d
                }
                var e = c.next;
                e ? (e.time = c.lastTime - e.delay, e.time >= 0 && this.setCurrent(b, e)) : !c.loop && c.lastTime >= c.endTime && this.clearTrack(b)
            }
        }
    },
    apply: function(a) {
        for (var b = 0; b < this.tracks.length; b++) {
            var c = this.tracks[b];
            if (c) {
                this.events.length = 0;
                var d = c.time,
                e = c.lastTime,
                f = c.endTime,
                g = c.loop; ! g && d > f && (d = f);
                var h = c.previous;
                if (h) {
                    var i = h.time; ! h.loop && i > h.endTime && (i = h.endTime),
                    h.animation.apply(a, i, i, h.loop, null);
                    var j = c.mixTime / c.mixDuration * c.mix;
                    j >= 1 && (j = 1, c.previous = null),
                    c.animation.mix(a, c.lastTime, d, g, this.events, j)
                } else 1 == c.mix ? c.animation.apply(a, c.lastTime, d, g, this.events) : c.animation.mix(a, c.lastTime, d, g, this.events, c.mix);
                for (var k = 0,
                l = this.events.length; k < l; k++) {
                    var m = this.events[k];
                    c.onEvent && c.onEvent(b, m),
                    this.onEvent && this.onEvent(b, m)
                }
                if (g ? e % f > d % f: e < f && d >= f) {
                    var n = Math.floor(d / f);
                    c.onComplete && c.onComplete(b, n),
                    this.onComplete && this.onComplete(b, n)
                }
                c.lastTime = c.time
            }
        }
    },
    clearTracks: function() {
        for (var a = 0,
        b = this.tracks.length; a < b; a++) this.clearTrack(a);
        this.tracks.length = 0
    },
    clearTrack: function(a) {
        if (! (a >= this.tracks.length)) {
            var b = this.tracks[a];
            b && (b.onEnd && b.onEnd(a), this.onEnd && this.onEnd(a), this.tracks[a] = null)
        }
    },
    _expandToIndex: function(a) {
        if (a < this.tracks.length) return this.tracks[a];
        for (; a >= this.tracks.length;) this.tracks[this.tracks.length] = null;
        return null
    },
    setCurrent: function(a, b) {
        var c = this._expandToIndex(a);
        if (c) {
            var d = c.previous;
            c.previous = null,
            c.onEnd && c.onEnd(a),
            this.onEnd && this.onEnd(a),
            b.mixDuration = this.data.getMix(c.animation, b.animation),
            b.mixDuration > 0 && (b.mixTime = 0, d && c.mixTime / c.mixDuration < .5 ? b.previous = d: b.previous = c)
        }
        this.tracks[a] = b,
        b.onStart && b.onStart(a),
        this.onStart && this.onStart(a)
    },
    setAnimationByName: function(a, b, c) {
        var d = this.data.skeletonData.findAnimation(b);
        if (!d) throw "Animation not found: " + b;
        return this.setAnimation(a, d, c)
    },
    setAnimation: function(a, b, c) {
        var d = new spine.TrackEntry;
        return d.animation = b,
        d.loop = c,
        d.endTime = b.duration,
        this.setCurrent(a, d),
        d
    },
    addAnimationByName: function(a, b, c, d) {
        var e = this.data.skeletonData.findAnimation(b);
        if (!e) throw "Animation not found: " + b;
        return this.addAnimation(a, e, c, d)
    },
    addAnimation: function(a, b, c, d) {
        var e = new spine.TrackEntry;
        e.animation = b,
        e.loop = c,
        e.endTime = b.duration;
        var f = this._expandToIndex(a);
        if (f) {
            for (; f.next;) f = f.next;
            f.next = e
        } else this.tracks[a] = e;
        return d <= 0 && (f ? d += f.endTime - this.data.getMix(f.animation, b) : d = 0),
        e.delay = d,
        e
    },
    getCurrent: function(a) {
        return a >= this.tracks.length ? null: this.tracks[a]
    }
},
spine.SkeletonJson = function(a) {
    this.attachmentLoader = a,
    this.linkedMeshes = []
},
spine.SkeletonJson.prototype = {
    scale: 1,
    readSkeletonData: function(a, b) {
        var c = new spine.SkeletonData;
        c.name = b;
        var d = a.skeleton;
        d && (c.hash = d.hash, c.version = d.spine, c.width = d.width || 0, c.height = d.height || 0);
        for (var e = a.bones,
        f = 0,
        g = e.length; f < g; f++) {
            var h = e[f],
            i = null;
            if (h.parent && (i = c.findBone(h.parent), !i)) throw "Parent bone not found: " + h.parent;
            var j = new spine.BoneData(h.name, i);
            j.length = (h.length || 0) * this.scale,
            j.x = (h.x || 0) * this.scale,
            j.y = (h.y || 0) * this.scale,
            j.rotation = h.rotation || 0,
            j.scaleX = h.hasOwnProperty("scaleX") ? h.scaleX: 1,
            j.scaleY = h.hasOwnProperty("scaleY") ? h.scaleY: 1,
            j.inheritScale = !h.hasOwnProperty("inheritScale") || h.inheritScale,
            j.inheritRotation = !h.hasOwnProperty("inheritRotation") || h.inheritRotation,
            c.bones[f] = j
        }
        var k = a.ik;
        if (k) for (var f = 0,
        g = k.length; f < g; f++) {
            for (var l = k[f], m = new spine.IkConstraintData(l.name), e = l.bones, n = 0, o = e.length; n < o; n++) {
                var p = c.findBone(e[n]);
                if (!p) throw "IK bone not found: " + e[n];
                m.bones[n] = p
            }
            if (m.target = c.findBone(l.target), !m.target) throw "Target bone not found: " + l.target;
            m.bendDirection = !l.hasOwnProperty("bendPositive") || l.bendPositive ? 1 : -1,
            m.mix = l.hasOwnProperty("mix") ? l.mix: 1,
            c.ikConstraints[f] = m
        }
        var q = a.transform;
        if (q) for (var f = 0,
        g = q.length; f < g; f++) {
            var r = q[f],
            s = new spine.TransformConstraintData(r.name);
            if (s.bone = c.findBone(r.bone), !s.bone) throw "Bone not found: " + r.bone;
            if (s.target = c.findBone(r.target), !s.target) throw "Target bone not found: " + r.target;
            s.mix = r.hasOwnProperty("translateMix") ? l.translateMix: 1,
            s.x = (r.x || 0) * this.scale,
            s.y = (r.y || 0) * this.scale,
            c.transformConstraints[f] = s
        }
        for (var t = a.slots,
        f = 0,
        g = t.length; f < g; f++) {
            var u = t[f],
            j = c.findBone(u.bone);
            if (!j) throw "Slot bone not found: " + u.bone;
            var v = new spine.SlotData(u.name, j),
            w = u.color;
            w && (v.r = this.toColor(w, 0), v.g = this.toColor(w, 1), v.b = this.toColor(w, 2), v.a = this.toColor(w, 3)),
            v.attachmentName = u.attachment,
            v.blendMode = spine.BlendMode[u.blend || "normal"],
            c.slots[f] = v
        }
        var x = a.skins;
        for (var y in x) if (x.hasOwnProperty(y)) {
            var z = x[y],
            A = new spine.Skin(y);
            for (var B in z) if (z.hasOwnProperty(B)) {
                var C = c.findSlotIndex(B),
                D = z[B];
                for (var E in D) if (D.hasOwnProperty(E)) {
                    var F = this.readAttachment(A, C, E, D[E]);
                    F && A.addAttachment(C, E, F);
                }
            }
            c.skins[c.skins.length] = A,
            "default" == A.name && (c.defaultSkin = A)
        }
        for (var f = 0,
        g = this.linkedMeshes.length; f < g; f++) {
            var G = this.linkedMeshes[f],
            A = G.skin ? c.findSkin(G.skin) : c.defaultSkin;
            if (!A) throw "Skin not found: " + G.skin;
            var i = A.getAttachment(G.slotIndex, G.parent);
            if (!i) throw "Parent mesh not found: " + G.parent;
            G.mesh.setParentMesh(i),
            G.mesh.updateUVs()
        }
        this.linkedMeshes.length = 0;
        var H = a.events;
        for (var I in H) if (H.hasOwnProperty(I)) {
            var J = H[I],
            K = new spine.EventData(I);
            K.intValue = J.int || 0,
            K.floatValue = J.float || 0,
            K.stringValue = J.string || null,
            c.events[c.events.length] = K
        }
        var L = a.animations;
        for (var M in L) L.hasOwnProperty(M) && this.readAnimation(M, L[M], c);
        return c
    },
    readAttachment: function(a, b, c, d) {
        c = d.name || c;
        var e = d.type || "region";
        "skinnedmesh" == e && (e = "weightedmesh"),
        e = spine.AttachmentType[e];
        var f = d.path || c,
        g = this.scale;
        switch (e) {
        case spine.AttachmentType.region:
            var h = this.attachmentLoader.newRegionAttachment(a, c, f);
            if (!h) return null;
            h.path = f,
            h.x = (d.x || 0) * g,
            h.y = (d.y || 0) * g,
            h.scaleX = d.hasOwnProperty("scaleX") ? d.scaleX: 1,
            h.scaleY = d.hasOwnProperty("scaleY") ? d.scaleY: 1,
            h.rotation = d.rotation || 0,
            h.width = (d.width || 0) * g,
            h.height = (d.height || 0) * g;
            var i = d.color;
            return i && (h.r = this.toColor(i, 0), h.g = this.toColor(i, 1), h.b = this.toColor(i, 2), h.a = this.toColor(i, 3)),
            h.updateOffset(),
            h;
        case spine.AttachmentType.mesh:
        case spine.AttachmentType.linkedmesh:
            var j = this.attachmentLoader.newMeshAttachment(a, c, f);
            return j ? (j.path = f, i = d.color, i && (j.r = this.toColor(i, 0), j.g = this.toColor(i, 1), j.b = this.toColor(i, 2), j.a = this.toColor(i, 3)), j.width = (d.width || 0) * g, j.height = (d.height || 0) * g, d.parent ? (j.inheritFFD = !d.hasOwnProperty("ffd") || d.ffd, this.linkedMeshes[this.linkedMeshes.length] = {
                mesh: j,
                skin: d.skin,
                slotIndex: b,
                parent: d.parent
            }) : (j.vertices = this.getFloatArray(d, "vertices", g), j.triangles = this.getUint32Array(d, "triangles"), j.regionUVs = this.getFloatArray(d, "uvs", 1), j.updateUVs(), j.hullLength = 2 * (d.hull || 0), d.edges && (j.edges = this.getUint16Array(d, "edges"))), j) : null;
        case spine.AttachmentType.weightedmesh:
        case spine.AttachmentType.weightedlinkedmesh:
            var j = this.attachmentLoader.newWeightedMeshAttachment(a, c, f);
            if (!j) return null;
            if (j.path = f, i = d.color, i && (j.r = this.toColor(i, 0), j.g = this.toColor(i, 1), j.b = this.toColor(i, 2), j.a = this.toColor(i, 3)), j.width = (d.width || 0) * g, j.height = (d.height || 0) * g, d.parent) j.inheritFFD = !d.hasOwnProperty("ffd") || d.ffd,
            this.linkedMeshes[this.linkedMeshes.length] = {
                mesh: j,
                skin: d.skin,
                slotIndex: b,
                parent: d.parent
            };
            else {
                for (var k = this.getFloatArray(d, "uvs", 1), l = this.getFloatArray(d, "vertices", 1), m = new spine.Float32Array(3 * k.length * 3), n = new spine.Uint32Array(3 * k.length), o = 0, p = 0, q = 0, r = l.length; o < r;) {
                    var s = 0 | l[o++];
                    n[p++] = s;
                    for (var t = o + 4 * s; o < t;) n[p++] = l[o],
                    m[q++] = l[o + 1] * g,
                    m[q++] = l[o + 2] * g,
                    m[q++] = l[o + 3],
                    o += 4
                }
                j.bones = n,
                j.weights = m,
                j.triangles = this.getUint32Array(d, "triangles"),
                j.regionUVs = k,
                j.updateUVs(),
                j.hullLength = 2 * (d.hull || 0),
                d.edges && (j.edges = this.getUint16Array(d, "edges"))
            }
            return j;
        case spine.AttachmentType.boundingbox:
            var u = this.attachmentLoader.newBoundingBoxAttachment(a, c),
            l = d.vertices;
            u.vertices = new spine.Float32Array(l.length);
            for (var o = 0,
            r = l.length; o < r; o++) u.vertices[o] = l[o] * g;
            return u
        }
        throw "Unknown attachment type: " + e
    },
    readAnimation: function(a, b, c) {
        var d = [],
        e = 0,
        f = b.slots;
        for (var g in f) if (f.hasOwnProperty(g)) {
            var h = f[g],
            i = c.findSlotIndex(g);
            for (var j in h) if (h.hasOwnProperty(j)) {
                var k = h[j];
                if ("color" == j) {
                    var l = new spine.ColorTimeline(k.length);
                    l.slotIndex = i;
                    for (var m = 0,
                    n = 0,
                    o = k.length; n < o; n++) {
                        var p = k[n],
                        q = p.color,
                        r = this.toColor(q, 0),
                        s = this.toColor(q, 1),
                        t = this.toColor(q, 2),
                        u = this.toColor(q, 3);
                        l.setFrame(m, p.time, r, s, t, u),
                        this.readCurve(l, m, p),
                        m++
                    }
                    d[d.length] = l,
                    e = Math.max(e, l.frames[5 * l.getFrameCount() - 5])
                } else {
                    if ("attachment" != j) throw "Invalid timeline type for a slot: " + j + " (" + g + ")";
                    var l = new spine.AttachmentTimeline(k.length);
                    l.slotIndex = i;
                    for (var m = 0,
                    n = 0,
                    o = k.length; n < o; n++) {
                        var p = k[n];
                        l.setFrame(m++, p.time, p.name)
                    }
                    d[d.length] = l,
                    e = Math.max(e, l.frames[l.getFrameCount() - 1])
                }
            }
        }
        var v = b.bones;
        for (var w in v) if (v.hasOwnProperty(w)) {
            var x = c.findBoneIndex(w);
            if (x == -1) throw "Bone not found: " + w;
            var y = v[w];
            for (var j in y) if (y.hasOwnProperty(j)) {
                var k = y[j];
                if ("rotate" == j) {
                    var l = new spine.RotateTimeline(k.length);
                    l.boneIndex = x;
                    for (var m = 0,
                    n = 0,
                    o = k.length; n < o; n++) {
                        var p = k[n];
                        l.setFrame(m, p.time, p.angle),
                        this.readCurve(l, m, p),
                        m++
                    }
                    d[d.length] = l,
                    e = Math.max(e, l.frames[2 * l.getFrameCount() - 2])
                } else {
                    if ("translate" != j && "scale" != j) throw "Invalid timeline type for a bone: " + j + " (" + w + ")";
                    var l, z = 1;
                    "scale" == j ? l = new spine.ScaleTimeline(k.length) : (l = new spine.TranslateTimeline(k.length), z = this.scale),
                    l.boneIndex = x;
                    for (var m = 0,
                    n = 0,
                    o = k.length; n < o; n++) {
                        var p = k[n],
                        A = (p.x || 0) * z,
                        B = (p.y || 0) * z;
                        l.setFrame(m, p.time, A, B),
                        this.readCurve(l, m, p),
                        m++
                    }
                    d[d.length] = l,
                    e = Math.max(e, l.frames[3 * l.getFrameCount() - 3])
                }
            }
        }
        var C = b.ik;
        for (var D in C) if (C.hasOwnProperty(D)) {
            var E = c.findIkConstraint(D),
            k = C[D],
            l = new spine.IkConstraintTimeline(k.length);
            l.ikConstraintIndex = c.ikConstraints.indexOf(E);
            for (var m = 0,
            n = 0,
            o = k.length; n < o; n++) {
                var p = k[n],
                F = p.hasOwnProperty("mix") ? p.mix: 1,
                G = !p.hasOwnProperty("bendPositive") || p.bendPositive ? 1 : -1;
                l.setFrame(m, p.time, F, G),
                this.readCurve(l, m, p),
                m++
            }
            d[d.length] = l,
            e = Math.max(e, l.frames[3 * l.getFrameCount() - 3])
        }
        var H = b.ffd;
        for (var I in H) {
            var J = c.findSkin(I),
            h = H[I];
            for (g in h) {
                var i = c.findSlotIndex(g),
                K = h[g];
                for (var L in K) {
                    var k = K[L],
                    l = new spine.FfdTimeline(k.length),
                    M = J.getAttachment(i, L);
                    if (!M) throw "FFD attachment not found: " + L;
                    l.slotIndex = i,
                    l.attachment = M;
                    var N, O = M.type == spine.AttachmentType.mesh;
                    N = O ? M.vertices.length: M.weights.length / 3 * 2;
                    for (var m = 0,
                    n = 0,
                    o = k.length; n < o; n++) {
                        var P, p = k[n];
                        if (p.vertices) {
                            var Q = p.vertices,
                            P = new spine.Float32Array(N);
                            P.length = N;
                            var R = p.offset || 0,
                            S = Q.length;
                            if (1 == this.scale) for (var T = 0; T < S; T++) P[T + R] = Q[T];
                            else for (var T = 0; T < S; T++) P[T + R] = Q[T] * this.scale;
                            if (O) for (var U = M.vertices,
                            T = 0,
                            S = P.length; T < S; T++) P[T] += U[T]
                        } else O ? P = M.vertices: (P = new spine.Float32Array(N), P.length = N);
                        l.setFrame(m, p.time, P),
                        this.readCurve(l, m, p),
                        m++
                    }
                    d[d.length] = l,
                    e = Math.max(e, l.frames[l.getFrameCount() - 1])
                }
            }
        }
        var V = b.drawOrder;
        if (V || (V = b.draworder), V) {
            for (var l = new spine.DrawOrderTimeline(V.length), W = c.slots.length, m = 0, n = 0, o = V.length; n < o; n++) {
                var X = V[n],
                Y = null;
                if (X.offsets) {
                    Y = new spine.Uint32Array(W),
                    Y.length = W;
                    for (var T = W - 1; T >= 0; T--) Y[T] = 4294967295;
                    var Z = X.offsets,
                    $ = new spine.Uint32Array(W - Z.length);
                    $.length = W - Z.length;
                    for (var _ = 0,
                    aa = 0,
                    T = 0,
                    S = Z.length; T < S; T++) {
                        var ba = Z[T],
                        i = c.findSlotIndex(ba.slot);
                        if (i == -1) throw "Slot not found: " + ba.slot;
                        for (; _ != i;) $[aa++] = _++;
                        Y[_ + ba.offset] = _++
                    }
                    for (; _ < W;) $[aa++] = _++;
                    for (var T = W - 1; T >= 0; T--) 4294967295 == Y[T] && (Y[T] = $[--aa])
                }
                l.setFrame(m++, X.time, Y)
            }
            d[d.length] = l,
            e = Math.max(e, l.frames[l.getFrameCount() - 1])
        }
        var ca = b.events;
        if (ca) {
            for (var l = new spine.EventTimeline(ca.length), m = 0, n = 0, o = ca.length; n < o; n++) {
                var da = ca[n],
                ea = c.findEvent(da.name);
                if (!ea) throw "Event not found: " + da.name;
                var fa = new spine.Event(da.time, ea);
                fa.intValue = da.hasOwnProperty("int") ? da.int: ea.intValue,
                fa.floatValue = da.hasOwnProperty("float") ? da.float: ea.floatValue,
                fa.stringValue = da.hasOwnProperty("string") ? da.string: ea.stringValue,
                l.setFrame(m++, fa)
            }
            d[d.length] = l,
            e = Math.max(e, l.frames[l.getFrameCount() - 1])
        }
        c.animations[c.animations.length] = new spine.Animation(a, d, e)
    },
    readCurve: function(a, b, c) {
        var d = c.curve;
        d ? "stepped" == d ? a.curves.setStepped(b) : d instanceof Array && a.curves.setCurve(b, d[0], d[1], d[2], d[3]) : a.curves.setLinear(b)
    },
    toColor: function(a, b) {
        if (8 != a.length) throw "Color hexidecimal length must be 8, recieved: " + a;
        return parseInt(a.substring(2 * b, 2 * b + 2), 16) / 255
    },
    getFloatArray: function(a, b, c) {
        var d = a[b],
        e = new spine.Float32Array(d.length),
        f = 0,
        g = d.length;
        if (1 == c) for (; f < g; f++) e[f] = d[f];
        else for (; f < g; f++) e[f] = d[f] * c;
        return e
    },
    getUint32Array: function(a, b) {
        for (var c = a[b], d = new spine.Uint32Array(c.length), e = 0, f = c.length; e < f; e++) d[e] = 0 | c[e];
        return d
    },
    getUint16Array: function(a, b) {
        for (var c = a[b], d = new spine.Uint16Array(c.length), e = 0, f = c.length; e < f; e++) d[e] = 0 | c[e];
        return d
    }
},
spine.Atlas = function(a, b) {
    this.textureLoader = b,
    this.pages = [],
    this.regions = [];
    var c = new spine.AtlasReader(a),
    d = [];
    d.length = 4;
    for (var e = null;;) {
        var f = c.readLine();
        if (null === f) break;
        if (f = c.trim(f), f.length) if (e) {
            var g = new spine.AtlasRegion;
            g.name = f,
            g.page = e,
            g.rotate = "true" == c.readValue(),
            c.readTuple(d);
            var h = parseInt(d[0]),
            i = parseInt(d[1]);
            c.readTuple(d);
            var j = parseInt(d[0]),
            k = parseInt(d[1]);
            g.u = h / e.width,
            g.v = i / e.height,
            g.rotate ? (g.u2 = (h + k) / e.width, g.v2 = (i + j) / e.height) : (g.u2 = (h + j) / e.width, g.v2 = (i + k) / e.height),
            g.x = h,
            g.y = i,
            g.width = Math.abs(j),
            g.height = Math.abs(k),
            4 == c.readTuple(d) && (g.splits = [parseInt(d[0]), parseInt(d[1]), parseInt(d[2]), parseInt(d[3])], 4 == c.readTuple(d) && (g.pads = [parseInt(d[0]), parseInt(d[1]), parseInt(d[2]), parseInt(d[3])], c.readTuple(d))),
            g.originalWidth = parseInt(d[0]),
            g.originalHeight = parseInt(d[1]),
            c.readTuple(d),
            g.offsetX = parseInt(d[0]),
            g.offsetY = parseInt(d[1]),
            g.index = parseInt(c.readValue()),
            this.regions[this.regions.length] = g
        } else {
            e = new spine.AtlasPage,
            e.name = f,
            2 == c.readTuple(d) && (e.width = parseInt(d[0]), e.height = parseInt(d[1]), c.readTuple(d)),
            e.format = spine.Atlas.Format[d[0]],
            c.readTuple(d),
            e.minFilter = spine.Atlas.TextureFilter[d[0]],
            e.magFilter = spine.Atlas.TextureFilter[d[1]];
            var l = c.readValue();
            e.uWrap = spine.Atlas.TextureWrap.clampToEdge,
            e.vWrap = spine.Atlas.TextureWrap.clampToEdge,
            "x" == l ? e.uWrap = spine.Atlas.TextureWrap.repeat: "y" == l ? e.vWrap = spine.Atlas.TextureWrap.repeat: "xy" == l && (e.uWrap = e.vWrap = spine.Atlas.TextureWrap.repeat),
            b.load(e, f, this),
            this.pages[this.pages.length] = e
        } else e = null
    }
},
spine.Atlas.prototype = {
    findRegion: function(a) {
        for (var b = this.regions,
        c = 0,
        d = b.length; c < d; c++) if (b[c].name == a) return b[c];
        return null
    },
    dispose: function() {
        for (var a = this.pages,
        b = 0,
        c = a.length; b < c; b++) this.textureLoader.unload(a[b].rendererObject)
    },
    updateUVs: function(a) {
        for (var b = this.regions,
        c = 0,
        d = b.length; c < d; c++) {
            var e = b[c];
            e.page == a && (e.u = e.x / a.width, e.v = e.y / a.height, e.rotate ? (e.u2 = (e.x + e.height) / a.width, e.v2 = (e.y + e.width) / a.height) : (e.u2 = (e.x + e.width) / a.width, e.v2 = (e.y + e.height) / a.height))
        }
    }
},
spine.Atlas.Format = {
    alpha: 0,
    intensity: 1,
    luminanceAlpha: 2,
    rgb565: 3,
    rgba4444: 4,
    rgb888: 5,
    rgba8888: 6
},
spine.Atlas.TextureFilter = {
    nearest: 0,
    linear: 1,
    mipMap: 2,
    mipMapNearestNearest: 3,
    mipMapLinearNearest: 4,
    mipMapNearestLinear: 5,
    mipMapLinearLinear: 6
},
spine.Atlas.TextureWrap = {
    mirroredRepeat: 0,
    clampToEdge: 1,
    repeat: 2
},
spine.AtlasPage = function() {},
spine.AtlasPage.prototype = {
    name: null,
    format: null,
    minFilter: null,
    magFilter: null,
    uWrap: null,
    vWrap: null,
    rendererObject: null,
    width: 0,
    height: 0
},
spine.AtlasRegion = function() {},
spine.AtlasRegion.prototype = {
    page: null,
    name: null,
    x: 0,
    y: 0,
    width: 0,
    height: 0,
    u: 0,
    v: 0,
    u2: 0,
    v2: 0,
    offsetX: 0,
    offsetY: 0,
    originalWidth: 0,
    originalHeight: 0,
    index: 0,
    rotate: !1,
    splits: null,
    pads: null
},
spine.AtlasReader = function(a) {
    this.lines = a.split(/\r\n|\r|\n/)
},
spine.AtlasReader.prototype = {
    index: 0,
    trim: function(a) {
        return a.replace(/^\s+|\s+$/g, "")
    },
    readLine: function() {
        return this.index >= this.lines.length ? null: this.lines[this.index++]
    },
    readValue: function() {
        var a = this.readLine(),
        b = a.indexOf(":");
        if (b == -1) throw "Invalid line: " + a;
        return this.trim(a.substring(b + 1))
    },
    readTuple: function(a) {
        var b = this.readLine(),
        c = b.indexOf(":");
        if (c == -1) throw "Invalid line: " + b;
        for (var d = 0,
        e = c + 1; d < 3; d++) {
            var f = b.indexOf(",", e);
            if (f == -1) break;
            a[d] = this.trim(b.substr(e, f - e)),
            e = f + 1
        }
        return a[d] = this.trim(b.substring(e)),
        d + 1
    }
},
spine.AtlasAttachmentLoader = function(a) {
    this.atlas = a
},
spine.AtlasAttachmentLoader.prototype = {
    newRegionAttachment: function(a, b, c) {
        var d = this.atlas.findRegion(c);
        if (!d) throw "Region not found in atlas: " + c + " (region attachment: " + b + ")";
        var e = new spine.RegionAttachment(b);
        return e.rendererObject = d,
        e.setUVs(d.u, d.v, d.u2, d.v2, d.rotate),
        e.regionOffsetX = d.offsetX,
        e.regionOffsetY = d.offsetY,
        e.regionWidth = d.width,
        e.regionHeight = d.height,
        e.regionOriginalWidth = d.originalWidth,
        e.regionOriginalHeight = d.originalHeight,
        e
    },
    newMeshAttachment: function(a, b, c) {
        var d = this.atlas.findRegion(c);
        if (!d) throw "Region not found in atlas: " + c + " (mesh attachment: " + b + ")";
        var e = new spine.MeshAttachment(b);
        return e.rendererObject = d,
        e.regionU = d.u,
        e.regionV = d.v,
        e.regionU2 = d.u2,
        e.regionV2 = d.v2,
        e.regionRotate = d.rotate,
        e.regionOffsetX = d.offsetX,
        e.regionOffsetY = d.offsetY,
        e.regionWidth = d.width,
        e.regionHeight = d.height,
        e.regionOriginalWidth = d.originalWidth,
        e.regionOriginalHeight = d.originalHeight,
        e
    },
    newWeightedMeshAttachment: function(a, b, c) {
        var d = this.atlas.findRegion(c);
        if (!d) throw "Region not found in atlas: " + c + " (weighted mesh attachment: " + b + ")";
        var e = new spine.WeightedMeshAttachment(b);
        return e.rendererObject = d,
        e.regionU = d.u,
        e.regionV = d.v,
        e.regionU2 = d.u2,
        e.regionV2 = d.v2,
        e.regionRotate = d.rotate,
        e.regionOffsetX = d.offsetX,
        e.regionOffsetY = d.offsetY,
        e.regionWidth = d.width,
        e.regionHeight = d.height,
        e.regionOriginalWidth = d.originalWidth,
        e.regionOriginalHeight = d.originalHeight,
        e
    },
    newBoundingBoxAttachment: function(a, b) {
        return new spine.BoundingBoxAttachment(b)
    }
},
spine.SkeletonBounds = function() {
    this.polygonPool = [],
    this.polygons = [],
    this.boundingBoxes = []
},
spine.SkeletonBounds.prototype = {
    minX: 0,
    minY: 0,
    maxX: 0,
    maxY: 0,
    update: function(a, b) {
        var c = a.slots,
        d = c.length,
        e = a.x,
        f = a.y,
        g = this.boundingBoxes,
        h = this.polygonPool,
        i = this.polygons;
        g.length = 0;
        for (var j = 0,
        k = i.length; j < k; j++) h[h.length] = i[j];
        i.length = 0;
        for (var j = 0; j < d; j++) {
            var l = c[j],
            m = l.attachment;
            if (m.type == spine.AttachmentType.boundingbox) {
                g[g.length] = m;
                var n, o = h.length;
                o > 0 ? (n = h[o - 1], h.splice(o - 1, 1)) : n = new spine.Float32Array,
                i[i.length] = n,
                n.length = m.vertices.length,
                m.computeWorldVertices(e, f, l.bone, n)
            }
        }
        b && this.aabbCompute()
    },
    aabbCompute: function() {
        for (var a = this.polygons,
        b = Number.MAX_VALUE,
        c = Number.MAX_VALUE,
        d = -Number.MAX_VALUE,
        e = -Number.MAX_VALUE,
        f = 0,
        g = a.length; f < g; f++) for (var h = a[f], i = 0, j = h.length; i < j; i += 2) {
            var k = h[i],
            l = h[i + 1];
            b = Math.min(b, k),
            c = Math.min(c, l),
            d = Math.max(d, k),
            e = Math.max(e, l)
        }
        this.minX = b,
        this.minY = c,
        this.maxX = d,
        this.maxY = e
    },
    aabbContainsPoint: function(a, b) {
        return a >= this.minX && a <= this.maxX && b >= this.minY && b <= this.maxY
    },
    aabbIntersectsSegment: function(a, b, c, d) {
        var e = this.minX,
        f = this.minY,
        g = this.maxX,
        h = this.maxY;
        if (a <= e && c <= e || b <= f && d <= f || a >= g && c >= g || b >= h && d >= h) return ! 1;
        var i = (d - b) / (c - a),
        j = i * (e - a) + b;
        if (j > f && j < h) return ! 0;
        if (j = i * (g - a) + b, j > f && j < h) return ! 0;
        var k = (f - b) / i + a;
        return k > e && k < g || (k = (h - b) / i + a, k > e && k < g)
    },
    aabbIntersectsSkeleton: function(a) {
        return this.minX < a.maxX && this.maxX > a.minX && this.minY < a.maxY && this.maxY > a.minY
    },
    containsPoint: function(a, b) {
        for (var c = this.polygons,
        d = 0,
        e = c.length; d < e; d++) if (this.polygonContainsPoint(c[d], a, b)) return this.boundingBoxes[d];
        return null
    },
    intersectsSegment: function(a, b, c, d) {
        for (var e = this.polygons,
        f = 0,
        g = e.length; f < g; f++) if (e[f].intersectsSegment(a, b, c, d)) return this.boundingBoxes[f];
        return null
    },
    polygonContainsPoint: function(a, b, c) {
        for (var d = a.length,
        e = d - 2,
        f = !1,
        g = 0; g < d; g += 2) {
            var h = a[g + 1],
            i = a[e + 1];
            if (h < c && i >= c || i < c && h >= c) {
                var j = a[g];
                j + (c - h) / (i - h) * (a[e] - j) < b && (f = !f)
            }
            e = g
        }
        return f
    },
    polygonIntersectsSegment: function(a, b, c, d, e) {
        for (var f = a.length,
        g = b - d,
        h = c - e,
        i = b * e - c * d,
        j = a[f - 2], k = a[f - 1], l = 0; l < f; l += 2) {
            var m = a[l],
            n = a[l + 1],
            o = j * n - k * m,
            p = j - m,
            q = k - n,
            r = g * q - h * p,
            s = (i * p - g * o) / r;
            if ((s >= j && s <= m || s >= m && s <= j) && (s >= b && s <= d || s >= d && s <= b)) {
                var t = (i * q - h * o) / r;
                if ((t >= k && t <= n || t >= n && t <= k) && (t >= c && t <= e || t >= e && t <= c)) return ! 0
            }
            j = m,
            k = n
        }
        return ! 1
    },
    getPolygon: function(a) {
        var b = this.boundingBoxes.indexOf(a);
        return b == -1 ? null: this.polygons[b]
    },
    getWidth: function() {
        return this.maxX - this.minX
    },
    getHeight: function() {
        return this.maxY - this.minY
    }
};
var __extends = this && this.__extends ||
function(a, b) {
    function c() {
        this.constructor = a
    }
    for (var d in b) b.hasOwnProperty(d) && (a[d] = b[d]);
    a.prototype = null === b ? Object.create(b) : (c.prototype = b.prototype, new c)
},
PhaserSpine; !
function(a) {
    var b = function(b) {
        function c(a, c) {
            var d = b.call(this, a, c) || this;
            return d.addSpineCache(),
            d.addSpineFactory(),
            d.addSpineLoader(),
            d
        }
        return __extends(c, b),
        c.prototype.addSpineLoader = function() {
            Phaser.Loader.prototype.spine = function(a, b, c) {
                var d = this,
                e = a + "Atlas",
                f = {
                    atlas: e,
                    basePath: "" === b.substring(0, b.lastIndexOf("/")) ? ".": b.substring(0, b.lastIndexOf("/")),
                    variants: void 0
                };
                void 0 === c ? c = [""] : f.variants = c,
                c.forEach(function(a) {
                    d.onFileComplete.add(function(b, c) {
                        if (c === e) {
                            new spine.Atlas(d.game.cache.getText(c), {
                                load: function(b, c, e) {
                                    d.image(c, f.basePath + "/" + c.substr(0, c.lastIndexOf(".")) + a + ".png")
                                }
                            })
                        }
                    }),
                    d.text(e, b.substr(0, b.lastIndexOf(".")) + a + ".atlas")
                }),
                this.json(a, b),
                this.game.cache.addSpine(a, f)
            }
        },
        c.prototype.addSpineFactory = function() {
            Phaser.GameObjectFactory.prototype.spine = function(b, c, d, e, f) {
                void 0 === f && (f = this.world);
                var g = new a.Spine(this.game, d, e);
                return g.setToSetupPose(),
                g.position.x = b,
                g.position.y = c,
                f.add(g)
            },
            Phaser.GameObjectCreator.prototype.spine = function(b, c, d, e, f) {
                return new a.Spine(this.game, d, e)
            }
        },
        c.prototype.addSpineCache = function() {
            Phaser.Cache.prototype.spine = {},
            Phaser.Cache.prototype.addSpine = function(a, b) {
                this.spine[a] = b
            },
            Phaser.Cache.prototype.getSpine = function(a) {
                return ! this.spine.hasOwnProperty(a),
                this.spine[a]
            }
        },
        c
    } (Phaser.Plugin);
    b.RESOLUTION_REGEXP = /@(.+)x/,
    a.SpinePlugin = b
} (PhaserSpine || (PhaserSpine = {})),
Phaser.Rope.prototype.postUpdate = function() {},
spine.Bone.yDown = !0;
var PhaserSpine; !
function(a) {
    var b = function(b) {
        function c(c, d, e) {
            var f = b.call(this, c) || this;
            f.imageScale = 1;
            var g = f.game.cache.getSpine(d);
            void 0 !== e && g.variants.indexOf(e) !== -1 ? f.imageScale = f.getScaleFromVariant(e) : g.variants && g.variants.length >= 1 && (f.imageScale = f.getScaleFromVariant(g.variants[0]));
            var h = new a.SpineTextureLoader(c),
            i = new spine.Atlas(c.cache.getText(g.atlas), h),
            j = new spine.AtlasAttachmentLoader(i),
            k = new spine.SkeletonJson(j);
            if (f.skeletonData = k.readSkeletonData(c.cache.getJSON(d)), !f.skeletonData) throw new Error("Spine data must be preloaded using Loader.spine");
            f.onEvent = new Phaser.Signal,
            f.onComplete = new Phaser.Signal,
            f.onEnd = new Phaser.Signal,
            f.skeleton = new spine.Skeleton(f.skeletonData),
            f.skeleton.updateWorldTransform(),
            f.stateData = new spine.AnimationStateData(f.skeletonData),
            f.state = new spine.AnimationState(f.stateData),
            f.state.onEvent = f.onEvent.dispatch.bind(f.onEvent),
            f.state.onComplete = f.onComplete.dispatch.bind(f.onComplete),
            f.state.onEnd = f.onEnd.dispatch.bind(f.onEnd),
            f.slotContainers = [];
            for (var l = 0,
            m = f.skeleton.slots.length; l < m; l++) {
                var n = f.skeleton.slots[l],
                o = n.attachment,
                p = new Phaser.Group(c);
                if (f.slotContainers.push(p), f.add(p), o instanceof spine.RegionAttachment) {
                    var q = o.rendererObject.name,
                    r = f.createSprite(n, o);
                    n.currentSprite = r,
                    n.currentSpriteName = q,
                    p.add(r)
                } else {
                    if (! (o instanceof spine.WeightedMeshAttachment)) continue;
                    var s = f.createMesh(n, o);
                    n.currentMesh = s,
                    n.currentMeshName = o.name,
                    p.add(s)
                }
            }
            return f.autoUpdate = !0,
            f
        }
        return __extends(c, b),
        Object.defineProperty(c.prototype, "autoUpdate", {
            get: function() {
                return this.updateTransform === a.Spine.prototype.autoUpdateTransform
            },
            set: function(b) {
                this.updateTransform = b ? a.Spine.prototype.autoUpdateTransform: PIXI.DisplayObjectContainer.prototype.updateTransform
            },
            enumerable: !0,
            configurable: !0
        }),
        c.prototype.getScaleFromVariant = function(b) {
            var c = a.SpinePlugin.RESOLUTION_REGEXP.exec(b);
            return c ? parseFloat(c[1]) : 1
        },
        c.prototype.setTint = function(a) {
            this.globalTint = a;
            for (var b = this.skeleton.slots,
            c = 0; c < b.length; c++) {
                var d = b[c];
                d.currentSprite.tint = a
            }
        },
        c.prototype.update = function(a) {
            if (void 0 !== a) {
                this.state.update(a),
                this.state.apply(this.skeleton),
                this.skeleton.updateWorldTransform();
                for (var b = this.skeleton.drawOrder,
                c = this.skeleton.slots,
                d = 0,
                e = b.length; d < e; d++) void 0 !== b[d].currentSprite && (this.children[d] = b[d].currentSprite.parent);
                for (var d = 0,
                e = c.length; d < e; d++) {
                    var f = c[d],
                    g = f.attachment,
                    h = this.slotContainers[d];
                    if (g) {
                        var i = g.type;
                        if (i === spine.AttachmentType.region) {
                            if (g.rendererObject && (!f.currentSpriteName || f.currentSpriteName !== g.name)) {
                                var j = g.rendererObject.name;
                                if (void 0 !== f.currentSprite && (f.currentSprite.visible = !1), f.sprites = f.sprites || {},
                                void 0 !== f.sprites[j]) f.sprites[j].visible = !0;
                                else {
                                    var k = this.createSprite(f, g);
                                    h.add(k)
                                }
                                f.currentSprite = f.sprites[j],
                                f.currentSpriteName = j
                            }
                            var l = f.bone;
                            h.position.x = g.x * l.a + g.y * l.b + l.worldX,
                            h.position.y = g.x * l.c + g.y * l.d + l.worldY,
                            h.scale.x = l.getWorldScaleX(),
                            h.scale.y = l.getWorldScaleY(),
                            h.rotation = (l.getWorldRotationX() - g.rotation) * Math.PI / 180,
                            l.getWorldScaleY() < 0 && (h.scale.y = -h.scale.y),
                            l.getWorldScaleX() < 0 && (h.scale.x = -h.scale.x),
                            (l.getWorldScaleY() < 0 || l.getWorldScaleX() < 0) && (h.rotation = -h.rotation),
                            f.currentSprite.blendMode = f.blendMode,
                            this.globalTint || (f.currentSprite.tint = f.currentSprite.tint = parseInt(Phaser.Color.componentToHex(255 * f.r).substring(0, 2) + Phaser.Color.componentToHex(255 * f.g).substring(0, 2) + Phaser.Color.componentToHex(255 * f.b).substring(0, 2), 16))
                        } else {
                            if (i !== spine.AttachmentType.weightedmesh && i !== spine.AttachmentType.weightedlinkedmesh) {
                                h.visible = !1;
                                continue
                            }
                            if (!f.currentMeshName || f.currentMeshName !== g.name) {
                                var m = g.name;
                                if (void 0 !== f.currentMesh && (f.currentMesh.visible = !1), f.meshes = f.meshes || {},
                                void 0 !== f.meshes[m]) f.meshes[m].visible = !0;
                                else {
                                    var n = this.createMesh(f, g);
                                    h.add(n)
                                }
                                f.currentMesh = f.meshes[m],
                                f.currentMeshName = m
                            }
                            g.computeWorldVertices(f.bone.skeleton.x, f.bone.skeleton.y, f, f.currentMesh.vertices)
                        }
                        h.visible = !0,
                        h.alpha = f.a
                    } else h.visible = !1
                }
            }
        },
        c.prototype.destroy = function(a, c) {
            b.prototype.destroy.call(this, !0, c)
        },
        c.prototype.autoUpdateTransform = function() {
            if (c.globalAutoUpdate) {
                this.lastTime = this.lastTime || Date.now();
                var a = .001 * (Date.now() - this.lastTime);
                this.lastTime = Date.now(),
                this.update(a)
            } else this.lastTime = 0;
            PIXI.DisplayObjectContainer.prototype.updateTransform.call(this)
        },
        c.prototype.createSprite = function(a, b) {
            var c = b.rendererObject,
            d = c.page.rendererObject,
            e = new PIXI.Rectangle(c.x, c.y, c.rotate ? c.height: c.width, c.rotate ? c.width: c.height),
            f = new PIXI.Texture(d, e),
            g = new Phaser.Sprite(this.game, 0, 0, f),
            h = c.rotate ? .5 * Math.PI: 0;
            if (g.scale.x = c.width / c.originalWidth * b.scaleX / this.imageScale, g.scale.y = c.height / c.originalHeight * b.scaleY / this.imageScale, g.rotation = h, g.anchor.x = (.5 * c.originalWidth - c.offsetX) / c.width, g.anchor.y = 1 - (.5 * c.originalHeight - c.offsetY) / c.height, g.alpha = b.a, c.rotate) {
                var i = g.scale.x;
                g.scale.x = g.scale.y,
                g.scale.y = i
            }
            return a.sprites = a.sprites || {},
            a.sprites[c.name] = g,
            g
        },
        c.prototype.createMesh = function(a, b) {
            var c = b.rendererObject,
            d = c.page.rendererObject,
            e = new PIXI.Texture(d),
            f = new Phaser.Rope(this.game, 0, 0, e);
            return f.drawMode = 1,
            f.canvasPadding = 1.5,
            f.vertices = new spine.Float32Array(b.uvs.length),
            f.uvs = b.uvs,
            f.indices = b.triangles,
            f.alpha = b.a,
            a.meshes = a.meshes || {},
            a.meshes[b.name] = f,
            f
        },
        c.prototype.setMixByName = function(a, b, c) {
            this.stateData.setMixByName(a, b, c)
        },
        c.prototype.setAnimationByName = function(a, b, c) {
            void 0 === c && (c = !1);
            var d = this.state.data.skeletonData.findAnimation(b);
            return d ? this.state.setAnimation(a, d, c) : null
        },
        c.prototype.addAnimationByName = function(a, b, c, d) {
            void 0 === c && (c = !1),
            void 0 === d && (d = 0);
            var e = this.state.data.skeletonData.findAnimation(b);
            return e ? this.state.addAnimation(a, e, c, d) : null
        },
        c.prototype.getCurrentAnimationForTrack = function(a) {
            return this.state.tracks[a].animation.name
        },
        c.prototype.setSkinByName = function(a) {
            var b = this.skeleton.data.findSkin(a);
            b && this.skeleton.setSkin(b)
        },
        c.prototype.setSkin = function(a) {
            this.skeleton.setSkin(a)
        },
        c.prototype.setToSetupPose = function() {
            this.skeleton.setToSetupPose()
        },
        c.prototype.createCombinedSkin = function(a) {
            for (var b = [], c = 1; c < arguments.length; c++) b[c - 1] = arguments[c];
            if (0 !== b.length) {
                for (var d = new spine.Skin(a), e = 0; e < b.length; e++) {
                    var f = b[e],
                    g = this.skeleton.data.findSkin(f);
                    if (!g) return;
                    for (var h in g.attachments) {
                        var i = h.split(":"),
                        j = i[0],
                        k = i[1],
                        l = g.attachments[h];
                        if (void 0 === j || void 0 === k) return;
                        void 0 === d.getAttachment(j, k) && d.addAttachment(j, k, l)
                    }
                }
                return this.skeleton.data.skins.push(d),
                d
            }
        },
        c
    } (Phaser.Group);
    b.globalAutoUpdate = !0,
    a.Spine = b
} (PhaserSpine || (PhaserSpine = {}));
var PhaserSpine; !
function(a) {
    var b = function() {
        function a(a) {
            this.load = function(a, b, c) {
                var d = this.game.make.image(0, 0, b);
                a.rendererObject = d.texture.baseTexture
            },
            this.unload = function(a) {
                a.destroy()
            },
            this.game = a
        }
        return a
    } ();
    a.SpineTextureLoader = b
} (PhaserSpine || (PhaserSpine = {}));;

/*!
 * phaser-super-storage - version 1.0.3 
 * A cross platform storage plugin for Phaser
 *
 * OrangeGames
 * Build at 20-07-2017
 * Released under MIT License 
 */

var PhaserSuperStorage; !
function(a) {
    var b; !
    function(a) {
        var b = function() {
            function a(a) {
                void 0 === a && (a = ""),
                this.namespace = "",
                this.forcePromises = !1,
                this.setNamespace(a)
            }
            return Object.defineProperty(a.prototype, "length", {
                get: function() {
                    return null !== this.getNameSpaceMatches() ? this.getNameSpaceMatches().length: 0
                },
                enumerable: !0,
                configurable: !0
            }),
            a.prototype.key = function(a) {
                var b = this.getNameSpaceMatches()[a],
                c = this.getCookiesForNameSpace()[b] || null;
                return this.forcePromises ? this.promisefy(c) : c
            },
            a.prototype.getItem = function(a) {
                var b = this.getCookiesForNameSpace()[a] || null;
                return this.forcePromises ? this.promisefy(b) : b
            },
            a.prototype.setItem = function(a, b) {
                if (document.cookie = encodeURIComponent(this.namespace + a) + "=" + encodeURIComponent(b) + "; expires=Tue, 19 Jan 2038 03:14:07 GMT; path=/", this.forcePromises) return this.promisefy(null)
            },
            a.prototype.removeItem = function(a) {
                if (document.cookie = encodeURIComponent(this.namespace + a) + "=; expires=Thu, 01 Jan 1970 00:00:00 GMT; path=/", this.forcePromises) return this.promisefy(null)
            },
            a.prototype.clear = function() {
                var a = this.getCookiesForNameSpace();
                for (var b in a) a.hasOwnProperty(b) && this.removeItem(b);
                if (this.forcePromises) return this.promisefy(null)
            },
            a.prototype.setNamespace = function(a) {
                if (a && (this.namespace = a + ":", this.reg = new RegExp("^" + this.namespace + "[a-zA-Z0-9]*", "g")), this.forcePromises) return this.promisefy(a)
            },
            a.prototype.getNameSpaceMatches = function() {
                var a = this,
                b = decodeURIComponent(document.cookie).split("; ");
                return b.filter(function(b) {
                    return null !== b.match(a.reg) && b.match(a.reg).length > 0
                })
            },
            a.prototype.getCookiesForNameSpace = function() {
                var a = this,
                b = {};
                return this.getNameSpaceMatches().forEach(function(c) {
                    var d = c.replace(a.namespace, "").split("=");
                    b[d[0]] = d[1]
                }),
                b
            },
            a.prototype.promisefy = function(a) {
                return new Promise(function(b, c) {
                    b(a)
                })
            },
            a
        } ();
        a.CookieStorage = b
    } (b = a.StorageAdapters || (a.StorageAdapters = {}))
} (PhaserSuperStorage || (PhaserSuperStorage = {}));
var PhaserSuperStorage; !
function(a) {
    var b; !
    function(a) {
        var b = function() {
            function a() {
                this.namespace = "",
                this.keys = []
            }
            return Object.defineProperty(a.prototype, "forcePromises", {
                get: function() {
                    return ! 0
                },
                set: function(a) {},
                enumerable: !0,
                configurable: !0
            }),
            Object.defineProperty(a.prototype, "length", {
                get: function() {
                    return this.keys.length
                },
                enumerable: !0,
                configurable: !0
            }),
            a.prototype.key = function(a) {
                return this.promisefy(this.keys[a])
            },
            a.prototype.getItem = function(a) {
                var b = this;
                return new Promise(function(c, d) {
                    NativeStorage.getItem(b.namespace + a,
                    function(a) {
                        c(a)
                    },
                    function(a) {
                        2 === a.code ? c(null) : d(a)
                    })
                })
            },
            a.prototype.setItem = function(a, b) {
                var c = this;
                return a.length < 1 ? void console.error("CordovaStorage: Key cannot be an empty string!") : new Promise(function(d, e) {
                    NativeStorage.setItem(c.namespace + a, b,
                    function() {
                        c.keys.indexOf(a) < 0 && (c.keys.push(a), c.save()),
                        d(null)
                    },
                    function(a) {
                        e(a)
                    })
                })
            },
            a.prototype.removeItem = function(a) {
                var b = this;
                return new Promise(function(c, d) {
                    NativeStorage.remove(b.namespace + ":" + a,
                    function() {
                        var d = b.keys.indexOf(a);
                        d >= 0 && (b.keys.splice(d, 1), b.save()),
                        c(null)
                    },
                    function(a) {
                        d(a)
                    })
                })
            },
            a.prototype.clear = function() {
                var a = this;
                return new Promise(function(b, c) {
                    for (var d = 0,
                    e = 0; e < a.keys.length; e++) NativeStorage.remove(a.namespace + ":" + a.keys[e],
                    function() {++d >= a.keys.length && (a.keys = [], a.save(), b(null))
                    },
                    function(a) {
                        c(a)
                    })
                })
            },
            a.prototype.setNamespace = function(a) {
                var b = this;
                return void 0 === a && (a = ""),
                this.namespace = a + ":",
                this.keys = [],
                new Promise(function(a, c) {
                    b.load().then(a)["catch"](a)
                })
            },
            a.prototype.promisefy = function(a) {
                return new Promise(function(b, c) {
                    b(a)
                })
            },
            a.prototype.load = function() {
                var a = this;
                return new Promise(function(b, c) {
                    NativeStorage.getItem(a.namespace,
                    function(c) {
                        a.keys = JSON.parse(c),
                        b(null)
                    },
                    function(a) {
                        c(a)
                    })
                })
            },
            a.prototype.save = function() {
                NativeStorage.setItem(this.namespace, JSON.stringify(this.keys),
                function() {},
                function(a) {
                    console.warn("CordovaStorage: Failed to save keys of namespace.")
                })
            },
            a
        } ();
        a.CordovaStorage = b
    } (b = a.StorageAdapters || (a.StorageAdapters = {}))
} (PhaserSuperStorage || (PhaserSuperStorage = {}));
var PhaserSuperStorage; !
function(a) {
    var b; !
    function(b) {
        var c = function() {
            function b(a, b) {
                void 0 === a && (a = ""),
                void 0 === b && (b = "*"),
                this.namespace = "",
                this.expectedOrigin = "",
                this.storageLength = 0,
                this.enabled = !1,
                "" !== a && this.setNamespace(a),
                this.expectedOrigin = b
            }
            return Object.defineProperty(b.prototype, "forcePromises", {
                get: function() {
                    return ! 0
                },
                set: function(a) {},
                enumerable: !0,
                configurable: !0
            }),
            Object.defineProperty(b.prototype, "length", {
                get: function() {
                    return this.storageLength
                },
                enumerable: !0,
                configurable: !0
            }),
            b.prototype.init = function() {
                var b = this;
                return this.sendMessage({
                    command: a.StorageCommand.init
                }).then(function() {
                    b.enabled = !0
                })
            },
            b.prototype.key = function(b) {
                return this.sendMessage({
                    command: a.StorageCommand.key,
                    value: b
                })
            },
            b.prototype.getItem = function(b) {
                return this.sendMessage({
                    command: a.StorageCommand.getItem,
                    key: b
                })
            },
            b.prototype.setItem = function(b, c) {
                return this.sendMessage({
                    command: a.StorageCommand.setItem,
                    key: b,
                    value: c
                })
            },
            b.prototype.removeItem = function(b) {
                return this.sendMessage({
                    command: a.StorageCommand.removeItem,
                    key: b
                })
            },
            b.prototype.clear = function() {
                return this.sendMessage({
                    command: a.StorageCommand.clear
                })
            },
            b.prototype.setNamespace = function(b) {
                return this.sendMessage({
                    command: a.StorageCommand.setNamespace,
                    value: b
                })
            },
            b.prototype.sendMessage = function(b) {
                var c, d = this;
                b.command === a.StorageCommand.init && (c = !1);
                var e = new MessageChannel;
                return new Promise(function(f, g) {
                    d.enabled || b.command === a.StorageCommand.init || g("Messaging not enabled!"),
                    b.command === a.StorageCommand.init && setTimeout(function() {
                        c || g("Unable to get a response in time")
                    },
                    1e3),
                    e.port1.onmessage = function(b) {
                        console.log("Frame received message", b);
                        var e = a.StorageUtils.validateMessage(b.data);
                        switch (e.command === a.StorageCommand.init && (c = !0), void 0 !== e.status && "ok" === e.status || g(e.value), void 0 !== e.length && (d.storageLength = e.length), e.command) {
                        case a.StorageCommand.setNamespace:
                            d.namespace = e.value + ":";
                        case a.StorageCommand.getItem:
                        case a.StorageCommand.length:
                        case a.StorageCommand.key:
                            f(e.value);
                            break;
                        case a.StorageCommand.setItem:
                        case a.StorageCommand.removeItem:
                        case a.StorageCommand.clear:
                        case a.StorageCommand.init:
                            f(e.status);
                            break;
                        default:
                            g(e.value)
                        }
                    },
                    (d.enabled || b.command === a.StorageCommand.init) && (console.log("Sending message to parent: ", b), window.parent.postMessage(b, d.expectedOrigin, [e.port2]))
                })
            },
            b
        } ();
        b.IframeStorage = c
    } (b = a.StorageAdapters || (a.StorageAdapters = {}))
} (PhaserSuperStorage || (PhaserSuperStorage = {}));
var PhaserSuperStorage; !
function(a) {
    var b; !
    function(b) {
        var c = function() {
            function b(a) {
                void 0 === a && (a = ""),
                this.namespace = "",
                this.forcePromises = !1,
                this.setNamespace(a)
            }
            return Object.defineProperty(b.prototype, "length", {
                get: function() {
                    var b = Object.keys(localStorage);
                    return a.StorageUtils.nameSpaceKeyFilter(b, this.namespace).length
                },
                enumerable: !0,
                configurable: !0
            }),
            b.prototype.key = function(a) {
                return this.forcePromises ? this.promisefy(this._key, arguments) : this._key(a)
            },
            b.prototype._key = function(b) {
                var c = Object.keys(localStorage),
                d = a.StorageUtils.nameSpaceKeyFilter(c, this.namespace),
                e = localStorage.getItem(d[b]);
                return e
            },
            b.prototype.getItem = function(a) {
                return this.forcePromises ? this.promisefy(this._getItem, arguments) : this._getItem(a)
            },
            b.prototype._getItem = function(a) {
                return localStorage.getItem(this.namespace + a)
            },
            b.prototype.setItem = function(a, b) {
                return this.forcePromises ? this.promisefy(this._setItem, arguments) : this._setItem(a, b)
            },
            b.prototype._setItem = function(a, b) {
                return localStorage.setItem(this.namespace + a, b)
            },
            b.prototype.removeItem = function(a) {
                return this.forcePromises ? this.promisefy(this._removeItem, arguments) : this._removeItem(a)
            },
            b.prototype._removeItem = function(a) {
                return localStorage.removeItem(this.namespace + a)
            },
            b.prototype.clear = function() {
                return this.forcePromises ? this.promisefy(this._clear, arguments) : this._clear()
            },
            b.prototype._clear = function() {
                for (var b = Object.keys(localStorage), c = a.StorageUtils.nameSpaceKeyFilter(b, this.namespace), d = 0; d < c.length; d++) localStorage.removeItem(c[d])
            },
            b.prototype.setNamespace = function(a) {
                return this.forcePromises ? this.promisefy(this._setNameSpace, arguments) : this._setNameSpace(a)
            },
            b.prototype._setNameSpace = function(a) {
                a && (this.namespace = a + ":")
            },
            b.prototype.promisefy = function(a, b) {
                var c = this;
                return new Promise(function(d, e) {
                    d(a.apply(c, b))
                })
            },
            b
        } ();
        b.LocalStorage = c
    } (b = a.StorageAdapters || (a.StorageAdapters = {}))
} (PhaserSuperStorage || (PhaserSuperStorage = {}));
var PhaserSuperStorage; !
function(a) {
    var b = function() {
        function b(c) {
            if (void 0 !== c) Object.defineProperty(c, "storage", {
                value: this
            });
            else {
                if (null !== b.instance) return b.instance;
                b.instance = this
            }
            a.StorageUtils.isLocalStorageSupport() ? this.setAdapter(new a.StorageAdapters.LocalStorage) : this.setAdapter(new a.StorageAdapters.CookieStorage)
        }
        return b.prototype.setAdapter = function(a) {
            this.storage = a
        },
        Object.defineProperty(b.prototype, "forcePromises", {
            get: function() {
                return this.storage.forcePromises
            },
            set: function(a) {
                this.storage.forcePromises = a
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(b.prototype, "length", {
            get: function() {
                return null === this.storage ? 0 : this.storage.length
            },
            enumerable: !0,
            configurable: !0
        }),
        b.prototype.setNamespace = function(a) {
            if (null !== this.storage) return this.storage.setNamespace(a)
        },
        b.prototype.key = function(a) {
            return null === this.storage ? "": this.storage.key(a)
        },
        b.prototype.getItem = function(a) {
            return null === this.storage ? null: this.storage.getItem(a)
        },
        b.prototype.setItem = function(a, b) {
            if (null !== this.storage) return this.storage.setItem(a, b)
        },
        b.prototype.removeItem = function(a) {
            if (null !== this.storage) return this.storage.removeItem(a)
        },
        b.prototype.clear = function() {
            if (null !== this.storage) return this.storage.clear()
        },
        b.instance = null,
        b
    } ();
    a.StoragePlugin = b
} (PhaserSuperStorage || (PhaserSuperStorage = {})),
void 0 !== window.Phaser && Phaser.Utils.mixinPrototype(PhaserSuperStorage.StoragePlugin, Phaser.Plugin);
var PhaserSuperStorage; !
function(a) { !
    function(a) {
        a[a.init = 0] = "init",
        a[a.setItem = 1] = "setItem",
        a[a.getItem = 2] = "getItem",
        a[a.removeItem = 3] = "removeItem",
        a[a.clear = 4] = "clear",
        a[a.setNamespace = 5] = "setNamespace",
        a[a.length = 6] = "length",
        a[a.key = 7] = "key",
        a[a.error = 8] = "error"
    } (a.StorageCommand || (a.StorageCommand = {}));
    var b = (a.StorageCommand,
    function() {
        function a() {}
        return a.isLocalStorageSupport = function() {
            try {
                if ("object" == typeof localStorage) return localStorage.setItem("testingLocalStorage", "foo"),
                localStorage.removeItem("testingLocalStorage"),
                !0
            } catch(a) {
                return ! 1
            }
            return ! 1
        },
        a.validateMessage = function(a) {
            return a.hasOwnProperty("command") ? a: null
        },
        a.nameSpaceKeyFilter = function(a, b) {
            return a.filter(function(a) {
                return a.substring(0, b.length) === b
            })
        },
        a
    } ());
    a.StorageUtils = b
} (PhaserSuperStorage || (PhaserSuperStorage = {}));;

var __extends = this && this.__extends ||
function() {
    var a = Object.setPrototypeOf || {
        __proto__: []
    }
    instanceof Array &&
    function(a, b) {
        a.__proto__ = b
    } ||
    function(a, b) {
        for (var c in b) b.hasOwnProperty(c) && (a[c] = b[c])
    };
    return function(b, c) {
        function d() {
            this.constructor = b
        }
        a(b, c),
        b.prototype = null === c ? Object.create(c) : (d.prototype = c.prototype, new d)
    }
} (),
Fabrique; !
function(a) {
    var b; !
    function(a) {
        var b = function(a) {
            function b(b, c) {
                var d = a.call(this, b, null, "splash-background") || this;
                return d.back = d.game.make.graphics(0, 0),
                d.add(d.back),
                d.resize(c),
                d
            }
            return __extends(b, a),
            b.prototype.resize = function(a) {
                this.back.clear().beginFill(14548992).drawRect(0, 0, this.game.width, this.game.height)
            },
            b.prototype.update = function() {},
            b.prototype.destroy = function(b) {
                a.prototype.destroy.call(this, b),
                this.back.destroy(!0),
                this.back = null
            },
            b
        } (Phaser.Group);
        a.Bild = b
    } (b = a.SplashScreenBackgrounds || (a.SplashScreenBackgrounds = {}))
} (Fabrique || (Fabrique = {}));
var Fabrique; !
function(a) {
    var b; !
    function(a) {
        var b = function(a) {
            function b(b, c) {
                var d = a.call(this, b, null, "splash-background") || this;
                return d.triangles = [],
                d.triangleSizes = [350, 650, 950, 1250],
                d.back = d.game.make.graphics(0, 0),
                d.t = d.game.make.graphics(0, 0),
                d.gradientBitmap = d.game.make.bitmapData(d.game.width, d.game.height),
                d.gradient = d.game.make.sprite(0, 0, d.gradientBitmap),
                d.add(d.back),
                d.add(d.t),
                d.add(d.gradient),
                d.resize(c),
                d
            }
            return __extends(b, a),
            b.prototype.resize = function(a) {
                var b = this;
                this.back.clear().beginFill(3387647).drawRect(0, 0, this.game.width, this.game.height),
                this.updateTrinagles(a),
                this.t.x = this.game.width / 2,
                this.t.y = this.game.height / 2,
                this.t.clear(),
                this.t.lineStyle(80 * a, 16777215, .3),
                this.triangles.forEach(function(a) {
                    b.t.drawPolygon(a)
                }),
                this.t.angle = 30,
                this.gradientBitmap.resize(this.game.width, this.game.height);
                var c = this.gradientBitmap.context.createLinearGradient(0, 0, 0, this.game.height - 200);
                c.addColorStop(0, "rgba(51, 176, 255, 0)"),
                c.addColorStop(1, "rgba(51, 176, 255, 1)"),
                this.gradientBitmap.context.fillStyle = c,
                this.gradientBitmap.context.clearRect(0, 0, this.game.width, this.game.height),
                this.gradientBitmap.context.fillRect(0, 0, this.game.width, this.game.height)
            },
            b.prototype.updateTrinagles = function(a) {
                var b = this;
                new Phaser.Point(this.game.width / 2, this.game.height / 2);
                this.triangles = [],
                this.triangleSizes.forEach(function(c, d) {
                    c *= a,
                    b.triangles.push(new Phaser.Polygon([new Phaser.Point(c * Math.cos(0), c * Math.sin(0)), new Phaser.Point(c * Math.cos(1 / 3 * (2 * Math.PI)), c * Math.sin(1 / 3 * (2 * Math.PI))), new Phaser.Point(c * Math.cos(2 / 3 * (2 * Math.PI)), c * Math.sin(2 / 3 * (2 * Math.PI))), new Phaser.Point(c * Math.cos(0), c * Math.sin(0))]))
                })
            },
            b.prototype.update = function() {
                this.t.angle += .3
            },
            b.prototype.destroy = function(b) {
                a.prototype.destroy.call(this, b),
                this.back.destroy(!0),
                this.gradientBitmap.destroy(),
                this.gradient.destroy(!0),
                this.t.destroy(!0),
                this.back = null,
                this.gradientBitmap = null,
                this.gradient = null,
                this.t = null,
                this.triangles = null,
                this.triangleSizes = null
            },
            b
        } (Phaser.Group);
        a.FunnyGames = b
    } (b = a.SplashScreenBackgrounds || (a.SplashScreenBackgrounds = {}))
} (Fabrique || (Fabrique = {}));
var Fabrique; !
function(a) {
    var b; !
    function(a) {
        var b = function(a) {
            function b(b, c) {
                var d = a.call(this, b, null, "splash-background") || this;
                return d.gradientBitmap = d.game.make.bitmapData(d.game.width, d.game.height),
                d.gradient = d.game.make.sprite(0, 0, d.gradientBitmap),
                d.add(d.gradient),
                d.resize(c),
                d
            }
            return __extends(b, a),
            b.prototype.resize = function(a) {
                this.gradientBitmap.resize(this.game.width, this.game.height);
                var b = this.gradientBitmap.context.createLinearGradient(0, 0, 0, this.game.height);
                b.addColorStop(0, "rgba(26, 135, 182, 1)"),
                b.addColorStop(.5, "rgba(25, 174, 232, 1)"),
                b.addColorStop(.5, "rgba(3, 114, 165, 1)"),
                b.addColorStop(1, "rgba(8, 147, 203, 1)"),
                this.gradientBitmap.context.fillStyle = b,
                this.gradientBitmap.context.clearRect(0, 0, this.game.width, this.game.height),
                this.gradientBitmap.context.fillRect(0, 0, this.game.width, this.game.height),
                console.log("resie", this.game.width, this.game.height)
            },
            b.prototype.update = function() {},
            b.prototype.destroy = function(b) {
                a.prototype.destroy.call(this, b),
                console.log("destroy!!"),
                console.trace(),
                this.gradientBitmap.destroy(),
                this.gradient.destroy(!0),
                this.gradientBitmap = null,
                this.gradient = null
            },
            b
        } (Phaser.Group);
        a.Kizi = b
    } (b = a.SplashScreenBackgrounds || (a.SplashScreenBackgrounds = {}))
} (Fabrique || (Fabrique = {}));
var Fabrique; !
function(a) {
    var b; !
    function(a) {
        var b = function(a) {
            function b(b, c) {
                var d = a.call(this, b, null, "splash-background") || this;
                return d.back = d.game.make.graphics(0, 0),
                d.gradientBitmap = d.game.make.bitmapData(d.game.width, d.game.height),
                d.gradient = d.game.make.sprite(0, 0, d.gradientBitmap),
                d.add(d.back),
                d.add(d.gradient),
                d.resize(c),
                d
            }
            return __extends(b, a),
            b.prototype.resize = function(a) {
                this.back.clear().beginFill(16770924).drawRect(0, 0, this.game.width, this.game.height)
            },
            b.prototype.destroy = function(b) {
                a.prototype.destroy.call(this, b),
                this.back.destroy(!0),
                this.gradientBitmap.destroy(),
                this.gradient.destroy(!0),
                this.back = null,
                this.gradientBitmap = null,
                this.gradient = null
            },
            b
        } (Phaser.Group);
        a.PlayCell = b
    } (b = a.SplashScreenBackgrounds || (a.SplashScreenBackgrounds = {}))
} (Fabrique || (Fabrique = {}));
var Fabrique; !
function(a) {
    var b; !
    function(a) {
        var b = function(a) {
            function b(b, c) {
                var d = a.call(this, b, null, "splash-background") || this;
                return d.back = d.game.make.graphics(0, 0),
                d.gradientBitmap = d.game.make.bitmapData(d.game.width, d.game.height),
                d.gradient = d.game.make.sprite(0, 0, d.gradientBitmap),
                d.add(d.back),
                d.add(d.gradient),
                d.resize(c),
                d
            }
            return __extends(b, a),
            b.prototype.resize = function(a) {
                this.back.clear().beginFill(4879021).drawRect(0, 0, this.game.width, this.game.height)
            },
            b.prototype.update = function() {},
            b.prototype.destroy = function(b) {
                a.prototype.destroy.call(this, b),
                this.back.destroy(!0),
                this.gradientBitmap.destroy(),
                this.gradient.destroy(!0),
                this.back = null,
                this.gradientBitmap = null,
                this.gradient = null
            },
            b
        } (Phaser.Group);
        a.Spele = b
    } (b = a.SplashScreenBackgrounds || (a.SplashScreenBackgrounds = {}))
} (Fabrique || (Fabrique = {}));
var Fabrique; !
function(a) {
    var b; !
    function(a) {
        var b = function(a) {
            function b(b, c) {
                var d = a.call(this, b, null, "splash-background") || this;
                return d.back = d.game.make.graphics(0, 0),
                d.gradientBitmap = d.game.make.bitmapData(d.game.width, d.game.height),
                d.gradient = d.game.make.sprite(0, 0, d.gradientBitmap),
                d.add(d.back),
                d.add(d.gradient),
                d.resize(c),
                d
            }
            return __extends(b, a),
            b.prototype.resize = function(a) {
                this.back.clear().beginFill(357287).drawRect(0, 0, this.game.width, this.game.height),
                this.gradientBitmap.resize(this.game.width, this.game.height),
                this.gradientBitmap.context.clearRect(0, 0, this.game.width, this.game.height);
                var b = this.gradientBitmap.context.createRadialGradient(this.game.width / 2, this.game.height / 2, 0, this.game.width / 2, this.game.height / 2, this.game.height / 2);
                b.addColorStop(0, "rgba(0, 81, 125, 0)"),
                b.addColorStop(1, "rgba(0, 81, 125, 1)"),
                this.gradientBitmap.context.fillStyle = b,
                this.gradientBitmap.context.fillRect(0, 0, this.game.width, this.game.height);
                var c = this.gradientBitmap.context.createRadialGradient(this.game.width / 2, this.game.height / 2, 0, this.game.width / 2, this.game.height / 2, this.game.height / 2);
                c.addColorStop(0, "rgba(4, 176, 240, 1)"),
                c.addColorStop(1, "rgba(4, 176, 240, 0)"),
                this.gradientBitmap.context.fillStyle = c,
                this.gradientBitmap.context.fillRect(0, 0, this.game.width, this.game.height)
            },
            b.prototype.update = function() {},
            b.prototype.destroy = function(b) {
                a.prototype.destroy.call(this, b),
                this.back.destroy(!0),
                this.gradientBitmap.destroy(),
                this.gradient.destroy(!0),
                this.back = null,
                this.gradientBitmap = null,
                this.gradient = null
            },
            b
        } (Phaser.Group);
        a.Yepi = b
    } (b = a.SplashScreenBackgrounds || (a.SplashScreenBackgrounds = {}))
} (Fabrique || (Fabrique = {}));
var Fabrique; !
function(a) {
    var b; !
    function(a) {
        a[a.splashscreen = 0] = "splashscreen",
        a[a.logo = 1] = "logo",
        a[a.facebook = 2] = "facebook",
        a[a.twitter = 3] = "twitter",
        a[a.playstore = 4] = "playstore",
        a[a.appstore = 5] = "appstore",
        a[a.more_games = 6] = "more_games",
        a[a.download_game = 7] = "download_game",
        a[a.walkthrough = 8] = "walkthrough",
        a[a.disclaimer = 9] = "disclaimer",
        a[a.highscores = 10] = "highscores"
    } (b = a.UtmTargets || (a.UtmTargets = {}));
    var c = function() {
        function c() {}
        return c.preloadImages = function(b) {
            var d;
            switch (a.Utils.isOnDevice(b) || c.isAirfi() ? a.Utils.ASSET_LOCATION = "assets/": a.Utils.isTc() ? a.Utils.ASSET_LOCATION = "/repository/download/Fabrique_FunnyGamesSplash/.lastSuccessful/build/assets/": "fbrq.io" === a.Utils.getSourceSite(!0) && (a.Utils.ASSET_LOCATION = "//" + window.location.host + "/orange-games-splash/assets/"), a.Utils.getBrandingDomain()) {
            case a.BrandingDomain.Spele:
                d = "spele";
                break;
            case a.BrandingDomain.PlayCell:
                d = "playcell";
                break;
            case a.BrandingDomain.Yepi:
                d = "yepi";
                break;
            case a.BrandingDomain.Bild:
                d = "bild";
                break;
            default:
            case a.BrandingDomain.Funnygames:
                d = "funnygames"
            }
            a.Utils.isTc() || (b.load.crossOrigin = "anonymous"),
            b.load.image(c.LOGO_KEY, a.Utils.ASSET_LOCATION + "images/branding_logo_" + d + "_small.png")
        },
        c.openCampaignLink = function(d, e, f) {
            if (a.Utils.isOnDevice(d) || c.isContracted(d) || c.isSpecial(d)) return null;
            var g, h = a.Utils.getSourceSite(),
            i = (a.SplashScreen.Preloader.SPLASH_OVERRIDE !== !1 ? a.BrandingDomain[a.SplashScreen.Preloader.SPLASH_OVERRIDE] : a.Utils.getSourceSite(), a.Utils.isOnDevice(d) ? "https://": "//");
            switch (a.Utils.getBrandingDomain()) {
            case a.BrandingDomain.Spele:
                g = i + "www.spele.nl";
                break;
            case a.BrandingDomain.Yepi:
                g = i + "www.yepi.com";
                break;
            case a.BrandingDomain.PlayCell:
                g = i + "www.playcell.com";
                break;
            case a.BrandingDomain.Bild:
          
            default:
            case a.BrandingDomain.Funnygames:
                g = i + "www.funnygames.nu"
            }
            var k = "string" == typeof f ? f: b[f]
            l.focus()
        },
        c.getLogoWithLink = function(b, d) {
            var e = new Phaser.Image(b, 0, 0, c.LOGO_KEY);
            return a.Utils.isOnDevice(b) || c.isContracted(b) || c.isSpecial(b) || c.isAirfi() || (e.inputEnabled = !0, e.input.useHandCursor = !0, e.events.onInputUp.add(function() {
                a.Branding.openCampaignLink(b, d, a.UtmTargets.logo)
            },
            this)),
            e
        },
        c.isInternal = function(a) {
            return c.hostMatchesList(a.cache.getJSON(c.INTERNAL_PORTALS_KEY))
        },
        c.isContracted = function(a) {
            return c.hostMatchesList(a.cache.getJSON(c.CONTRACTED_PORTALS_KEY))
        },
        c.isSpecial = function(a) {
            return c.hostMatchesList(a.cache.getJSON(c.SPECIAL_PORTALS_KEY))
        },
        c.isBild = function() {
            return "bild.fbrq.io" === window.location.host || window.location.host.indexOf("contentfleet.com") !== -1
        },
        c.isBip = function() {
            return window.location.search.indexOf("bipgaming") !== -1 || "bip.fbrq.io" === window.location.host
        },
        c.isSpil = function() {
            return document.referrer.indexOf("gameplayer.io") !== -1
        },
        c.isAirfi = function() {
            return !! window.hasOwnProperty("airfi") && window.airfi
        },
        c.hostMatchesList = function(b) {
            b = b || [];
            for (var c = a.Utils.getSourceSite(), d = 0; d < b.length; d++) if (c === b[d]) return ! 0;
            return ! 1
        },
        c
    } ();
    c.LOGO_KEY = "branding_logo",
    c.INTERNAL_PORTALS_KEY = "branding_portals",
    c.CONTRACTED_PORTALS_KEY = "branding_contracted",
    c.SPECIAL_PORTALS_KEY = "branding_special",
    c.SITELOCK_PORTALS = "sitelock_portals",
    c.GAME_ICONS_KEY = "more_games",
    a.Branding = c
} (Fabrique || (Fabrique = {}));
var Fabrique; !
function(a) {
    var b = function() {
        function b() {}
        return b.loadPortalScript = function(b) {
            b && b.hasOwnProperty("minijuegos") && b.minijuegos.indexOf(a.Utils.getSourceSite()) !== -1 && (void 0 !== window.mpConfig ? window.mpConfig.partner = "orange-games": window.mpConfig = {
                partner: "orange-games"
            },
            "function" == typeof addScript && addScript("https://ext.minijuegosgratis.com/external-host/main.js", Date.now() / 1e3))
        },
        b
    } ();
    a.PortalScripts = b
} (Fabrique || (Fabrique = {}));
var Fabrique; !
function(a) {
    var b = function() {
        function a() {}
        return a.initialize = function(b, c, d, e) {
            var f = "string" == typeof b.parent ? document.getElementById(b.parent) : b.parent;
            a.container = f.parentNode.appendChild(document.createElement("div")),
            a.container.id = "phaser-vooxe-container",
            a.container.style.position = "absolute",
            a.container.style.zIndex = "9999",
            a.container.style.display = "none",
            a.container.style.top = "0",
            a.container.style.left = "0",
            a.container.style.width = "100%",
            a.container.style.height = "100%",
            a.container.style.overflow = "hidden";
            var g = a.container.appendChild(document.createElement("div"));
            g.style.width = "100%",
            g.style.height = "50px",
            g.style.backgroundColor = "#000000";
            var h = g.appendChild(document.createElement("div"));
            h.innerHTML = "&#x274c;",
            h.style.color = "#ffffff",
            h.style.cssFloat = "right",
            h.style.fontSize = "40px",
            h.style.marginRight = "5px",
            h.style.cursor = "pointer",
            h.addEventListener("click",
            function() {
                return a.hide()
            });
            var i = {
                container: "phaser-vooxe-container",
                gameId: c,
                publisherId: "dc63a91fa184423482808bed4d782320",
                width: window.innerWidth + "px",
                height: window.innerHeight - 50 + "px",
                title: d,
                category: e,
                langCode: "en-us",
                autoplay: "no",
                onFound: function(a) {},
                onError: function(a) {},
                onReady: function(b) {
                    a.playerInstance = b
                }
            }; !
            function(a, b, c, d, e, f, g) {
                a.VooxeVideo = e,
                a[e] = a[e] ||
                function() { (a[e].q = a[e].q || []).push(arguments)
                },
                a[e].l = Date.now(),
                f = b.createElement(c),
                g = b.getElementsByTagName(c)[0],
                f.async = 1,
                f.src = d,
                g.parentNode.insertBefore(f, g)
            } (window, document, "script", "//video-static.vooxe.com/libs/gd/gd.js", "gdPlayer", void 0, void 0),
            gdPlayer(i)
        },
        a.play = function(b) {
            return null !== a.playerInstance && (a.playerInstance.play(b), !0)
        },
        a.pause = function() {
            return null !== a.playerInstance && (a.playerInstance.pause(), !0)
        },
        a.show = function() {
            return null !== a.playerInstance && (a.container.style.display = "block", !0)
        },
        a.hide = function() {
            return null !== a.playerInstance && (a.pause(), a.container.style.display = "none", a.onClose.dispatch(), !0)
        },
        a.setVolume = function(b) {
            null !== a.playerInstance && (b > 1 || b < 0 || a.playerInstance.setVolume(b))
        },
        a.getCuePoints = function() {
            if (null !== a.playerInstance) return a.playerInstance.cuePoints()
        },
        a
    } ();
    b.playerInstance = null,
    b.onClose = new Phaser.Signal,
    a.Tubia = b
} (Fabrique || (Fabrique = {}));
var Fabrique; !
function(a) {
    var b; !
    function(a) {
        a[a.Neutral = 0] = "Neutral",
        a[a.Yepi = 1] = "Yepi",
        a[a.Spele = 2] = "Spele",
        a[a.Funnygames = 3] = "Funnygames",
        a[a.Kizi = 4] = "Kizi",
        a[a.PlayCell = 5] = "PlayCell",
        a[a.Bild = 6] = "Bild"
    } (b = a.BrandingDomain || (a.BrandingDomain = {}))
} (Fabrique || (Fabrique = {}));
var Fabrique; !
function(a) {
    var b; !
    function(a) {
        var b = function(a) {
            function b(b, c, d, e, f, g, h) {
                var i = a.call(this, b, d, e, "", null, null) || this;
                i.onInputUp.add(i.openGame, i),
                i.id = c.data.key,
                i.url = c.data.url,
                i.icon = i.game.add.image(0, 0, c.data.key),
                i.icon.width = f,
                i.icon.height = f,
                i.input.priorityID = 680,
                i.addChild(i.icon);
                var j = i.game.make.graphics(0, 0);
                j.beginFill(h).drawRect(0, 0, f, g - f).endFill(),
                i.titleBg = i.game.add.image(0, f, j.generateTexture()),
                i.addChild(i.titleBg);
                var k = c.data.title;
                return k.length > 16 && (k = k.replace(k.substring(14, k.length), "...")),
                i.title = i.game.add.text(f / 2, i.titleBg.y + (g - f) / 2 + 4, k.toUpperCase(), {
                    font: "bold " + .35 * (g - f) + "px Arial",
                    fill: "#FFF",
                    align: "center",
                    wordWrap: !0,
                    wordWrapWidth: f - 10
                }),
                i.title.anchor.set(.5, .5),
                i.addChild(i.title),
                j = i.game.make.graphics(0, 0),
                j.beginFill(16777215).drawCircle(0, 0, 80).beginFill(h).lineTo( - 15, -25).lineTo(25, 0).lineTo( - 15, 25).lineTo( - 15, -25).endFill(),
                i.playImg = i.game.add.image(f / 2, f / 3 * 2.7, j.generateTexture()),
                i.playImg.anchor.set(.5, .5),
                i.addChild(i.playImg),
                i
            }
            return __extends(b, a),
            b.prototype.openGame = function() {
                this.game.analytics && this.game.analytics.google.sendGenericEvent("MoreGames", "Click", this.id),
                this.url.indexOf("http://") !== -1 && this.url.replace("http:", "");
              
                a.focus()
            },
            b.prototype.destroy = function() {
                this.onInputUp.remove(this.openGame, this),
                a.prototype.destroy.call(this),
                this.removedFromWorld()
            },
            b
        } (Phaser.Button);
        a.Item = b
    } (b = a.MoreGames || (a.MoreGames = {}))
} (Fabrique || (Fabrique = {}));
var Fabrique; !
function(a) {
    var b; !
    function(b) {
        var c = function(c) {
            function d(b, d) {
                var e = c.call(this, b, null, "moreGames-background") || this;
                e.size = 800,
                e.items = [],
                e.offset = 14,
                e.isDestroyed = !1,
                e.gameName = d,
                e.deviceRatio = b.width / e.size,
                e.overlay = b.add.graphics(0, 0),
                e.overlay.beginFill(0, .4).drawRect(0, 0, b.width, b.height).endFill(),
                e.overlay.pivot.set(b.width / 2, b.height / 2),
                e.overlay.inputEnabled = !0,
                e.overlay.input.priorityID = 660,
                e.onClose = new Phaser.Signal,
                e.overlay.events.onInputUp.add(function() {
                    e.hide()
                }),
                e.add(e.overlay),
                e.menuGrp = new Phaser.Group(b, e, "menuGrp"),
                e.add(e.menuGrp);
                var f = b.make.graphics(0, 0);
                f.beginFill(2507370).drawRoundedRect(0, 0, e.size, e.size + 20, 15).endFill(),
                e.background = e.game.add.image(0, 0, f.generateTexture()),
                e.background.anchor.set(.5),
                e.background.inputEnabled = !0,
                e.background.input.priorityID = 670,
                e.background.input.useHandCursor = !1,
                e.menuGrp.add(e.background),
                e.logoBtn = e.game.add.button(0, -(e.background.height / 2) + e.offset, a.Branding.LOGO_KEY,
                function() {
                    a.Branding.openCampaignLink(e.game, e.gameName, a.UtmTargets.more_games)
                },
                e),
                e.logoBtn.scale.setTo(1),
                e.logoBtn.anchor.set(.5, 0),
                e.menuGrp.add(e.logoBtn),
                e.closeBtn = b.add.button(e.size / 2 - 10, -(e.size / 2) + 25, "close_btn", e.hide, e),
                e.closeBtn.anchor.set(1),
                e.closeBtn.input.priorityID = 680,
                e.menuGrp.add(e.closeBtn),
                e.createItems();
                var g = b.make.graphics(0, 0);
                g.beginFill(2507370).drawRect(0, 0, 270, 40).endFill(),
                e.moreGamesBtn = b.add.button(0, e.background.y + e.background.height / 2 - g.height - e.offset, "",
                function() {
                    a.Branding.openCampaignLink(e.game, e.gameName, a.UtmTargets.more_games)
                },
                e),
                e.moreGamesBtn.texture = g.generateTexture(),
                e.moreGamesBtn.input.priorityID = 680,
                e.moreGamesBtn.anchor.set(.5, 0),
                e.menuGrp.add(e.moreGamesBtn);
                var h = {
                    font: "bold 26px Tahoma",
                    fill: "#ffffff"
                };
                return e.moreGamesText = b.add.text(0, e.moreGamesBtn.height / 2 + 2, "PLAY MORE GAMES", h),
                e.moreGamesText.anchor.set(.5),
                e.moreGamesBtn.addChild(e.moreGamesText),
                e.visible = !1,
                e.resize(),
                e.resizeListener = function() {
                    setTimeout(function() {
                        e.isDestroyed || e.resize()
                    },
                    100)
                },
                e.game.scale.onSizeChange.add(e.resizeListener, e),
                e
            }
            return __extends(d, c),
            d.prototype.createItems = function() {
                this.itemGrp = this.game.make.group(this, "items"),
                this.itemGrp.x = 0,
                this.itemGrp.y = this.size / 2 + this.logoBtn.y + this.logoBtn.height,
                this.menuGrp.add(this.itemGrp);
                var c, e, f, g, h = this.game.cache.getJSON(a.Branding.GAME_ICONS_KEY),
                i = 3,
                j = Math.floor(this.size / i - 1.25 * this.offset),
                k = Math.floor(j + .25 * j),
                l = 0;
                for (var m in h) h.hasOwnProperty(m) && l < 6 && !this.isCurrentGame(m) && (e = l % i * j + this.offset + l % i * this.offset, f = Math.floor(l / i) * k + this.offset + Math.floor(l / i) * this.offset, g = l % d.BG_COLORS.length, c = new b.Item(this.game, h[m], e - this.size / 2, f - this.size / 2, j, k, d.BG_COLORS[g]), this.itemGrp.add(c), this.items.push(c), l++)
            },
            d.prototype.isCurrentGame = function(a) {
                var b = window.location.href.replace(/-/g, "");
                return a = a.replace(/-/g, ""),
                b.indexOf(a) >= 0
            },
            d.prototype.show = function() {
                this.visible || (this.game.analytics && (this.game.analytics.google.sendScreenView("moregames"), this.game.analytics.google.sendGenericEvent("MoreGames", "Open")), this.visible = !0)
            },
            d.prototype.hide = function() {
                this.visible && (this.visible = !1, this.game.analytics && this.game.analytics.google.sendGenericEvent("MoreGames", "Close"), this.onClose && this.onClose.dispatch())
            },
            d.preloadImages = function(b) {
                a.Utils.getSourceSite();
                a.Utils.isOnDevice(b) || a.Branding.isAirfi() ? a.Utils.ASSET_LOCATION = "assets/": a.Utils.isTc() ? a.Utils.ASSET_LOCATION = "/repository/download/Fabrique_FunnyGamesSplash/.lastSuccessful/build/assets/": "fbrq.io" === a.Utils.getSourceSite(!0) && (a.Utils.ASSET_LOCATION = "//" + window.location.host + "/orange-games-splash/assets/"),
                a.Utils.isTc() || (b.load.crossOrigin = "anonymous"),
                b.load.image("close_btn", a.Utils.ASSET_LOCATION + "images/close_btn.png");
                var c = b.cache.getJSON(a.Branding.GAME_ICONS_KEY);
                for (var d in c) c.hasOwnProperty(d) && (c[d].data.key = d, b.load.image(d, a.Utils.ASSET_LOCATION + "icons/" + d + ".png"))
            },
            d.prototype.getScale = function() {
                return this.game.height > this.game.width && this.game.width < this.size ? (this.game.width - 20) / this.size: this.game.width > this.game.height && this.game.height < this.size ? (this.game.height - 40) / this.size: 1
            },
            d.prototype.resize = function() {
                this.scaleFactor = this.getScale(),
                this.overlay.clear().beginFill(0, .4).drawRect(0, 0, this.game.width, this.game.height).endFill(),
                this.overlay.pivot.set(this.game.width / 2, this.game.height / 2),
                this.menuGrp.scale.set(this.scaleFactor)
            },
            d.prototype.destroy = function() {
                this.game.scale.onSizeChange.remove(this.resizeListener, this),
                this.isDestroyed || (this.overlay.destroy(!0), this.overlay = null, this.itemGrp.destroy(!0), this.itemGrp = null, this.menuGrp.destroy(!0), this.menuGrp = null, this.background.destroy(), this.background = null, this.closeBtn.destroy(), this.closeBtn = null, this.moreGamesBtn.destroy(), this.moreGamesBtn = null, this.moreGamesText.destroy(), this.moreGamesText = null, this.logoBtn.destroy(), this.logoBtn = null, this.onClose.removeAll(), this.onClose = null, this.items.forEach(function(a) {
                    a.destroy()
                })),
                this.isDestroyed = !0,
                this.removeAll(!0),
                c.prototype.destroy.call(this)
            },
            d
        } (Phaser.Group);
        c.BG_COLORS = [2201331, 10233776, 15936542, 15690752, 16361509, 5025616],
        b.Menu = c
    } (b = a.MoreGames || (a.MoreGames = {}))
} (Fabrique || (Fabrique = {}));
var Fabrique; !
function(a) {
    var b; !
    function(a) {
        var b = function(a) {
            function b(b, c) {
                var d = a.call(this, b, c) || this;
                return d.ga = GA.getInstance(),
                b.hasOwnProperty("analytics") ? Object.defineProperty(b.analytics, "game", {
                    value: d
                }) : b.analytics = {
                    game: d
                },
                d
            }
            return __extends(b, a),
            b.prototype.setup = function(a, b, c, d, e) {
                void 0 === e && (e = !0),
                this.ga.init(a, b, c, d).addEvent(new GA.Events.User),
                e && this.setupErrorTracking()
            },
            b.prototype.createUser = function(a, b, c, d) {
                return new GA.User(a, b, c, d)
            },
            b.prototype.addEvent = function(a) {
                this.ga.addEvent(a)
            },
            b.prototype.sendEvents = function() {
                this.ga.sendData()
            },
            b.prototype.setupErrorTracking = function() {
                var a = this,
                b = [];
                window.addEventListener("error",
                function(c) {
                    if (b.indexOf(c.message) === -1) {
                        b.push(c.message);
                        var d = "Error: " + c.message;
                        c.filename && (d += "\nurl: " + c.filename),
                        c.lineno && (d += "\nline: " + c.lineno),
                        c.colno && (d += "\ncolumn: " + c.colno),
                        c.error && (d += "\nDetails: " + c.error),
                        a.ga.addEvent(new GA.Events.Exception(GA.Events.ErrorSeverity.critical, d)).sendData()
                    }
                }),
                window.addEventListener("error",
                function(b) {
                    var c = b.message;
                    b.hasOwnProperty("error") && b.error.hasOwnProperty("stack") && (c = b.error.stack),
                    a.ga.addEvent(new GA.Events.Exception(GA.Events.ErrorSeverity.critical, c)).sendData()
                })
            },
            b
        } (Phaser.Plugin);
        a.GameAnalytics = b
    } (b = a.Plugins || (a.Plugins = {}))
} (Fabrique || (Fabrique = {}));
var Fabrique; !
function(a) {
    var b; !
    function(b) {
        var c = function(b) {
            function c(c, d) {
                var e = b.call(this, c, d) || this;
                c.hasOwnProperty("analytics") ? Object.defineProperty(c.analytics, "google", {
                    value: e
                }) : c.analytics = {
                    google: e
                };
                var f = a.Utils.isOnDevice(c) ? "https://": "//";
                return function(a, b, c, d, e, f, g) {
                    a.GoogleAnalyticsObject = e,
                    a[e] = a[e] ? a[e] : function() { (a[e].q = a[e].q || []).push(arguments)
                    },
                    a[e].l = Date.now(),
                    f = b.createElement(c),
                    g = b.getElementsByTagName(c)[0],
                    f.async = 1,
                    f.src = d
                    // g.parentNode.insertBefore(f, g)
                } (window, document, "script", f + "./analytics.js", "ga"),
                window.DS_OPTIONS = {
                    id: "fbrq",
                    success: function(a) {
                        ga("fbrq.set", "userId", a),
                        ga("fbrq.set", "dimension1", a),
                        ga("send", "event", "Identification", "complete")
                    }
                },
               
                e
            }
            return __extends(c, b),
            c.prototype.setup = function(b, c, d, e) {
                if (void 0 === e && (e = "auto"), ga("create", b, e), a.Utils.isOnDevice(this.game) && ga("set", "checkProtocolTask", null), void 0 !== c && ga("set", "appName", c), void 0 !== c && ga("set", "appVersion", d), ga("send", "pageview"), "auto" !== e) {
                    var f = {
                        name: "fbrq"
                    };
                    for (var g in e) e.hasOwnProperty(g) && (f[g] = e[g]);
                    ga("create", "UA-78960661-1", f)
                } else ga("create", "UA-78960661-1", e, "fbrq");
                if (a.Branding.isSpil()) {
                    var h = a.Utils.getReferrer(decodeURIComponent(document.referrer));
                    ga("fbrq.set", "referrer", h),
                    ga("set", "referrer", h)
                }
                return a.Utils.isOnDevice(this.game) && ga("fbrq.set", "checkProtocolTask", null),
                ga("fbrq.send", "pageview"),
                ga("fbrq.set", "appName", "All"),
                ga
            },
            c.prototype.sendScreenView = function(a) {
                ga("fbrq.send", "screenview", {
                    screenName: a
                }),
                ga("send", "screenview", {
                    screenName: a
                })
            },
            c.prototype.sendGenericEvent = function(a, b, c) {
                ga("fbrq.send", "event", a, b, c)
            },
            c
        } (Phaser.Plugin);
        b.GoogleAnalytics = c
    } (b = a.Plugins || (a.Plugins = {}))
} (Fabrique || (Fabrique = {}));
var Fabrique; !
function(a) {
    var b; !
    function(a) {
        var b = function(a) {
            function b(b, c) {
                var d = a.call(this, b, c) || this;
                return b.hasOwnProperty("events") ? console.warn("Events property already exists on game") : b.events = {
                    onGameStart: new Phaser.Signal,
                    onGameEnd: new Phaser.Signal,
                    onLevelStart: new Phaser.Signal,
                    onLevelEnd: new Phaser.Signal,
                    onPause: new Phaser.Signal,
                    onResume: new Phaser.Signal
                },
                d
            }
            return __extends(b, a),
            b
        } (Phaser.Plugin);
        a.GameEvents = b
    } (b = a.Plugins || (a.Plugins = {}))
} (Fabrique || (Fabrique = {}));
var Fabrique; !
function(a) {
    var b; !
    function(b) {
        var c = function(c) {
            function d() {
                var a = c.call(this) || this;
                return a.name = d.Name,
                a.scaleFactor = 1,
                a.created = !1,
                a
            }
            return __extends(d, c),
            d.prototype.init = function(b) {
                if (this.config = b, d.SPLASH_OVERRIDE = "number" == typeof b.splashOverride && b.splashOverride, this.game.scale.onSizeChange.add(this.resize, this), void 0 === !this.game.load.spine) throw new Error("You tried to play the Splash screen without spine support enabled!");
                a.Utils.isOnDevice(this.game) || a.Branding.isAirfi() ? a.Utils.ASSET_LOCATION = "assets/": a.Utils.isTc() ? a.Utils.ASSET_LOCATION = "/repository/download/Fabrique_FunnyGamesSplash/.lastSuccessful/build/assets/": "fbrq.io" === a.Utils.getSourceSite(!0) && (a.Utils.ASSET_LOCATION = "//" + window.location.host + "/@orange-games/splash/assets/"),
                a.Utils.registerAudioUnlocker(this.game)
            },
            d.prototype.preload = function() {
                this.scaleFactor = this.getScale(),
                a.Utils.isTc() || (this.game.load.crossOrigin = "anonymous");
                var b = Date.now() / 1e3 | 0;
                switch (a.Utils.isOnDevice(this.game), a.Utils.getBrandingDomain()) {
                case a.BrandingDomain.Spele:
                    this.background = new a.SplashScreenBackgrounds.Spele(this.game, this.scaleFactor),
                    this.game.add.existing(this.background);
                    break;
                case a.BrandingDomain.PlayCell:
                    this.background = new a.SplashScreenBackgrounds.PlayCell(this.game, this.scaleFactor),
                    this.game.add.existing(this.background);
                    break;
                case a.BrandingDomain.Yepi:
                    this.background = new a.SplashScreenBackgrounds.Yepi(this.game, this.scaleFactor),
                    this.game.add.existing(this.background);
                    break;
                case a.BrandingDomain.Kizi:
                    this.background = new a.SplashScreenBackgrounds.Kizi(this.game, this.scaleFactor),
                    this.game.add.existing(this.background);
                    break;
                case a.BrandingDomain.Bild:
                    this.background = new a.SplashScreenBackgrounds.Bild(this.game, this.scaleFactor),
                    this.game.add.existing(this.background);
                    break;
                default:
                case a.BrandingDomain.Funnygames:
                    this.background = new a.SplashScreenBackgrounds.FunnyGames(this.game, this.scaleFactor),
                    this.game.add.existing(this.background)
                }
            },
            d.prototype.getScale = function() {
                return this.game.device.desktop ? this.game.width < 1.5 * b.FunnyGames.IdealWidth ? this.game.width / 6 * 4 / b.FunnyGames.IdealWidth: 1 : this.game.width < this.game.height ? this.game.width / 6 * 4 / b.FunnyGames.IdealWidth: this.game.width / 6 * 3 / b.FunnyGames.IdealWidth
            },
            d.prototype.loadUpdate = function() {
                this.background.update()
            },
            d.prototype.update = function() {
                this.background.update()
            },
            d.prototype.resize = function() {
                this.scaleFactor = this.getScale(),
                this.background.resize(this.scaleFactor)
            },
            d.prototype.shutdown = function() {
                this.game.scale.onSizeChange.remove(this.resize, this),
                this.world.remove(this.background)
            },
            d.prototype.create = function() {
                a.Domain.setList(this.cache.getJSON(a.Domain.KEY, !0)),
                a.PortalScripts.loadPortalScript(this.cache.getJSON(a.Branding.SITELOCK_PORTALS)),
                this.game.state.add(b.SplashPreloader.Name, b.SplashPreloader),
                this.game.state.start(b.SplashPreloader.Name, !0, !1, this.config, this.background)
            },
            d
        } (Phaser.State);
        c.Name = "preloader",
        c.SPLASH_OVERRIDE = !1,
        b.Preloader = c
    } (b = a.SplashScreen || (a.SplashScreen = {}))
} (Fabrique || (Fabrique = {}));
var Fabrique; !
function(a) {
    var b; !
    function(b) {
        var c = function(c) {
            function d() {
                var a = c.call(this) || this;
                return a.name = d.Name,
                a.scaleFactor = 1,
                a
            }
            return __extends(d, c),
            d.prototype.init = function(a, b) {
                this.config = a,
                this.game.scale.onSizeChange.add(this.resize, this),
                this.background = b,
                this.game.add.existing(this.background)
            },
            d.prototype.preload = function() {
                if (this.scaleFactor = this.getScale(), a.Utils.isTc() || (this.game.load.crossOrigin = "anonymous"), a.Branding.isSpecial(this.game)) this.game.add.existing(this.background),
                this.game.load.spritesheet("fgs_play", a.Utils.ASSET_LOCATION + "images/fgs_btn_play.png", 130, 130),
                this.game.load.image("loader", a.Utils.ASSET_LOCATION + "images/loader_back.png");
                else switch (a.Utils.getBrandingDomain()) {
                case a.BrandingDomain.Spele:
                    this.game.load.image("ss_play", a.Utils.ASSET_LOCATION + "images/ss_btn_play.png"),
                    this.game.load.spine("ss_splash", a.Utils.ASSET_LOCATION + "spine/ss_splash.json"),
                    this.game.device.iOS ? this.game.load.audio("cheer", [a.Utils.ASSET_LOCATION + "sound/ss_intro.m4a"]) : this.game.load.audio("cheer", [a.Utils.ASSET_LOCATION + "sound/ss_intro.ogg", a.Utils.ASSET_LOCATION + "sound/ss_intro.mp3"]);
                    break;
                case a.BrandingDomain.PlayCell:
                    this.game.load.image("playcell_bg", a.Utils.ASSET_LOCATION + "images/playcell_splash_bg.png"),
                    this.game.load.image("playcell_bubble", a.Utils.ASSET_LOCATION + "images/playcell_splash_bubble.png"),
                    this.game.load.image("playcell_button", a.Utils.ASSET_LOCATION + "images/playcell_splash_button.png");
                    break;
                case a.BrandingDomain.Yepi:
                    this.game.load.spine("yp_splash", a.Utils.ASSET_LOCATION + "spine/yp_splash.json"),
                    this.game.load.atlas("yp_atlas", a.Utils.ASSET_LOCATION + "atlas/yp_atlas.png", a.Utils.ASSET_LOCATION + "atlas/yp_atlas.json");
                    break;
                case a.BrandingDomain.Kizi:
                    this.game.load.image("kizi_button", a.Utils.ASSET_LOCATION + "images/kizi_splash_button.png"),
                    this.game.load.image("kizi_button_push", a.Utils.ASSET_LOCATION + "images/kizi_splash_button_onpush.png"),
                    this.game.load.image("kizi_splash_clouds", a.Utils.ASSET_LOCATION + "images/kizi_splash_bg_cloud.png"),
                    this.game.load.spritesheet("kizi_splash_spritesheet", a.Utils.ASSET_LOCATION + "images/kizi_splash_spritesheet.png", 250, 250, 4);
                    break;
                case a.BrandingDomain.Bild:
                    this.game.load.image("bild_play", a.Utils.ASSET_LOCATION + "images/bild_btn_play.png"),
                    this.game.load.image("bild_logo", a.Utils.ASSET_LOCATION + "images/branding_logo_bild.png"),
                    this.game.add.existing(this.background);
                    break;
                default:
                case a.BrandingDomain.Funnygames:
                    this.game.load.image("fgs_logo", a.Utils.ASSET_LOCATION + "images/fgs_logo.png"),
                    this.game.load.spritesheet("fgs_play", a.Utils.ASSET_LOCATION + "images/fgs_btn_play.png", 130, 130),
                    this.game.load.spine("fgs_monster_1", a.Utils.ASSET_LOCATION + "spine/fgs_monster_1.json"),
                    this.game.load.spine("fgs_monster_2", a.Utils.ASSET_LOCATION + "spine/fgs_monster_2.json"),
                    this.game.load.spine("fgs_monster_3", a.Utils.ASSET_LOCATION + "spine/fgs_monster_3.json"),
                    this.game.device.iOS ? this.game.load.audio("fg", [a.Utils.ASSET_LOCATION + "sound/fgs_intro.m4a"]) : this.game.load.audio("fg", [a.Utils.ASSET_LOCATION + "sound/fgs_intro.ogg", a.Utils.ASSET_LOCATION + "sound/fgs_intro.mp3"])
                }
            },
            d.prototype.getScale = function() {
                return this.game.device.desktop ? this.game.width < 1.5 * b.FunnyGames.IdealWidth ? this.game.width / 6 * 4 / b.FunnyGames.IdealWidth: 1 : this.game.width < this.game.height ? this.game.width / 6 * 4 / b.FunnyGames.IdealWidth: this.game.width / 6 * 3 / b.FunnyGames.IdealWidth
            },
            d.prototype.loadUpdate = function() {
                this.background.update()
            },
            d.prototype.update = function() {
                this.background.update()
            },
            d.prototype.resize = function() {
                this.scaleFactor = this.getScale(),
                this.background.resize(this.scaleFactor)
            },
            d.prototype.shutdown = function() {
                this.game.scale.onSizeChange.remove(this.resize, this),
                this.world.remove(this.background)
            },
            d.prototype.create = function() {
                if (a.Branding.isSpecial(this.game)) this.game.state.add(b.Neutral.Name, b.Neutral),
                this.game.state.start(b.Neutral.Name, !0, !1, this.config, this.background);
                else switch (a.Utils.getBrandingDomain()) {
                case a.BrandingDomain.Spele:
                    this.game.state.add(b.Spele.Name, b.Spele),
                    this.game.state.start(b.Spele.Name, !0, !1, this.config, this.background);
                    break;
                case a.BrandingDomain.PlayCell:
                    this.game.state.add(b.PlayCell.Name, b.PlayCell),
                    this.game.state.start(b.PlayCell.Name, !0, !1, this.config, this.background);
                    break;
                case a.BrandingDomain.Yepi:
                    this.game.state.add(b.Yepi.Name, b.Yepi),
                    this.game.state.start(b.Yepi.Name, !0, !1, this.config, this.background);
                    break;
                case a.BrandingDomain.Kizi:
                    this.game.state.add(b.Kizi.Name, b.Kizi),
                    this.game.state.start(b.Kizi.Name, !0, !1, this.config, this.background);
                    break;
                case a.BrandingDomain.Bild:
                    this.game.state.add(b.Bild.Name, b.Bild),
                    this.game.state.start(b.Bild.Name, !0, !1, this.config, this.background);
                    break;
                default:
                case a.BrandingDomain.Funnygames:
                    this.game.state.add(b.FunnyGames.Name, b.FunnyGames),
                    this.game.state.start(b.FunnyGames.Name, !0, !1, this.config, this.background)
                }
            },
            d
        } (Phaser.State);
        c.Name = "splashloader",
        b.SplashPreloader = c
    } (b = a.SplashScreen || (a.SplashScreen = {}))
} (Fabrique || (Fabrique = {}));
var Fabrique; !
function(a) {
    var b; !
    function(b) {
        var c = function(c) {
            function d() {
                var a = c.call(this) || this;
                return a.name = d.Name,
                a.scaleFactor = 1,
                a.created = !1,
                a.preloadReady = !1,
                a.clicked = !1,
                a.preloadTexts = [],
                a.tId = 0,
                a
            }
            return __extends(d, c),
            d.prototype.init = function(a, b) {
                this.config = a,
                this.background = b,
                this.game.scale.onSizeChange.add(this.resize, this)
            },
            d.prototype.preload = function() {
                this.game.add.existing(this.background),
                this.createObjects(),
                this.scaleFactor = this.getScale(),
                this.resizeObjects(),
                this.startAnimation(),
                this.game.load.onLoadStart.add(this.onPreloadStart, this),
                this.game.load.onFileComplete.add(this.onPreloadedFile, this),
                this.game.load.onLoadComplete.add(this.onPreloadEnd, this),
                this.config.preloadHandler(),
                0 === this.game.load.totalQueuedFiles() && this.onPreloadEnd()
            },
            d.prototype.onPreloadStart = function() {},
            d.prototype.onPreloadedFile = function() {},
            d.prototype.onPreloadEnd = function() {
                this.preloadReady = !0,
                this.loadBack.visible = !1,
                this.loadBar.visible = !1,
                this.game.input.onUp.add(this.handler, this),
                this.animateButton()
            },
            d.prototype.createObjects = function() {
                this.logo = this.game.add.sprite(this.game.width / 2, this.game.height / 2 - 100, "bild_logo"),
                this.logo.anchor.set(.5),
                this.logo.scale.set(.8),
                d.IdealWidth = this.logo.getBounds().width;
                var a = this.game.make.graphics(0, 0);
                a.beginFill(16777215, .5).drawRect(0, 0, 350, 20).endFill(),
                this.loadBack = this.game.add.sprite(this.game.width / 2, this.game.height / 2 + 100, a.generateTexture()),
                this.loadBack.anchor.set(.5);
                var b = this.game.make.graphics(0, 0);
                b.beginFill(16777215, 1).drawRect(0, 0, 350, 20).endFill(),
                this.loadBar = this.game.add.sprite(this.game.width / 2 - 175, this.game.height / 2 + 100, b.generateTexture()),
                this.loadBar.anchor.set(0, .5),
                this.load.setPreloadSprite(this.loadBar),
                this.playButton = this.game.add.button(this.game.width / 2, this.game.height / 2 + 200, "bild_play", this.handler, this),
                this.playButton.anchor.set(.5),
                this.playButton.scale.set(this.scaleFactor),
                this.playButton.visible = !1,
                this.created = !0
            },
            d.prototype.resizeObjects = function() {
                this.created && (this.logo.scale.set(.8 * this.scaleFactor), this.logo.y = this.game.height / 2 - 100 * this.scaleFactor, this.logo.x = this.game.width / 2, a.Utils.isOnDevice(this.game) || (this.playButton.x = this.game.width / 2, this.playButton.y = this.game.height / 2 + 200 * this.scaleFactor))
            },
            d.prototype.handler = function(a, b) {
                if (!this.clicked && "mouseout" !== b.type) {
                    this.clicked = !0,
                    this.game.tweens.remove(this.buttonTween),
                    this.game.camera.fade(0, 250);
                    var c = this.game.add.tween(this.playButton.scale);
                    c.to({
                        x: 0,
                        y: 0
                    },
                    250, Phaser.Easing.Back.In).start(),
                    void 0 !== this.config.mobilePlayClickhandler ? this.config.mobilePlayClickhandler() : this.game.state.start(this.config.nextState),
                    this.game.input.onUp.remove(this.handler, this)
                }
            },
            d.prototype.getScale = function() {
                return a.Utils.isOnDevice(this.game) ? this.game.width < 1.5 * d.IdealWidth ? this.game.width / 6 * 4 / d.IdealWidth: 1 : this.game.width < this.game.height ? this.game.width / 6 * 4 / d.IdealWidth: this.game.width / 6 * 3 / d.IdealWidth
            },
            d.prototype.startAnimation = function() {},
            d.prototype.animateButton = function() {
                a.Utils.isOnDevice(this.game) || (this.game.tweens.remove(this.buttonTween), this.playButton.scale.set(this.scaleFactor), this.playButton.visible = !0, this.buttonTween = this.game.add.tween(this.playButton.scale), this.buttonTween.to({
                    x: 1.14 * this.scaleFactor,
                    y: 1.14 * this.scaleFactor
                },
                420, Phaser.Easing.Quadratic.InOut, !0, 500), this.buttonTween.yoyo(!0).onComplete.add(this.animateButton, this), this.buttonTween.start())
            },
            d.prototype.update = function() {
                this.background.update()
            },
            d.prototype.loadUpdate = function() {
                this.background.update()
            },
            d.prototype.resize = function() {
                this.scaleFactor = this.getScale(),
                this.background.resize(this.scaleFactor),
                this.resizeObjects(),
                this.created && this.preloadReady && this.animateButton()
            },
            d.prototype.shutdown = function() {
                c.prototype.shutdown.call(this),
                this.logo.destroy(!0),
                this.loadBack.destroy(!0),
                this.loadBar.destroy(!0),
                this.playButton.destroy(!0),
                this.background.destroy(!0),
                this.logo = null,
                this.loadBack = null,
                this.loadBar = null,
                this.playButton = null,
                this.background = null,
                this.config = null,
                this.game.scale.onSizeChange.remove(this.resize, this),
                this.game.load.onLoadStart.remove(this.onPreloadStart, this),
                this.game.load.onFileComplete.remove(this.onPreloadedFile, this),
                this.game.load.onLoadComplete.remove(this.onPreloadEnd, this),
                this.game.state.remove(b.Preloader.Name),
                this.game.state.remove(b.SplashPreloader.Name),
                this.game.state.remove(this.name)
            },
            d
        } (Phaser.State);
        c.Name = "bildSplashScreen",
        c.IdealWidth = 463,
        c.MaxDots = 3,
        b.Bild = c
    } (b = a.SplashScreen || (a.SplashScreen = {}))
} (Fabrique || (Fabrique = {}));
var Fabrique; !
function(a) {
    var b; !
    function(b) {
        var c = function(c) {
            function d() {
                var a = c.call(this) || this;
                return a.name = d.Name,
                a.scaleFactor = 1,
                a.created = !1,
                a.preloadReady = !1,
                a.clicked = !1,
                a.preloadTexts = ["Loading images", "Loading music", "Loading sound effects", "Calculating Pi"],
                a.dots = 1,
                a.dotText = ".",
                a.tId = 0,
                a
            }
            return __extends(d, c),
            d.prototype.init = function(a, b) {
                this.config = a,
                this.background = b,
                this.config.preloadTexts && (this.preloadTexts = this.config.preloadTexts),
                this.game.scale.onSizeChange.add(this.resize, this)
            },
            d.prototype.preload = function() {
                this.game.add.existing(this.background),
                this.createObjects(),
                this.scaleFactor = this.getScale(),
                this.resizeObjects(),
                this.startAnimation(),
                this.game.load.onLoadStart.add(this.onPreloadStart, this),
                this.game.load.onFileComplete.add(this.onPreloadedFile, this),
                this.game.load.onLoadComplete.add(this.onPreloadEnd, this),
                this.config.preloadHandler(),
                0 === this.game.load.totalQueuedFiles() && this.onPreloadEnd()
            },
            d.prototype.onPreloadStart = function() {
                this.t = Date.now(),
                this.preloadText.setText(this.preloadTexts[this.tId])
            },
            d.prototype.onPreloadedFile = function() {
                Date.now() - this.t > 1e3 && (this.t = Date.now(), this.tId++, this.tId >= this.preloadTexts.length && (this.tId = 0)),
                this.dotText.length >= 3 ? this.dotText = ".": this.dotText += ".",
                this.preloadText.setText(this.preloadTexts[this.tId] + this.dotText)
            },
            d.prototype.onPreloadEnd = function() {
                this.preloadReady = !0,
                this.preloadText.visible = !1,
                this.game.input.onUp.add(this.handler, this),
                this.animateButton()
            },
            d.prototype.createObjects = function() {
                this.monster1 = this.game.add.spine(0, 0, "fgs_monster_1"),
                this.monster1.setAnimationByName(0, "idle", !0),
                this.monster2 = this.game.add.spine(0, 0, "fgs_monster_2"),
                this.monster2.setAnimationByName(0, "idle", !0),
                this.monster3 = this.game.add.spine(0, 0, "fgs_monster_3"),
                this.monster3.setAnimationByName(0, "idle", !0),
                this.preloadText = this.game.add.text(this.game.width / 2, this.game.height / 2 + 230, "", {
                    font: "Arial",
                    fontSize: 40,
                    fill: "#ffffff",
                    fontWeight: "bold"
                }),
                this.preloadText.anchor.set(.5),
                this.logo = this.game.add.image(0, 0, "fgs_logo"),
                this.logo.anchor.set(.5),
                d.IdealWidth = 1.5 * this.logo.getBounds().width,
                this.playButton = this.game.add.button(this.game.width / 2, this.game.height / 2 + 230 * this.scaleFactor, "fgs_play", this.handler, this, 0, 0, 1, 0),
                this.playButton.anchor.set(.5),
                this.playButton.scale.set(this.scaleFactor),
                this.playButton.visible = !1,
                this.created = !0
            },
            d.prototype.handler = function(a, b) {
                if (!this.clicked && "mouseout" !== b.type) {
                    this.clicked = !0,
                    this.game.tweens.remove(this.buttonTween),
                    this.game.camera.fade(0, 250);
                    var c = this.game.add.tween(this.playButton.scale);
                    c.to({
                        x: 0,
                        y: 0
                    },
                    250, Phaser.Easing.Back.In).start(),
                    void 0 !== this.config.mobilePlayClickhandler ? this.config.mobilePlayClickhandler() : this.game.state.start(this.config.nextState),
                    this.game.input.onUp.remove(this.handler, this)
                }
            },
            d.prototype.resizeObjects = function() {
                this.created && (this.logo.scale.set(1.5 * this.scaleFactor), this.logo.y = this.game.height / 2 + 70 * this.scaleFactor, this.logo.x = this.game.width / 2, this.monster1.x = this.game.width / 2 + 40 * this.scaleFactor, this.monster1.y = this.game.height / 2 - 10 * this.scaleFactor, this.monster1.scale.set(.4 * this.scaleFactor), this.monster2.x = this.game.width / 2 + 190 * this.scaleFactor, this.monster2.y = this.game.height / 2 - 10 * this.scaleFactor, this.monster2.scale.set(.4 * this.scaleFactor), this.monster3.x = this.game.width / 2 - 140 * this.scaleFactor, this.monster3.y = this.game.height / 2 - 10 * this.scaleFactor, this.monster3.scale.set(.4 * this.scaleFactor), this.preloadText.x = this.game.width / 2, this.preloadText.y = this.game.height / 2 + 230 * this.scaleFactor, this.preloadText.scale.set(this.scaleFactor), a.Utils.isOnDevice(this.game) || (this.playButton.x = this.game.width / 2, this.playButton.y = this.game.height / 2 + 230 * this.scaleFactor))
            },
            d.prototype.getScale = function() {
                return a.Utils.isOnDevice(this.game) ? this.game.width < 1.5 * d.IdealWidth ? this.game.width / 6 * 4 / d.IdealWidth: 1 : this.game.width < this.game.height ? this.game.width / 6 * 4 / d.IdealWidth: this.game.width / 6 * 3 / d.IdealWidth
            },
            d.prototype.startAnimation = function() {
                this.game.sound.touchLocked || this.game.sound.play("fg");
                var a = this.game.add.tween(this.logo.scale);
                a.to({
                    x: 1.2 * this.scaleFactor,
                    y: 1.2 * this.scaleFactor
                },
                100),
                a.to({
                    x: 1.5 * this.scaleFactor,
                    y: 1.5 * this.scaleFactor
                },
                450, Phaser.Easing.Back.InOut),
                a.start()
            },
            d.prototype.animateButton = function() {
                a.Utils.isOnDevice(this.game) || (this.game.tweens.remove(this.buttonTween), this.playButton.scale.set(this.scaleFactor), this.playButton.visible = !0, this.buttonTween = this.game.add.tween(this.playButton.scale), this.buttonTween.to({
                    x: 1.14 * this.scaleFactor,
                    y: 1.14 * this.scaleFactor
                },
                420, Phaser.Easing.Quadratic.InOut, !0, 500), this.buttonTween.yoyo(!0).onComplete.add(this.animateButton, this), this.buttonTween.start())
            },
            d.prototype.update = function() {
                this.background.update()
            },
            d.prototype.loadUpdate = function() {
                this.background.update()
            },
            d.prototype.resize = function() {
                this.scaleFactor = this.getScale(),
                this.background.resize(this.scaleFactor),
                this.resizeObjects(),
                this.created && this.preloadReady && this.animateButton()
            },
            d.prototype.shutdown = function() {
                c.prototype.shutdown.call(this),
                this.logo.destroy(!0),
                this.monster1.destroy(!0),
                this.monster2.destroy(!0),
                this.monster3.destroy(!0),
                this.playButton.destroy(!0),
                this.background.destroy(!0),
                this.preloadText.destroy(!0),
                this.logo = null,
                this.monster1 = null,
                this.monster2 = null,
                this.monster3 = null,
                this.playButton = null,
                this.background = null,
                this.preloadText = null,
                this.config = null,
                this.game.scale.onSizeChange.remove(this.resize, this),
                this.game.load.onLoadStart.remove(this.onPreloadStart, this),
                this.game.load.onFileComplete.remove(this.onPreloadedFile, this),
                this.game.load.onLoadComplete.remove(this.onPreloadEnd, this),
                this.game.state.remove(b.Preloader.Name),
                this.game.state.remove(b.SplashPreloader.Name),
                this.game.state.remove(this.name)
            },
            d
        } (Phaser.State);
        c.Name = "funnySplashScreen",
        c.IdealWidth = 463,
        c.MaxDots = 3,
        b.FunnyGames = c
    } (b = a.SplashScreen || (a.SplashScreen = {}))
} (Fabrique || (Fabrique = {}));
var Fabrique; !
function(a) {
    var b; !
    function(b) {
        var c = function(c) {
            function d() {
                var a = c.call(this) || this;
                return a.name = d.Name,
                a.scaleFactor = 1,
                a.created = !1,
                a.preloadReady = !1,
                a.clicked = !1,
                a.dots = 1,
                a.dotText = ".",
                a.tId = 0,
                a
            }
            return __extends(d, c),
            d.prototype.init = function(a, b) {
                this.config = a,
                this.background = b,
                this.game.scale.onSizeChange.add(this.resize, this),
                this.game.add.existing(this.background)
            },
            d.prototype.preload = function() {
                this.createObjects(),
                this.scaleFactor = this.getScale(),
                this.resizeObjects(),
                this.startAnimation(),
                this.game.load.onLoadStart.add(this.onPreloadStart, this),
                this.game.load.onFileComplete.add(this.onPreloadedFile, this),
                this.game.load.onLoadComplete.add(this.onPreloadEnd, this),
                this.config.preloadHandler(),
                0 === this.game.load.totalQueuedFiles() && this.onPreloadEnd()
            },
            d.prototype.onPreloadStart = function() {},
            d.prototype.onPreloadedFile = function() {},
            d.prototype.onPreloadEnd = function() {
                var b = this;
                this.preloadReady = !0,
                a.Utils.isOnDevice(this.game) || this.game.device.desktop ? this.game.time.events.add(Phaser.Timer.SECOND,
                function() {
                    void 0 !== b.config.mobilePlayClickhandler ? b.config.mobilePlayClickhandler() : b.game.state.start(b.config.nextState)
                }) : (this.game.input.onUp.add(function(a) {
                    b.clicked || (b.clicked = !0, void 0 !== b.config.mobilePlayClickhandler ? b.config.mobilePlayClickhandler() : b.playClick(), b.game.input.onUp.remove(b.playClick, b))
                },
                this), this.animateButton())
            },
            d.prototype.createObjects = function() {
                var a = this;
                this.clouds = this.game.add.sprite(0, 50, "kizi_splash_clouds"),
                this.clouds.scale.set(this.game.width / this.clouds.width),
                this.clouds.alpha = .5,
                this.monster = this.game.add.sprite(this.game.width / 2, this.game.height / 2, "kizi_splash_spritesheet"),
                this.monster.animations.add("load"),
                this.monster.animations.play("load", 6, !0),
                this.monster.scale.set(1.5),
                this.monster.anchor.set(.5),
                this.playButton = this.game.add.button(this.game.width / 2, .75 * this.game.height, "kizi_button",
                function() {
                    a.clicked || (a.clicked = !0, void 0 !== a.config.mobilePlayClickhandler ? a.config.mobilePlayClickhandler() : a.playClick(), a.game.input.onUp.remove(a.playClick, a))
                },
                this, 0, 0, 1, 0),
                this.playButton.anchor.set(.5),
                this.playButton.scale.set(this.scaleFactor),
                this.playButton.visible = !1,
                this.created = !0
            },
            d.prototype.resizeObjects = function() {
                this.created && (a.Utils.isOnDevice(this.game) || (this.playButton.x = this.game.width / 2, this.playButton.y = .75 * this.game.height))
            },
            d.prototype.playClick = function() {
                var a = this;
                this.game.tweens.remove(this.buttonTween);
                var b = this.game.add.tween(this.playButton.scale);
                b.to({
                    x: 0,
                    y: 0
                },
                350, Phaser.Easing.Back.In).onComplete.add(function() {
                    a.game.state.start(a.config.nextState)
                }),
                b.start()
            },
            d.prototype.getScale = function() {
                return a.Utils.isOnDevice(this.game) ? this.game.width < 1.5 * b.FunnyGames.IdealWidth ? this.game.width / 6 * 4 / b.FunnyGames.IdealWidth: 1 : this.game.width < this.game.height ? this.game.width / 6 * 4 / b.FunnyGames.IdealWidth: this.game.width / 6 * 3 / b.FunnyGames.IdealWidth
            },
            d.prototype.startAnimation = function() {},
            d.prototype.animateButton = function() {
                a.Utils.isOnDevice(this.game) || (this.game.tweens.remove(this.buttonTween), this.playButton.scale.set(this.scaleFactor), this.playButton.visible = !0, this.buttonTween = this.game.add.tween(this.playButton.scale), this.buttonTween.to({
                    x: 1.14 * this.scaleFactor,
                    y: 1.14 * this.scaleFactor
                },
                420, Phaser.Easing.Quadratic.InOut, !0, 500), this.buttonTween.yoyo(!0).onComplete.add(this.animateButton, this), this.buttonTween.start())
            },
            d.prototype.update = function() {},
            d.prototype.loadUpdate = function() {},
            d.prototype.resize = function() {
                this.scaleFactor = this.getScale(),
                this.background.resize(this.scaleFactor),
                this.resizeObjects(),
                this.created && this.preloadReady && this.animateButton()
            },
            d.prototype.shutdown = function() {
                this.game.scale.onSizeChange.remove(this.resize, this),
                this.game.load.onLoadStart.remove(this.onPreloadStart, this),
                this.game.load.onFileComplete.remove(this.onPreloadedFile, this),
                this.game.load.onLoadComplete.remove(this.onPreloadEnd, this)
            },
            d
        } (Phaser.State);
        c.Name = "kiziSplashScreen",
        c.IdealWidth = 463,
        c.MaxDots = 3,
        b.Kizi = c
    } (b = a.SplashScreen || (a.SplashScreen = {}))
} (Fabrique || (Fabrique = {}));
var Fabrique; !
function(a) {
    var b; !
    function(b) {
        var c = function(c) {
            function d() {
                var a = c.call(this) || this;
                return a.name = d.Name,
                a.scaleFactor = 1,
                a.created = !1,
                a.preloadReady = !1,
                a.clicked = !1,
                a.dots = 1,
                a.dotText = ".",
                a.tId = 0,
                a
            }
            return __extends(d, c),
            d.prototype.init = function(a, b) {
                this.config = a,
                this.background = b,
                this.game.scale.onSizeChange.add(this.resize, this)
            },
            d.prototype.preload = function() {
                this.game.add.existing(this.background),
                this.createObjects(),
                this.scaleFactor = this.getScale(),
                this.resizeObjects(),
                this.startAnimation(),
                this.game.load.onLoadStart.add(this.onPreloadStart, this),
                this.game.load.onFileComplete.add(this.onPreloadedFile, this),
                this.game.load.onLoadComplete.add(this.onPreloadEnd, this),
                this.config.preloadHandler(),
                0 === this.game.load.totalQueuedFiles() && this.onPreloadEnd()
            },
            d.prototype.onPreloadStart = function() {},
            d.prototype.onPreloadedFile = function() {},
            d.prototype.onPreloadEnd = function() {
                this.preloadReady = !0,
                this.loadBack.visible = !1,
                this.loadBar.visible = !1,
                this.game.input.onUp.add(this.handler, this),
                this.animateButton()
            },
            d.prototype.createObjects = function() {
                this.loadBack = this.game.add.sprite(this.game.width / 2, this.game.height / 2, "loader"),
                this.loadBack.anchor.set(.5);
                var a = this.game.make.graphics(0, 0);
                a.beginFill(16777215, 1).drawRoundedRect(0, 0, 350, 20, 5).endFill(),
                this.loadBar = this.game.add.sprite(this.game.width / 2 - 175, this.game.height / 2 - 5, a.generateTexture()),
                this.loadBar.anchor.set(0, .5),
                this.load.setPreloadSprite(this.loadBar),
                this.playButton = this.game.add.button(this.game.width / 2, this.game.height / 2, "fgs_play", this.handler, this, 0, 0, 1, 0),
                this.playButton.anchor.set(.5),
                this.playButton.scale.set(this.scaleFactor),
                this.playButton.visible = !1,
                this.created = !0
            },
            d.prototype.resizeObjects = function() {
                this.created && (a.Utils.isOnDevice(this.game) || (this.playButton.x = this.game.width / 2, this.playButton.y = this.game.height / 2))
            },
            d.prototype.handler = function(a, b) {
                if (!this.clicked && "mouseout" !== b.type) {
                    this.clicked = !0,
                    this.game.tweens.remove(this.buttonTween),
                    this.game.camera.fade(0, 250);
                    var c = this.game.add.tween(this.playButton.scale);
                    c.to({
                        x: 0,
                        y: 0
                    },
                    250, Phaser.Easing.Back.In).start(),
                    void 0 !== this.config.mobilePlayClickhandler ? this.config.mobilePlayClickhandler() : this.game.state.start(this.config.nextState),
                    this.game.input.onUp.remove(this.handler, this)
                }
            },
            d.prototype.getScale = function() {
                return a.Utils.isOnDevice(this.game) ? this.game.width < 1.5 * b.FunnyGames.IdealWidth ? this.game.width / 6 * 4 / b.FunnyGames.IdealWidth: 1 : this.game.width < this.game.height ? this.game.width / 6 * 4 / b.FunnyGames.IdealWidth: this.game.width / 6 * 3 / b.FunnyGames.IdealWidth
            },
            d.prototype.startAnimation = function() {},
            d.prototype.animateButton = function() {
                a.Utils.isOnDevice(this.game) || (this.game.tweens.remove(this.buttonTween), this.playButton.scale.set(this.scaleFactor), this.playButton.visible = !0, this.buttonTween = this.game.add.tween(this.playButton.scale), this.buttonTween.to({
                    x: 1.14 * this.scaleFactor,
                    y: 1.14 * this.scaleFactor
                },
                420, Phaser.Easing.Quadratic.InOut, !0, 500), this.buttonTween.yoyo(!0).onComplete.add(this.animateButton, this), this.buttonTween.start())
            },
            d.prototype.update = function() {
                this.background.update()
            },
            d.prototype.loadUpdate = function() {
                this.background.update()
            },
            d.prototype.resize = function() {
                this.scaleFactor = this.getScale(),
                this.background.resize(this.scaleFactor),
                this.resizeObjects(),
                this.created && this.preloadReady && this.animateButton()
            },
            d.prototype.shutdown = function() {
                this.game.scale.onSizeChange.remove(this.resize, this),
                this.game.load.onLoadStart.remove(this.onPreloadStart, this),
                this.game.load.onFileComplete.remove(this.onPreloadedFile, this),
                this.game.load.onLoadComplete.remove(this.onPreloadEnd, this),
                this.loadBack.destroy(!0),
                this.loadBar.destroy(!0),
                this.playButton.destroy(!0),
                this.background.destroy(!0),
                this.loadBack = null,
                this.loadBar = null,
                this.playButton = null,
                this.background = null,
                this.game.state.remove(b.Preloader.Name),
                this.game.state.remove(b.SplashPreloader.Name),
                this.game.state.remove(this.name)
            },
            d
        } (Phaser.State);
        c.Name = "neutralSplashScreen",
        c.IdealWidth = 463,
        c.MaxDots = 3,
        b.Neutral = c
    } (b = a.SplashScreen || (a.SplashScreen = {}))
} (Fabrique || (Fabrique = {}));
var Fabrique; !
function(a) {
    var b; !
    function(a) {
        var b = function(b) {
            function c() {
                var a = b.call(this) || this;
                return a.name = c.Name,
                a.scaleFactor = 1,
                a.width = 787,
                a.height = 494,
                a.created = !1,
                a.preloadTexts = [],
                a.preloadReady = !1,
                a.balls = [],
                a.clicked = !1,
                a.tId = 0,
                a
            }
            return __extends(c, b),
            c.prototype.init = function(a, b) {
                this.config = a,
                this.background = b,
                this.config.preloadTexts && (this.preloadTexts = this.config.preloadTexts),
                this.game.scale.onSizeChange.add(this.resize, this)
            },
            c.prototype.preload = function() {
                this.game.add.existing(this.background),
                this.scaleFactor = this.getScale(),
                this.createObjects(),
                this.resizeObjects(),
                this.game.load.onLoadStart.add(this.onPreloadStart, this),
                this.game.load.onFileComplete.add(this.onPreloadedFile, this),
                this.game.load.onLoadComplete.add(this.onPreloadEnd, this),
                this.config.preloadHandler(),
                0 === this.game.load.totalQueuedFiles() && this.onPreloadEnd()
            },
            c.prototype.onPreloadStart = function() {
                this.t = Date.now(),
                this.preloadText.setText("Spelletje wordt geladen")
            },
            c.prototype.onPreloadedFile = function() {
                Date.now() - this.t > 2e3 && (this.t = Date.now(), this.tId++, this.tId >= this.preloadTexts.length && (this.tId = 0)),
                this.preloadText.setText("Spelletje wordt geladen")
            },
            c.prototype.onPreloadEnd = function() {
                this.preloadReady = !0,
                this.preloadText.visible = !1,
                this.game.input.onUp.add(this.handler, this),
                this.game.tweens.removeAll(),
                this.balls.forEach(function(a) {
                    a.parent.removeChild(a),
                    a.destroy(!0)
                }),
                this.animateButton()
            },
            c.prototype.createObjects = function() {
                var a = this;
                this.preloadText = this.game.add.text(this.game.width / 2, this.game.height / 2 + 150, "", {
                    font: "Arial",
                    fontSize: 40,
                    fill: "#ffffff",
                    fontWeight: "bold"
                }),
                this.bg = this.game.add.sprite(this.game.width / 2, -this.game.height / 2, "playcell_bg"),
                this.bg.scale.set(this.scaleFactor),
                this.bg.anchor.set(.5),
                this.preloadText.anchor.set(.5),
                this.playButton = this.game.add.image(this.game.width / 2, this.game.height / 2 - 50 * this.scaleFactor, "playcell_button"),
                this.playButton.anchor.set(.5),
                this.playButton.scale.set(this.scaleFactor),
                this.playButton.visible = !1,
                this.playButton.inputEnabled = !0,
                this.playButton.events.onInputUp.add(this.handler, this),
                this.game.add.tween(this.bg.position).to({
                    y: this.game.height / 2
                },
                500, Phaser.Easing.Bounce.InOut, !0).onComplete.add(function() {
                    for (var b = 0; b < 3; b++) {
                        var c = a.game.add.sprite(0, 0, "playcell_bubble");
                        c.alignIn(a.game.world.bounds, Phaser.CENTER, -50 + 100 * b, 150),
                        c.scale.set(0),
                        c.anchor.set(.5),
                        a.balls.push(c),
                        a.game.add.tween(c.scale).to({
                            x: 1,
                            y: 1
                        },
                        900, "Linear", !0, 300 * b, -1).yoyo(!0).delay(300)
                    }
                    a.created = !0
                })
            },
            c.prototype.resizeObjects = function() {
                this.created && (this.bg.x = this.game.width / 2, this.bg.y = this.game.height / 2, this.bg.scale.set(this.scaleFactor), this.preloadText.x = this.game.width / 2, this.preloadText.y = this.game.height / 2 + 150 * this.scaleFactor, this.preloadText.scale.set(this.scaleFactor), this.playButton.x = this.game.width / 2, this.playButton.y = this.game.height / 2 - 50 * this.scaleFactor)
            },
            c.prototype.handler = function(a, b) {
                if (!this.clicked && "mouseout" !== b.type) {
                    this.clicked = !0,
                    this.game.tweens.remove(this.buttonTween),
                    this.game.camera.fade(0, 250);
                    var c = this.game.add.tween(this.playButton.scale);
                    c.to({
                        x: 0,
                        y: 0
                    },
                    250, Phaser.Easing.Back.In).start(),
                    void 0 !== this.config.mobilePlayClickhandler ? this.config.mobilePlayClickhandler() : this.game.state.start(this.config.nextState),
                    this.game.input.onUp.remove(this.handler, this)
                }
            },
            c.prototype.getScale = function() {
                return this.game.width < this.game.height ? this.game.width / 6 * 5 / this.width: this.game.height / 6 * 5 / this.height
            },
            c.prototype.animateButton = function() {
                this.resizeObjects(),
                this.playButton.scale.set(this.scaleFactor),
                this.playButton.visible = !0,
                this.buttonTween = this.game.add.tween(this.playButton.scale),
                this.buttonTween.to({
                    x: 1.14 * this.scaleFactor,
                    y: 1.14 * this.scaleFactor
                },
                420, Phaser.Easing.Quadratic.InOut, !0, 500),
                this.buttonTween.yoyo(!0).onComplete.add(this.animateButton, this),
                this.buttonTween.start()
            },
            c.prototype.update = function() {
                this.background.update()
            },
            c.prototype.loadUpdate = function() {
                this.background.update()
            },
            c.prototype.resize = function() {
                this.scaleFactor = this.getScale(),
                this.background.resize(this.scaleFactor),
                this.resizeObjects(),
                this.created && this.preloadReady && this.animateButton()
            },
            c.prototype.shutdown = function() {
                b.prototype.shutdown.call(this),
                this.playButton.destroy(!0),
                this.background.destroy(!0),
                this.preloadText.destroy(!0),
                this.playButton = null,
                this.bg = null,
                this.background = null,
                this.preloadText = null,
                this.game.scale.onSizeChange.remove(this.resize, this),
                this.game.load.onLoadStart.remove(this.onPreloadStart, this),
                this.game.load.onFileComplete.remove(this.onPreloadedFile, this),
                this.game.load.onLoadComplete.remove(this.onPreloadEnd, this),
                this.game.state.remove(a.Preloader.Name),
                this.game.state.remove(a.SplashPreloader.Name),
                this.game.state.remove(this.name)
            },
            c
        } (Phaser.State);
        b.Name = "playCellSplashScreen",
        a.PlayCell = b
    } (b = a.SplashScreen || (a.SplashScreen = {}))
} (Fabrique || (Fabrique = {}));
var Fabrique; !
function(a) {
    var b; !
    function(a) {
        var b = function(b) {
            function c() {
                var a = b.call(this) || this;
                return a.name = c.Name,
                a.scaleFactor = 1,
                a.created = !1,
                a.preloadTexts = [],
                a.preloadReady = !1,
                a.dots = 1,
                a.dotText = ".",
                a.clicked = !1,
                a.tId = 0,
                a
            }
            return __extends(c, b),
            c.prototype.init = function(a, b) {
                this.config = a,
                this.background = b,
                this.config.preloadTexts && (this.preloadTexts = this.config.preloadTexts),
                this.game.scale.onSizeChange.add(this.resize, this)
            },
            c.prototype.preload = function() {
                this.game.add.existing(this.background),
                this.createObjects(),
                this.scaleFactor = this.getScale(),
                this.resizeObjects(),
                this.startAnimation(),
                this.game.load.onLoadStart.add(this.onPreloadStart, this),
                this.game.load.onFileComplete.add(this.onPreloadedFile, this),
                this.game.load.onLoadComplete.add(this.onPreloadEnd, this),
                this.config.preloadHandler(),
                0 === this.game.load.totalQueuedFiles() && this.onPreloadEnd()
            },
            c.prototype.onPreloadStart = function() {
                this.t = Date.now(),
                this.preloadText.setText("Spelletje wordt geladen")
            },
            c.prototype.onPreloadedFile = function() {
                Date.now() - this.t > 2e3 && (this.t = Date.now(), this.tId++, this.tId >= this.preloadTexts.length && (this.tId = 0)),
                this.dotText.length >= 3 ? this.dotText = ".": this.dotText += ".",
                this.preloadText.setText("Spelletje wordt geladen")
            },
            c.prototype.onPreloadEnd = function() {
                this.preloadReady = !0,
                this.preloadText.visible = !1,
                this.game.input.onUp.add(this.handler, this),
                this.animateButton()
            },
            c.prototype.createObjects = function() {
                this.spine = this.game.add.spine(0, 0, "ss_splash"),
                this.preloadText = this.game.add.text(this.game.width / 2, this.game.height / 2 + 150, "", {
                    font: "Arial",
                    fontSize: 40,
                    fill: "#ffffff",
                    fontWeight: "bold"
                }),
                this.preloadText.anchor.set(.5),
                this.playButton = this.game.add.image(this.game.width / 2, this.game.height / 2 + 55 * this.scaleFactor, "ss_play"),
                this.playButton.anchor.set(.5),
                this.playButton.scale.set(this.scaleFactor),
                this.playButton.visible = !1,
                this.playButton.inputEnabled = !0,
                this.playButton.events.onInputUp.add(this.handler, this),
                this.created = !0
            },
            c.prototype.resizeObjects = function() {
                this.created && (this.spine.x = this.game.width / 2, this.spine.y = this.game.height / 2, this.spine.scale.set(this.scaleFactor), this.preloadText.x = this.game.width / 2, this.preloadText.y = this.game.height / 2 + 150 * this.scaleFactor, this.preloadText.scale.set(this.scaleFactor), this.playButton.x = this.game.width / 2, this.playButton.y = this.game.height / 2 + 55 * this.scaleFactor)
            },
            c.prototype.handler = function(a, b) {
                if (!this.clicked && "mouseout" !== b.type) {
                    this.clicked = !0,
                    this.game.tweens.remove(this.buttonTween),
                    this.game.camera.fade(0, 250);
                    var c = this.game.add.tween(this.playButton.scale);
                    c.to({
                        x: 0,
                        y: 0
                    },
                    250, Phaser.Easing.Back.In).start(),
                    void 0 !== this.config.mobilePlayClickhandler ? this.config.mobilePlayClickhandler() : this.game.state.start(this.config.nextState),
                    this.game.input.onUp.remove(this.handler, this)
                }
            },
            c.prototype.getScale = function() {
                return this.game.width < this.game.height ? this.game.width / 6 * 4 / a.FunnyGames.IdealWidth: this.game.width / 6 * 3 / a.FunnyGames.IdealWidth
            },
            c.prototype.startAnimation = function() {
                this.game.sound.touchLocked || this.game.sound.play("cheer"),
                this.spine.setAnimationByName(0, "animation", !1)
            },
            c.prototype.animateButton = function() {
                this.game.tweens.remove(this.buttonTween),
                this.playButton.scale.set(this.scaleFactor),
                this.playButton.visible = !0,
                this.buttonTween = this.game.add.tween(this.playButton.scale),
                this.buttonTween.to({
                    x: 1.14 * this.scaleFactor,
                    y: 1.14 * this.scaleFactor
                },
                420, Phaser.Easing.Quadratic.InOut, !0, 500),
                this.buttonTween.yoyo(!0).onComplete.add(this.animateButton, this),
                this.buttonTween.start()
            },
            c.prototype.update = function() {
                this.background.update()
            },
            c.prototype.loadUpdate = function() {
                this.background.update()
            },
            c.prototype.resize = function() {
                this.scaleFactor = this.getScale(),
                this.background.resize(this.scaleFactor),
                this.resizeObjects(),
                this.created && this.preloadReady && this.animateButton()
            },
            c.prototype.shutdown = function() {
                b.prototype.shutdown.call(this),
                this.spine.destroy(!0),
                this.playButton.destroy(!0),
                this.background.destroy(!0),
                this.preloadText.destroy(!0),
                this.spine = null,
                this.playButton = null,
                this.background = null,
                this.preloadText = null,
                this.game.scale.onSizeChange.remove(this.resize, this),
                this.game.load.onLoadStart.remove(this.onPreloadStart, this),
                this.game.load.onFileComplete.remove(this.onPreloadedFile, this),
                this.game.load.onLoadComplete.remove(this.onPreloadEnd, this),
                this.game.state.remove(a.Preloader.Name),
                this.game.state.remove(a.SplashPreloader.Name),
                this.game.state.remove(this.name)
            },
            c
        } (Phaser.State);
        b.Name = "speleSplashScreen",
        b.IdealWidth = 463,
        b.MaxDots = 3,
        a.Spele = b
    } (b = a.SplashScreen || (a.SplashScreen = {}))
} (Fabrique || (Fabrique = {}));
var Fabrique; !
function(a) {
    var b; !
    function(a) {
        var b = function(b) {
            function c() {
                var a = b.call(this) || this;
                return a.name = c.Name,
                a.scaleFactor = 1,
                a.created = !1,
                a.tiles = [],
                a.preloadReady = !1,
                a.balls = [],
                a.clicked = !1,
                a.tId = 0,
                a.dt = Date.now(),
                a.ddt = Date.now(),
                a
            }
            return __extends(c, b),
            c.prototype.init = function(a, b) {
                this.config = a,
                this.background = b,
                this.game.scale.onSizeChange.add(this.resize, this),
                this.gradientBitmap = this.game.make.bitmapData(this.game.width, this.game.height)
            },
            c.prototype.preload = function() {
                this.game.add.existing(this.background),
                this.createObjects(),
                this.scaleFactor = this.getScale(),
                this.resizeObjects(),
                this.startAnimation(),
                this.game.load.onLoadStart.add(this.onPreloadStart, this),
                this.game.load.onFileComplete.add(this.onPreloadedFile, this),
                this.game.load.onLoadComplete.add(this.onPreloadEnd, this),
                this.config.preloadHandler(),
                0 === this.game.load.totalQueuedFiles() && this.onPreloadEnd()
            },
            c.prototype.onPreloadStart = function() {
                this.t = Date.now()
            },
            c.prototype.onPreloadedFile = function() {},
            c.prototype.onPreloadEnd = function() {
                this.preloadReady = !0,
                this.animateButton()
            },
            c.prototype.createObjects = function() {
                for (var a = 0; a < 70; a++) {
                    var b = Math.random() < .5 ? "square_empty": "square_game_" + ("0" + (32 * Math.random() + 1 | 0)).slice( - 2),
                    c = this.game.add.image(this.game.width / 2 + (80 * (a % 10) - 400), this.game.height / 2 + (80 * Math.floor(a / 10) - 280), "yp_atlas", b + ".png");
                    c.alpha = .4,
                    this.tiles.push(c)
                }
                this.gradient = this.game.add.sprite(0, 0, this.gradientBitmap),
                this.spine = this.game.add.spine(0, 0, "yp_splash"),
                this.spine.setMixByName("flyin", "idle", .2),
                this.spine.visible = !1,
                this.logo = this.game.add.sprite(0, 0, "yp_atlas", "yepi_logo.png"),
                this.logo.alignIn(this.world.bounds, Phaser.TOP_CENTER, 0, -20),
                this.created = !0;
                var d = this.game.make.graphics(0, 0);
                d.beginFill(16631558, 1).drawCircle(0, 0, 20).endFill();
                for (var a = 0; a < 3; a++) {
                    var e = this.game.add.sprite(0, 0, d.generateTexture());
                    e.alignIn(this.game.world.bounds, Phaser.BOTTOM_CENTER, -50 + 50 * a, -20),
                    e.scale.set(0),
                    e.anchor.set(.5),
                    this.balls.push(e),
                    this.game.add.tween(e.scale).to({
                        x: 1,
                        y: 1
                    },
                    900, "Linear", !0, 300 * a, -1).yoyo(!0).delay(300)
                }
            },
            c.prototype.resizeObjects = function() {
                var a = this;
                if (this.created) {
                    this.gradientBitmap.resize(this.game.width, this.game.height),
                    this.gradientBitmap.context.clearRect(0, 0, this.game.width, this.game.height);
                    var b = this.gradientBitmap.context.createRadialGradient(this.game.width / 2, this.game.height / 2, 0, this.game.width / 2, this.game.height / 2, this.game.height / 1.8);
                    b.addColorStop(0, "rgba(0, 81, 125, 0)"),
                    b.addColorStop(1, "rgba(0, 81, 125, 1)"),
                    this.gradientBitmap.context.fillStyle = b,
                    this.gradientBitmap.context.fillRect(0, 0, this.game.width, this.game.height),
                    this.spine.x = this.game.width / 2,
                    this.spine.y = this.game.height / 2,
                    this.spine.scale.set(this.scaleFactor),
                    this.logo.scale.set(this.scaleFactor),
                    this.logo.alignIn(this.world.bounds, Phaser.TOP_CENTER, 0, -20),
                    this.tiles.forEach(function(b, c) {
                        b.x = a.game.width / 2 + (80 * (c % 10) - 400),
                        b.y = a.game.height / 2 + (80 * Math.floor(c / 10) - 280)
                    })
                }
            },
            c.prototype.handler = function(a, b) {
                this.clicked || "mouseout" === b.type || (this.clicked = !0, this.game.tweens.remove(this.buttonTween), this.game.camera.fade(0, 250), void 0 !== this.config.mobilePlayClickhandler ? this.config.mobilePlayClickhandler() : this.game.state.start(this.config.nextState), this.game.input.onUp.remove(this.handler, this))
            },
            c.prototype.getScale = function() {
                return this.game.width < this.game.height ? this.game.width / 6 * 4 / a.FunnyGames.IdealWidth: this.game.width / 6 * 3 / a.FunnyGames.IdealWidth
            },
            c.prototype.startAnimation = function() {},
            c.prototype.animateButton = function() {
                this.spine.visible = !0,
                this.spine.setAnimationByName(0, "flyin", !1),
                this.spine.addAnimationByName(0, "idle", !0, 0),
                this.game.tweens.removeAll(),
                this.balls.forEach(function(a) {
                    a.parent.removeChild(a),
                    a.destroy(!0)
                }),
                this.game.input.onUp.add(this.handler, this)
            },
            c.prototype.update = function() {
                var a = Date.now() - this.dt;
                a > 200 && (this.tweenRandomItem(), this.dt = Date.now())
            },
            c.prototype.loadUpdate = function() {
                var a = Date.now() - this.ddt;
                a > 200 && (this.ddt = Date.now(), this.tweenRandomItem())
            },
            c.prototype.tweenRandomItem = function() {
                var a = this.tiles[Math.random() * this.tiles.length | 0];
                this.game.add.tween(a).to({
                    alpha: 1
                },
                1e3, Phaser.Easing.Linear.None, !0, 0, 0, !0)
            },
            c.prototype.resize = function() {
                this.scaleFactor = this.getScale(),
                this.background.resize(this.scaleFactor),
                this.resizeObjects()
            },
            c.prototype.shutdown = function() {
                b.prototype.shutdown.call(this),
                this.spine.destroy(!0),
                this.background.destroy(!0),
                this.tiles.forEach(function(a) {
                    a.destroy(!0)
                }),
                this.gradientBitmap.destroy(),
                this.gradient.destroy(!0),
                this.logo.destroy(!0),
                this.balls.forEach(function(a) {
                    a.destroy(!0)
                }),
                this.spine = null,
                this.playButton = null,
                this.background = null,
                this.gradientBitmap = null,
                this.gradient = null,
                this.logo = null,
                this.tiles = null,
                this.balls = null,
                this.game.scale.onSizeChange.remove(this.resize, this),
                this.game.load.onLoadStart.remove(this.onPreloadStart, this),
                this.game.load.onFileComplete.remove(this.onPreloadedFile, this),
                this.game.load.onLoadComplete.remove(this.onPreloadEnd, this),
                this.game.state.remove(a.Preloader.Name),
                this.game.state.remove(a.SplashPreloader.Name),
                this.game.state.remove(this.name)
            },
            c
        } (Phaser.State);
        b.Name = "yepiSplashScreen",
        b.IdealWidth = 463,
        b.MaxDots = 3,
        a.Yepi = b
    } (b = a.SplashScreen || (a.SplashScreen = {}))
} (Fabrique || (Fabrique = {}));
var Fabrique; !
function(a) {
    var b = null,
    c = function() {
        function a() {}
        return a.has = function(a) {
            var c = a.lastIndexOf(".");
            if (c <= 0 || c >= a.length - 1) return ! 1;
            var d = a.lastIndexOf(".", c - 1);
            if (d <= 0 || d >= c - 1) return ! 1;
            var e = b[a.slice(c + 1)];
            return !! e && e.indexOf(" " + a.slice(d + 1, c) + " ") >= 0
        },
        a.is = function(a) {
            var c = a.lastIndexOf(".");
            if (c <= 0 || c >= a.length - 1) return ! 1;
            var d = a.lastIndexOf(".", c - 1);
            if (d >= 0) return ! 1;
            var e = b[a.slice(c + 1)];
            return !! e && e.indexOf(" " + a.slice(0, c) + " ") >= 0
        },
        a.get = function(a) {
            var c = a.lastIndexOf(".");
            if (c <= 0 || c >= a.length - 1) return null;
            var d = a.lastIndexOf(".", c - 1);
            if (d <= 0 || d >= c - 1) return null;
            var e = b[a.slice(c + 1)];
            return e ? e.indexOf(" " + a.slice(d + 1, c) + " ") < 0 ? null: a.slice(d + 1) : null
        },
        a
    } (),
    d = function() {
        function a() {}
        return a.setList = function(a) {
            b = a || {}
        },
        a.getDomain = function(a) {
            if (null === b) return null;
            var c = a.match(/\./g);
            if (c && c.length < 2) return a;
            var d = a.length - this.getTld(a).length - 1;
            return d = a.lastIndexOf(".", d - 1) + 1,
            a.substring(d) || ""
        },
        a.getTld = function(a) {
            if (null === b) return null;
            var d = a.lastIndexOf("."),
            e = a.substring(d + 1);
            return b[e.toLowerCase()] ? c.get(a) || e: e
        },
        a
    } ();
    d.KEY = "Domains",
    a.Domain = d
} (Fabrique || (Fabrique = {}));
var Fabrique; !
function(a) {
    var b = function() {
        function b() {}
        return b.getSourceSite = function(c) {
            void 0 === c && (c = !1);
            var d = document.referrer || window.location.host;
            if (c && (d = window.location.host), d = decodeURIComponent(d), a.Branding.isBild()) return "bildspielt.de";
            if (a.Branding.isBip()) return "bipgaming.com";
            a.Branding.isSpil() && (d = b.getReferrer(d)),
            d = d.indexOf("://") > -1 ? d.split("/")[2] : d.split("/")[0],
            d = d.split(":")[0];
            var e = a.Domain.getDomain(d);
            return null !== e ? e: (3 === d.split(".").length && (d = d.substr(d.indexOf(".") + 1)), d)
        },
        b.getBrandingDomain = function() {
            if (a.SplashScreen.Preloader.SPLASH_OVERRIDE !== !1) return a.SplashScreen.Preloader.SPLASH_OVERRIDE;
            var c = b.getSourceSite();
            switch (c) {
            case "spele.nl":
                return a.BrandingDomain.Spele;
            case "yepi.com":
                return a.BrandingDomain.Yepi;
            case "playcell.com":
                return a.BrandingDomain.PlayCell;
            case "kizi.com":
                return a.BrandingDomain.Kizi;
            case "bildspielt.de":
                return a.BrandingDomain.Bild;
            default:
                return a.BrandingDomain.Funnygames
            }
        },
        b.getReferrer = function(a) {
            return a.indexOf("?ref=") !== -1 ? a.substr(a.indexOf("?ref=") + 5) : a
        },
        b.inIframe = function() {
            try {
                return window.self !== window.top
            } catch(a) {
                return ! 0
            }
        },
        b.getDomain = function(a) {
            var b = document.createElement("a");
            return b.href = a,
            b.origin
        },
        b.isOnDevice = function(a) {
            return ! (!a.device.cordova && !a.device.crosswalk) && !/(gamedistribution\.com)/.test(window.location.hostname)
        },
        b.isTc = function() {
            return /(teamcity\.ds\.orangegames\.com)/.test(window.location.host)
        },
        b.getRandomRange = function(a, b) {
            return Math.random() * (b - a) + a | 0
        },
        b.intTimeToString = function(a) {
            var b = Math.floor(a / 3600),
            c = Math.floor(a % 3600 / 60),
            d = a % 60,
            e = b < 10 ? "0" + b: b.toString(),
            f = c < 10 ? "0" + c: c.toString(),
            g = d < 10 ? "0" + d: d.toString();
            return e + ":" + f + ":" + g
        },
        b.registerAudioUnlocker = function(a) {
            a.device.android && a.device.chrome && a.device.chromeVersion >= 55 && (a.sound.touchLocked = !0, a.input.touch.addTouchLockCallback(function() {
                if (this.noAudio || !this.touchLocked || null !== this._unlockSource) return ! 0;
                if (this.usingWebAudio) {
                    var a = this.context.createBuffer(1, 1, 22050);
                    this._unlockSource = this.context.createBufferSource(),
                    this._unlockSource.buffer = a,
                    this._unlockSource.connect(this.context.destination),
                    void 0 === this._unlockSource.start ? this._unlockSource.noteOn(0) : this._unlockSource.start(0),
                    "suspended" === this._unlockSource.context.state && this._unlockSource.context.resume()
                }
                return ! 0
            },
            a.sound, !0))
        },
        b
    } ();
    b.ASSET_LOCATION = "./orange-games-splash/assets/",
    a.Utils = b
} (Fabrique || (Fabrique = {}));
var CryptoJS = CryptoJS ||
function(a, b) {
    var c = {},
    d = c.lib = {},
    e = function() {},
    f = d.Base = {
        extend: function(a) {
            e.prototype = this;
            var b = new e;
            return a && b.mixIn(a),
            b.hasOwnProperty("init") || (b.init = function() {
                b.$super.init.apply(this, arguments)
            }),
            b.init.prototype = b,
            b.$super = this,
            b
        },
        create: function() {
            var a = this.extend();
            return a.init.apply(a, arguments),
            a
        },
        init: function() {},
        mixIn: function(a) {
            for (var b in a) a.hasOwnProperty(b) && (this[b] = a[b]);
            a.hasOwnProperty("toString") && (this.toString = a.toString)
        },
        clone: function() {
            return this.init.prototype.extend(this)
        }
    },
    g = d.WordArray = f.extend({
        init: function(a, c) {
            a = this.words = a || [],
            this.sigBytes = c != b ? c: 4 * a.length
        },
        toString: function(a) {
            return (a || i).stringify(this)
        },
        concat: function(a) {
            var b = this.words,
            c = a.words,
            d = this.sigBytes;
            if (a = a.sigBytes, this.clamp(), d % 4) for (var e = 0; a > e; e++) b[d + e >>> 2] |= (c[e >>> 2] >>> 24 - 8 * (e % 4) & 255) << 24 - 8 * ((d + e) % 4);
            else if (65535 < c.length) for (e = 0; a > e; e += 4) b[d + e >>> 2] = c[e >>> 2];
            else b.push.apply(b, c);
            return this.sigBytes += a,
            this
        },
        clamp: function() {
            var b = this.words,
            c = this.sigBytes;
            b[c >>> 2] &= 4294967295 << 32 - 8 * (c % 4),
            b.length = a.ceil(c / 4)
        },
        clone: function() {
            var a = f.clone.call(this);
            return a.words = this.words.slice(0),
            a
        },
        random: function(b) {
            for (var c = [], d = 0; b > d; d += 4) c.push(4294967296 * a.random() | 0);
            return new g.init(c, b)
        }
    }),
    h = c.enc = {},
    i = h.Hex = {
        stringify: function(a) {
            var b = a.words;
            a = a.sigBytes;
            for (var c = [], d = 0; a > d; d++) {
                var e = b[d >>> 2] >>> 24 - 8 * (d % 4) & 255;
                c.push((e >>> 4).toString(16)),
                c.push((15 & e).toString(16))
            }
            return c.join("")
        },
        parse: function(a) {
            for (var b = a.length,
            c = [], d = 0; b > d; d += 2) c[d >>> 3] |= parseInt(a.substr(d, 2), 16) << 24 - 4 * (d % 8);
            return new g.init(c, b / 2)
        }
    },
    j = h.Latin1 = {
        stringify: function(a) {
            var b = a.words;
            a = a.sigBytes;
            for (var c = [], d = 0; a > d; d++) c.push(String.fromCharCode(b[d >>> 2] >>> 24 - 8 * (d % 4) & 255));
            return c.join("")
        },
        parse: function(a) {
            for (var b = a.length,
            c = [], d = 0; b > d; d++) c[d >>> 2] |= (255 & a.charCodeAt(d)) << 24 - 8 * (d % 4);
            return new g.init(c, b)
        }
    },
    k = h.Utf8 = {
        stringify: function(a) {
            try {
                return decodeURIComponent(escape(j.stringify(a)))
            } catch(a) {
                throw Error("Malformed UTF-8 data")
            }
        },
        parse: function(a) {
            return j.parse(unescape(encodeURIComponent(a)))
        }
    },
    l = d.BufferedBlockAlgorithm = f.extend({
        reset: function() {
            this._data = new g.init,
            this._nDataBytes = 0
        },
        _append: function(a) {
            "string" == typeof a && (a = k.parse(a)),
            this._data.concat(a),
            this._nDataBytes += a.sigBytes
        },
        _process: function(b) {
            var c = this._data,
            d = c.words,
            e = c.sigBytes,
            f = this.blockSize,
            h = e / (4 * f),
            h = b ? a.ceil(h) : a.max((0 | h) - this._minBufferSize, 0);
            if (b = h * f, e = a.min(4 * b, e), b) {
                for (var i = 0; b > i; i += f) this._doProcessBlock(d, i);
                i = d.splice(0, b),
                c.sigBytes -= e
            }
            return new g.init(i, e)
        },
        clone: function() {
            var a = f.clone.call(this);
            return a._data = this._data.clone(),
            a
        },
        _minBufferSize: 0
    });
    d.Hasher = l.extend({
        cfg: f.extend(),
        init: function(a) {
            this.cfg = this.cfg.extend(a),
            this.reset()
        },
        reset: function() {
            l.reset.call(this),
            this._doReset()
        },
        update: function(a) {
            return this._append(a),
            this._process(),
            this
        },
        finalize: function(a) {
            return a && this._append(a),
            this._doFinalize()
        },
        blockSize: 16,
        _createHelper: function(a) {
            return function(b, c) {
                return new a.init(c).finalize(b)
            }
        },
        _createHmacHelper: function(a) {
            return function(b, c) {
                return new m.HMAC.init(a, c).finalize(b)
            }
        }
    });
    var m = c.algo = {};
    return c
} (Math); !
function(a) {
    for (var b = CryptoJS,
    c = b.lib,
    d = c.WordArray,
    e = c.Hasher,
    c = b.algo,
    f = [], g = [], h = function(a) {
        return 4294967296 * (a - (0 | a)) | 0
    },
    i = 2, j = 0; 64 > j;) {
        var k;
        a: {
            k = i;
            for (var l = a.sqrt(k), m = 2; l >= m; m++) if (! (k % m)) {
                k = !1;
                break a
            }
            k = !0
        }
        k && (8 > j && (f[j] = h(a.pow(i, .5))), g[j] = h(a.pow(i, 1 / 3)), j++),
        i++
    }
    var n = [],
    c = c.SHA256 = e.extend({
        _doReset: function() {
            this._hash = new d.init(f.slice(0))
        },
        _doProcessBlock: function(a, b) {
            for (var c = this._hash.words,
            d = c[0], e = c[1], f = c[2], h = c[3], i = c[4], j = c[5], k = c[6], l = c[7], m = 0; 64 > m; m++) {
                if (16 > m) n[m] = 0 | a[b + m];
                else {
                    var o = n[m - 15],
                    p = n[m - 2];
                    n[m] = ((o << 25 | o >>> 7) ^ (o << 14 | o >>> 18) ^ o >>> 3) + n[m - 7] + ((p << 15 | p >>> 17) ^ (p << 13 | p >>> 19) ^ p >>> 10) + n[m - 16]
                }
                o = l + ((i << 26 | i >>> 6) ^ (i << 21 | i >>> 11) ^ (i << 7 | i >>> 25)) + (i & j ^ ~i & k) + g[m] + n[m],
                p = ((d << 30 | d >>> 2) ^ (d << 19 | d >>> 13) ^ (d << 10 | d >>> 22)) + (d & e ^ d & f ^ e & f),
                l = k,
                k = j,
                j = i,
                i = h + o | 0,
                h = f,
                f = e,
                e = d,
                d = o + p | 0
            }
            c[0] = c[0] + d | 0,
            c[1] = c[1] + e | 0,
            c[2] = c[2] + f | 0,
            c[3] = c[3] + h | 0,
            c[4] = c[4] + i | 0,
            c[5] = c[5] + j | 0,
            c[6] = c[6] + k | 0,
            c[7] = c[7] + l | 0
        },
        _doFinalize: function() {
            var b = this._data,
            c = b.words,
            d = 8 * this._nDataBytes,
            e = 8 * b.sigBytes;
            return c[e >>> 5] |= 128 << 24 - e % 32,
            c[(e + 64 >>> 9 << 4) + 14] = a.floor(d / 4294967296),
            c[(e + 64 >>> 9 << 4) + 15] = d,
            b.sigBytes = 4 * c.length,
            this._process(),
            this._hash
        },
        clone: function() {
            var a = e.clone.call(this);
            return a._hash = this._hash.clone(),
            a
        }
    });
    b.SHA256 = e._createHelper(c),
    b.HmacSHA256 = e._createHmacHelper(c)
} (Math),
function() {
    var a = CryptoJS,
    b = a.enc.Utf8;
    a.algo.HMAC = a.lib.Base.extend({
        init: function(a, c) {
            a = this._hasher = new a.init,
            "string" == typeof c && (c = b.parse(c));
            var d = a.blockSize,
            e = 4 * d;
            c.sigBytes > e && (c = a.finalize(c)),
            c.clamp();
            for (var f = this._oKey = c.clone(), g = this._iKey = c.clone(), h = f.words, i = g.words, j = 0; d > j; j++) h[j] ^= 1549556828,
            i[j] ^= 909522486;
            f.sigBytes = g.sigBytes = e,
            this.reset()
        },
        reset: function() {
            var a = this._hasher;
            a.reset(),
            a.update(this._iKey)
        },
        update: function(a) {
            return this._hasher.update(a),
            this
        },
        finalize: function(a) {
            var b = this._hasher;
            return a = b.finalize(a),
            b.reset(),
            b.finalize(this._oKey.clone().concat(a))
        }
    })
} (),
function() {
    var a = CryptoJS,
    b = a.lib.WordArray;
    a.enc.Base64 = {
        stringify: function(a) {
            var b = a.words,
            c = a.sigBytes,
            d = this._map;
            a.clamp(),
            a = [];
            for (var e = 0; c > e; e += 3) for (var f = (b[e >>> 2] >>> 24 - 8 * (e % 4) & 255) << 16 | (b[e + 1 >>> 2] >>> 24 - 8 * ((e + 1) % 4) & 255) << 8 | b[e + 2 >>> 2] >>> 24 - 8 * ((e + 2) % 4) & 255, g = 0; 4 > g && c > e + .75 * g; g++) a.push(d.charAt(f >>> 6 * (3 - g) & 63));
            if (b = d.charAt(64)) for (; a.length % 4;) a.push(b);
            return a.join("")
        },
        parse: function(a) {
            var c = a.length,
            d = this._map,
            e = d.charAt(64);
            e && (e = a.indexOf(e), -1 != e && (c = e));
            for (var e = [], f = 0, g = 0; c > g; g++) if (g % 4) {
                var h = d.indexOf(a.charAt(g - 1)) << 2 * (g % 4),
                i = d.indexOf(a.charAt(g)) >>> 6 - 2 * (g % 4);
                e[f >>> 2] |= (h | i) << 24 - 8 * (f % 4),
                f++
            }
            return b.create(e, f)
        },
        _map: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/="
    }
} ();
var GA; !
function(a) { !
    function(a) {
        a[a.ios = 0] = "ios",
        a[a.android = 1] = "android",
        a[a.windows = 2] = "windows",
        a[a.windows_phone = 3] = "windows_phone",
        a[a.blackberry = 4] = "blackberry",
        a[a.roku = 5] = "roku",
        a[a.tizen = 6] = "tizen",
        a[a.nacl = 7] = "nacl",
        a[a.mac_osx = 8] = "mac_osx",
        a[a.webplayer = 9] = "webplayer"
    } (a.Platform || (a.Platform = {})),
    a.Platform,
    !
    function(a) {
        a[a.male = 0] = "male",
        a[a.female = 1] = "female"
    } (a.Gender || (a.Gender = {})),
    a.Gender
} (GA || (GA = {}));
var GA; !
function(a) {
    var b; !
    function(a) {
        var b = /^[A-Za-z0-9\\s\\-_\\.\\(\\)\\!\\?]{1,64}:[A-Za-z0-9\\s\\-_\\.\\(\\)\\!\\?]{1,64}$/,
        c = function() {
            function a(a, c, d, e, f, g) {
                if (this.category = 1, this.transaction_num = 0, !a || null === a.match(b)) throw new Error("Invalid event_id supplied for BusinessEvent");
                if (this.event_id = a, this.amount = c, !d || null === d.match(/^[A-Z]{3}$/)) throw new Error("Invalid currency supplied for BusinessEvent");
                if (this.currency = d, this.transaction_num = e, f) {
                    if (f.length > 32) throw new Error("A too long cart_type was supplied, should be max 32 characters");
                    this.cart_type = f
                }
                void 0 !== g && (this.receipt_info = g)
            }
            return a
        } ();
        a.Business = c
    } (b = a.Events || (a.Events = {}))
} (GA || (GA = {}));
var GA; !
function(a) {
    var b; !
    function(a) {
        var b = /^[A-Za-z0-9\\s\\-_\\.\\(\\)\\!\\?]{1,64}(:[A-Za-z0-9\\s\\-_\\.\\(\\)\\!\\?]{1,64}){0,4}$/,
        c = function() {
            function a(a, c) {
                if (this.category = 0, null === a.match(b)) throw new Error("Invalid event_id supplied for DesignEvent");
                this.event_id = a,
                void 0 !== c && (this.value = c)
            }
            return a
        } ();
        a.Design = c
    } (b = a.Events || (a.Events = {}))
} (GA || (GA = {}));
var GA; !
function(a) {
    var b; !
    function(a) { !
        function(a) {
            a[a.design = 0] = "design",
            a[a.business = 1] = "business",
            a[a.error = 2] = "error",
            a[a.user = 3] = "user",
            a[a.session_end = 4] = "session_end",
            a[a.progression = 5] = "progression",
            a[a.resource = 6] = "resource"
        } (a.Category || (a.Category = {})),
        a.Category
    } (b = a.Events || (a.Events = {}))
} (GA || (GA = {}));
var GA; !
function(a) {
    var b; !
    function(a) { !
        function(a) {
            a[a.debug = 0] = "debug",
            a[a.info = 1] = "info",
            a[a.warning = 2] = "warning",
            a[a.error = 3] = "error",
            a[a.critical = 4] = "critical"
        } (a.ErrorSeverity || (a.ErrorSeverity = {}));
        var b = a.ErrorSeverity,
        c = function() {
            function a(a, c) {
                this.category = 2,
                this.message = "",
                this.severity = b[a],
                void 0 !== c && (this.message = c.substr(0, 8192))
            }
            return a
        } ();
        a.Exception = c
    } (b = a.Events || (a.Events = {}))
} (GA || (GA = {}));
var GA; !
function(a) {
    var b; !
    function(a) {
        var b = function() {
            function a() {}
            return a
        } ();
        a.InitResponse = b;
        var c = function() {
            function a(a) {
                this.data = a
            }
            return a.prototype.toString = function() {
                return JSON.stringify(this.data)
            },
            a
        } ();
        a.Init = c
    } (b = a.Events || (a.Events = {}))
} (GA || (GA = {}));
var GA; !
function(a) {
    var b; !
    function(a) {
        var b = /^(Start|Fail|Complete):[A-Za-z0-9\\s\\-_\\.\\(\\)\\!\\?]{1,64}(:[A-Za-z0-9\\s\\-_\\.\\(\\)\\!\\?]{1,64}){0,2}$/,
        c = function() {
            function a(a, c, d) {
                if (this.category = 5, null === a.match(b)) throw new Error("Invalid event_id supplied for ProgressionEvent");
                this.event_id = a,
                void 0 !== c && (this.attempt_num = c),
                void 0 !== d && (this.score = d)
            }
            return a
        } ();
        a.Progression = c
    } (b = a.Events || (a.Events = {}))
} (GA || (GA = {}));
var GA; !
function(a) {
    var b; !
    function(a) {
        var b = /^(Sink|Source):[A-Za-z]{1,64}:[A-Za-z0-9\\s\\-_\\.\\(\\)\\!\\?]{1,64}:[A-Za-z0-9\\s\\-_\\.\\(\\)\\!\\?]{1,64}/,
        c = function() {
            function a(a, c) {
                if (this.category = 6, null === a.match(b)) throw new Error("Invalid event_id supplied for ResourceEvent");
                this.event_id = a,
                this.amount = c
            }
            return a
        } ();
        a.Resource = c
    } (b = a.Events || (a.Events = {}))
} (GA || (GA = {}));
var GA; !
function(a) {
    var b; !
    function(a) {
        var b = function() {
            function a(a) {
                this.category = 4,
                this.length = 0,
                this.length = a
            }
            return a
        } ();
        a.SessionEnd = b
    } (b = a.Events || (a.Events = {}))
} (GA || (GA = {}));
var GA; !
function(a) {
    var b; !
    function(a) {
        var b = function() {
            function a() {
                this.category = 3
            }
            return a
        } ();
        a.User = b
    } (b = a.Events || (a.Events = {}))
} (GA || (GA = {}));
var GA; !
function(a) {
    function b() {
        return null === c.instance && (c.instance = new c),
        c.instance
    }
    a.getInstance = b;
    var c = function() {
        function b() {
            this.sessionId = a.Utils.createUniqueId(),
            this.messageQueue = new a.Utils.MessageQueue,
            this.enabled = !1,
            this.initProcessed = !1,
            this.timeoutId = 0,
            this.timeOffset = 0
        }
        return b.prototype.init = function(c, d, e, f) {
            var g = this;
            if (null === b.instance) throw new Error("No instance Available!");
            this.gameKey = c,
            this.secretKey = d,
            this.build = e,
            this.user = f,
            this.incrementSessionNum(f);
            var h = new a.Events.Init(a.Utils.getBaseAnnotations());
            return this.sendEvent(h.toString(), "init",
            function(a) {
                g.initProcessed = !0,
                a.enabled === !0 && (g.enabled = !0, g.timeOffset = (Date.now() / 1e3 | 0) - a.server_ts)
            }),
            this.scheduleSendData(b.SCHEDULE_TIME),
            window.addEventListener("beforeunload",
            function() {
                g.sendData()
            }),
            this
        },
        b.prototype.incrementSessionNum = function(b) {
            var c = a.Utils.LocalStorage.getItem(b.user_id);
            c ? a.Utils.LocalStorage.setItem(b.user_id, (parseInt(c) + 1).toString()) : (c = "1", a.Utils.LocalStorage.setItem(b.user_id, c))
        },
        b.prototype.addEvent = function(c) {
            if (null === b.instance) throw new Error("No instance Available!");
            var d = new a.Utils.Message(c, a.Utils.getDefaultAnnotations(this.user, this.sessionId, this.build, this.timeOffset));
            return this.messageQueue.push(d),
            this
        },
        b.prototype.sendData = function() {
            if (this.initProcessed === !1) return this.scheduleSendData(1e3),
            this;
            if (this.enabled === !1) return this;
            if (null === b.instance) throw new Error("No instance Available!");
            for (var a = [], c = ""; this.messageQueue.length > 0;) {
                var d = this.messageQueue.pop();
                a.push(d.data)
            }
            if (0 === a.length) return this.scheduleSendData(b.SCHEDULE_TIME),
            this;
            try {
                c = JSON.stringify(a)
            } catch(a) {}
            return this.sendEvent(c, "events"),
            this.scheduleSendData(b.SCHEDULE_TIME),
            this
        },
        b.prototype.scheduleSendData = function(a) {
            var b = this;
            clearTimeout(this.timeoutId),
            this.timeoutId = setTimeout(function() {
                b.sendData()
            },
            a)
        },
        b.prototype.sendEvent = function(c, d, e) {
            if (void 0 === e && (e = null), null === b.instance && null === this.gameKey) throw new Error("No instance Available!");
            if (! (c.length < 1)) {
                var f = CryptoJS.HmacSHA256(c, this.secretKey),
                g = CryptoJS.enc.Base64.stringify(f),
                h = b.API_URL + this.gameKey + "/" + d;
                a.Utils.postRequest(h, c, g,
                function(a) {
                    if (a.success === !1 && window.console && console.log(a.message), null != e) {
                        var b = "";
                        try {
                            b = JSON.parse(a.message)
                        } catch(a) {}
                        e(b)
                    }
                })
            }
        },
        b.SCHEDULE_TIME = 15e3,
        b.SDK_VERSION = "rest api v2",
        b.API_URL = ("https:" === document.location.protocol ? "https": "http") + "/",
        b.instance = null,
        b
    } ();
    a.GameAnalytics = c
} (GA || (GA = {}));
var GA; !
function(a) {
    var b = function() {
        function b(b, c, d, e) {
            if (this.user_id = "", b) this.user_id = b;
            else {
                var f = a.Utils.LocalStorage.getItem("user");
                this.user_id = f || a.Utils.createUniqueUserId()
            }
            c && c.length > 0 && (this.facebook_id = c, this.user_id = c),
            a.Utils.LocalStorage.setItem("user", this.user_id),
            1 !== d && 0 !== d || (this.gender = d),
            e && e.toString().match(/^[0-9]{4}$/gi) && (this.birth_year = e)
        }
        return b
    } ();
    a.User = b
} (GA || (GA = {}));
var GA; !
function(a) {
    var b; !
    function(b) {
        function c(b, c, d, f) {
            var g = {
                sdk_version: a.GameAnalytics.SDK_VERSION,
                platform: a.Platform[2],
                os_version: a.Platform[2] + " 8",
                device: "unknown",
                v: 2,
                user_id: b.user_id,
                client_ts: (Date.now() / 1e3 | 0) + f,
                manufacturer: "unknown",
                session_id: c,
                session_num: e(b.user_id),
                build: d
            };
            b.facebook_id && (g.facebook_id = b.facebook_id),
            0 !== b.gender && 1 !== b.gender || (g.gender = a.Gender[b.gender]),
            b.birth_year && (g.birth_year = b.birth_year);
            var h = navigator.userAgent;
            return h.match(/iPad|iPod|iPhone/i) ? (g.platform = a.Platform[0], g.device = h.match(/iPad|iPod|iPhone/i)[0], g.manufacturer = "Apple", g.os_version = a.Platform[0] + " " + h.match(/OS (\b[0-9]+_[0-9]+(?:_[0-9]+)?\b)/)[1].replace(/_/gi, ".")) : h.match(/Android/i) ? (g.platform = a.Platform[1], g.device = h.match(/Mobile/i) ? "Phone": "Tablet", g.os_version = a.Platform[1] + " " + h.match(/Android (\d+(?:\.\d+)+);/)[1]) : h.match(/Windows Phone/i) && (g.platform = a.Platform[2], g.device = "Windows Phone", g.os_version = a.Platform[2] + " " + h.match(/Phone (\d+(?:\.\d+)+);/)[1]),
            g
        }
        function d() {
            var b = {
                sdk_version: a.GameAnalytics.SDK_VERSION,
                platform: "unknown",
                os_version: "unknown"
            },
            c = navigator.userAgent;
            return c.match(/iPad|iPod|iPhone/i) ? (b.platform = a.Platform[0], b.os_version = a.Platform[0] + " " + c.match(/OS (\b[0-9]+_[0-9]+(?:_[0-9]+)?\b)/)[1].replace(/_/gi, ".")) : c.match(/Android/i) ? (b.platform = a.Platform[1], b.os_version = a.Platform[1] + " " + c.match(/Android (\d+(?:\.\d+)+);/)[1]) : c.match(/Windows Phone/i) && (b.platform = a.Platform[2], b.os_version = a.Platform[2] + " " + c.match(/Phone (\d+(?:\.\d+)+);/)[1]),
            b
        }
        function e(a) {
            var c = b.LocalStorage.getItem(a);
            return c ? parseInt(c) : 1
        }
        b.getDefaultAnnotations = c,
        b.getBaseAnnotations = d
    } (b = a.Utils || (a.Utils = {}))
} (GA || (GA = {}));
var GA; !
function(a) {
    var b; !
    function(a) {
        var b = function() {
            function a() {}
            return a.getItem = function(b) {
                return a.Available ? localStorage.getItem(a.CacheKey + b) : void 0
            },
            a.setItem = function(b, c) {
                a.Available && localStorage.setItem(a.CacheKey + b, c)
            },
            a.Available = !1,
            a.CacheKey = "GA:",
            a
        } ();
        a.LocalStorage = b;
        try {
            "object" == typeof localStorage && (localStorage.setItem("testingLocalStorage", "yes"), localStorage.removeItem("testingLocalStorage"), b.Available = !0)
        } catch(a) {}
    } (b = a.Utils || (a.Utils = {}))
} (GA || (GA = {}));
var GA; !
function(a) {
    var b; !
    function(b) {
        var c = function() {
            function b(a, b) {
                this.event = a,
                this.annotations = b
            }
            return Object.defineProperty(b.prototype, "data", {
                get: function() {
                    for (var b in this.event) this.event.hasOwnProperty(b) && ("category" === b ? this.annotations[b] = a.Events.Category[this.event[b]] : this.annotations[b] = this.event[b]);
                    return this.annotations
                },
                enumerable: !0,
                configurable: !0
            }),
            b
        } ();
        b.Message = c
    } (b = a.Utils || (a.Utils = {}))
} (GA || (GA = {}));
var GA; !
function(a) {
    var b; !
    function(a) {
        var b = function() {
            function a() {
                this.queue = [],
                this.load()
            }
            return a.prototype.push = function(a) {
                this.queue.push(a)
            },
            a.prototype.pop = function() {
                return this.queue.pop()
            },
            Object.defineProperty(a.prototype, "length", {
                get: function() {
                    return this.queue.length
                },
                enumerable: !0,
                configurable: !0
            }),
            a.prototype.save = function() {},
            a.prototype.load = function() {},
            a
        } ();
        a.MessageQueue = b
    } (b = a.Utils || (a.Utils = {}))
} (GA || (GA = {}));
var GA; !
function(a) {
    var b; !
    function(a) {
        function b(a, b, c, d) {
            var e;
            if (!window.XMLHttpRequest) return void d({
                success: !1,
                message: "Error: Unable to send request, XMLHttpRequest not supported"
            });
            e = new XMLHttpRequest,
            e.onreadystatechange = function() {
                4 == e.readyState && (200 === e.status ? d({
                    success: !0,
                    message: e.responseText
                }) : e.status > 0 && d({
                    success: !1,
                    message: "Error: There was a problem with the request: status " + e.status
                }))
            };
            try {
                e.open("POST", a, !0),
                e.setRequestHeader("Authorization", c),
                e.setRequestHeader("Content-Type", "application/json")
                // e.send(b)
            } catch(a) {
                d({
                    success: !1,
                    message: "Error: Unable to send request, CORS not allowed."
                })
            }
        }
        var c = function() {
            function a() {
                this.success = !1,
                this.message = ""
            }
            return a
        } ();
        a.Response = c,
        a.postRequest = b
    } (b = a.Utils || (a.Utils = {}))
} (GA || (GA = {}));
var GA; !
function(a) {
    var b; !
    function(a) {
        function b() {
            return "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,
            function(a) {
                var b = 16 * Math.random() | 0,
                c = "x" == a ? b: 3 & b | 8;
                return c.toString(16)
            })
        }
        function c() {
            return b()
        }
        a.createUniqueId = b,
        a.createUniqueUserId = c
    } (b = a.Utils || (a.Utils = {}))
} (GA || (GA = {}));
//# sourceMappingURL=/sm/62db4b2c6050237d30a6179f6de7e950671ac9671dbf19c2ef7b0f8d73c0afad.map
